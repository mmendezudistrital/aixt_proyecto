ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"capsense_SensingCSD_LL.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.capsense_SsCSDSetModeSnsClockDivider,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	capsense_SsCSDSetModeSnsClockDivider, %function
  24              	capsense_SsCSDSetModeSnsClockDivider:
  25              	.LFB1:
  26              		.file 1 "Generated_Source\\PSoC4\\capsense_SensingCSD_LL.c"
   1:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * \file capsense_SensingCSD_LL.c
   3:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * \version 7.10
   4:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
   5:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * \brief
   6:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   This file defines the data structure global variables and provides
   7:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   implementation for the low-level APIs of the CSD part of
   8:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   the Sensing module. The file contains the APIs used for the CSD block
   9:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   initialization, calibration, and scanning.
  10:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
  11:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * \see capsense v7.10 Datasheet
  12:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
  13:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *//*****************************************************************************
  14:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * Copyright (2016-2019), Cypress Semiconductor Corporation.
  15:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** ********************************************************************************
  16:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  17:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * protected by and subject to worldwide patent protection (United States and
  18:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * foreign), United States copyright laws and international treaty provisions.
  19:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  20:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * license to copy, use, modify, create derivative works of, and compile the
  21:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  22:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * custom software in support of licensee product to be used only in conjunction
  23:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  24:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * Any reproduction, modification, translation, compilation, or representation of
  25:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * this software except as specified above is prohibited without the express
  26:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * written permission of Cypress.
  27:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
  28:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  29:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  30:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  31:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * Cypress reserves the right to make changes without further notice to the
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 2


  32:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * materials described herein. Cypress does not assume any liability arising out
  33:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * of the application or use of any product or circuit described herein. Cypress
  34:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * does not authorize its products for use as critical components in life-support
  35:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * systems where a malfunction or failure may reasonably be expected to result in
  36:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  37:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * support systems application implies that the manufacturer assumes all risk of
  38:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  39:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * limited by and subject to the applicable Cypress software license agreement.
  40:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *******************************************************************************/
  41:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** #include "capsense_Structure.h"
  42:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** #include "capsense_Configuration.h"
  43:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** #include "capsense_SensingCSD_LL.h"
  44:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** #if (capsense_ENABLE == capsense_SELF_TEST_EN)
  45:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #include "capsense_SelfTest.h"
  46:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** #endif
  47:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
  48:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** #include "cyapicallbacks.h"
  49:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
  50:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** #if (capsense_ENABLE == capsense_CSD_EN)
  51:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
  52:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** /***************************************
  53:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * API Constants
  54:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** ***************************************/
  55:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
  56:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** #if (capsense_ENABLE == capsense_CSDV2)
  57:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
  58:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #if (capsense_ENABLE == capsense_CSD_AUTO_ZERO_EN)
  59:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #define capsense_CSD_AZ_ENABLE_CFG                  (capsense_CSD_AZ_EN_MASK)
  60:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #else
  61:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #define capsense_CSD_AZ_ENABLE_CFG                  (0uL)
  62:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #endif /* (capsense_ENABLE == capsense_CSD_AUTO_ZERO_EN) */
  63:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
  64:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #if (capsense_IDAC_SINKING == capsense_CSD_IDAC_CONFIG)
  65:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #define capsense_HSCMP_SCAN_MASK                    (capsense_HSCMP_EN_MASK | capsense_CSD_
  66:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                                                      capsense_HSCMP_INVERT_MASK)
  67:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #else
  68:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #define capsense_HSCMP_SCAN_MASK                    (capsense_HSCMP_EN_MASK | capsense_CSD_
  69:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #endif /* (capsense_IDAC_SINKING == capsense_CSD_IDAC_CONFIG) */
  70:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
  71:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #define capsense_HSCMP_INIT_MASK                        (capsense_HSCMP_EN_MASK | capsense_CSD_
  72:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
  73:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #define capsense_DEFAULT_SW_SHIELD_SEL                  (0x00000000uL)
  74:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #define capsense_DEFAULT_CSD_SW_DSI_SEL                 (capsense_SW_DSI_SEL_CMODPAD | capsense
  75:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #define capsense_DEFAULT_CSD_INTR_SET                   (0x00000000uL)
  76:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #define capsense_DEFAULT_SW_HS_P_SEL                    (0x00000000uL)
  77:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #define capsense_DEFAULT_SW_HS_N_SEL                    (0x00000000uL)
  78:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #define capsense_DEFAULT_CSD_SW_FW_TANK_SEL             (0x00000000uL)
  79:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #define capsense_DEFAULT_CSD_ADC_CTL                    (0x00000000uL)
  80:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #define capsense_DEFAULT_HSCMP_CFG                      (0x00000000uL)
  81:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
  82:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     /* CY_ID285392 */
  83:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #define capsense_FILTER_DELAY_MAX                   (capsense_CONFIG_FILTER_DELAY_4_CYCLES)
  84:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #define capsense_EXTRA_COUNTS_MAX                   (capsense_FILTER_DELAY_MAX + 5u + 20u)
  85:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
  86:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** #else
  87:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
  88:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     /* Set IDAC ranges */
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 3


  89:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #if (capsense_IDAC_GAIN_8X == capsense_CSD_IDAC_GAIN)
  90:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #define capsense_DEFAULT_IDAC_MOD_RANGE         (capsense_IDAC_MOD_RANGE_MASK)
  91:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #define capsense_DEFAULT_IDAC_COMP_RANGE        (capsense_IDAC_COMP_RANGE_MASK)
  92:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #else
  93:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #define capsense_DEFAULT_IDAC_MOD_RANGE         (0u)
  94:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #define capsense_DEFAULT_IDAC_COMP_RANGE        (0u)
  95:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #endif /* (capsense_IDAC_GAIN_8X == capsense_CSD_IDAC_GAIN) */
  96:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
  97:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     /* Defining default IDACs configuration according to settings in customizer. */
  98:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #if (capsense_ENABLE == capsense_CSD_IDAC_COMP_EN)
  99:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #define capsense_DEFAULT_CSD_IDAC_CONFIG        (capsense_IDAC_MOD_MODE_VARIABLE |\
 100:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                                                  capsense_IDAC_COMP_MODE_FIXED |\
 101:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                                                  capsense_DEFAULT_IDAC_MOD_RANGE |\
 102:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                                                  capsense_DEFAULT_IDAC_COMP_RANGE)
 103:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #else
 104:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #define capsense_DEFAULT_CSD_IDAC_CONFIG        (capsense_IDAC_MOD_MODE_VARIABLE |\
 105:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                                                  capsense_DEFAULT_IDAC_MOD_RANGE)
 106:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #endif /* (capsense_ENABLE == capsense_CSD_IDAC_COMP_EN) */
 107:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 108:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** #endif /* (capsense_ENABLE == capsense_CSDV2) */
 109:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 110:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 111:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** /***************************************
 112:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * Variables
 113:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** ***************************************/
 114:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 115:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** #if (capsense_ENABLE == capsense_CSDV2)
 116:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     uint32 capsense_configCsd = capsense_DEFAULT_CSD_CONFIG;
 117:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** #else
 118:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     uint32 capsense_configCsd = capsense_DEFAULT_CSD_CONFIG | capsense_DEFAULT_MODULATION_MODE;
 119:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     static uint32 capsense_counterResolution = capsense_CNT_RESOLUTION_12_BITS;
 120:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** #endif /* (capsense_ENABLE == capsense_CSDV2) */
 121:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 122:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** /* Flag to indicate electrodes that were connected previously */
 123:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** static uint8 capsense_eleCsdDisconnectFlag = 0u;
 124:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** #if ((capsense_ENABLE == capsense_CSDV2) && (capsense_ENABLE == capsense_CSD_NOISE_METRIC_EN))
 125:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     /* Number of re-samplings when the bad conversion occurs */
 126:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     uint8 capsense_badConversionsNum = capsense_BAD_CONVERSIONS_NUM;
 127:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** #endif /* ((capsense_ENABLE == capsense_CSDV2) && (capsense_ENABLE == capsense_CSD_NOISE_METRIC_EN)
 128:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 129:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 130:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** /*******************************************************************************
 131:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * Static Function Prototypes
 132:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *******************************************************************************/
 133:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 134:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** /**
 135:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * \cond SECTION_C_INTERNAL
 136:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * \addtogroup group_c_internal
 137:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * \{
 138:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** */
 139:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 140:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** #if (capsense_ENABLE == capsense_CSD_SHIELD_EN)
 141:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     static void capsense_SsSetShieldDelay(uint32 delay);
 142:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #if (capsense_ENABLE == capsense_CSD_SHIELD_TANK_EN)
 143:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         static void capsense_SsCSDEnableShieldTank(void);
 144:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #endif /* (capsense_ENABLE == capsense_CSD_SHIELD_TANK_EN) */
 145:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** #endif /* (capsense_ENABLE == capsense_CSD_SHIELD_EN) */
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 4


 146:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 147:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** #if ((capsense_CSD_SS_DIS != capsense_CSD_AUTOTUNE) || \
 148:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****      (capsense_ENABLE == capsense_CSD_IDAC_AUTOCAL_EN))
 149:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     static cystatus capsense_SsCSDCalibrateCheck(uint32 widgetId, uint32 target);
 150:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     static void capsense_SsCSDCalibrate(uint32 widgetId, uint32 target);
 151:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #if (capsense_ENABLE == capsense_CSD_IDAC_COMP_EN)
 152:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         static void capsense_SsCSDNormalizeIdac(capsense_FLASH_WD_STRUCT const *ptrFlashWidget, uin
 153:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #endif
 154:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #if (capsense_ENABLE == capsense_CSD_IDAC_AUTO_GAIN_EN)
 155:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         static uint32 capsense_SsCSDSwitchIdacGain(capsense_FLASH_WD_STRUCT const *ptrFlashWidget);
 156:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #endif
 157:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** #endif /* ((capsense_CSD_SS_DIS != capsense_CSD_AUTOTUNE) || \
 158:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****            (capsense_ENABLE == capsense_CSD_IDAC_AUTOCAL_EN))  */
 159:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 160:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** #if (capsense_ENABLE == capsense_CSDV2)
 161:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     static void capsense_SsCSDSetFilterDelay(void);
 162:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** #else
 163:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     CY_INLINE static void capsense_SsCSDClockRestart(void);
 164:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** #endif /* (capsense_ENABLE == capsense_CSDV2) */
 165:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** CY_INLINE static void capsense_SsCSDCmodPrecharge(void);
 166:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** CY_INLINE static void capsense_SsCSDTriggerScan(void);
 167:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** static void capsense_SsCSDConfigIDACs(void);
 168:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** static void capsense_SsCSDSetModeSnsClockDivider(uint32 snsClkSource, uint32 snsClkDivider);
 169:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 170:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** /** \}
 171:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * \endcond */
 172:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 173:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 174:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** #if (capsense_ENABLE == capsense_CSD_SHIELD_EN)
 175:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     /*******************************************************************************
 176:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     * Function Name: capsense_SsSetShieldDelay
 177:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     ****************************************************************************//**
 178:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *
 179:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     * \brief
 180:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *   This is an internal function that sets a shield delay.
 181:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *
 182:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     * \details
 183:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *   The function updates the CSD configuration register bits that define the shield
 184:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *   signal delay relatively to the sense signal.
 185:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *
 186:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     * \param delay
 187:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *   Specifies the shield delay value:
 188:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *    PSoC 4100/4200 value interpretation:
 189:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *         0 - no delay
 190:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *         1 - 1 cycle of HFCLK
 191:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *         2 - 2 cycles of HFCLK
 192:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *    Third-generation HW block (except 4100/4200 devices):
 193:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *         0 - no delay
 194:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *         3 - 10ns delay
 195:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *         2 - 50ns delay
 196:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *    Fourth-generation HW block:
 197:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *         0 - no delay
 198:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *         1 - 5ns delay
 199:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *         2 - 10ns delay
 200:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *         3 - 20ns delay
 201:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *
 202:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *******************************************************************************/
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 5


 203:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     static void capsense_SsSetShieldDelay(uint32 delay)
 204:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     {
 205:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Update CSD config register shield delay bits with shield delay value */
 206:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         capsense_configCsd &= (uint32)(~capsense_CONFIG_SHIELD_DELAY_MASK);
 207:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         capsense_configCsd |= (delay << capsense_SHIELD_DELAY_SHIFT);
 208:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     }
 209:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 210:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #if (capsense_ENABLE == capsense_CSD_SHIELD_TANK_EN)
 211:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /*******************************************************************************
 212:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         * Function Name: capsense_SsCSDEnableShieldTank
 213:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         ****************************************************************************//**
 214:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *
 215:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         * \brief
 216:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *   This function configures Csh pin
 217:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *
 218:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         * \details
 219:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *   The function updates the CSH_HSIOM register to connect Csh to AMUXBUS-B.
 220:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *   For Third-generation HW block it additionally sets Strong drive mode for Csh
 221:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *   and applies High level to Csh pin when precharge is set to IO buffer.
 222:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *
 223:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *******************************************************************************/
 224:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         static void capsense_SsCSDEnableShieldTank(void)
 225:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         {
 226:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             /* Update the CSH_HSIOM register to connect Csh to AMUXBUS-B */
 227:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             capsense_WriteBitsSafe(capsense_CSH_HSIOM_PTR, capsense_CSH_HSIOM_MASK,
 228:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                         (uint32)(capsense_HSIOM_SEL_AMUXB << capsense_CSH_HSIOM_SHIFT));
 229:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 230:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             #if ((capsense_CSH_PRECHARGE_IO_BUF == capsense_CSD_CSH_PRECHARGE_SRC) &&\
 231:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                  (capsense_DISABLE == capsense_CSDV2))
 232:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 /* Set Strong drive mode for Csh */
 233:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 capsense_WriteBitsSafe(capsense_CSH_PC_PTR,
 234:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                             (uint32)(capsense_CSH_PC_MASK << capsense_CSH_PC_SHIFT),
 235:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                             (uint32)(capsense_CSH_PC_STRONG_MODE << capsense_CSH_PC_SHIFT));
 236:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 /* Appliy High level to Csh pin for Csh */
 237:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 capsense_WriteBitsSafe(capsense_CSH_DR_PTR, (uint32)(capsense_DR_MASK << capsense_C
 238:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             #else
 239:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 /* Set output port register to 0 to connect to GND */
 240:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 capsense_WriteBitsSafe(capsense_CSH_DR_PTR, (uint32)(capsense_DR_MASK << capsense_C
 241:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             #endif
 242:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         }
 243:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #endif /* (capsense_ENABLE == capsense_CSD_SHIELD_TANK_EN) */
 244:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 245:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #if (0u != capsense_CSD_TOTAL_SHIELD_COUNT)
 246:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /*******************************************************************************
 247:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         * Function Name: capsense_SsCSDEnableShieldElectrodes
 248:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         ****************************************************************************//**
 249:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *
 250:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         * \brief
 251:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *   This internal function initializes Shield Electrodes.
 252:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *
 253:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         * \details
 254:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *   The function sets the bit in the HSIOM register which enables the shield electrode
 255:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *   functionality on the pin. The port and pin configurations are stored in
 256:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *   the capsense_shieldIoList structure.
 257:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *
 258:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *******************************************************************************/
 259:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         void capsense_SsCSDEnableShieldElectrodes(void)
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 6


 260:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         {
 261:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             capsense_SsCSDSetShieldElectrodesState(capsense_SNS_CONNECTION_SHIELD);
 262:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         }
 263:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 264:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 265:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /*******************************************************************************
 266:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         * Function Name: capsense_SsCSDDisableShieldElectrodes
 267:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         ****************************************************************************//**
 268:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *
 269:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         * \brief
 270:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *   This internal function disables Shield Electrodes.
 271:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *
 272:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         * \details
 273:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *   The function resets the bit in the HSIOM register which disables the shield
 274:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *   electrode functionality on the pin. The port and pin configurations are
 275:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *   stored in  the capsense_shieldIoList structure.
 276:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *
 277:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *******************************************************************************/
 278:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         void capsense_SsCSDDisableShieldElectrodes(void)
 279:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         {
 280:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             capsense_SsCSDSetShieldElectrodesState(capsense_SNS_CONNECTION_GROUND);
 281:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         }
 282:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 283:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 284:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /*******************************************************************************
 285:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         * Function Name: capsense_SsCSDSetShieldElectrodesState
 286:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         ****************************************************************************//**
 287:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *
 288:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         * \brief
 289:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *   Sets specified shield electrode pin connection state for all dedicated
 290:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *   shield electrodes.
 291:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *
 292:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         * \details
 293:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *   The function updates following registers for each shield
 294:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *   electrode:
 295:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *   - port configuration register
 296:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *   - pin data register
 297:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *   - pin HSIOM register
 298:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *   The shield electrodes port and pin configuration registers addresses are
 299:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *   stored in the capsense_shieldIoList structure.
 300:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *
 301:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         * \param state
 302:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *   A new state of the shield electrodes. Available values:
 303:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *   - capsense_SNS_CONNECTION_GROUND - disconnects electrode from
 304:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *       CSD hardware block and sets it to GPIO mode with Strong Drive
 305:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *   - capsense_SNS_CONNECTION_HIGHZ - disconnects electrode from
 306:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *       CSD hardware block and sets it to GPIO mode with Analog Hi-Z
 307:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *   - capsense_SNS_CONNECTION_SHIELD - connects electrode to
 308:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *       CSD hardware block
 309:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *   - capsense_SNS_CONNECTION_UNDEFINED - sets the same electrode
 310:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *       connection as for capsense_SNS_CONNECTION_GROUND
 311:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *
 312:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *******************************************************************************/
 313:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         void capsense_SsCSDSetShieldElectrodesState(uint32 state)
 314:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         {
 315:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             uint8  interruptState;
 316:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 7


 317:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             uint32 loopIndex;
 318:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 319:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             uint32 newPinPcVal;
 320:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             uint32 newPinHsiomVal;
 321:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 322:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             uint32 tmpPcDrRegValue;
 323:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             uint32 tmpHsiomRegValue;
 324:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 325:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             capsense_SHIELD_IO_STRUCT const *shieldIoPtr;
 326:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 327:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             switch(state)
 328:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             {
 329:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 case capsense_SNS_CONNECTION_GROUND:
 330:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     newPinPcVal = CY_SYS_PINS_DM_STRONG;
 331:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     newPinHsiomVal = capsense_HSIOM_SEL_GPIO;
 332:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     break;
 333:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 case capsense_SNS_CONNECTION_HIGHZ:
 334:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     newPinPcVal = CY_SYS_PINS_DM_ALG_HIZ;
 335:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     newPinHsiomVal = capsense_HSIOM_SEL_GPIO;
 336:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     break;
 337:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 case capsense_SNS_CONNECTION_SHIELD:
 338:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     newPinPcVal = CY_SYS_PINS_DM_ALG_HIZ;
 339:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     newPinHsiomVal = capsense_HSIOM_SEL_CSD_SHIELD;
 340:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     break;
 341:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 default:
 342:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     newPinPcVal = CY_SYS_PINS_DM_STRONG;
 343:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     newPinHsiomVal = capsense_HSIOM_SEL_GPIO;
 344:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     break;
 345:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             }
 346:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 347:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             shieldIoPtr = &capsense_shieldIoList[0u];
 348:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             for (loopIndex = 0u; loopIndex < capsense_CSD_TOTAL_SHIELD_COUNT; loopIndex++)
 349:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             {
 350:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 interruptState = CyEnterCriticalSection();
 351:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 352:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 tmpHsiomRegValue = CY_GET_REG32 (shieldIoPtr->hsiomPtr);
 353:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 tmpHsiomRegValue &= ~(shieldIoPtr->hsiomMask);
 354:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 CY_SET_REG32 (shieldIoPtr->hsiomPtr, tmpHsiomRegValue);
 355:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 356:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 tmpPcDrRegValue = CY_GET_REG32 (shieldIoPtr->pcPtr);
 357:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 tmpPcDrRegValue &= ~(capsense_GPIO_PC_MASK << shieldIoPtr->shift);
 358:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 tmpPcDrRegValue |=  (newPinPcVal << shieldIoPtr->shift);
 359:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 CY_SET_REG32 (shieldIoPtr->pcPtr, tmpPcDrRegValue);
 360:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 361:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 tmpHsiomRegValue |=  (newPinHsiomVal << shieldIoPtr->hsiomShift);
 362:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 CY_SET_REG32 (shieldIoPtr->hsiomPtr, tmpHsiomRegValue);
 363:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 364:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 tmpPcDrRegValue = CY_GET_REG32 (shieldIoPtr->drPtr);
 365:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 tmpPcDrRegValue &= ~(1uL << shieldIoPtr->drShift);
 366:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 CY_SET_REG32 (shieldIoPtr->drPtr, tmpPcDrRegValue);
 367:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 368:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 CyExitCriticalSection(interruptState);
 369:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 370:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 /* Get next electrode */
 371:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 shieldIoPtr++;
 372:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             }
 373:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         }
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 8


 374:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #endif /* (0u != capsense_CSD_TOTAL_SHIELD_COUNT) */
 375:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** #endif /* (capsense_ENABLE == capsense_CSD_SHIELD_EN) */
 376:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 377:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 378:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** /*******************************************************************************
 379:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * Function Name: capsense_SsCSDSetModeSnsClockDivider
 380:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** ****************************************************************************//**
 381:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
 382:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * \brief
 383:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   Sets sense source and Sense Clock Divider
 384:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
 385:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * \details
 386:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   For Fourth-generation HW block: Updates capsense_SENSE_PERIOD register with
 387:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   sense source and Sense Clock Divider.
 388:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   For Third-generation HW block: Updates capsense_configCsd variable with
 389:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   sense source and sets sense clock divider.
 390:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
 391:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * \param
 392:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   snsClkSource The sense source for the sense clock.
 393:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * \param
 394:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   snsClkDivider The divider value for the sense clock.
 395:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
 396:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *******************************************************************************/
 397:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** static void capsense_SsCSDSetModeSnsClockDivider(uint32 snsClkSource, uint32 snsClkDivider)
 398:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** {
  27              		.loc 1 398 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 399:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #if (capsense_ENABLE == capsense_CSDV2)
 400:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Update reg value with divider and configuration */
 401:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CY_SET_REG32(capsense_SENSE_PERIOD_PTR, snsClkSource | (snsClkDivider - 1u));
  33              		.loc 1 401 0
  34 0000 0139     		subs	r1, r1, #1
  35              	.LVL1:
  36 0002 0843     		orrs	r0, r1
  37              	.LVL2:
  38 0004 014B     		ldr	r3, .L2
  39 0006 1860     		str	r0, [r3]
 402:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #else
 403:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Set configuration */
 404:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         capsense_configCsd &= ~(capsense_CONFIG_PRS_SELECT_MASK | capsense_CSD_PRS_12_BIT);
 405:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         capsense_configCsd |= snsClkSource;
 406:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 407:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Set sense clock divider */
 408:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         capsense_SsSetSnsClockDivider(snsClkDivider);
 409:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #endif /* (capsense_ENABLE == capsense_CSDV2) */
 410:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** }
  40              		.loc 1 410 0
  41              		@ sp needed
  42 0008 7047     		bx	lr
  43              	.L3:
  44 000a C046     		.align	2
  45              	.L2:
  46 000c 00020B40 		.word	1074463232
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 9


  47              		.cfi_endproc
  48              	.LFE1:
  49              		.size	capsense_SsCSDSetModeSnsClockDivider, .-capsense_SsCSDSetModeSnsClockDivider
  50              		.global	__aeabi_uidiv
  51              		.section	.text.capsense_SsCSDSetFilterDelay,"ax",%progbits
  52              		.align	2
  53              		.code	16
  54              		.thumb_func
  55              		.type	capsense_SsCSDSetFilterDelay, %function
  56              	capsense_SsCSDSetFilterDelay:
  57              	.LFB2:
 411:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 412:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 413:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** #if (capsense_ENABLE == capsense_CSDV2)
 414:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     /*******************************************************************************
 415:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     * Function Name: capsense_SsCSDSetFilterDelay
 416:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     ****************************************************************************//**
 417:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *
 418:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     * \brief
 419:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *   Sets the filter delay for Fourth-generation HW block.
 420:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *
 421:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     * \details
 422:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *   This function updates Fourth-generation HW block configuration
 423:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *   variable capsense_configCsd
 424:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *   with the filter delay which depends on the sample clock frequency.
 425:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *   This variable is written into register during enabling
 426:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *   Fourth-generation HW block .
 427:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *
 428:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *******************************************************************************/
 429:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     static void capsense_SsCSDSetFilterDelay(void)
 430:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     {
  58              		.loc 1 430 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62 0000 10B5     		push	{r4, lr}
  63              		.cfi_def_cfa_offset 8
  64              		.cfi_offset 4, -8
  65              		.cfi_offset 14, -4
 431:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #if (capsense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ)
 432:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             uint32 sampleClkFreqHz;
 433:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #endif /* (capsense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) */
 434:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 435:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         capsense_configCsd &= ~capsense_CONFIG_FILTER_DELAY_MASK;
  66              		.loc 1 435 0
  67 0002 0F4B     		ldr	r3, .L8
  68 0004 1B68     		ldr	r3, [r3]
  69 0006 7022     		movs	r2, #112
  70 0008 9343     		bics	r3, r2
  71 000a 1C00     		movs	r4, r3
 436:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 437:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #if (capsense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ)
 438:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             sampleClkFreqHz = CYDEV_BCLK__HFCLK__HZ / (uint32)capsense_dsRam.modCsdClk;
  72              		.loc 1 438 0
  73 000c 0D4B     		ldr	r3, .L8+4
  74 000e 997F     		ldrb	r1, [r3, #30]
  75 0010 0D48     		ldr	r0, .L8+8
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 10


  76 0012 FFF7FEFF 		bl	__aeabi_uidiv
  77              	.LVL3:
 439:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             if(sampleClkFreqHz <= capsense_MOD_CSD_CLK_12MHZ)
  78              		.loc 1 439 0
  79 0016 0D4B     		ldr	r3, .L8+12
  80 0018 9842     		cmp	r0, r3
  81 001a 04D8     		bhi	.L5
 440:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             {
 441:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 capsense_configCsd |= capsense_CONFIG_FILTER_DELAY_12MHZ;
  82              		.loc 1 441 0
  83 001c 2023     		movs	r3, #32
  84 001e 2343     		orrs	r3, r4
  85 0020 074A     		ldr	r2, .L8
  86 0022 1360     		str	r3, [r2]
  87 0024 0BE0     		b	.L4
  88              	.L5:
 442:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             }
 443:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             else if(sampleClkFreqHz <= capsense_MOD_CSD_CLK_24MHZ)
  89              		.loc 1 443 0
  90 0026 084B     		ldr	r3, .L8+8
  91 0028 9842     		cmp	r0, r3
  92 002a 04D8     		bhi	.L7
 444:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             {
 445:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 capsense_configCsd |= capsense_CONFIG_FILTER_DELAY_24MHZ;
  93              		.loc 1 445 0
  94 002c 3023     		movs	r3, #48
  95 002e 2343     		orrs	r3, r4
  96 0030 034A     		ldr	r2, .L8
  97 0032 1360     		str	r3, [r2]
  98 0034 03E0     		b	.L4
  99              	.L7:
 446:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             }
 447:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             else
 448:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             {
 449:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 capsense_configCsd |= capsense_CONFIG_FILTER_DELAY_48MHZ;
 100              		.loc 1 449 0
 101 0036 4023     		movs	r3, #64
 102 0038 2343     		orrs	r3, r4
 103 003a 014A     		ldr	r2, .L8
 104 003c 1360     		str	r3, [r2]
 105              	.L4:
 450:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             }
 451:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #else
 452:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             capsense_configCsd |= capsense_CONFIG_FILTER_DELAY_12MHZ;
 453:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #endif /* (capsense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) */
 454:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     }
 106              		.loc 1 454 0
 107              		@ sp needed
 108 003e 10BD     		pop	{r4, pc}
 109              	.L9:
 110              		.align	2
 111              	.L8:
 112 0040 00000000 		.word	.LANCHOR0
 113 0044 00000000 		.word	capsense_dsRam
 114 0048 00366E01 		.word	24000000
 115 004c 001BB700 		.word	12000000
 116              		.cfi_endproc
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 11


 117              	.LFE2:
 118              		.size	capsense_SsCSDSetFilterDelay, .-capsense_SsCSDSetFilterDelay
 119              		.section	.text.capsense_SsCSDConfigIDACs,"ax",%progbits
 120              		.align	2
 121              		.code	16
 122              		.thumb_func
 123              		.type	capsense_SsCSDConfigIDACs, %function
 124              	capsense_SsCSDConfigIDACs:
 125              	.LFB3:
 455:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** #endif /* (capsense_ENABLE == capsense_CSD_GANGED_SNS_EN)  */
 456:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 457:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 458:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** /*******************************************************************************
 459:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * Function Name: capsense_SsCSDConfigIDACs
 460:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** ****************************************************************************//**
 461:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
 462:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * \brief
 463:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   Configures the mode for IDAC registers
 464:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
 465:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * \details
 466:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   This function configures the IDAC modes depend on Compensation IDAC
 467:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   enabled or disabled.
 468:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
 469:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *******************************************************************************/
 470:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** static void capsense_SsCSDConfigIDACs(void)
 471:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** {
 126              		.loc 1 471 0
 127              		.cfi_startproc
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 130              		@ link register save eliminated.
 472:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #if (capsense_ENABLE == capsense_CSDV2)
 473:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CY_SET_REG32(capsense_CSD_IDACA_PTR, capsense_IDAC_MOD_DEFAULT_CFG);
 131              		.loc 1 473 0
 132 0000 034A     		ldr	r2, .L11
 133 0002 044B     		ldr	r3, .L11+4
 134 0004 1A60     		str	r2, [r3]
 474:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #if (capsense_ENABLE == capsense_CSD_IDAC_COMP_EN)
 475:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             CY_SET_REG32(capsense_CSD_IDACB_PTR, capsense_IDAC_COMP_DEFAULT_CFG);
 135              		.loc 1 475 0
 136 0006 C522     		movs	r2, #197
 137 0008 5204     		lsls	r2, r2, #17
 138 000a 034B     		ldr	r3, .L11+8
 139 000c 1A60     		str	r2, [r3]
 476:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #endif /* (capsense_ENABLE == capsense_CSD_IDAC_COMP_EN) */
 477:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #else
 478:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #if (capsense_ENABLE == capsense_CSD_IDAC_COMP_EN)
 479:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             CY_SET_REG32(capsense_IDAC_PTR, capsense_DEFAULT_CSD_IDAC_CONFIG);
 480:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #else
 481:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             CY_SET_REG32(capsense_IDAC_PTR, CY_GET_REG32(capsense_IDAC_PTR) &
 482:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                                                 ~(capsense_IDAC_MOD_MODE_MASK |
 483:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                                                   capsense_IDAC_MOD_MASK));
 484:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             CY_SET_REG32(capsense_IDAC_PTR, CY_GET_REG32(capsense_IDAC_PTR) |
 485:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                                                  capsense_DEFAULT_CSD_IDAC_CONFIG);
 486:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #endif /* (capsense_ENABLE == capsense_CSD_IDAC_COMP_EN) */
 487:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #endif /* (capsense_ENABLE == capsense_CSDV2) */
 488:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** }
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 12


 140              		.loc 1 488 0
 141              		@ sp needed
 142 000e 7047     		bx	lr
 143              	.L12:
 144              		.align	2
 145              	.L11:
 146 0010 00008F01 		.word	26148864
 147 0014 C0010B40 		.word	1074463168
 148 0018 C4010B40 		.word	1074463172
 149              		.cfi_endproc
 150              	.LFE3:
 151              		.size	capsense_SsCSDConfigIDACs, .-capsense_SsCSDConfigIDACs
 152              		.section	.text.capsense_SsCSDCalibrateCheck,"ax",%progbits
 153              		.align	2
 154              		.code	16
 155              		.thumb_func
 156              		.type	capsense_SsCSDCalibrateCheck, %function
 157              	capsense_SsCSDCalibrateCheck:
 158              	.LFB19:
 489:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 490:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 491:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** /*******************************************************************************
 492:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * Function Name: capsense_SsCSDInitialize
 493:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** ****************************************************************************//**
 494:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
 495:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * \brief
 496:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   This API initializes the CSD module.
 497:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
 498:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * \details
 499:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   The function performs the following steps for Fourth-generation HW block:
 500:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   1) Sets GPIO output to "0" for all sensor pins;
 501:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   2) Connects CMOD to AMUXBUS-A and to CSDBUS-A;
 502:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   3) Connects CMOD to (sense path) to CSDCOMP;
 503:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   4) Connects Csh_tank to AMUXBUS-B and to CSDBUS-B;
 504:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   5) Connects VREF to REFGEN;
 505:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   6) Configures REFGEN and sets the reference voltage;
 506:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   7) Connects VREF to CSDCOMP and HSCOMP;
 507:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   8) Configures IDAC and connect to CSDBUS-A (to drive CMOD);
 508:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   9) Configures ModClk;
 509:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   10) Configure SnsClk source;
 510:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   11) Sets other CSD configurations (Csd Auto Zero time,
 511:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *       Sample Init period, interrupts,
 512:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *       CMOD and Csh_tank/shield initialization switch resistance).
 513:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
 514:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   The function performs the following steps for Third-generation HW block:
 515:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   1) Sets all the sensors to the inactive state;
 516:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   2) Enables Shield Electrodes;
 517:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   3) Configures the CSD block and IDACs;
 518:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   4) Connects Cmod to AMUXBUS-A;
 519:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   5) Enables the clocks;
 520:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   6) Sets the shield delay;
 521:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   7) Enables the CSD block; connects Vref Buffer to the AMUX bus.
 522:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
 523:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *******************************************************************************/
 524:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** void capsense_SsCSDInitialize(void)
 525:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** {
 526:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #if (capsense_ENABLE == capsense_CSDV2)
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 13


 527:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         uint32 newRegValue;
 528:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #endif
 529:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 530:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     /* Set all the sensors to inactive state */
 531:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     if(capsense_dsRam.scanCurrentISC != capsense_dsRam.scanCsdISC)
 532:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     {
 533:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         capsense_SsSetAllIOsState((uint32)capsense_dsRam.scanCsdISC);
 534:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         capsense_dsRam.scanCurrentISC = capsense_dsRam.scanCsdISC;
 535:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     }
 536:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 537:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #if (capsense_ENABLE == capsense_CSD_SHIELD_EN)
 538:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Connect shields to AMUX-B bus (config HSIOM regs) */
 539:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #if (0u != capsense_CSD_TOTAL_SHIELD_COUNT)
 540:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             capsense_SsCSDEnableShieldElectrodes();
 541:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #endif /* (0u != capsense_CSD_TOTAL_SHIELD_COUNT) */
 542:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 543:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #if (capsense_ENABLE == capsense_CSD_SHIELD_TANK_EN)
 544:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             /* Configure Csh */
 545:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             capsense_SsCSDEnableShieldTank();
 546:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #endif /* (capsense_ENABLE == capsense_CSD_SHIELD_TANK_EN) */
 547:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #endif /* (capsense_ENABLE == capsense_CSD_SHIELD_EN) */
 548:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 549:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #if (capsense_ENABLE == capsense_CSDV2)
 550:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 551:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         capsense_DischargeExtCapacitors(capsense_EXT_CAP_DISCHARGE_TIME);
 552:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 553:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Initialize the unused CSD registers to defaut state */
 554:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CY_SET_REG32(capsense_SENSE_DUTY_PTR, capsense_DEFAULT_SENSE_DUTY_SEL);
 555:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 556:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Configure VREF */
 557:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         newRegValue = CY_GET_REG32(capsense_SW_REFGEN_SEL_PTR);
 558:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         newRegValue |= capsense_DEFAULT_SW_REFGEN_SEL;
 559:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 560:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CY_SET_REG32(capsense_SW_REFGEN_SEL_PTR, newRegValue);
 561:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CY_SET_REG32(capsense_INTR_SET_PTR,         capsense_DEFAULT_CSD_INTR_SET);
 562:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CY_SET_REG32(capsense_SW_FW_TANK_SEL_PTR,   capsense_DEFAULT_CSD_SW_FW_TANK_SEL);
 563:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CY_SET_REG32(capsense_SW_DSI_SEL_PTR,       capsense_DEFAULT_CSD_SW_DSI_SEL);
 564:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CY_SET_REG32(capsense_ADC_CTL_PTR,          capsense_DEFAULT_CSD_ADC_CTL);
 565:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CY_SET_REG32(capsense_AMBUF_PTR,            capsense_AMBUF_PWR_MODE_OFF);
 566:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CY_SET_REG32(capsense_SW_SHIELD_SEL_PTR,    capsense_DEFAULT_SW_SHIELD_SEL);
 567:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CY_SET_REG32(capsense_SW_HS_P_SEL_PTR,      capsense_DEFAULT_SW_HS_P_SEL);
 568:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CY_SET_REG32(capsense_SW_HS_N_SEL_PTR,      capsense_DEFAULT_SW_HS_N_SEL);
 569:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CY_SET_REG32(capsense_HSCMP_PTR,            capsense_DEFAULT_HSCMP_CFG);
 570:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 571:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Connect CMOD to AMUXBUS-A */
 572:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         capsense_WriteBitsSafe(capsense_CMOD_HSIOM_PTR, capsense_CMOD_HSIOM_MASK,
 573:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     (uint32)(capsense_HSIOM_SEL_AMUXA << capsense_CMOD_HSIOM_SHIFT));
 574:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 575:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Set output port register to 0 to connect to GND */
 576:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         capsense_WriteBitsSafe(capsense_CMOD_DR_PTR, capsense_Cmod__0__MASK, 0u);
 577:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 578:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Connect AMUXBUS-A to CSDBUS-A */
 579:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         newRegValue = CY_GET_REG32(capsense_SW_BYP_SEL_PTR);
 580:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         newRegValue |= capsense_SW_BYP_SEL_SW_BYA_MASK;
 581:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CY_SET_REG32(capsense_SW_BYP_SEL_PTR, newRegValue);
 582:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 583:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Connect CMOD to (sense path) to CSDCOMP */
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 14


 584:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #if (capsense_CSD__CMOD_PAD == capsense_CMOD_CONNECTION)
 585:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             CY_SET_REG32(capsense_SW_CMP_P_SEL_PTR, capsense_SW_CMP_P_SEL_SW_SFPM_STATIC_CLOSE);
 586:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #elif (capsense_CSD__CSHIELD_PAD == capsense_CMOD_CONNECTION)
 587:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             CY_SET_REG32(capsense_SW_CMP_P_SEL_PTR, capsense_SW_CMP_P_SEL_SW_SFPS_STATIC_CLOSE);
 588:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #else
 589:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             CY_SET_REG32(capsense_SW_CMP_P_SEL_PTR, capsense_SW_CMP_P_SEL_SW_SFPT_STATIC_CLOSE);
 590:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #endif /* (capsense_CSD__CMOD_PAD == capsense_CMOD_CONNECTION) */
 591:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 592:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Configure shield driving path */
 593:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #if (capsense_ENABLE == capsense_CSD_SHIELD_EN)
 594:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             /* Connect AMUXBUS-B to CSDBUS-B (and AMUXBUS-A to CSDBUS-A ) */
 595:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             CY_SET_REG32(capsense_SW_BYP_SEL_PTR, capsense_SW_BYP_SEL_SW_BYA_MASK | capsense_SW_BYP
 596:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 597:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             /* Connect AMUXBUS-B to HSCMP positive input */
 598:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             CY_SET_REG32(capsense_SW_HS_P_SEL_PTR, 0x00000000uL);
 599:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #endif /* (capsense_ENABLE == capsense_CSD_SHIELD_EN) */
 600:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 601:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Configure VREF */
 602:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #if (capsense_ENABLE == capsense_CSD_IDAC_COMP_EN)
 603:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             /* Connect VREF to REFGEN. Connect IDACB to CSDBUSA */
 604:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             newRegValue = CY_GET_REG32(capsense_SW_REFGEN_SEL_PTR);
 605:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             newRegValue |= capsense_SW_REFGEN_SEL_SW_SGR_MASK | capsense_SW_REFGEN_SEL_SW_IAIB_MASK
 606:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             CY_SET_REG32(capsense_SW_REFGEN_SEL_PTR, newRegValue);
 607:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #else
 608:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             /* Connect VREF to REFGEN (IAIB switch is open) */
 609:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             newRegValue = CY_GET_REG32(capsense_SW_REFGEN_SEL_PTR);
 610:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             newRegValue |= capsense_SW_REFGEN_SEL_SW_SGR_MASK;
 611:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             CY_SET_REG32(capsense_SW_REFGEN_SEL_PTR, newRegValue);
 612:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #endif /* (capsense_ENABLE == capsense_CSD_IDAC_COMP_EN) */
 613:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 614:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Connect VREFHI (from RefGen) to CSDCOMP when Vdda >= 2 V */
 615:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CY_SET_REG32(capsense_SW_CMP_N_SEL_PTR, capsense_SW_CMP_N_SEL_SW_SCRH_STATIC_CLOSE);
 616:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 617:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #if (capsense_2000_MV > capsense_CYDEV_VDDA_MV)
 618:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 619:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             /* Configure REFGEN. Set reference voltage when Vdda < 2 V */
 620:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             CY_SET_REG32(capsense_REFGEN_PTR, capsense_REFGEN_LV);
 621:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 622:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             /* Connect Vrefhi to AMUBUF positive input when Vdaa < 2V
 623:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****              *  Connect AMUBUF to SCDCMP negative input when Vdaa < 2V
 624:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****              */
 625:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             #if (capsense_ENABLE == capsense_CSD_SHIELD_EN)
 626:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 #if (capsense_IDAC_SINKING == capsense_CSD_IDAC_CONFIG)
 627:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     CY_SET_REG32(capsense_SW_AMUXBUF_SEL_PTR, capsense_SW_AMUXBUF_SEL_SW_IRH_STATIC
 628:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                                                           capsense_SW_AMUXBUF_SEL_S
 629:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 #else
 630:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     CY_SET_REG32(capsense_SW_AMUXBUF_SEL_PTR, capsense_SW_AMUXBUF_SEL_SW_DEFAULT);
 631:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 #endif /* (capsense_ENABLE == capsense_CSD_SHIELD_EN) */
 632:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 CY_SET_REG32(capsense_AMBUF_PTR, capsense_AMBUF_PWR_MODE_NORM);
 633:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             #else
 634:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 CY_SET_REG32(capsense_AMBUF_PTR, capsense_AMBUF_PWR_MODE_OFF);
 635:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             #endif /* (capsense_ENABLE == capsense_CSD_SHIELD_EN) */
 636:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 637:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             /* Connect VREFHI to HSCOMP */
 638:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             CY_SET_REG32(capsense_SW_HS_N_SEL_PTR, capsense_SW_HS_N_SEL_SW_HCRH_STATIC_CLOSE);
 639:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #else
 640:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 15


 641:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             /* Configure REFGEN. Set reference voltage when Vdda >= 2 V */
 642:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             CY_SET_REG32(capsense_REFGEN_PTR, capsense_REFGEN_HV);
 643:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 644:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             #if (capsense_ENABLE == capsense_CSD_SHIELD_EN)
 645:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 /* Turn on CSD_AMBUF high power level when Vdaa >= 2V */
 646:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 CY_SET_REG32(capsense_AMBUF_PTR, capsense_AMBUF_PWR_MODE_HI);
 647:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 648:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 #if (capsense_IDAC_SINKING != capsense_CSD_IDAC_CONFIG)
 649:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     CY_SET_REG32(capsense_SW_AMUXBUF_SEL_PTR, capsense_SW_AMUXBUF_SEL_SW_IRH_STATIC
 650:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                                                           capsense_SW_AMUXBUF_SEL_S
 651:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 #else
 652:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     CY_SET_REG32(capsense_SW_AMUXBUF_SEL_PTR, capsense_SW_AMUXBUF_SEL_SW_DEFAULT);
 653:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 #endif /* (capsense_IDAC_SINKING == capsense_CSD_IDAC_CONFIG) */
 654:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             #else
 655:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 CY_SET_REG32(capsense_SW_AMUXBUF_SEL_PTR, capsense_SW_AMUXBUF_SEL_SW_DEFAULT);
 656:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             #endif /* (capsense_ENABLE == capsense_CSD_SHIELD_EN) */
 657:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 658:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             /* Connect VREFHI to HSCOMP */
 659:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             CY_SET_REG32(capsense_SW_HS_N_SEL_PTR, capsense_SW_HS_N_SEL_SW_HCRH_STATIC_CLOSE);
 660:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #endif /* (capsense_2000_MV > capsense_CYDEV_VDDA_MV) */
 661:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 662:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Configure IDACs mode */
 663:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         capsense_SsCSDConfigIDACs();
 664:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 665:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Configure ModClk */
 666:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         capsense_SsSetModClkClockDivider((uint32)capsense_dsRam.modCsdClk);
 667:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 668:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Set other CSD configurations */
 669:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #if (capsense_ENABLE == capsense_CSD_SHIELD_EN)
 670:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             capsense_SsSetShieldDelay(capsense_CSD_SHIELD_DELAY);
 671:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #endif /* (capsense_ENABLE == capsense_CSD_SHIELD_EN) */
 672:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 673:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Configure HW block filter delay */
 674:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         capsense_SsCSDSetFilterDelay();
 675:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 676:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #if (capsense_DISABLE == capsense_BLOCK_OFF_AFTER_SCAN_EN)
 677:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             /* Enable power to sub-blocks */
 678:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             CY_SET_REG32(capsense_CONFIG_PTR, capsense_configCsd |
 679:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                                       capsense_CONFIG_SENSE_EN_MASK |
 680:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                                       capsense_CONFIG_ENABLE_MASK);
 681:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #endif /* (capsense_ENABLE == capsense_BLOCK_OFF_AFTER_SCAN_EN) */
 682:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 683:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Set Csd Auto Zero time (set AZ_TIME bitmask) */
 684:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CY_SET_REG32(capsense_SEQ_TIME_PTR, capsense_CSD_AUTO_ZERO_TIME);
 685:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 686:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Select CMOD and Csh_tank/shield initialization switch resistance */
 687:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CY_SET_REG32(capsense_SW_RES_PTR, 0x00000000);
 688:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 689:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Set the number of dummy fine initialization cycles */
 690:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CY_SET_REG32(capsense_SEQ_INIT_CNT_PTR, capsense_CSD_FINE_INIT_TIME);
 691:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 692:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #else
 693:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 694:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Configure IDACs mode */
 695:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         capsense_SsCSDConfigIDACs();
 696:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 697:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Connect Cmod to AMUXBUS-A using HSIOM registers */
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 16


 698:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         capsense_WriteBitsSafe(capsense_CMOD_HSIOM_PTR, capsense_CMOD_HSIOM_MASK,
 699:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     (uint32)(capsense_HSIOM_SEL_AMUXA << capsense_CMOD_HSIOM_SHIFT));
 700:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 701:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #if (capsense_ENABLE == capsense_CSD_SHIELD_EN)
 702:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             capsense_SsSetShieldDelay(capsense_CSD_SHIELD_DELAY);
 703:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #endif /* (capsense_ENABLE == capsense_CSD_SHIELD_EN) */
 704:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 705:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Enable CSD block. Connect Vref Buffer to AMUX bus to make sure that Cmod is charged befo
 706:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #if (capsense_ENABLE == capsense_BLOCK_OFF_AFTER_SCAN_EN)
 707:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             CY_SET_REG32(capsense_CONFIG_PTR, capsense_configCsd);
 708:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #else
 709:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             CY_SET_REG32(capsense_CONFIG_PTR, capsense_configCsd | capsense_CTANK_PRECHARGE_CONFIG_
 710:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #endif
 711:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #endif /* (capsense_ENABLE == capsense_CSDV2) */
 712:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 713:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #if ((capsense_ENABLE == capsense_CSD_COMMON_SNS_CLK_EN) &&\
 714:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****          (capsense_CLK_SOURCE_DIRECT == capsense_CSD_SNS_CLK_SOURCE))
 715:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****          /* Set clock dividers and clock source mode */
 716:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         capsense_SsCSDConfigClock();
 717:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #endif
 718:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** }
 719:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 720:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 721:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** /*******************************************************************************
 722:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * Function Name: capsense_SsCSDElectrodeCheck
 723:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** ****************************************************************************//**
 724:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
 725:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * \brief
 726:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   Checks if electrodes were previously connected using
 727:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****  * capsense_CSDSetupWidgetExt() API and if yes disconnects them.
 728:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
 729:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * \details
 730:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   This function checks if capsense_eleCsdDisconnectFlag is set.
 731:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   If it set, the function disconnects the previously connected electrode.
 732:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   The previous IO is contained in capsense_curSnsIOPtr and
 733:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   capsense_curFlashSnsPtr contains the previous data for Ganged
 734:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   sensors.
 735:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
 736:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *******************************************************************************/
 737:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** void capsense_SsCSDElectrodeCheck(void)
 738:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** {
 739:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #if (capsense_ENABLE == capsense_CSD_GANGED_SNS_EN)
 740:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         uint32 tempVal;
 741:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #endif /* (capsense_ENABLE == capsense_CSD_GANGED_SNS_EN) */
 742:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 743:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     if (capsense_ENABLE == capsense_eleCsdDisconnectFlag)
 744:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     {
 745:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Disconnect if electrodes were previous connected by CSDSetupWidgetExt() API */
 746:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #if (capsense_ENABLE == capsense_CSD_GANGED_SNS_EN)
 747:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             /* Check ganged sns flag  */
 748:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             if (capsense_GANGED_SNS_MASK == (capsense_curFlashWdgtPtr->staticConfig & capsense_GANG
 749:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             {
 750:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 /* Get number of ganged pins */
 751:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 tempVal = capsense_curFlashSnsPtr->numPins;
 752:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 753:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 /* Get IO pointer  */
 754:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 capsense_curSnsIOPtr = &capsense_ioList[capsense_curFlashSnsPtr->firstPinId];
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 17


 755:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 756:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 /* Disconnect all ganged sensors */
 757:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 do
 758:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 {
 759:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     capsense_CSDDisconnectSns(capsense_curSnsIOPtr);
 760:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     capsense_curSnsIOPtr++;
 761:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     tempVal--;
 762:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 } while (0u != tempVal);
 763:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             }
 764:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             else
 765:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             {
 766:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 /* Disconnect ganged sensor */
 767:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 capsense_CSDDisconnectSns(capsense_curSnsIOPtr);
 768:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             }
 769:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #else
 770:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             /* Disable sensor */
 771:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             capsense_CSDDisconnectSns(capsense_curSnsIOPtr);
 772:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #endif /* (capsense_ENABLE == capsense_CSD_GANGED_SNS_EN)  */
 773:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 774:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         capsense_eleCsdDisconnectFlag = 0u;
 775:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     }
 776:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** }
 777:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 778:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 779:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** /*******************************************************************************
 780:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * Function Name: capsense_SsCSDSetUpIdacs
 781:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** ****************************************************************************//**
 782:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
 783:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * \brief
 784:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  This internal function changes the IDACs values.
 785:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
 786:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * \details
 787:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  If Compensation IDAC is enabled, it updates two IDACs.
 788:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  The Modulator IDAC is common for all the sensors of the widget.
 789:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  The Compensation IDAC is updated for the sensor of the widget which
 790:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  is available in the RAM_SNS_STRUCT structure.
 791:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  If the Compensation IDAC is disabled, the function updates the Modulator IDAC
 792:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  value only in the RAM_WD_BASE_STRUCT structure.
 793:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
 794:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * \param
 795:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  ptrWdgt The pointer to the RAM_WD_BASE_STRUCT structure.
 796:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
 797:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *******************************************************************************/
 798:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** void capsense_SsCSDSetUpIdacs(capsense_RAM_WD_BASE_STRUCT const *ptrWdgt)
 799:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** {
 800:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     uint8 interruptState;
 801:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     uint32 idacGain;
 802:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 803:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     /* Getting IDAC gain */
 804:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     idacGain = capsense_idacGainTable[ptrWdgt->idacGainIndex].gainReg;
 805:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 806:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #if (capsense_ENABLE == capsense_CSDV2)
 807:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         uint32 idacARegValue;
 808:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #if (capsense_ENABLE == capsense_CSD_IDAC_COMP_EN)
 809:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             uint32 idacBRegValue;
 810:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #endif /* (capsense_ENABLE == capsense_CSD_IDAC_COMP_EN) */
 811:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 18


 812:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         interruptState = CyEnterCriticalSection();
 813:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 814:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Get IDACA Value */
 815:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         idacARegValue = CY_GET_REG32(capsense_CSD_IDACA_PTR);
 816:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 817:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Clear IDACA value and gain */
 818:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         idacARegValue &= ~(capsense_IDAC_MOD_VAL_MASK | capsense_IDAC_GAIN_MASK);
 819:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 820:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Set IDACA value gain */
 821:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #if (capsense_CSD_MATRIX_WIDGET_EN || capsense_CSD_TOUCHPAD_WIDGET_EN)
 822:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             if (capsense_dsFlash.wdgtArray[(capsense_widgetIndex)].numCols <= capsense_sensorIndex)
 823:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             {
 824:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 idacARegValue |= (uint32)ptrWdgt->rowIdacMod[capsense_scanFreqIndex];
 825:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             }
 826:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             else
 827:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             {
 828:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 idacARegValue |= (uint32)ptrWdgt->idacMod[capsense_scanFreqIndex];
 829:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             }
 830:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #else
 831:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             idacARegValue |= (uint32)ptrWdgt->idacMod[capsense_scanFreqIndex];
 832:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #endif /* (capsense_CSD_MATRIX_WIDGET_EN | capsense_CSD_TOUCHPAD_WIDGET_EN) */
 833:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         idacARegValue |= idacGain;
 834:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 835:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Update IDACA register with new value */
 836:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CY_SET_REG32(capsense_CSD_IDACA_PTR, idacARegValue);
 837:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CyExitCriticalSection(interruptState);
 838:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 839:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #if (capsense_ENABLE == capsense_CSD_IDAC_COMP_EN)
 840:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             interruptState = CyEnterCriticalSection();
 841:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             /* Get IDACB Value */
 842:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             idacBRegValue = CY_GET_REG32(capsense_CSD_IDACB_PTR);
 843:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 844:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             /* Clear IDACB value and gain */
 845:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             idacBRegValue &= ~(capsense_IDAC_COMP_VAL_MASK | capsense_IDAC_GAIN_MASK);
 846:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 847:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             /* Set IDACB value and gain */
 848:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             idacBRegValue |= (uint32)capsense_curRamSnsPtr->idacComp[capsense_scanFreqIndex];
 849:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             idacBRegValue |= idacGain;
 850:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 851:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             /* Update IDACA register with new value */
 852:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             CY_SET_REG32(capsense_CSD_IDACB_PTR, idacBRegValue);
 853:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             CyExitCriticalSection(interruptState);
 854:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #endif /* (capsense_ENABLE == capsense_CSD_IDAC_COMP_EN) */
 855:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 856:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #else
 857:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 858:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         uint32 newRegValue;
 859:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         uint8 const *ptrIdacMod = ptrWdgt->idacMod;
 860:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 861:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #if (capsense_CSD_MATRIX_WIDGET_EN  | capsense_CSD_TOUCHPAD_WIDGET_EN)
 862:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             if (capsense_dsFlash.wdgtArray[(capsense_widgetIndex)].numCols <= capsense_sensorIndex)
 863:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             {
 864:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 ptrIdacMod = &ptrWdgt->rowIdacMod[0u];
 865:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             }
 866:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #endif /* (capsense_CSD_MATRIX_WIDGET_EN  | capsense_CSD_TOUCHPAD_WIDGET_EN) */
 867:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 868:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         interruptState = CyEnterCriticalSection();
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 19


 869:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 870:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Get Idac Value */
 871:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         newRegValue = CY_GET_REG32(capsense_IDAC_PTR);
 872:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 873:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Clear Idac value and gain */
 874:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #if (capsense_ENABLE == capsense_CSD_IDAC_COMP_EN)
 875:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             newRegValue &= ~(capsense_IDAC_MOD_MASK | capsense_IDAC_COMP_MASK |
 876:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 capsense_IDAC_GAIN_MASK | (capsense_IDAC_GAIN_MASK << capsense_IDAC_COMP_DATA_OFFSE
 877:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #else
 878:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             newRegValue &= ~(capsense_IDAC_MOD_MASK | capsense_IDAC_GAIN_MASK);
 879:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #endif /* (capsense_ENABLE == capsense_CSD_IDAC_COMP_EN) */
 880:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 881:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Set Idac value and gain */
 882:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #if (capsense_ENABLE == capsense_CSD_IDAC_COMP_EN)
 883:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             newRegValue |= (ptrIdacMod[capsense_scanFreqIndex] |
 884:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                            (uint32)((uint32)capsense_curRamSnsPtr->idacComp[capsense_scanFreqIndex]
 885:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                            capsense_IDAC_COMP_DATA_OFFSET));
 886:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             newRegValue |= idacGain;
 887:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             newRegValue |= (idacGain << capsense_IDAC_COMP_DATA_OFFSET);
 888:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #else
 889:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             newRegValue |= ptrIdacMod[capsense_scanFreqIndex];
 890:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             newRegValue |= idacGain;
 891:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #endif /* (capsense_ENABLE == capsense_CSD_IDAC_COMP_EN) */
 892:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CY_SET_REG32(capsense_IDAC_PTR, newRegValue);
 893:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 894:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CyExitCriticalSection(interruptState);
 895:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 896:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #endif /* (capsense_ENABLE == capsense_CSDV2) */
 897:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** }
 898:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 899:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 900:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** #if (capsense_ENABLE == capsense_CSDV2)
 901:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     /*******************************************************************************
 902:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     * Function Name: capsense_SsCSDGetNumberOfConversions
 903:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     ****************************************************************************//**
 904:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *
 905:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     * \brief
 906:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *  This function gets Number of conversions.
 907:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *
 908:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     * \details
 909:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *  This function gets Number of conversions using foll.owing equation:
 910:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *   conversionsNum = (2^resolution - 1) / snsClkDivider.
 911:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *
 912:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     * \param
 913:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *  snsClkDivider The divider value for the sense clock.
 914:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *  resolution The widget resolution.
 915:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *  snsClkSrc The current Sense Clock Source.
 916:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *
 917:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     * \return Returns the Number of conversions.
 918:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *
 919:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *******************************************************************************/
 920:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     uint32 capsense_SsCSDGetNumberOfConversions(uint32 snsClkDivider, uint32 resolution, uint32 sns
 921:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     {
 922:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         uint32 conversionsNum;
 923:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #if ((capsense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) && (capsense_ENABLE != capsense_C
 924:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             uint32 sampleClkFreqHz;
 925:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #endif /* ((capsense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) && (capsense_ENABLE != caps
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 20


 926:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 927:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Calculate scanning resolution value in register */
 928:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         conversionsNum = (uint32)(1uL << resolution);
 929:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 930:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #if(capsense_ENABLE != capsense_CSDV2_REF9P6UA_EN)
 931:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             /* Apply correction to oveflow for 16 bit resolution */
 932:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             if (capsense_RES16BIT == resolution)
 933:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             {
 934:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 conversionsNum -= ((snsClkDivider + 1u) >> 1u);
 935:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 936:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 #if (capsense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ)
 937:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     sampleClkFreqHz = CYDEV_BCLK__HFCLK__HZ / (uint32)capsense_dsRam.modCsdClk;
 938:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 939:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     if (sampleClkFreqHz <= capsense_MOD_CSD_CLK_12MHZ)
 940:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     {
 941:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                         conversionsNum -= capsense_CONFIG_FILTER_DELAY_2_CYCLES;
 942:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     }
 943:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     else if (sampleClkFreqHz <= capsense_MOD_CSD_CLK_24MHZ)
 944:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     {
 945:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                         conversionsNum -= capsense_CONFIG_FILTER_DELAY_3_CYCLES;
 946:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     }
 947:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     else
 948:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     {
 949:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                         conversionsNum -= capsense_CONFIG_FILTER_DELAY_4_CYCLES;
 950:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     }
 951:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 #else
 952:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     conversionsNum -= capsense_CONFIG_FILTER_DELAY_2_CYCLES;
 953:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 #endif /* (INSTANCE_NAME`_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) */
 954:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             }
 955:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #else
 956:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             /* CY_ID285392: Apply correction to oveflow for 16 bit resolution */
 957:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             if (capsense_RES16BIT == resolution)
 958:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             {
 959:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 conversionsNum -= capsense_EXTRA_COUNTS_MAX;
 960:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             }
 961:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #endif
 962:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 963:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         if (0u < snsClkDivider)
 964:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         {
 965:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             conversionsNum /= snsClkDivider;
 966:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         }
 967:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 968:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #if((capsense_CLK_SOURCE_PRS8  == capsense_CSD_SNS_CLK_SOURCE) ||\
 969:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         (capsense_CLK_SOURCE_PRS12 == capsense_CSD_SNS_CLK_SOURCE) ||\
 970:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         (capsense_CLK_SOURCE_PRSAUTO == capsense_CSD_SNS_CLK_SOURCE))
 971:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         switch (snsClkSrc)
 972:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         {
 973:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             case capsense_CLK_SOURCE_PRS8:
 974:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             case capsense_CLK_SOURCE_PRS12:
 975:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 /* Divide by 2 for PRS8/PRS12 mode */
 976:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 conversionsNum >>= 1u;
 977:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 break;
 978:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 979:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             default:
 980:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 break;
 981:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         }
 982:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #else
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 21


 983:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         (void)snsClkSrc;
 984:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #endif
 985:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 986:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     return((conversionsNum > 0uL) ? (conversionsNum) : 1uL);
 987:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     }
 988:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** #endif /* (capsense_ENABLE == capsense_CSDV2) */
 989:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 990:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 991:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** /*******************************************************************************
 992:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * Function Name: capsense_SsCSDConfigClock
 993:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** ****************************************************************************//**
 994:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
 995:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * \brief
 996:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  This function configure sense clock for different modes.
 997:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
 998:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * \details
 999:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  Function sets the clock divider and configures the mode based on configuration.
1000:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1001:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *******************************************************************************/
1002:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** void capsense_SsCSDConfigClock(void)
1003:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** {
1004:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     uint32 snsClkDivider;
1005:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     uint32 snsClkSrc;
1006:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     uint32 newRegValue;
1007:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1008:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     capsense_RAM_WD_BASE_STRUCT const *ptrWdgt = (capsense_RAM_WD_BASE_STRUCT *)
1009:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****              capsense_dsFlash.wdgtArray[capsense_widgetIndex].ptr2WdgtRam;
1010:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1011:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     /* Get sense divider based on configuration */
1012:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #if (capsense_ENABLE == capsense_CSD_COMMON_SNS_CLK_EN)
1013:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         snsClkDivider = (uint32)capsense_dsRam.snsCsdClk;
1014:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #else
1015:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #if (capsense_CSD_MATRIX_WIDGET_EN || capsense_CSD_TOUCHPAD_WIDGET_EN)
1016:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             /* Get SnsClck divider for rows or columns */
1017:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             if (capsense_dsFlash.wdgtArray[capsense_widgetIndex].numCols <= capsense_sensorIndex)
1018:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             {
1019:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 snsClkDivider = (uint32)(ptrWdgt->rowSnsClk);
1020:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             }
1021:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             else
1022:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             {
1023:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 snsClkDivider = (uint32)(ptrWdgt->snsClk);
1024:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             }
1025:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #else
1026:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             snsClkDivider = (uint32)(ptrWdgt->snsClk);
1027:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #endif /* (capsense_CSD_MATRIX_WIDGET_EN || capsense_CSD_TOUCHPAD_WIDGET_EN) */
1028:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #endif /* (capsense_ENABLE == capsense_CSD_COMMON_SNS_CLK_EN) */
1029:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1030:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     /* Get sense clk source calculated in capsense_SsCSDInitialize() before */
1031:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #if (capsense_CSD_MATRIX_WIDGET_EN || capsense_CSD_TOUCHPAD_WIDGET_EN)
1032:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Get SnsClc Source for rows or columns */
1033:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         if (capsense_dsFlash.wdgtArray[capsense_widgetIndex].numCols <= capsense_sensorIndex)
1034:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         {
1035:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             snsClkSrc = (uint32)ptrWdgt->rowSnsClkSource;
1036:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         }
1037:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         else
1038:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         {
1039:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             snsClkSrc = (uint32)ptrWdgt->snsClkSource;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 22


1040:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         }
1041:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #else
1042:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         snsClkSrc = (uint32)ptrWdgt->snsClkSource;
1043:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #endif /* (capsense_CSD_MATRIX_WIDGET_EN || capsense_CSD_TOUCHPAD_WIDGET_EN) */
1044:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1045:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #if (capsense_ENABLE == capsense_CSDV2)
1046:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         newRegValue = (snsClkSrc << CYFLD_CSD_LFSR_SIZE__OFFSET);
1047:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1048:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Configuring PRS SEL_BIT */
1049:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         if ((capsense_CLK_SOURCE_PRS8 == snsClkSrc) ||
1050:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             (capsense_CLK_SOURCE_PRS12 == snsClkSrc))
1051:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         {
1052:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             newRegValue |= capsense_SENSE_PERIOD_SEL_LFSR_MSB_MASK;
1053:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         }
1054:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #else
1055:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         newRegValue = snsClkSrc;
1056:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #endif /* (capsense_ENABLE == capsense_CSDV2) */
1057:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1058:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #if (capsense_ENABLE == capsense_CSDV2)
1059:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #if((capsense_CLK_SOURCE_PRS8  == capsense_CSD_SNS_CLK_SOURCE) ||\
1060:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             (capsense_CLK_SOURCE_PRS12 == capsense_CSD_SNS_CLK_SOURCE) ||\
1061:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             (capsense_CLK_SOURCE_PRSAUTO == capsense_CSD_SNS_CLK_SOURCE))
1062:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             switch (snsClkSrc)
1063:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             {
1064:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             case capsense_CLK_SOURCE_PRS8:
1065:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             case capsense_CLK_SOURCE_PRS12:
1066:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 /* Divide by 2 for PRS8/PRS12 mode */
1067:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 snsClkDivider >>= 1;
1068:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 if (snsClkDivider == 0u)
1069:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 {
1070:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     snsClkDivider = 1u;
1071:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 }
1072:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 break;
1073:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1074:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             default:
1075:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 break;
1076:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             }
1077:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #endif /* ((capsense_CLK_SOURCE_PRS8  == capsense_CSD_SNS_CLK_SOURCE) ||\
1078:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                    (capsense_CLK_SOURCE_PRS12 == capsense_CSD_SNS_CLK_SOURCE) ||\
1079:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                    (capsense_CLK_SOURCE_PRSAUTO == capsense_CSD_SNS_CLK_SOURCE)) */
1080:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #endif
1081:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     capsense_SsCSDSetModeSnsClockDivider(newRegValue, snsClkDivider);
1082:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** }
1083:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1084:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1085:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** /*******************************************************************************
1086:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * Function Name: capsense_SsCSDCalculateScanDuration
1087:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** ****************************************************************************//**
1088:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1089:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * \brief
1090:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   Calculates Scan Duration which is defined by scan resolution
1091:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1092:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * \details
1093:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   For Fourth-generation HW block: The function calculates the number of conversions and updates
1094:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   SEQ_NORM_CNT register. The number of conversions depends on resolution and
1095:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   snsClk divider.
1096:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   For Third-generation HW block: The function recalculate the resolution using following equation
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 23


1097:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   2^resolution - 1. The calculated value is contained in
1098:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   capsense_counterResolution global variable and used in
1099:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   capsense_SsCSDStartSample() function to trigger the scan process.
1100:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1101:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * \param wdgtIndex
1102:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  ptrWdgt The pointer to the RAM_WD_BASE_STRUCT structure.
1103:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1104:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *******************************************************************************/
1105:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** void capsense_SsCSDCalculateScanDuration(capsense_RAM_WD_BASE_STRUCT const *ptrWdgt)
1106:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** {
1107:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #if (capsense_ENABLE == capsense_CSDV2)
1108:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         uint32 conversionsNum;
1109:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         uint32 snsClkDivider;
1110:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1111:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Get Number Of Conversions */
1112:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #if (capsense_ENABLE == capsense_CSD_COMMON_SNS_CLK_EN)
1113:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             snsClkDivider = capsense_dsRam.snsCsdClk;
1114:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #else
1115:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             #if (capsense_CSD_MATRIX_WIDGET_EN || capsense_CSD_TOUCHPAD_WIDGET_EN)
1116:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 /* Get SnsClck divider for rows or columns */
1117:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 if (capsense_dsFlash.wdgtArray[capsense_widgetIndex].numCols <= capsense_sensorInde
1118:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 {
1119:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     snsClkDivider = (uint32)(ptrWdgt->rowSnsClk);
1120:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 }
1121:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 else
1122:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 {
1123:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     snsClkDivider = (uint32)(ptrWdgt->snsClk);
1124:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 }
1125:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             #else
1126:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 snsClkDivider = (uint32)(ptrWdgt->snsClk);
1127:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             #endif /* (capsense_CSD_MATRIX_WIDGET_EN || capsense_CSD_TOUCHPAD_WIDGET_EN) */
1128:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #endif /* (capsense_ENABLE == capsense_CSD_COMMON_SNS_CLK_EN) */
1129:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1130:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         conversionsNum = capsense_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)ptrWdgt->resol
1131:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1132:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Set Number Of Conversions based on scanning resolution */
1133:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CY_SET_REG32(capsense_SEQ_NORM_CNT_PTR, (conversionsNum & capsense_SEQ_NORM_CNT_CONV_CNT_MA
1134:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #else
1135:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Set up scanning resolution  */
1136:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         capsense_counterResolution = (uint32)((0x00000001Lu << ptrWdgt->resolution) - 1u) << capsen
1137:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #endif /* (capsense_ENABLE == capsense_CSDV2) */
1138:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** }
1139:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1140:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1141:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** /*******************************************************************************
1142:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * Function Name: capsense_CSDSetupWidget
1143:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** ****************************************************************************//**
1144:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1145:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * \brief
1146:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  Performs hardware and firmware initialization required for scanning sensors
1147:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  in a specific widget using the CSD sensing method. This function requires using
1148:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  the capsense_CSDScan() function to start scanning.
1149:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1150:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * \details
1151:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  \note This function is obsolete and kept for backward compatibility only.
1152:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  The capsense_SetupWidget() function should be used instead.
1153:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 24


1154:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  This function initializes the specific widget common parameters to perform
1155:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  the CSD scanning. The initialization includes setting up a Modulator and
1156:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  Sense clock frequency and scanning resolution.
1157:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1158:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  This function does not connect any specific sensors to the scanning hardware,
1159:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  neither does it start a scanning process. The capsense_CSDScan()
1160:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  API must be called after initializing the widget to start scanning.
1161:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1162:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  This function is called when no scanning is in progress. I.e.
1163:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  capsense_IsBusy() returns a non-busy status.
1164:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1165:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  This function is called by the capsense_SetupWidget() API if the
1166:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  given widget uses the CSD sensing method.
1167:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1168:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  Calling this function directly from the application layer is not
1169:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  recommended. This function is used to implement only the user's specific
1170:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
1171:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1172:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * \param  widgetId
1173:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  Specifies the ID number of the widget to perform hardware and firmware
1174:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  initialization required for scanning sensors in the specific widget.
1175:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  A macro for the widget ID can be found in the capsense Configuration header
1176:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  file defined as capsense_<WidgetName>_WDGT_ID.
1177:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1178:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *******************************************************************************/
1179:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** void capsense_CSDSetupWidget(uint32 widgetId)
1180:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** {
1181:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     capsense_RAM_WD_BASE_STRUCT const *ptrWdgt = (capsense_RAM_WD_BASE_STRUCT *)
1182:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                                 capsense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
1183:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1184:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     /* Save widget Id to have assess to it after scanning  */
1185:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     capsense_widgetIndex = (uint8)widgetId;
1186:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1187:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     capsense_SsSwitchSensingMode(capsense_SENSE_METHOD_CSD_E);
1188:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1189:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #if (capsense_ENABLE == capsense_MULTI_FREQ_SCAN_EN)
1190:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Reset the frequency scan channel if enabled */
1191:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         capsense_scanFreqIndex = capsense_FREQ_CHANNEL_0;
1192:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #endif /* (capsense_ENABLE == capsense_MULTI_FREQ_SCAN_EN) */
1193:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1194:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     /* Disconnect previous electrode if it has been connected */
1195:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     capsense_SsCSDElectrodeCheck();
1196:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1197:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     /* Initialize IO Sns electrode structure pointer to current widget */
1198:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     capsense_curSnsIOPtr = (capsense_FLASH_IO_STRUCT const *)
1199:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                     capsense_dsFlash.wdgtArray[capsense_widgetIndex].ptr2SnsFlash;
1200:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1201:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     /* Update status register in Data structure */
1202:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     capsense_dsRam.status &= ~capsense_STATUS_WDGT0_MASK;
1203:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     capsense_dsRam.status |= capsense_widgetIndex;
1204:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1205:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     capsense_SsCSDCalculateScanDuration(ptrWdgt);
1206:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #if (((capsense_DISABLE == capsense_CSD_COMMON_SNS_CLK_EN) || \
1207:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****           (capsense_CLK_SOURCE_DIRECT != capsense_CSD_SNS_CLK_SOURCE)) && \
1208:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****          ((!(capsense_CSD_MATRIX_WIDGET_EN || capsense_CSD_TOUCHPAD_WIDGET_EN)) || \
1209:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****           (capsense_ENABLE == capsense_CSD_COMMON_SNS_CLK_EN)))
1210:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         capsense_SsCSDConfigClock();
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 25


1211:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #endif
1212:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** }
1213:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1214:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1215:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** /*******************************************************************************
1216:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * Function Name: capsense_CSDSetupWidgetExt
1217:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** ****************************************************************************//**
1218:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1219:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * \brief
1220:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  Performs extended initialization for the CSD widget and also performs
1221:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  initialization required for a specific sensor in the widget. This function
1222:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  requires using the capsense_CSDScanExt() function to initiate a scan.
1223:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1224:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * \details
1225:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  Performs extended initialization for the CSD widget and also performs
1226:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  initialization required for a specific sensor in the widget. This function
1227:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  requires using the capsense_CSDScanExt() function to initiate a scan.
1228:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1229:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  \note This function is obsolete and kept for backward compatibility only.
1230:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  The capsense_SetupWidgetExt() function should be used instead.
1231:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1232:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  This function does the same as capsense_CSDSetupWidget() and also
1233:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  does the following tasks:
1234:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *    1. Connects the first sensor of the widget.
1235:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *    2. Configures the IDAC value.
1236:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *    3. Initializes an interrupt callback function to initialize a scan of the
1237:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  next sensors in a widget.
1238:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1239:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  Once this function is called to initialize a widget and a sensor, the
1240:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  capsense_CSDScanExt() function is called to scan the sensor.
1241:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1242:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  This function is called when no scanning is in progress. I.e.
1243:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  capsense_IsBusy() returns a non-busy status.
1244:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1245:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  Calling this function directly from the application layer is not
1246:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  recommended. This function is used to implement only the user's specific
1247:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
1248:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1249:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * \param widgetId
1250:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  Specifies the ID number of the widget to perform hardware and firmware
1251:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  initialization required for scanning the specific sensor in the specific
1252:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  widget.
1253:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  A macro for the widget ID can be found in the capsense Configuration header
1254:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  file defined as capsense_<WidgetName>_WDGT_ID.
1255:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1256:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * \param sensorId
1257:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  Specifies the ID number of the sensor within the widget to perform hardware
1258:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  and firmware initialization required for scanning a specific sensor in a
1259:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  specific widget.
1260:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  A macro for the sensor ID within a specified widget can be found in the
1261:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  capsense Configuration header file defined as
1262:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  capsense_<WidgetName>_SNS<SensorNumber>_ID
1263:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1264:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *******************************************************************************/
1265:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** void capsense_CSDSetupWidgetExt(uint32 widgetId, uint32 sensorId)
1266:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** {
1267:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     capsense_RAM_WD_BASE_STRUCT const *ptrWdgt = (capsense_RAM_WD_BASE_STRUCT *)
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 26


1268:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                                     capsense_dsFlash.wdgtArray[widgetId].ptr2WdgtRa
1269:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1270:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     /* Save widget and sensor Ids to have access to it after scanning  */
1271:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     capsense_sensorIndex = (uint8)sensorId;
1272:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1273:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     /* Update global pointer to capsense_RAM_SNS_STRUCT to current sensor  */
1274:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     capsense_curRamSnsPtr = (capsense_RAM_SNS_STRUCT *)
1275:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                               capsense_dsFlash.wdgtArray[widgetId].ptr2SnsRam
1276:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                               + capsense_sensorIndex;
1277:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1278:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     capsense_CSDSetupWidget(widgetId);
1279:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1280:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****      /* Setup Idac Value */
1281:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     capsense_SsCSDSetUpIdacs(ptrWdgt);
1282:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1283:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #if (capsense_ENABLE == capsense_CSD_GANGED_SNS_EN)
1284:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* initialize access pointers for current pointer to widget configuration in Flash */
1285:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         capsense_curFlashWdgtPtr = &capsense_dsFlash.wdgtArray[widgetId];
1286:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #endif /* (capsense_ENABLE == capsense_CSD_GANGED_SNS_EN)  */
1287:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1288:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #if (capsense_ENABLE == capsense_CSD_GANGED_SNS_EN)
1289:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         capsense_SsCSDConnectSensorExt(widgetId, sensorId);
1290:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #else
1291:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Enable sensor */
1292:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         capsense_curSnsIOPtr += capsense_sensorIndex;
1293:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         capsense_CSDConnectSns(capsense_curSnsIOPtr);
1294:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #endif /* (capsense_ENABLE == capsense_CSD_GANGED_SNS_EN)  */
1295:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1296:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #if (capsense_ENABLE == capsense_CSD_GANGED_SNS_EN)
1297:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Save sns pointer */
1298:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         capsense_curFlashSnsPtr = (capsense_FLASH_SNS_STRUCT const *)
1299:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                            capsense_dsFlash.wdgtArray[capsense_widgetIndex].ptr2Sns
1300:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                            capsense_sensorIndex;
1301:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #endif /* (capsense_ENABLE == capsense_CSD_GANGED_SNS_EN) */
1302:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1303:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     capsense_eleCsdDisconnectFlag = capsense_DISCONNECT_IO_FLAG;
1304:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1305:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     /* Setup ISR handler to single-sensor scan function */
1306:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     capsense_ISR_StartEx(&capsense_CSDPostSingleScan);
1307:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** }
1308:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1309:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** /*******************************************************************************
1310:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * Function Name: capsense_SsCSDStartSample
1311:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** ****************************************************************************//**
1312:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1313:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * \brief
1314:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   Starts the CSD conversion.
1315:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1316:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * \details
1317:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   This function assumes that the CSD block is already set up using
1318:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   the capsense_CSDSetupWidget API and the sensor port-pin is connected to the CSD
1319:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   block using capsense_CSDConnectSns.
1320:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   For Third-generation HW block the function performs the following tasks:
1321:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   1. Disconnects the Vref buffer from AMUX;
1322:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   2. Precharges Cmod;
1323:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   3. Makes the PreSettling delay to have a stable Vref voltage;
1324:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   4. Sets the resolution to the Counter register to start scanning.
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 27


1325:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1326:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *******************************************************************************/
1327:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** void capsense_SsCSDStartSample(void)
1328:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** {
1329:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #if (capsense_ENABLE != capsense_CSDV2)
1330:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         uint8 interruptState;
1331:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #endif
1332:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1333:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #ifdef capsense_START_SAMPLE_CALLBACK
1334:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         capsense_StartSampleCallback(capsense_widgetIndex, capsense_sensorIndex);
1335:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #endif /* capsense_START_SAMPLE_CALLBACK */
1336:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1337:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #if (capsense_ENABLE == capsense_CSDV2)
1338:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Fourth-generation HW block section */
1339:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1340:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Disable CSD interrupt to prevent it during coarse initialization */
1341:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CyIntDisable(capsense_ISR_NUMBER);
1342:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1343:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Enable power to sub-blocks */
1344:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CY_SET_REG32(capsense_HSCMP_PTR, capsense_HSCMP_INIT_MASK);
1345:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1346:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #if (capsense_ENABLE == capsense_BLOCK_OFF_AFTER_SCAN_EN)
1347:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             CY_SET_REG32(capsense_CONFIG_PTR, capsense_configCsd |
1348:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                                       capsense_CONFIG_SENSE_EN_MASK |
1349:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                                       capsense_CONFIG_ENABLE_MASK);
1350:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             #if(capsense_CSD_ANALOG_STARTUP_DELAY_US > 0uL)
1351:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 CyDelayUs(capsense_CSD_ANALOG_STARTUP_DELAY_US);
1352:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             #endif /* (capsense_CSD_ANALOG_STARTUP_DELAY_US > 0uL) */
1353:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #endif /* (capsense_ENABLE == capsense_BLOCK_OFF_AFTER_SCAN_EN) */
1354:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1355:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Precharging Cmod and Csh */
1356:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         capsense_SsCSDCmodPrecharge();
1357:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1358:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Trigger Scan */
1359:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         capsense_SsCSDTriggerScan();
1360:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1361:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #else
1362:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Third-generation HW block section */
1363:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         interruptState = CyEnterCriticalSection();
1364:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1365:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Enable CSD block. Disconnect Vref Buffer from AMUX */
1366:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #if ((capsense_CSH_PRECHARGE_IO_BUF == capsense_CSD_CSH_PRECHARGE_SRC) &&\
1367:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****              (capsense_ENABLE == capsense_CSD_SHIELD_TANK_EN))
1368:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             CY_SET_REG32(capsense_CONFIG_PTR, capsense_configCsd | capsense_CMOD_PRECHARGE_CONFIG_C
1369:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #else
1370:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             CY_SET_REG32(capsense_CONFIG_PTR, capsense_configCsd | capsense_CTANK_PRECHARGE_CONFIG_
1371:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #endif
1372:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1373:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Restart the clocks. Scan one cycle to reset the flip-flop for Direct clock mode */
1374:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         capsense_SsCSDClockRestart();
1375:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1376:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Precharging Cmod to Vref */
1377:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         capsense_SsCSDCmodPrecharge();
1378:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1379:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #if (capsense_CLK_SOURCE_DIRECT != capsense_CSD_SNS_CLK_SOURCE)
1380:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             /* Set PreSettling delay to skip IDAC glitch before scanning */
1381:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             CyDelayCycles(capsense_GLITCH_ELIMINATION_CYCLES);
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 28


1382:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #endif /* (capsense_CSD_SNS_CLK_SOURCE != capsense_CLK_SOURCE_DIRECT) */
1383:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1384:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Trigger Scan */
1385:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         capsense_SsCSDTriggerScan();
1386:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1387:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CyExitCriticalSection(interruptState);
1388:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #endif /* (capsense_ENABLE == capsense_CSDV2) */
1389:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** }
1390:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1391:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1392:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** /*******************************************************************************
1393:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * Function Name: capsense_CSDScanExt
1394:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** ****************************************************************************//**
1395:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1396:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * \brief
1397:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  Starts the CSD conversion on the preconfigured sensor. This function requires
1398:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  using the capsense_CSDSetupWidgetExt() function to set up the a
1399:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  widget.
1400:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1401:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * \details
1402:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  Starts the CSD conversion on the preconfigured sensor. This function requires
1403:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  using the capsense_CSDSetupWidgetExt() function to set up the a
1404:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  widget.
1405:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1406:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  \note This function is obsolete and kept for backward compatibility only.
1407:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  The capsense_ScanExt() function should be used instead.
1408:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1409:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  This function performs single scanning of one sensor in the widget configured
1410:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  by the capsense_CSDSetupWidgetExt() function. It does the following
1411:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  tasks:
1412:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *    1. Sets the busy flag in the capsense_dsRam structure.
1413:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *    2. Performs the clock-phase alignment of the sense and modulator clocks.
1414:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *    3. Performs the Cmod pre-charging.
1415:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *    4. Starts single scanning.
1416:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1417:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  Calling this function directly from the application layer is not
1418:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  recommended. This function is used to implement only the user's specific
1419:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
1420:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  This function is called when no scanning is in progress. I.e.
1421:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  capsense_IsBusy() returns a non-busy status.
1422:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1423:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  The sensor must be preconfigured by using the
1424:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  capsense_CSDSetupWidgetExt() API prior to calling this function.
1425:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  The sensor remains ready for a next scan if a previous scan was triggered
1426:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  by using the capsense_CSDScanExt() function. In this case, calling
1427:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  capsense_CSDSetupWidgetExt() is not required every time before the
1428:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  capsense_CSDScanExt() function. If a previous scan was triggered in
1429:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  any other way - capsense_Scan(), capsense_ScanAllWidgets() or
1430:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  capsense_RunTuner() - (see the capsense_RunTuner() function
1431:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  description for more details), the sensor must be preconfigured again by
1432:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  using the capsense_CSDSetupWidgetExt() API prior to calling the
1433:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  capsense_CSDScanExt() function.
1434:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1435:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  If disconnection of the sensors is required after calling
1436:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  capsense_CSDScanExt(), the capsense_CSDDisconnectSns()
1437:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  function can be used.
1438:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 29


1439:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *******************************************************************************/
1440:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** void capsense_CSDScanExt(void)
1441:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** {
1442:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #if ((capsense_DISABLE == capsense_CSD_COMMON_SNS_CLK_EN) && \
1443:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****          (capsense_CSD_MATRIX_WIDGET_EN || capsense_CSD_TOUCHPAD_WIDGET_EN))
1444:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         capsense_RAM_WD_BASE_STRUCT const *ptrWdgt = (capsense_RAM_WD_BASE_STRUCT *)
1445:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                                         capsense_dsFlash.wdgtArray[capsense_widgetI
1446:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1447:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         capsense_SsCSDCalculateScanDuration(ptrWdgt);
1448:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         capsense_SsCSDConfigClock();
1449:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #endif
1450:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1451:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     /* Set Start of sensor scan flag */
1452:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     capsense_dsRam.status |= (capsense_SW_STS_BUSY | capsense_WDGT_SW_STS_BUSY);
1453:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1454:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #if (capsense_ENABLE == capsense_MULTI_FREQ_SCAN_EN)
1455:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Reset the frequency scan channel if enabled */
1456:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         capsense_scanFreqIndex = capsense_FREQ_CHANNEL_0;
1457:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #endif /* (capsense_ENABLE == capsense_MULTI_FREQ_SCAN_EN) */
1458:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1459:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #if (capsense_ENABLE != capsense_BLOCK_OFF_AFTER_SCAN_EN) &&\
1460:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         (capsense_ENABLE == capsense_CSDV2)
1461:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #if(capsense_CSD_ANALOG_STARTUP_DELAY_US > 0uL)
1462:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             CyDelayUs(capsense_CSD_ANALOG_STARTUP_DELAY_US);
1463:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #endif /* (capsense_CSD_ANALOG_STARTUP_DELAY_US > 0uL) */
1464:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #endif /* (capsense_ENABLE != capsense_BLOCK_OFF_AFTER_SCAN_EN) &&\
1465:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****               (capsense_ENABLE == capsense_CSDV2)*/
1466:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1467:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     capsense_SsCSDStartSample();
1468:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** }
1469:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1470:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1471:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** /*******************************************************************************
1472:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * Function Name: capsense_CSDScan
1473:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** ****************************************************************************//**
1474:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1475:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * \brief
1476:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  This function initiates a scan for the sensors of the widget initialized by the
1477:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  capsense_CSDSetupWidget() function.
1478:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1479:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * \details
1480:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  This function initiates a scan for the sensors of the widget initialized by the
1481:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  capsense_CSDSetupWidget() function.
1482:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1483:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  \note This function is obsolete and kept for backward compatibility only.
1484:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  The capsense_Scan() function should be used instead.
1485:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1486:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  This function performs scanning of all the sensors in the widget configured by
1487:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  the capsense_CSDSetupWidget() function. It does the following tasks:
1488:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *    1. Connects the first sensor of the widget.
1489:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *    2. Configures the IDAC value.
1490:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *    3. Initializes the interrupt callback function to initialize a scan of
1491:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *       the next sensors in a widget.
1492:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *    4. Starts scanning for the first sensor in the widget.
1493:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1494:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  This function is called by the capsense_Scan() API if the given
1495:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  widget uses the CSD sensing method.
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 30


1496:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1497:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  Calling this function directly from the application layer is not
1498:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  recommended. This function is used to implement only the user's specific
1499:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
1500:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1501:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  This function is called when no scanning is in progress. I.e.
1502:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  capsense_IsBusy() returns a non-busy status. The widget must be
1503:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  preconfigured by the capsense_CSDSetupWidget() function if any other
1504:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  widget was previously scanned or any other type of the scan functions was used.
1505:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1506:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *******************************************************************************/
1507:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** void capsense_CSDScan(void)
1508:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** {
1509:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     capsense_RAM_WD_BASE_STRUCT const *ptrWdgt = (capsense_RAM_WD_BASE_STRUCT *)
1510:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                                     capsense_dsFlash.wdgtArray[capsense_widgetIndex
1511:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1512:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     /* Set all the sensors to inactive state */
1513:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     if(capsense_dsRam.scanCurrentISC != capsense_dsRam.scanCsdISC)
1514:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     {
1515:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         capsense_SsSetAllIOsState((uint32)capsense_dsRam.scanCsdISC);
1516:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         capsense_dsRam.scanCurrentISC = capsense_dsRam.scanCsdISC;
1517:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     }
1518:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1519:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****      /*
1520:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****       * Update capsense_sensorIndex with the first sensor in
1521:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****       * widget to use it in ISR handler to configure the next sensor
1522:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****       */
1523:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     capsense_sensorIndex = 0u;
1524:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1525:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     /* Update global pointer to capsense_RAM_SNS_STRUCT to current sensor  */
1526:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     capsense_curRamSnsPtr = (capsense_RAM_SNS_STRUCT *)
1527:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                               capsense_dsFlash.wdgtArray[capsense_widgetIndex].ptr2
1528:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                               + capsense_sensorIndex;
1529:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1530:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #if (capsense_ENABLE == capsense_MULTI_FREQ_SCAN_EN)
1531:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Reset the frequency scan channel if enabled */
1532:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         capsense_scanFreqIndex = capsense_FREQ_CHANNEL_0;
1533:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #endif /* (capsense_ENABLE == capsense_MULTI_FREQ_SCAN_EN) */
1534:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1535:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     /* Setup Idac Value */
1536:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****    capsense_SsCSDSetUpIdacs(ptrWdgt);
1537:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1538:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #if (capsense_ENABLE == capsense_CSD_GANGED_SNS_EN)
1539:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Check ganged sns flag  */
1540:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         if (capsense_GANGED_SNS_MASK == (capsense_dsFlash.wdgtArray[capsense_widgetIndex].staticCon
1541:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             capsense_GANGED_SNS_MASK))
1542:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         {
1543:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             /* Setup ISR handler to multiple-sensor scan function with ganged sensors */
1544:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             capsense_ISR_StartEx(&capsense_CSDPostMultiScanGanged);
1545:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         }
1546:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         else
1547:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         {
1548:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             /* Set up ISR handler to multiple-sensor scan function without ganged sensors */
1549:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             capsense_ISR_StartEx(&capsense_CSDPostMultiScan);
1550:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         }
1551:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1552:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         capsense_SsCSDConnectSensorExt((uint32)capsense_widgetIndex, (uint32)capsense_sensorIndex);
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 31


1553:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #else
1554:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* initialize ptr to sensor IO structure to appropriate address */
1555:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         capsense_curSnsIOPtr = (capsense_FLASH_IO_STRUCT const *)
1556:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                         capsense_dsFlash.wdgtArray[capsense_widgetIndex].ptr2SnsFla
1557:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                         + capsense_sensorIndex;
1558:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1559:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Enable sensor */
1560:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         capsense_CSDConnectSns(capsense_curSnsIOPtr);
1561:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1562:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Set-up ISR handler to multiple-sensor scan function without ganged sensors */
1563:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         capsense_ISR_StartEx(&capsense_CSDPostMultiScan);
1564:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #endif /* (capsense_ENABLE == capsense_CSD_GANGED_SNS_EN)  */
1565:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1566:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     /* Start scanning */
1567:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     capsense_CSDScanExt();
1568:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** }
1569:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1570:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1571:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** /*******************************************************************************
1572:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * Function Name: capsense_SsCSDConnectSensorExt
1573:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** ****************************************************************************//**
1574:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1575:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * \brief
1576:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  Connects a ganged sensor port-pin to the sensing HW block via the AMUX bus.
1577:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1578:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * \details
1579:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   The function gets the IO configuration registers addresses, their shifts and
1580:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   masks from the FLASH_IO_STRUCT object. Basing on this data, it updates the HSIOM and
1581:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   PC registers.
1582:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1583:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * \param widgetId
1584:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  Specifies ID of the widget.
1585:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1586:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * \param sensorId
1587:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  Specifies ID of the sensor in the widget.
1588:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1589:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *******************************************************************************/
1590:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** void capsense_SsCSDConnectSensorExt(uint32 widgetId, uint32 sensorId)
1591:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** {
1592:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #if (capsense_ENABLE == capsense_CSD_GANGED_SNS_EN)
1593:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         uint32 tempVal;
1594:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #endif /* (capsense_ENABLE == capsense_CSD_GANGED_SNS_EN) */
1595:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1596:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     /* initialize ptr to sensor IO structure to appropriate address */
1597:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     capsense_curSnsIOPtr = (capsense_FLASH_IO_STRUCT const *)
1598:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                                       capsense_dsFlash.wdgtArray[widgetId].ptr2SnsF
1599:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                                       + sensorId;
1600:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1601:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #if (capsense_ENABLE == capsense_CSD_GANGED_SNS_EN)
1602:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Check ganged sns flag  */
1603:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         if (capsense_GANGED_SNS_MASK ==
1604:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****            (capsense_dsFlash.wdgtArray[widgetId].staticConfig &
1605:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             capsense_GANGED_SNS_MASK))
1606:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         {
1607:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             /* Get sns pointer */
1608:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             capsense_curFlashSnsPtr = (capsense_FLASH_SNS_STRUCT const *)
1609:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                                capsense_dsFlash.wdgtArray[widgetId].ptr2SnsFlash +
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 32


1610:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                                sensorId;
1611:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1612:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             /* Get number of ganged pins */
1613:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             tempVal = capsense_curFlashSnsPtr->numPins;
1614:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1615:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             /* Get IO pointer  */
1616:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             capsense_curSnsIOPtr = &capsense_ioList[capsense_curFlashSnsPtr->firstPinId];
1617:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1618:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             /* Connect all ganged sensors  */
1619:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             do
1620:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             {
1621:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 capsense_CSDConnectSns(capsense_curSnsIOPtr);
1622:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 capsense_curSnsIOPtr++;
1623:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 tempVal--;
1624:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             } while (0u != tempVal);
1625:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         }
1626:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         else
1627:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         {
1628:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             /* Connect sensor */
1629:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             capsense_CSDConnectSns(capsense_curSnsIOPtr);
1630:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         }
1631:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #else
1632:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Connect sensor */
1633:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         capsense_CSDConnectSns(capsense_curSnsIOPtr);
1634:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #endif /* (capsense_ENABLE == capsense_CSD_GANGED_SNS_EN) */
1635:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** }
1636:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1637:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1638:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** /*******************************************************************************
1639:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * Function Name: capsense_SsCSDDisconnectSnsExt
1640:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** ****************************************************************************//**
1641:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1642:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * \brief
1643:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  Disconnects a ganged sensor port-pin from the sensing HW block and AMUX bus.
1644:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  Sets the default state of the un-scanned sensor.
1645:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1646:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * \details
1647:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   The function gets the IO configuration registers addresses, their shifts and
1648:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   masks from the FLASH_IO_STRUCT object. Basing on this data and Inactive sensor
1649:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   connection parameter, it updates the HSIOM, PC and DR registers.
1650:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   The HSIOM register is updated only when the Inactive sensor connection parameter
1651:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *   is set to Shield.
1652:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1653:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * \param widgetId
1654:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  Specifies ID of the widget.
1655:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1656:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * \param sensorId
1657:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  Specifies ID of the sensor in the widget.
1658:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1659:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *******************************************************************************/
1660:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** void capsense_SsCSDDisconnectSnsExt(uint32 widgetId, uint32 sensorId)
1661:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** {
1662:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #if (capsense_ENABLE == capsense_CSD_GANGED_SNS_EN)
1663:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         uint32 tempVal;
1664:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #endif /* (capsense_ENABLE == capsense_CSD_GANGED_SNS_EN) */
1665:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1666:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     /* initialize ptr to sensor IO structure to appropriate address        */
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 33


1667:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     capsense_curSnsIOPtr = (capsense_FLASH_IO_STRUCT const *)
1668:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                                       capsense_dsFlash.wdgtArray[widgetId].ptr2SnsF
1669:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                                       + sensorId;
1670:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1671:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #if (capsense_ENABLE == capsense_CSD_GANGED_SNS_EN)
1672:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Check ganged sns flag  */
1673:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         if ((capsense_dsFlash.wdgtArray[widgetId].staticConfig &
1674:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             capsense_GANGED_SNS_MASK) == capsense_GANGED_SNS_MASK)
1675:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         {
1676:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             /* Get sns pointer */
1677:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             capsense_curFlashSnsPtr = (capsense_FLASH_SNS_STRUCT const *)
1678:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                                capsense_dsFlash.wdgtArray[widgetId].ptr2SnsFlash +
1679:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                                sensorId;
1680:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1681:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             /* Get number of ganged pins */
1682:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             tempVal = capsense_curFlashSnsPtr->numPins;
1683:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1684:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             /* Get IO pointer  */
1685:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             capsense_curSnsIOPtr = &capsense_ioList[capsense_curFlashSnsPtr->firstPinId];
1686:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1687:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             /* Disconnect all ganged sensors */
1688:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             do
1689:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             {
1690:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 capsense_CSDDisconnectSns(capsense_curSnsIOPtr);
1691:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 capsense_curSnsIOPtr++;
1692:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 tempVal--;
1693:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             } while (0u != tempVal);
1694:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         }
1695:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         else
1696:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         {
1697:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             /* Disconnect ganged sensor */
1698:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             capsense_CSDDisconnectSns(capsense_curSnsIOPtr);
1699:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         }
1700:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #else
1701:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Disconnect ganged sensor */
1702:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         capsense_CSDDisconnectSns(capsense_curSnsIOPtr);
1703:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #endif /* (capsense_ENABLE == capsense_CSD_GANGED_SNS_EN) */
1704:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** }
1705:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1706:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1707:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** /*******************************************************************************
1708:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * Function Name: capsense_CSDConnectSns
1709:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** ****************************************************************************//**
1710:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1711:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * \brief
1712:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  Connects a port pin used by the sensor to the AMUX bus of the sensing HW block.
1713:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1714:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * \details
1715:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  Connects a port pin used by the sensor to the AMUX bus of the sensing HW block
1716:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  while a sensor is being scanned. The function ignores the fact if
1717:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  the sensor is a ganged sensor and connects only a specified pin.
1718:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1719:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  Scanning should be completed before calling this API.
1720:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1721:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  Calling this function directly from the application layer is not
1722:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  recommended. This function is used to implement only the user's specific
1723:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  use cases. Functions that perform a setup and scan of a sensor/widget,
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 34


1724:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  automatically set the required pin states and perform the sensor connection.
1725:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  They do not take into account changes in the design made by the
1726:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  capsense_CSDConnectSns() function.
1727:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1728:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * \param  snsAddrPtr
1729:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  Specifies the pointer to the FLASH_IO_STRUCT object belonging to a sensor
1730:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  which to be connected to the sensing HW block.
1731:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1732:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *******************************************************************************/
1733:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** void capsense_CSDConnectSns(capsense_FLASH_IO_STRUCT const *snsAddrPtr)
1734:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** {
1735:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     uint32 newRegisterValue;
1736:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     uint8  interruptState;
1737:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     uint32 pinModeShift;
1738:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     uint32 pinHSIOMShift;
1739:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1740:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     /* Get offsets for sensor */
1741:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     pinModeShift = (uint32)snsAddrPtr->shift;
1742:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     pinHSIOMShift = (uint32)snsAddrPtr->hsiomShift;
1743:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1744:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     interruptState = CyEnterCriticalSection();
1745:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1746:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     /* Use temporary variable to update registers without multiple writings to them */
1747:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     newRegisterValue = CY_GET_REG32(snsAddrPtr->hsiomPtr);
1748:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     newRegisterValue &= ~(capsense_HSIOM_SEL_MASK << pinHSIOMShift);
1749:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     newRegisterValue |= (uint32)((uint32)capsense_HSIOM_SEL_CSD_SENSE << pinHSIOMShift);
1750:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1751:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     /* Update port configuration register (drive mode) for sensor */
1752:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     CY_SET_REG32(snsAddrPtr->pcPtr, CY_GET_REG32(snsAddrPtr->pcPtr) & (uint32)~((uint32)capsense_GP
1753:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1754:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     /* Update HSIOM register for sensor */
1755:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     CY_SET_REG32(snsAddrPtr->hsiomPtr, newRegisterValue);
1756:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1757:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     CyExitCriticalSection(interruptState);
1758:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** }
1759:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1760:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1761:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** /*******************************************************************************
1762:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * Function Name: capsense_CSDDisconnectSns
1763:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** ****************************************************************************//**
1764:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1765:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * \brief
1766:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  Disconnects a sensor port pin from the sensing HW block and the AMUX bus. Sets
1767:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  the default state of the un-scanned sensor.
1768:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1769:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * \details
1770:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  This function works identically to capsense_CSDConnectSns() except
1771:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  it disconnects the specified port-pin used by the sensor.
1772:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1773:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  Calling this function directly from the application layer is not
1774:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  recommended. This function is used to implement only the user's specific
1775:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  use cases. Functions that perform a setup and scan of sensor/widget
1776:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  automatically set the required pin states and perform the sensor connection.
1777:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  They ignore changes in the design made by the
1778:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  capsense_CSDDisconnectSns() function.
1779:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1780:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * \param  snsAddrPtr
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 35


1781:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  Specifies the pointer to the FLASH_IO_STRUCT object belonging to a sensor
1782:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  which should be disconnected from the sensing HW block.
1783:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
1784:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *******************************************************************************/
1785:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** void capsense_CSDDisconnectSns(capsense_FLASH_IO_STRUCT const *snsAddrPtr)
1786:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** {
1787:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     uint8  interruptState;
1788:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     uint32 pinHSIOMShift;
1789:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     uint32 pinModeShift;
1790:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     uint32 newPcRegValue;
1791:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     uint32 newHsiomRegValue;
1792:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1793:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     pinHSIOMShift = (uint32)snsAddrPtr->hsiomShift;
1794:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     pinModeShift = (uint32)snsAddrPtr->shift;
1795:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1796:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     interruptState = CyEnterCriticalSection();
1797:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1798:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     newPcRegValue  = CY_GET_REG32(snsAddrPtr->pcPtr);
1799:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     newPcRegValue &= ~(capsense_GPIO_PC_MASK << pinModeShift);
1800:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1801:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     newHsiomRegValue  = CY_GET_REG32(snsAddrPtr->hsiomPtr);
1802:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     newHsiomRegValue &= ~(capsense_HSIOM_SEL_MASK << pinHSIOMShift);
1803:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     CY_SET_REG32(snsAddrPtr->hsiomPtr, newHsiomRegValue);
1804:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1805:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     if(capsense_SNS_CONNECTION_GROUND == capsense_dsRam.scanCurrentISC)
1806:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     {
1807:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         newPcRegValue |= (CY_SYS_PINS_DM_STRONG << pinModeShift);
1808:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CY_SET_REG32(snsAddrPtr->pcPtr, newPcRegValue);
1809:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     }
1810:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     else
1811:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     {
1812:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         newPcRegValue |= (CY_SYS_PINS_DM_ALG_HIZ << pinModeShift);
1813:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         if(capsense_SNS_CONNECTION_SHIELD == capsense_dsRam.scanCurrentISC)
1814:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         {
1815:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             /* Connect to Shield */
1816:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             newHsiomRegValue |= (capsense_HSIOM_SEL_CSD_SHIELD << pinHSIOMShift);
1817:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             CY_SET_REG32(snsAddrPtr->pcPtr, newPcRegValue);
1818:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             CY_SET_REG32(snsAddrPtr->hsiomPtr, newHsiomRegValue);
1819:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         }
1820:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     }
1821:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     /* Set logic 0 to port data register */
1822:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     CY_SET_REG32(snsAddrPtr->drPtr, CY_GET_REG32(snsAddrPtr->drPtr) & (uint32)~(uint32)((uint32)1u 
1823:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1824:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     CyExitCriticalSection(interruptState);
1825:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** }
1826:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1827:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** #if ((capsense_CSD_SS_DIS != capsense_CSD_AUTOTUNE) || \
1828:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****      (capsense_ENABLE == capsense_CSD_IDAC_AUTOCAL_EN))
1829:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     /*******************************************************************************
1830:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     * Function Name: capsense_SsCSDCalibrateCheck
1831:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     ****************************************************************************//**
1832:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *
1833:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     * \brief
1834:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *  This internal function checks if the calibration is performed successfully.
1835:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *
1836:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     * \details
1837:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *  The function verifies that raw counts are within acceptable range
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 36


1838:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *  defined by target and calibration error parameters.
1839:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *
1840:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     * \param widgetId
1841:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *  The desired widget ID.
1842:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *
1843:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     * \param target
1844:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *  Raw count target in percentage.
1845:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *
1846:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     * \return Returns the status of the operation:
1847:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *   - Zero     - All the sensors in the widget are calibrated successfully.
1848:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *   - Non-Zero - Calibration failed for any sensor in the widget.
1849:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *
1850:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *******************************************************************************/
1851:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     static cystatus capsense_SsCSDCalibrateCheck(uint32 widgetId, uint32 target)
1852:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     {
 159              		.loc 1 1852 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 8
 162              		@ frame_needed = 0, uses_anonymous_args = 0
 163              	.LVL4:
 164 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 165              		.cfi_def_cfa_offset 20
 166              		.cfi_offset 4, -20
 167              		.cfi_offset 5, -16
 168              		.cfi_offset 6, -12
 169              		.cfi_offset 7, -8
 170              		.cfi_offset 14, -4
 171 0002 4746     		mov	r7, r8
 172 0004 80B4     		push	{r7}
 173              		.cfi_def_cfa_offset 24
 174              		.cfi_offset 8, -24
 175 0006 82B0     		sub	sp, sp, #8
 176              		.cfi_def_cfa_offset 32
 177 0008 0500     		movs	r5, r0
 178              	.LVL5:
1853:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1854:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         uint32 rawcount;
1855:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         uint32 snsIndex;
1856:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         uint32 freqChannel;
1857:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         uint32 upperLimit;
1858:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         uint32 lowerLimit;
1859:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1860:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         capsense_FLASH_WD_STRUCT const *ptrFlashWidget = &capsense_dsFlash.wdgtArray[widgetId];
1861:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         capsense_RAM_WD_BASE_STRUCT *ptrRamWidget = (capsense_RAM_WD_BASE_STRUCT *)ptrFlashWidget->
 179              		.loc 1 1861 0
 180 000a 8200     		lsls	r2, r0, #2
 181 000c 1218     		adds	r2, r2, r0
 182 000e D300     		lsls	r3, r2, #3
 183 0010 224A     		ldr	r2, .L25
 184 0012 D318     		adds	r3, r2, r3
 185 0014 5A68     		ldr	r2, [r3, #4]
 186              	.LVL6:
1862:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         capsense_RAM_SNS_STRUCT *ptrRamSensor = ptrFlashWidget->ptr2SnsRam;
 187              		.loc 1 1862 0
 188 0016 9C68     		ldr	r4, [r3, #8]
 189              	.LVL7:
1863:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 37


1864:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Calculate acceptable raw count range based on the resolution, target and error */
1865:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         rawcount = (0x00000001Lu << ptrRamWidget->resolution) - 1u;
 190              		.loc 1 1865 0
 191 0018 1388     		ldrh	r3, [r2]
 192 001a 0127     		movs	r7, #1
 193 001c 9F40     		lsls	r7, r7, r3
 194 001e 013F     		subs	r7, r7, #1
 195              	.LVL8:
1866:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         lowerLimit = 0u;
1867:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         if (target > capsense_CSD_CALIBRATION_ERROR)
 196              		.loc 1 1867 0
 197 0020 0A29     		cmp	r1, #10
 198 0022 02D9     		bls	.L20
1868:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         {
1869:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             lowerLimit = target - capsense_CSD_CALIBRATION_ERROR;
 199              		.loc 1 1869 0
 200 0024 0800     		movs	r0, r1
 201              	.LVL9:
 202 0026 0A38     		subs	r0, r0, #10
 203              	.LVL10:
 204 0028 00E0     		b	.L14
 205              	.LVL11:
 206              	.L20:
1866:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         lowerLimit = 0u;
 207              		.loc 1 1866 0
 208 002a 0020     		movs	r0, #0
 209              	.LVL12:
 210              	.L14:
1870:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         }
1871:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         upperLimit = target + capsense_CSD_CALIBRATION_ERROR;
 211              		.loc 1 1871 0
 212 002c 0A23     		movs	r3, #10
 213 002e 9846     		mov	r8, r3
 214 0030 8844     		add	r8, r8, r1
 215              	.LVL13:
1872:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         if (upperLimit > capsense_PERCENTAGE_100)
 216              		.loc 1 1872 0
 217 0032 4346     		mov	r3, r8
 218 0034 642B     		cmp	r3, #100
 219 0036 01D9     		bls	.L15
1873:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         {
1874:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             upperLimit = capsense_PERCENTAGE_100;
 220              		.loc 1 1874 0
 221 0038 6423     		movs	r3, #100
 222 003a 9846     		mov	r8, r3
 223              	.LVL14:
 224              	.L15:
1875:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         }
1876:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         lowerLimit = (rawcount * lowerLimit) / capsense_PERCENTAGE_100;
 225              		.loc 1 1876 0
 226 003c 7843     		muls	r0, r7
 227              	.LVL15:
 228 003e 6421     		movs	r1, #100
 229              	.LVL16:
 230 0040 FFF7FEFF 		bl	__aeabi_uidiv
 231              	.LVL17:
 232 0044 0600     		movs	r6, r0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 38


 233              	.LVL18:
1877:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         upperLimit = (rawcount * upperLimit) / capsense_PERCENTAGE_100;
 234              		.loc 1 1877 0
 235 0046 4046     		mov	r0, r8
 236              	.LVL19:
 237 0048 7843     		muls	r0, r7
 238 004a 6421     		movs	r1, #100
 239 004c FFF7FEFF 		bl	__aeabi_uidiv
 240              	.LVL20:
 241 0050 0100     		movs	r1, r0
 242              	.LVL21:
1878:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1879:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Check if raw count is in the defined range */
1880:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         for(snsIndex = 0u; snsIndex < ptrFlashWidget->totalNumSns; snsIndex++)
 243              		.loc 1 1880 0
 244 0052 0027     		movs	r7, #0
 245              	.LVL22:
1853:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         uint32 rawcount;
 246              		.loc 1 1853 0
 247 0054 0023     		movs	r3, #0
 248 0056 0193     		str	r3, [sp, #4]
 249              		.loc 1 1880 0
 250 0058 13E0     		b	.L16
 251              	.LVL23:
 252              	.L18:
1881:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         {
1882:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             for(freqChannel = capsense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
1883:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             {
1884:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 rawcount = ptrRamSensor->raw[freqChannel];
 253              		.loc 1 1884 0
 254 005a 5300     		lsls	r3, r2, #1
 255 005c 185B     		ldrh	r0, [r3, r4]
 256              	.LVL24:
1885:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 if ((rawcount < lowerLimit) || (rawcount > upperLimit))
 257              		.loc 1 1885 0
 258 005e 8642     		cmp	r6, r0
 259 0060 08D8     		bhi	.L22
1882:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             {
 260              		.loc 1 1882 0 discriminator 1
 261 0062 1300     		movs	r3, r2
 262              		.loc 1 1885 0 discriminator 1
 263 0064 8142     		cmp	r1, r0
 264 0066 01D2     		bcs	.L19
 265 0068 07E0     		b	.L23
 266              	.LVL25:
 267              	.L24:
 268 006a 0123     		movs	r3, #1
 269              	.LVL26:
 270              	.L19:
1882:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             {
 271              		.loc 1 1882 0 discriminator 1
 272 006c 5A1E     		subs	r2, r3, #1
 273              	.LVL27:
 274 006e 002B     		cmp	r3, #0
 275 0070 F3D1     		bne	.L18
 276 0072 04E0     		b	.L17
 277              	.LVL28:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 39


 278              	.L22:
1886:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 {
1887:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     calibrateStatus = CYRET_BAD_DATA;
 279              		.loc 1 1887 0
 280 0074 0623     		movs	r3, #6
 281 0076 0193     		str	r3, [sp, #4]
 282              	.LVL29:
 283 0078 01E0     		b	.L17
 284              	.LVL30:
 285              	.L23:
 286 007a 0623     		movs	r3, #6
 287 007c 0193     		str	r3, [sp, #4]
 288              	.LVL31:
 289              	.L17:
1888:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     break;
1889:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 }
1890:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             }
1891:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             ptrRamSensor++;
 290              		.loc 1 1891 0 discriminator 2
 291 007e 0A34     		adds	r4, r4, #10
 292              	.LVL32:
1880:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         {
 293              		.loc 1 1880 0 discriminator 2
 294 0080 0137     		adds	r7, r7, #1
 295              	.LVL33:
 296              	.L16:
1880:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         {
 297              		.loc 1 1880 0 is_stmt 0 discriminator 1
 298 0082 AA00     		lsls	r2, r5, #2
 299 0084 5219     		adds	r2, r2, r5
 300 0086 D300     		lsls	r3, r2, #3
 301 0088 044A     		ldr	r2, .L25
 302              	.LVL34:
 303 008a D318     		adds	r3, r2, r3
 304 008c 1B8B     		ldrh	r3, [r3, #24]
 305 008e 9F42     		cmp	r7, r3
 306 0090 EBD3     		bcc	.L24
1892:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         }
1893:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         return (calibrateStatus);
1894:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     }
 307              		.loc 1 1894 0 is_stmt 1
 308 0092 0198     		ldr	r0, [sp, #4]
 309 0094 02B0     		add	sp, sp, #8
 310              		@ sp needed
 311              	.LVL35:
 312              	.LVL36:
 313              	.LVL37:
 314              	.LVL38:
 315 0096 04BC     		pop	{r2}
 316 0098 9046     		mov	r8, r2
 317 009a F0BD     		pop	{r4, r5, r6, r7, pc}
 318              	.L26:
 319              		.align	2
 320              	.L25:
 321 009c 00000000 		.word	capsense_dsFlash
 322              		.cfi_endproc
 323              	.LFE19:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 40


 324              		.size	capsense_SsCSDCalibrateCheck, .-capsense_SsCSDCalibrateCheck
 325              		.section	.text.capsense_SsCSDSwitchIdacGain,"ax",%progbits
 326              		.align	2
 327              		.code	16
 328              		.thumb_func
 329              		.type	capsense_SsCSDSwitchIdacGain, %function
 330              	capsense_SsCSDSwitchIdacGain:
 331              	.LFB20:
1895:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1896:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1897:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #if (capsense_ENABLE == capsense_CSD_IDAC_AUTO_GAIN_EN)
1898:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /*******************************************************************************
1899:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         * Function Name: capsense_SsCSDSwitchIdacGain
1900:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         ****************************************************************************//**
1901:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *
1902:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         * \brief
1903:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *  This internal function switches to the lower IDAC gain is possible.
1904:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *
1905:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         * \details
1906:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *  This internal function switches to the lower IDAC gain is possible.
1907:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *  Conditions of switching to the lower IDAC gains:
1908:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *  1. The current IDAC gain is not the lowest one.
1909:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *  2. The maximum IDAC at gain switching will not be out of range.
1910:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *  3. The minimum IDAC is still below the acceptable range.
1911:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *
1912:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         * \param ptrFlashWidget
1913:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *  Specifies the pointer to a widget.
1914:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *
1915:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         * \return Returns the status of the operation:
1916:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *   - Zero     - Gain switching is not needed.
1917:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *   - Non-Zero - Gain was switched to the lower one.
1918:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *
1919:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *******************************************************************************/
1920:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         static uint32 capsense_SsCSDSwitchIdacGain(capsense_FLASH_WD_STRUCT const *ptrFlashWidget)
1921:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         {
 332              		.loc 1 1921 0
 333              		.cfi_startproc
 334              		@ args = 0, pretend = 0, frame = 0
 335              		@ frame_needed = 0, uses_anonymous_args = 0
 336              	.LVL39:
 337 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 338              		.cfi_def_cfa_offset 24
 339              		.cfi_offset 3, -24
 340              		.cfi_offset 4, -20
 341              		.cfi_offset 5, -16
 342              		.cfi_offset 6, -12
 343              		.cfi_offset 7, -8
 344              		.cfi_offset 14, -4
 345 0002 4F46     		mov	r7, r9
 346 0004 4646     		mov	r6, r8
 347 0006 C0B4     		push	{r6, r7}
 348              		.cfi_def_cfa_offset 32
 349              		.cfi_offset 8, -32
 350              		.cfi_offset 9, -28
 351 0008 0700     		movs	r7, r0
 352              	.LVL40:
1922:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             uint32 ratio;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 41


1923:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             uint32 maxIdac;
1924:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             uint32 minIdac;
1925:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             uint32 status = 0u;
1926:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             uint32 freqChannel;
1927:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             uint32 gainIndex;
1928:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1929:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             capsense_RAM_WD_BASE_STRUCT *ptrRamWidget = (capsense_RAM_WD_BASE_STRUCT *)ptrFlashWidg
 353              		.loc 1 1929 0
 354 000a 4668     		ldr	r6, [r0, #4]
 355              	.LVL41:
1930:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             #if (capsense_ENABLE == capsense_CSD_IDAC_COMP_EN)
1931:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 uint32 snsIndex;
1932:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 capsense_RAM_SNS_STRUCT *ptrRamSensor = ptrFlashWidget->ptr2SnsRam;
 356              		.loc 1 1932 0
 357 000c 8468     		ldr	r4, [r0, #8]
 358              	.LVL42:
1933:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             #endif
1934:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1935:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             gainIndex = ptrRamWidget->idacGainIndex;
 359              		.loc 1 1935 0
 360 000e B57A     		ldrb	r5, [r6, #10]
 361 0010 A846     		mov	r8, r5
 362              	.LVL43:
1936:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1937:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             /* Find maximum and minimum IDACs */
1938:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             maxIdac = 0u;
1939:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             minIdac = capsense_CSD_CAL_IDAC_MAX_VALUE;
1940:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             for(freqChannel = capsense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
 363              		.loc 1 1940 0
 364 0012 0123     		movs	r3, #1
1939:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             for(freqChannel = capsense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
 365              		.loc 1 1939 0
 366 0014 7F20     		movs	r0, #127
 367              	.LVL44:
1938:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             minIdac = capsense_CSD_CAL_IDAC_MAX_VALUE;
 368              		.loc 1 1938 0
 369 0016 0022     		movs	r2, #0
 370 0018 9146     		mov	r9, r2
 371              		.loc 1 1940 0
 372 001a 08E0     		b	.L28
 373              	.LVL45:
 374              	.L31:
1941:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             {
1942:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 if (maxIdac < ptrRamWidget->idacMod[freqChannel])
 375              		.loc 1 1942 0
 376 001c B318     		adds	r3, r6, r2
 377 001e 5B7A     		ldrb	r3, [r3, #9]
 378 0020 9945     		cmp	r9, r3
 379 0022 00D2     		bcs	.L29
1943:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 {
1944:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     maxIdac = ptrRamWidget->idacMod[freqChannel];
 380              		.loc 1 1944 0
 381 0024 9946     		mov	r9, r3
 382              	.LVL46:
 383              	.L29:
1945:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 }
1946:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 if (minIdac > ptrRamWidget->idacMod[freqChannel])
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 42


 384              		.loc 1 1946 0
 385 0026 9842     		cmp	r0, r3
 386 0028 00D9     		bls	.L30
1947:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 {
1948:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     minIdac = ptrRamWidget->idacMod[freqChannel];
 387              		.loc 1 1948 0
 388 002a 1800     		movs	r0, r3
 389              	.LVL47:
 390              	.L30:
 391 002c 1300     		movs	r3, r2
 392              	.LVL48:
 393              	.L28:
1940:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             {
 394              		.loc 1 1940 0 discriminator 1
 395 002e 5A1E     		subs	r2, r3, #1
 396              	.LVL49:
 397 0030 002B     		cmp	r3, #0
 398 0032 F3D1     		bne	.L31
 399 0034 0021     		movs	r1, #0
 400 0036 0CE0     		b	.L32
 401              	.LVL50:
 402              	.L34:
1949:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 }
1950:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 #if (capsense_CSD_MATRIX_WIDGET_EN || capsense_CSD_TOUCHPAD_WIDGET_EN)
1951:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     if ((capsense_WD_TOUCHPAD_E == capsense_GET_WIDGET_TYPE(ptrFlashWidget)) ||
1952:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                         (capsense_WD_MATRIX_BUTTON_E == capsense_GET_WIDGET_TYPE(ptrFlashWidget)))
1953:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     {
1954:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                         if (maxIdac < ptrRamWidget->rowIdacMod[freqChannel])
1955:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                         {
1956:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                             maxIdac = ptrRamWidget->rowIdacMod[freqChannel];
1957:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                         }
1958:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                         if (minIdac > ptrRamWidget->rowIdacMod[freqChannel])
1959:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                         {
1960:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                             minIdac = ptrRamWidget->rowIdacMod[freqChannel];
1961:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                         }
1962:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     }
1963:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 #endif
1964:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             }
1965:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             #if (capsense_ENABLE == capsense_CSD_IDAC_COMP_EN)
1966:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 for(snsIndex = 0u; snsIndex < ptrFlashWidget->totalNumSns; snsIndex++)
1967:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 {
1968:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     for(freqChannel = capsense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
1969:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     {
1970:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                         if (minIdac > ptrRamSensor->idacComp[freqChannel])
 403              		.loc 1 1970 0
 404 0038 A318     		adds	r3, r4, r2
 405 003a 5B7A     		ldrb	r3, [r3, #9]
 406 003c 9842     		cmp	r0, r3
 407 003e 00D9     		bls	.L33
1971:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                         {
1972:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                             minIdac = ptrRamSensor->idacComp[freqChannel];
 408              		.loc 1 1972 0
 409 0040 1800     		movs	r0, r3
 410              	.LVL51:
 411              	.L33:
 412 0042 1300     		movs	r3, r2
 413 0044 00E0     		b	.L35
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 43


 414              	.LVL52:
 415              	.L40:
 416 0046 0123     		movs	r3, #1
 417              	.LVL53:
 418              	.L35:
1968:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     {
 419              		.loc 1 1968 0 discriminator 1
 420 0048 5A1E     		subs	r2, r3, #1
 421              	.LVL54:
 422 004a 002B     		cmp	r3, #0
 423 004c F4D1     		bne	.L34
1973:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                         }
1974:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     }
1975:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     ptrRamSensor++;
 424              		.loc 1 1975 0 discriminator 2
 425 004e 0A34     		adds	r4, r4, #10
 426              	.LVL55:
1966:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 {
 427              		.loc 1 1966 0 discriminator 2
 428 0050 0131     		adds	r1, r1, #1
 429              	.LVL56:
 430              	.L32:
1966:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 {
 431              		.loc 1 1966 0 is_stmt 0 discriminator 1
 432 0052 3B8B     		ldrh	r3, [r7, #24]
 433 0054 9942     		cmp	r1, r3
 434 0056 F6D3     		bcc	.L40
1976:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 }
1977:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             #endif
1978:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1979:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             /* Check gain switch conditions */
1980:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             if (gainIndex != 0u)
 435              		.loc 1 1980 0 is_stmt 1
 436 0058 4346     		mov	r3, r8
 437 005a 002B     		cmp	r3, #0
 438 005c 13D0     		beq	.L41
 439              	.LVL57:
1981:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             {
1982:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 if (minIdac < capsense_CSD_IDAC_MIN)
 440              		.loc 1 1982 0
 441 005e 1328     		cmp	r0, #19
 442 0060 13D8     		bhi	.L42
1983:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 {
1984:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     ratio = capsense_idacGainTable[gainIndex].gainValue /
 443              		.loc 1 1984 0
 444 0062 0D49     		ldr	r1, .L44
 445              	.LVL58:
 446 0064 EA00     		lsls	r2, r5, #3
 447              	.LVL59:
 448 0066 8A18     		adds	r2, r1, r2
 449 0068 5068     		ldr	r0, [r2, #4]
 450              	.LVL60:
1985:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                             capsense_idacGainTable[gainIndex - 1u].gainValue;
 451              		.loc 1 1985 0
 452 006a 6B1E     		subs	r3, r5, #1
 453              	.LVL61:
 454 006c DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 44


 455 006e CB18     		adds	r3, r1, r3
 456 0070 5968     		ldr	r1, [r3, #4]
1984:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                             capsense_idacGainTable[gainIndex - 1u].gainValue;
 457              		.loc 1 1984 0
 458 0072 FFF7FEFF 		bl	__aeabi_uidiv
 459              	.LVL62:
1986:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     if ((maxIdac * ratio) < capsense_CSD_CAL_IDAC_MAX_VALUE)
 460              		.loc 1 1986 0
 461 0076 4F46     		mov	r7, r9
 462              	.LVL63:
 463 0078 4743     		muls	r7, r0
 464 007a 7E2F     		cmp	r7, #126
 465 007c 07D8     		bhi	.L43
1987:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     {
1988:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                         /* Switch to lower idac gain */
1989:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                         ptrRamWidget->idacGainIndex--;
 466              		.loc 1 1989 0
 467 007e 013D     		subs	r5, r5, #1
 468              	.LVL64:
 469 0080 B572     		strb	r5, [r6, #10]
 470              	.LVL65:
1990:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                         status = 1u;
 471              		.loc 1 1990 0
 472 0082 0120     		movs	r0, #1
 473              	.LVL66:
 474 0084 04E0     		b	.L36
 475              	.LVL67:
 476              	.L41:
1925:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             uint32 freqChannel;
 477              		.loc 1 1925 0
 478 0086 0020     		movs	r0, #0
 479              	.LVL68:
 480 0088 02E0     		b	.L36
 481              	.LVL69:
 482              	.L42:
 483 008a 0020     		movs	r0, #0
 484              	.LVL70:
 485 008c 00E0     		b	.L36
 486              	.LVL71:
 487              	.L43:
 488 008e 0020     		movs	r0, #0
 489              	.LVL72:
 490              	.L36:
1991:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     }
1992:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 }
1993:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             }
1994:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1995:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             return (status);
1996:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         }
 491              		.loc 1 1996 0
 492              		@ sp needed
 493              	.LVL73:
 494              	.LVL74:
 495              	.LVL75:
 496              	.LVL76:
 497 0090 0CBC     		pop	{r2, r3}
 498 0092 9046     		mov	r8, r2
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 45


 499 0094 9946     		mov	r9, r3
 500 0096 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 501              	.L45:
 502              		.align	2
 503              	.L44:
 504 0098 00000000 		.word	capsense_idacGainTable
 505              		.cfi_endproc
 506              	.LFE20:
 507              		.size	capsense_SsCSDSwitchIdacGain, .-capsense_SsCSDSwitchIdacGain
 508              		.section	.text.capsense_SsCSDNormalizeIdac,"ax",%progbits
 509              		.align	2
 510              		.code	16
 511              		.thumb_func
 512              		.type	capsense_SsCSDNormalizeIdac, %function
 513              	capsense_SsCSDNormalizeIdac:
 514              	.LFB21:
1997:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #endif /* (capsense_ENABLE == capsense_CSD_IDAC_AUTO_GAIN_EN) */
1998:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
1999:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2000:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #if (capsense_ENABLE == capsense_CSD_IDAC_COMP_EN)
2001:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /*******************************************************************************
2002:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         * Function Name: capsense_SsCSDNormalizeIdac
2003:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         ****************************************************************************//**
2004:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *
2005:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         * \brief
2006:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *  This function normalizes compensation IDAC.
2007:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *
2008:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         * \details
2009:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *  This function normalizes compensation IDAC.
2010:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *
2011:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         * \param ptrFlashWidget
2012:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *  Specifies the pointer to a widget.
2013:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *
2014:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         * \param target
2015:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *  Raw count target in percentage.
2016:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *
2017:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         *******************************************************************************/
2018:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         static void capsense_SsCSDNormalizeIdac(capsense_FLASH_WD_STRUCT const *ptrFlashWidget, uin
2019:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         {
 515              		.loc 1 2019 0
 516              		.cfi_startproc
 517              		@ args = 0, pretend = 0, frame = 8
 518              		@ frame_needed = 0, uses_anonymous_args = 0
 519              	.LVL77:
 520 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 521              		.cfi_def_cfa_offset 20
 522              		.cfi_offset 4, -20
 523              		.cfi_offset 5, -16
 524              		.cfi_offset 6, -12
 525              		.cfi_offset 7, -8
 526              		.cfi_offset 14, -4
 527 0002 5F46     		mov	r7, fp
 528 0004 5646     		mov	r6, r10
 529 0006 4D46     		mov	r5, r9
 530 0008 E0B4     		push	{r5, r6, r7}
 531              		.cfi_def_cfa_offset 32
 532              		.cfi_offset 9, -32
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 46


 533              		.cfi_offset 10, -28
 534              		.cfi_offset 11, -24
 535 000a 82B0     		sub	sp, sp, #8
 536              		.cfi_def_cfa_offset 40
 537 000c 0700     		movs	r7, r0
 538 000e 8A46     		mov	r10, r1
2020:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             uint32 snsIndex;
2021:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             uint32 freqChannel;
2022:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             uint32 maxIdac;
2023:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             uint32 minIdac;
2024:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             uint32 minRaw;
2025:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             uint32 maxRawLevel;
2026:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             uint32 rawLevel;
2027:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             uint32 iMod;
2028:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2029:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             capsense_RAM_WD_BASE_STRUCT *ptrRamWidget = (capsense_RAM_WD_BASE_STRUCT *)ptrFlashWidg
 539              		.loc 1 2029 0
 540 0010 4368     		ldr	r3, [r0, #4]
 541 0012 9B46     		mov	fp, r3
 542              	.LVL78:
2030:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             capsense_RAM_SNS_STRUCT *ptrRamSensor;
2031:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2032:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             /* Calculate raw count level based on resolution and target */
2033:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             maxRawLevel = (0x00000001Lu << ptrRamWidget->resolution) - 1u;
 543              		.loc 1 2033 0
 544 0014 1B88     		ldrh	r3, [r3]
 545              	.LVL79:
 546 0016 0122     		movs	r2, #1
 547 0018 9A40     		lsls	r2, r2, r3
 548 001a 1300     		movs	r3, r2
 549 001c 013B     		subs	r3, r3, #1
 550 001e 0193     		str	r3, [sp, #4]
 551              	.LVL80:
2034:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2035:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             /*
2036:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             * IDAC Normalization is performed separately for each multi-frequency channel
2037:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             * and separately for row and column
2038:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             */
2039:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             for(freqChannel = capsense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
 552              		.loc 1 2039 0
 553 0020 0123     		movs	r3, #1
 554              	.LVL81:
 555 0022 4AE0     		b	.L47
 556              	.LVL82:
 557              	.L56:
2040:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             {
2041:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 /* Find maximum and minimum IDACs */
2042:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 maxIdac = ptrRamWidget->idacMod[freqChannel];
 558              		.loc 1 2042 0
 559 0024 5B46     		mov	r3, fp
 560 0026 5B19     		adds	r3, r3, r5
 561 0028 5B7A     		ldrb	r3, [r3, #9]
 562 002a 9946     		mov	r9, r3
 563              	.LVL83:
2043:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 minIdac = ptrRamWidget->idacMod[freqChannel];
2044:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 ptrRamSensor = ptrFlashWidget->ptr2SnsRam;
 564              		.loc 1 2044 0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 47


 565 002c BB68     		ldr	r3, [r7, #8]
 566              	.LVL84:
2045:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 minRaw = ptrRamSensor->raw[freqChannel];
 567              		.loc 1 2045 0
 568 002e 6A00     		lsls	r2, r5, #1
 569 0030 D05A     		ldrh	r0, [r2, r3]
 570              	.LVL85:
2043:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 minIdac = ptrRamWidget->idacMod[freqChannel];
 571              		.loc 1 2043 0
 572 0032 4C46     		mov	r4, r9
2046:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 for(snsIndex = 0u; snsIndex < ptrFlashWidget->numCols; snsIndex++)
 573              		.loc 1 2046 0
 574 0034 0022     		movs	r2, #0
 575 0036 08E0     		b	.L48
 576              	.LVL86:
 577              	.L50:
2047:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 {
2048:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     if (minIdac > ptrRamSensor->idacComp[freqChannel])
 578              		.loc 1 2048 0
 579 0038 5919     		adds	r1, r3, r5
 580 003a 497A     		ldrb	r1, [r1, #9]
 581 003c 8C42     		cmp	r4, r1
 582 003e 02D9     		bls	.L49
 583              	.LVL87:
2049:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     {
2050:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                         minIdac = ptrRamSensor->idacComp[freqChannel];
2051:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                         minRaw = ptrRamSensor->raw[freqChannel];
 584              		.loc 1 2051 0
 585 0040 6800     		lsls	r0, r5, #1
 586              	.LVL88:
 587 0042 C05A     		ldrh	r0, [r0, r3]
 588              	.LVL89:
2050:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                         minRaw = ptrRamSensor->raw[freqChannel];
 589              		.loc 1 2050 0
 590 0044 0C00     		movs	r4, r1
 591              	.LVL90:
 592              	.L49:
2052:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     }
2053:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     ptrRamSensor++;
 593              		.loc 1 2053 0 discriminator 2
 594 0046 0A33     		adds	r3, r3, #10
 595              	.LVL91:
2046:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 {
 596              		.loc 1 2046 0 discriminator 2
 597 0048 0132     		adds	r2, r2, #1
 598              	.LVL92:
 599              	.L48:
2046:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 {
 600              		.loc 1 2046 0 is_stmt 0 discriminator 1
 601 004a 397F     		ldrb	r1, [r7, #28]
 602 004c 8A42     		cmp	r2, r1
 603 004e F3D3     		bcc	.L50
2054:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 }
2055:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2056:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 /* Define new modulator IDAC */
2057:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 rawLevel = ((minRaw * capsense_PERCENTAGE_100) / maxRawLevel) + capsense_PERCENTAGE
 604              		.loc 1 2057 0 is_stmt 1
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 48


 605 0050 6423     		movs	r3, #100
 606              	.LVL93:
 607 0052 5843     		muls	r0, r3
 608              	.LVL94:
 609 0054 0199     		ldr	r1, [sp, #4]
 610 0056 FFF7FEFF 		bl	__aeabi_uidiv
 611              	.LVL95:
 612 005a 6430     		adds	r0, r0, #100
 613              	.LVL96:
2058:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 iMod = (rawLevel * minIdac) / target;
 614              		.loc 1 2058 0
 615 005c 6043     		muls	r0, r4
 616              	.LVL97:
 617 005e 5146     		mov	r1, r10
 618 0060 FFF7FEFF 		bl	__aeabi_uidiv
 619              	.LVL98:
2059:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2060:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 if (iMod > maxIdac)
 620              		.loc 1 2060 0
 621 0064 8145     		cmp	r9, r0
 622 0066 00D3     		bcc	.L51
2058:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 iMod = (rawLevel * minIdac) / target;
 623              		.loc 1 2058 0
 624 0068 8146     		mov	r9, r0
 625              	.LVL99:
 626              	.L51:
2061:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 {
2062:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     iMod = maxIdac;
2063:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 }
2064:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 ptrRamWidget->idacMod[freqChannel] = (uint8)iMod;
 627              		.loc 1 2064 0
 628 006a 5B46     		mov	r3, fp
 629 006c 5B19     		adds	r3, r3, r5
 630 006e 4A46     		mov	r2, r9
 631 0070 5A72     		strb	r2, [r3, #9]
2065:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2066:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 /* Re-calculate compensation IDAC */
2067:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 ptrRamSensor = ptrFlashWidget->ptr2SnsRam;
 632              		.loc 1 2067 0
 633 0072 BC68     		ldr	r4, [r7, #8]
 634              	.LVL100:
2068:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 for(snsIndex = 0u; snsIndex < ptrFlashWidget->numCols; snsIndex++)
 635              		.loc 1 2068 0
 636 0074 0026     		movs	r6, #0
 637 0076 1CE0     		b	.L52
 638              	.LVL101:
 639              	.L55:
2069:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 {
2070:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     rawLevel = (((ptrRamSensor->raw[freqChannel] * capsense_PERCENTAGE_100) / maxRa
 640              		.loc 1 2070 0
 641 0078 6B00     		lsls	r3, r5, #1
 642 007a 185B     		ldrh	r0, [r3, r4]
 643 007c 6423     		movs	r3, #100
 644 007e 5843     		muls	r0, r3
 645 0080 0199     		ldr	r1, [sp, #4]
 646 0082 FFF7FEFF 		bl	__aeabi_uidiv
 647              	.LVL102:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 49


 648 0086 6430     		adds	r0, r0, #100
2071:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                         capsense_PERCENTAGE_100) * ptrRamSensor->idacComp[freqChannel];
 649              		.loc 1 2071 0
 650 0088 6319     		adds	r3, r4, r5
 651 008a 5B7A     		ldrb	r3, [r3, #9]
2070:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                         capsense_PERCENTAGE_100) * ptrRamSensor->idacComp[freqChannel];
 652              		.loc 1 2070 0
 653 008c 5843     		muls	r0, r3
 654              	.LVL103:
2072:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     if (rawLevel < (iMod * target))
 655              		.loc 1 2072 0
 656 008e 5346     		mov	r3, r10
 657 0090 4A46     		mov	r2, r9
 658 0092 5343     		muls	r3, r2
 659 0094 9842     		cmp	r0, r3
 660 0096 03D2     		bcs	.L53
 661              	.LVL104:
2073:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     {
2074:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                         ptrRamSensor->idacComp[freqChannel] = 0u;
 662              		.loc 1 2074 0
 663 0098 6319     		adds	r3, r4, r5
 664 009a 0022     		movs	r2, #0
 665              	.LVL105:
 666 009c 5A72     		strb	r2, [r3, #9]
 667 009e 06E0     		b	.L54
 668              	.LVL106:
 669              	.L53:
2075:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     }
2076:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     else
2077:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     {
2078:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                         ptrRamSensor->idacComp[freqChannel] = (uint8)(((rawLevel - (iMod * target))
 670              		.loc 1 2078 0
 671 00a0 C01A     		subs	r0, r0, r3
 672              	.LVL107:
 673 00a2 3230     		adds	r0, r0, #50
2079:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                             (capsense_PERCENTAGE_100 >> 1u)) / capsense_PERCENTAGE_100);
 674              		.loc 1 2079 0
 675 00a4 6421     		movs	r1, #100
 676 00a6 FFF7FEFF 		bl	__aeabi_uidiv
 677              	.LVL108:
2078:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                             (capsense_PERCENTAGE_100 >> 1u)) / capsense_PERCENTAGE_100);
 678              		.loc 1 2078 0
 679 00aa 6319     		adds	r3, r4, r5
 680 00ac 5872     		strb	r0, [r3, #9]
 681              	.L54:
2080:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     }
2081:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     ptrRamSensor++;
 682              		.loc 1 2081 0 discriminator 2
 683 00ae 0A34     		adds	r4, r4, #10
 684              	.LVL109:
2068:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 {
 685              		.loc 1 2068 0 discriminator 2
 686 00b0 0136     		adds	r6, r6, #1
 687              	.LVL110:
 688              	.L52:
2068:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 {
 689              		.loc 1 2068 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 50


 690 00b2 3B7F     		ldrb	r3, [r7, #28]
 691 00b4 9E42     		cmp	r6, r3
 692 00b6 DFD3     		bcc	.L55
2039:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             {
 693              		.loc 1 2039 0 is_stmt 1
 694 00b8 2B00     		movs	r3, r5
 695              	.LVL111:
 696              	.L47:
2039:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             {
 697              		.loc 1 2039 0 is_stmt 0 discriminator 1
 698 00ba 5D1E     		subs	r5, r3, #1
 699              	.LVL112:
 700 00bc 002B     		cmp	r3, #0
 701 00be B1D1     		bne	.L56
2082:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 }
2083:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2084:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 #if (capsense_CSD_MATRIX_WIDGET_EN || capsense_CSD_TOUCHPAD_WIDGET_EN)
2085:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     if ((capsense_WD_TOUCHPAD_E == capsense_GET_WIDGET_TYPE(ptrFlashWidget)) ||
2086:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                         (capsense_WD_MATRIX_BUTTON_E == capsense_GET_WIDGET_TYPE(ptrFlashWidget)))
2087:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     {
2088:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                         /* Find maximum and minimum IDACs */
2089:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                         maxIdac = ptrRamWidget->rowIdacMod[freqChannel];
2090:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                         minIdac = ptrRamWidget->rowIdacMod[freqChannel];
2091:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                         ptrRamSensor = &(ptrFlashWidget->ptr2SnsRam[ptrFlashWidget->numCols]);
2092:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                         minRaw = ptrRamSensor->raw[freqChannel];
2093:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                         for(snsIndex = ptrFlashWidget->numCols; snsIndex < ptrFlashWidget->totalNum
2094:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                         {
2095:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                             if (minIdac > ptrRamSensor->idacComp[freqChannel])
2096:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                             {
2097:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                 minIdac = ptrRamSensor->idacComp[freqChannel];
2098:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                 minRaw = ptrRamSensor->raw[freqChannel];
2099:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                             }
2100:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                             ptrRamSensor++;
2101:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                         }
2102:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2103:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                         /* Define new modulator IDAC */
2104:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                         rawLevel = ((minRaw * capsense_PERCENTAGE_100) / maxRawLevel) + capsense_PE
2105:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                         iMod = (rawLevel * minIdac) / target;
2106:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2107:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                         if (iMod > maxIdac)
2108:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                         {
2109:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                             iMod = maxIdac;
2110:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                         }
2111:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                         ptrRamWidget->rowIdacMod[freqChannel] = (uint8)iMod;
2112:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2113:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                         /* Re-calculate compensation IDAC */
2114:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                         ptrRamSensor = &(ptrFlashWidget->ptr2SnsRam[ptrFlashWidget->numCols]);
2115:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                         for(snsIndex = 0u; snsIndex < ptrFlashWidget->numRows; snsIndex++)
2116:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                         {
2117:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                             rawLevel = (((ptrRamSensor->raw[freqChannel] * capsense_PERCENTAGE_100)
2118:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                 capsense_PERCENTAGE_100) * ptrRamSensor->idacComp[freqChannel];
2119:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                             if (rawLevel < (iMod * target))
2120:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                             {
2121:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                 ptrRamSensor->idacComp[freqChannel] = 0u;
2122:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                             }
2123:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                             else
2124:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                             {
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 51


2125:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                 ptrRamSensor->idacComp[freqChannel] = (uint8)(((rawLevel - (iMod * 
2126:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                     (capsense_PERCENTAGE_100 >> 1u)) / capsense_PERCENTAGE_100);
2127:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                             }
2128:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                             ptrRamSensor++;
2129:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                         }
2130:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     }
2131:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 #endif
2132:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             }
2133:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         }
 702              		.loc 1 2133 0 is_stmt 1
 703 00c0 02B0     		add	sp, sp, #8
 704              		@ sp needed
 705              	.LVL113:
 706              	.LVL114:
 707              	.LVL115:
 708              	.LVL116:
 709 00c2 1CBC     		pop	{r2, r3, r4}
 710 00c4 9146     		mov	r9, r2
 711 00c6 9A46     		mov	r10, r3
 712 00c8 A346     		mov	fp, r4
 713 00ca F0BD     		pop	{r4, r5, r6, r7, pc}
 714              		.cfi_endproc
 715              	.LFE21:
 716              		.size	capsense_SsCSDNormalizeIdac, .-capsense_SsCSDNormalizeIdac
 717              		.section	.text.capsense_SsCSDInitialize,"ax",%progbits
 718              		.align	2
 719              		.global	capsense_SsCSDInitialize
 720              		.code	16
 721              		.thumb_func
 722              		.type	capsense_SsCSDInitialize, %function
 723              	capsense_SsCSDInitialize:
 724              	.LFB4:
 525:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #if (capsense_ENABLE == capsense_CSDV2)
 725              		.loc 1 525 0
 726              		.cfi_startproc
 727              		@ args = 0, pretend = 0, frame = 0
 728              		@ frame_needed = 0, uses_anonymous_args = 0
 729 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 730              		.cfi_def_cfa_offset 24
 731              		.cfi_offset 3, -24
 732              		.cfi_offset 4, -20
 733              		.cfi_offset 5, -16
 734              		.cfi_offset 6, -12
 735              		.cfi_offset 7, -8
 736              		.cfi_offset 14, -4
 531:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     {
 737              		.loc 1 531 0
 738 0002 324B     		ldr	r3, .L59
 739 0004 BA22     		movs	r2, #186
 740 0006 9A5C     		ldrb	r2, [r3, r2]
 741 0008 B821     		movs	r1, #184
 742 000a 585C     		ldrb	r0, [r3, r1]
 743 000c 8242     		cmp	r2, r0
 744 000e 06D0     		beq	.L58
 533:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         capsense_dsRam.scanCurrentISC = capsense_dsRam.scanCsdISC;
 745              		.loc 1 533 0
 746 0010 FFF7FEFF 		bl	capsense_SsSetAllIOsState
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 52


 747              	.LVL117:
 534:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     }
 748              		.loc 1 534 0
 749 0014 2D4B     		ldr	r3, .L59
 750 0016 B822     		movs	r2, #184
 751 0018 995C     		ldrb	r1, [r3, r2]
 752 001a 0232     		adds	r2, r2, #2
 753 001c 9954     		strb	r1, [r3, r2]
 754              	.L58:
 551:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 755              		.loc 1 551 0
 756 001e 0120     		movs	r0, #1
 757 0020 FFF7FEFF 		bl	capsense_DischargeExtCapacitors
 758              	.LVL118:
 554:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 759              		.loc 1 554 0
 760 0024 C022     		movs	r2, #192
 761 0026 1203     		lsls	r2, r2, #12
 762 0028 294B     		ldr	r3, .L59+4
 763 002a 1A60     		str	r2, [r3]
 557:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         newRegValue |= capsense_DEFAULT_SW_REFGEN_SEL;
 764              		.loc 1 557 0
 765 002c 294D     		ldr	r5, .L59+8
 766 002e 2B68     		ldr	r3, [r5]
 767              	.LVL119:
 558:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 768              		.loc 1 558 0
 769 0030 294E     		ldr	r6, .L59+12
 770 0032 3343     		orrs	r3, r6
 771              	.LVL120:
 560:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CY_SET_REG32(capsense_INTR_SET_PTR,         capsense_DEFAULT_CSD_INTR_SET);
 772              		.loc 1 560 0
 773 0034 2B60     		str	r3, [r5]
 561:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CY_SET_REG32(capsense_SW_FW_TANK_SEL_PTR,   capsense_DEFAULT_CSD_SW_FW_TANK_SEL);
 774              		.loc 1 561 0
 775 0036 0024     		movs	r4, #0
 776 0038 284B     		ldr	r3, .L59+16
 777              	.LVL121:
 778 003a 1C60     		str	r4, [r3]
 779              	.LVL122:
 562:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CY_SET_REG32(capsense_SW_DSI_SEL_PTR,       capsense_DEFAULT_CSD_SW_DSI_SEL);
 780              		.loc 1 562 0
 781 003c 284B     		ldr	r3, .L59+20
 782 003e 1C60     		str	r4, [r3]
 563:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CY_SET_REG32(capsense_ADC_CTL_PTR,          capsense_DEFAULT_CSD_ADC_CTL);
 783              		.loc 1 563 0
 784 0040 284B     		ldr	r3, .L59+24
 785 0042 1C60     		str	r4, [r3]
 564:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CY_SET_REG32(capsense_AMBUF_PTR,            capsense_AMBUF_PWR_MODE_OFF);
 786              		.loc 1 564 0
 787 0044 284B     		ldr	r3, .L59+28
 788 0046 1C60     		str	r4, [r3]
 565:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CY_SET_REG32(capsense_SW_SHIELD_SEL_PTR,    capsense_DEFAULT_SW_SHIELD_SEL);
 789              		.loc 1 565 0
 790 0048 284B     		ldr	r3, .L59+32
 791 004a 1C60     		str	r4, [r3]
 566:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CY_SET_REG32(capsense_SW_HS_P_SEL_PTR,      capsense_DEFAULT_SW_HS_P_SEL);
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 53


 792              		.loc 1 566 0
 793 004c 284B     		ldr	r3, .L59+36
 794 004e 1C60     		str	r4, [r3]
 567:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CY_SET_REG32(capsense_SW_HS_N_SEL_PTR,      capsense_DEFAULT_SW_HS_N_SEL);
 795              		.loc 1 567 0
 796 0050 284B     		ldr	r3, .L59+40
 797 0052 1C60     		str	r4, [r3]
 568:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CY_SET_REG32(capsense_HSCMP_PTR,            capsense_DEFAULT_HSCMP_CFG);
 798              		.loc 1 568 0
 799 0054 284F     		ldr	r7, .L59+44
 800 0056 3C60     		str	r4, [r7]
 569:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 801              		.loc 1 569 0
 802 0058 284B     		ldr	r3, .L59+48
 803 005a 1C60     		str	r4, [r3]
 572:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     (uint32)(capsense_HSIOM_SEL_AMUXA << capsense_CMOD_HSIOM_SHIFT));
 804              		.loc 1 572 0
 805 005c 6022     		movs	r2, #96
 806 005e F021     		movs	r1, #240
 807 0060 2748     		ldr	r0, .L59+52
 808 0062 FFF7FEFF 		bl	capsense_WriteBitsSafe
 809              	.LVL123:
 576:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 810              		.loc 1 576 0
 811 0066 0022     		movs	r2, #0
 812 0068 0221     		movs	r1, #2
 813 006a 2648     		ldr	r0, .L59+56
 814 006c FFF7FEFF 		bl	capsense_WriteBitsSafe
 815              	.LVL124:
 579:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         newRegValue |= capsense_SW_BYP_SEL_SW_BYA_MASK;
 816              		.loc 1 579 0
 817 0070 254A     		ldr	r2, .L59+60
 818 0072 1368     		ldr	r3, [r2]
 819              	.LVL125:
 580:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CY_SET_REG32(capsense_SW_BYP_SEL_PTR, newRegValue);
 820              		.loc 1 580 0
 821 0074 8021     		movs	r1, #128
 822 0076 4901     		lsls	r1, r1, #5
 823 0078 0B43     		orrs	r3, r1
 824              	.LVL126:
 581:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 825              		.loc 1 581 0
 826 007a 1360     		str	r3, [r2]
 587:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #else
 827              		.loc 1 587 0
 828 007c 8022     		movs	r2, #128
 829 007e 5200     		lsls	r2, r2, #1
 830 0080 224B     		ldr	r3, .L59+64
 831              	.LVL127:
 832 0082 1A60     		str	r2, [r3]
 833              	.LVL128:
 604:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             newRegValue |= capsense_SW_REFGEN_SEL_SW_SGR_MASK | capsense_SW_REFGEN_SEL_SW_IAIB_MASK
 834              		.loc 1 604 0
 835 0084 2B68     		ldr	r3, [r5]
 836              	.LVL129:
 605:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             CY_SET_REG32(capsense_SW_REFGEN_SEL_PTR, newRegValue);
 837              		.loc 1 605 0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 54


 838 0086 3343     		orrs	r3, r6
 839              	.LVL130:
 606:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #else
 840              		.loc 1 606 0
 841 0088 2B60     		str	r3, [r5]
 615:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 842              		.loc 1 615 0
 843 008a 8023     		movs	r3, #128
 844              	.LVL131:
 845 008c 5B04     		lsls	r3, r3, #17
 846 008e 204A     		ldr	r2, .L59+68
 847 0090 1360     		str	r3, [r2]
 848              	.LVL132:
 642:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 849              		.loc 1 642 0
 850 0092 2049     		ldr	r1, .L59+72
 851 0094 204A     		ldr	r2, .L59+76
 852 0096 1160     		str	r1, [r2]
 655:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             #endif /* (capsense_ENABLE == capsense_CSD_SHIELD_EN) */
 853              		.loc 1 655 0
 854 0098 204A     		ldr	r2, .L59+80
 855 009a 1460     		str	r4, [r2]
 659:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #endif /* (capsense_2000_MV > capsense_CYDEV_VDDA_MV) */
 856              		.loc 1 659 0
 857 009c 3B60     		str	r3, [r7]
 663:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 858              		.loc 1 663 0
 859 009e FFF7FEFF 		bl	capsense_SsCSDConfigIDACs
 860              	.LVL133:
 666:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 861              		.loc 1 666 0
 862 00a2 0A4B     		ldr	r3, .L59
 863 00a4 987F     		ldrb	r0, [r3, #30]
 864 00a6 FFF7FEFF 		bl	capsense_SsSetModClkClockDivider
 865              	.LVL134:
 674:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 866              		.loc 1 674 0
 867 00aa FFF7FEFF 		bl	capsense_SsCSDSetFilterDelay
 868              	.LVL135:
 678:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                                       capsense_CONFIG_SENSE_EN_MASK |
 869              		.loc 1 678 0
 870 00ae 1C4B     		ldr	r3, .L59+84
 871 00b0 1B68     		ldr	r3, [r3]
 872 00b2 1C4A     		ldr	r2, .L59+88
 873 00b4 1343     		orrs	r3, r2
 874 00b6 1C4A     		ldr	r2, .L59+92
 875 00b8 1360     		str	r3, [r2]
 684:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 876              		.loc 1 684 0
 877 00ba 0F22     		movs	r2, #15
 878 00bc 1B4B     		ldr	r3, .L59+96
 879 00be 1A60     		str	r2, [r3]
 687:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 880              		.loc 1 687 0
 881 00c0 1B4B     		ldr	r3, .L59+100
 882 00c2 1C60     		str	r4, [r3]
 690:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 55


 883              		.loc 1 690 0
 884 00c4 053A     		subs	r2, r2, #5
 885 00c6 1B4B     		ldr	r3, .L59+104
 886 00c8 1A60     		str	r2, [r3]
 718:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 887              		.loc 1 718 0
 888              		@ sp needed
 889 00ca F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 890              	.L60:
 891              		.align	2
 892              	.L59:
 893 00cc 00000000 		.word	capsense_dsRam
 894 00d0 04020B40 		.word	1074463236
 895 00d4 A8020B40 		.word	1074463400
 896 00d8 01000010 		.word	268435457
 897 00dc F4000B40 		.word	1074462964
 898 00e0 B4020B40 		.word	1074463412
 899 00e4 C0020B40 		.word	1074463424
 900 00e8 20030B40 		.word	1074463520
 901 00ec 84010B40 		.word	1074463108
 902 00f0 88020B40 		.word	1074463368
 903 00f4 80020B40 		.word	1074463360
 904 00f8 84020B40 		.word	1074463364
 905 00fc 80010B40 		.word	1074463104
 906 0100 00040240 		.word	1073873920
 907 0104 00040440 		.word	1074004992
 908 0108 94020B40 		.word	1074463380
 909 010c A0020B40 		.word	1074463392
 910 0110 A4020B40 		.word	1074463396
 911 0114 410D0000 		.word	3393
 912 0118 88010B40 		.word	1074463112
 913 011c 90020B40 		.word	1074463376
 914 0120 00000000 		.word	.LANCHOR0
 915 0124 00100080 		.word	-2147479552
 916 0128 00000B40 		.word	1074462720
 917 012c 00030B40 		.word	1074463488
 918 0130 F0010B40 		.word	1074463216
 919 0134 10030B40 		.word	1074463504
 920              		.cfi_endproc
 921              	.LFE4:
 922              		.size	capsense_SsCSDInitialize, .-capsense_SsCSDInitialize
 923              		.section	.text.capsense_SsCSDSetUpIdacs,"ax",%progbits
 924              		.align	2
 925              		.global	capsense_SsCSDSetUpIdacs
 926              		.code	16
 927              		.thumb_func
 928              		.type	capsense_SsCSDSetUpIdacs, %function
 929              	capsense_SsCSDSetUpIdacs:
 930              	.LFB6:
 799:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     uint8 interruptState;
 931              		.loc 1 799 0
 932              		.cfi_startproc
 933              		@ args = 0, pretend = 0, frame = 0
 934              		@ frame_needed = 0, uses_anonymous_args = 0
 935              	.LVL136:
 936 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 937              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 56


 938              		.cfi_offset 3, -24
 939              		.cfi_offset 4, -20
 940              		.cfi_offset 5, -16
 941              		.cfi_offset 6, -12
 942              		.cfi_offset 7, -8
 943              		.cfi_offset 14, -4
 944 0002 0700     		movs	r7, r0
 804:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 945              		.loc 1 804 0
 946 0004 837A     		ldrb	r3, [r0, #10]
 947 0006 DB00     		lsls	r3, r3, #3
 948 0008 0F4A     		ldr	r2, .L62
 949 000a 9D58     		ldr	r5, [r3, r2]
 950              	.LVL137:
 812:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 951              		.loc 1 812 0
 952 000c FFF7FEFF 		bl	CyEnterCriticalSection
 953              	.LVL138:
 815:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 954              		.loc 1 815 0
 955 0010 0E4B     		ldr	r3, .L62+4
 956 0012 1A68     		ldr	r2, [r3]
 957              	.LVL139:
 818:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 958              		.loc 1 818 0
 959 0014 0E4C     		ldr	r4, .L62+8
 960 0016 2240     		ands	r2, r4
 961              	.LVL140:
 831:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #endif /* (capsense_CSD_MATRIX_WIDGET_EN | capsense_CSD_TOUCHPAD_WIDGET_EN) */
 962              		.loc 1 831 0
 963 0018 0E49     		ldr	r1, .L62+12
 964 001a 0E78     		ldrb	r6, [r1]
 965 001c BF19     		adds	r7, r7, r6
 966              	.LVL141:
 967 001e 797A     		ldrb	r1, [r7, #9]
 968 0020 0A43     		orrs	r2, r1
 969              	.LVL142:
 833:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 970              		.loc 1 833 0
 971 0022 2A43     		orrs	r2, r5
 972              	.LVL143:
 836:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CyExitCriticalSection(interruptState);
 973              		.loc 1 836 0
 974 0024 1A60     		str	r2, [r3]
 837:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 975              		.loc 1 837 0
 976 0026 FFF7FEFF 		bl	CyExitCriticalSection
 977              	.LVL144:
 840:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             /* Get IDACB Value */
 978              		.loc 1 840 0
 979 002a FFF7FEFF 		bl	CyEnterCriticalSection
 980              	.LVL145:
 842:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 981              		.loc 1 842 0
 982 002e 0A49     		ldr	r1, .L62+16
 983 0030 0B68     		ldr	r3, [r1]
 984              	.LVL146:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 57


 845:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 985              		.loc 1 845 0
 986 0032 2340     		ands	r3, r4
 987              	.LVL147:
 848:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             idacBRegValue |= idacGain;
 988              		.loc 1 848 0
 989 0034 094A     		ldr	r2, .L62+20
 990 0036 1268     		ldr	r2, [r2]
 991 0038 9619     		adds	r6, r2, r6
 992 003a 727A     		ldrb	r2, [r6, #9]
 993 003c 1343     		orrs	r3, r2
 994              	.LVL148:
 849:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 995              		.loc 1 849 0
 996 003e 2B43     		orrs	r3, r5
 997              	.LVL149:
 852:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             CyExitCriticalSection(interruptState);
 998              		.loc 1 852 0
 999 0040 0B60     		str	r3, [r1]
 853:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #endif /* (capsense_ENABLE == capsense_CSD_IDAC_COMP_EN) */
 1000              		.loc 1 853 0
 1001 0042 FFF7FEFF 		bl	CyExitCriticalSection
 1002              	.LVL150:
 897:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 1003              		.loc 1 897 0
 1004              		@ sp needed
 1005              	.LVL151:
 1006 0046 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1007              	.L63:
 1008              		.align	2
 1009              	.L62:
 1010 0048 00000000 		.word	capsense_idacGainTable
 1011 004c C0010B40 		.word	1074463168
 1012 0050 80FF3FFC 		.word	-62914688
 1013 0054 00000000 		.word	capsense_scanFreqIndex
 1014 0058 C4010B40 		.word	1074463172
 1015 005c 00000000 		.word	capsense_curRamSnsPtr
 1016              		.cfi_endproc
 1017              	.LFE6:
 1018              		.size	capsense_SsCSDSetUpIdacs, .-capsense_SsCSDSetUpIdacs
 1019              		.section	.text.capsense_SsCSDGetNumberOfConversions,"ax",%progbits
 1020              		.align	2
 1021              		.global	capsense_SsCSDGetNumberOfConversions
 1022              		.code	16
 1023              		.thumb_func
 1024              		.type	capsense_SsCSDGetNumberOfConversions, %function
 1025              	capsense_SsCSDGetNumberOfConversions:
 1026              	.LFB7:
 921:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         uint32 conversionsNum;
 1027              		.loc 1 921 0
 1028              		.cfi_startproc
 1029              		@ args = 0, pretend = 0, frame = 0
 1030              		@ frame_needed = 0, uses_anonymous_args = 0
 1031              	.LVL152:
 1032 0000 10B5     		push	{r4, lr}
 1033              		.cfi_def_cfa_offset 8
 1034              		.cfi_offset 4, -8
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 58


 1035              		.cfi_offset 14, -4
 1036 0002 0300     		movs	r3, r0
 1037 0004 1400     		movs	r4, r2
 928:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 1038              		.loc 1 928 0
 1039 0006 0120     		movs	r0, #1
 1040              	.LVL153:
 1041 0008 8840     		lsls	r0, r0, r1
 1042              	.LVL154:
 957:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             {
 1043              		.loc 1 957 0
 1044 000a 1029     		cmp	r1, #16
 1045 000c 00D1     		bne	.L65
 959:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             }
 1046              		.loc 1 959 0
 1047 000e 1D38     		subs	r0, r0, #29
 1048              	.LVL155:
 1049              	.L65:
 963:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         {
 1050              		.loc 1 963 0
 1051 0010 002B     		cmp	r3, #0
 1052 0012 02D0     		beq	.L66
 965:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         }
 1053              		.loc 1 965 0
 1054 0014 1900     		movs	r1, r3
 1055              	.LVL156:
 1056 0016 FFF7FEFF 		bl	__aeabi_uidiv
 1057              	.LVL157:
 1058              	.L66:
 971:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         {
 1059              		.loc 1 971 0
 1060 001a 053C     		subs	r4, r4, #5
 1061              	.LVL158:
 1062 001c 012C     		cmp	r4, #1
 1063 001e 00D8     		bhi	.L67
 976:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 break;
 1064              		.loc 1 976 0
 1065 0020 4008     		lsrs	r0, r0, #1
 1066              	.LVL159:
 1067              	.L67:
 986:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     }
 1068              		.loc 1 986 0
 1069 0022 0028     		cmp	r0, #0
 1070 0024 00D1     		bne	.L69
 1071 0026 0130     		adds	r0, r0, #1
 1072              	.LVL160:
 1073              	.L69:
 987:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** #endif /* (capsense_ENABLE == capsense_CSDV2) */
 1074              		.loc 1 987 0 discriminator 4
 1075              		@ sp needed
 1076              	.LVL161:
 1077 0028 10BD     		pop	{r4, pc}
 1078              		.cfi_endproc
 1079              	.LFE7:
 1080              		.size	capsense_SsCSDGetNumberOfConversions, .-capsense_SsCSDGetNumberOfConversions
 1081 002a C046     		.section	.text.capsense_SsCSDConfigClock,"ax",%progbits
 1082              		.align	2
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 59


 1083              		.global	capsense_SsCSDConfigClock
 1084              		.code	16
 1085              		.thumb_func
 1086              		.type	capsense_SsCSDConfigClock, %function
 1087              	capsense_SsCSDConfigClock:
 1088              	.LFB8:
1003:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     uint32 snsClkDivider;
 1089              		.loc 1 1003 0
 1090              		.cfi_startproc
 1091              		@ args = 0, pretend = 0, frame = 0
 1092              		@ frame_needed = 0, uses_anonymous_args = 0
 1093 0000 10B5     		push	{r4, lr}
 1094              		.cfi_def_cfa_offset 8
 1095              		.cfi_offset 4, -8
 1096              		.cfi_offset 14, -4
1009:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 1097              		.loc 1 1009 0
 1098 0002 0E4B     		ldr	r3, .L76
 1099 0004 1B78     		ldrb	r3, [r3]
 1100 0006 DBB2     		uxtb	r3, r3
1008:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****              capsense_dsFlash.wdgtArray[capsense_widgetIndex].ptr2WdgtRam;
 1101              		.loc 1 1008 0
 1102 0008 9A00     		lsls	r2, r3, #2
 1103 000a D318     		adds	r3, r2, r3
 1104 000c DA00     		lsls	r2, r3, #3
 1105 000e 0C4B     		ldr	r3, .L76+4
 1106 0010 9A18     		adds	r2, r3, r2
 1107 0012 5368     		ldr	r3, [r2, #4]
 1108              	.LVL162:
1026:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #endif /* (capsense_CSD_MATRIX_WIDGET_EN || capsense_CSD_TOUCHPAD_WIDGET_EN) */
 1109              		.loc 1 1026 0
 1110 0014 9989     		ldrh	r1, [r3, #12]
 1111              	.LVL163:
1042:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #endif /* (capsense_CSD_MATRIX_WIDGET_EN || capsense_CSD_TOUCHPAD_WIDGET_EN) */
 1112              		.loc 1 1042 0
 1113 0016 9B7B     		ldrb	r3, [r3, #14]
 1114              	.LVL164:
1046:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 1115              		.loc 1 1046 0
 1116 0018 1804     		lsls	r0, r3, #16
 1117              	.LVL165:
1049:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             (capsense_CLK_SOURCE_PRS12 == snsClkSrc))
 1118              		.loc 1 1049 0
 1119 001a 5A1F     		subs	r2, r3, #5
 1120              	.LVL166:
 1121 001c 012A     		cmp	r2, #1
 1122 001e 02D8     		bhi	.L72
1052:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         }
 1123              		.loc 1 1052 0
 1124 0020 8022     		movs	r2, #128
 1125 0022 9204     		lsls	r2, r2, #18
 1126 0024 1043     		orrs	r0, r2
 1127              	.LVL167:
 1128              	.L72:
1062:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             {
 1129              		.loc 1 1062 0
 1130 0026 053B     		subs	r3, r3, #5
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 60


 1131              	.LVL168:
 1132 0028 DBB2     		uxtb	r3, r3
 1133              	.LVL169:
 1134 002a 012B     		cmp	r3, #1
 1135 002c 02D8     		bhi	.L73
1067:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 if (snsClkDivider == 0u)
 1136              		.loc 1 1067 0
 1137 002e 4908     		lsrs	r1, r1, #1
 1138              	.LVL170:
1068:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 {
 1139              		.loc 1 1068 0
 1140 0030 00D1     		bne	.L73
1070:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 }
 1141              		.loc 1 1070 0
 1142 0032 0131     		adds	r1, r1, #1
 1143              	.LVL171:
 1144              	.L73:
1081:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** }
 1145              		.loc 1 1081 0
 1146 0034 FFF7FEFF 		bl	capsense_SsCSDSetModeSnsClockDivider
 1147              	.LVL172:
1082:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 1148              		.loc 1 1082 0
 1149              		@ sp needed
 1150 0038 10BD     		pop	{r4, pc}
 1151              	.L77:
 1152 003a C046     		.align	2
 1153              	.L76:
 1154 003c 00000000 		.word	capsense_widgetIndex
 1155 0040 00000000 		.word	capsense_dsFlash
 1156              		.cfi_endproc
 1157              	.LFE8:
 1158              		.size	capsense_SsCSDConfigClock, .-capsense_SsCSDConfigClock
 1159              		.section	.text.capsense_SsCSDCalculateScanDuration,"ax",%progbits
 1160              		.align	2
 1161              		.global	capsense_SsCSDCalculateScanDuration
 1162              		.code	16
 1163              		.thumb_func
 1164              		.type	capsense_SsCSDCalculateScanDuration, %function
 1165              	capsense_SsCSDCalculateScanDuration:
 1166              	.LFB9:
1106:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #if (capsense_ENABLE == capsense_CSDV2)
 1167              		.loc 1 1106 0
 1168              		.cfi_startproc
 1169              		@ args = 0, pretend = 0, frame = 0
 1170              		@ frame_needed = 0, uses_anonymous_args = 0
 1171              	.LVL173:
 1172 0000 10B5     		push	{r4, lr}
 1173              		.cfi_def_cfa_offset 8
 1174              		.cfi_offset 4, -8
 1175              		.cfi_offset 14, -4
 1176 0002 0300     		movs	r3, r0
1126:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             #endif /* (capsense_CSD_MATRIX_WIDGET_EN || capsense_CSD_TOUCHPAD_WIDGET_EN) */
 1177              		.loc 1 1126 0
 1178 0004 8089     		ldrh	r0, [r0, #12]
 1179              	.LVL174:
1130:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 61


 1180              		.loc 1 1130 0
 1181 0006 1988     		ldrh	r1, [r3]
 1182 0008 9A7B     		ldrb	r2, [r3, #14]
 1183 000a FFF7FEFF 		bl	capsense_SsCSDGetNumberOfConversions
 1184              	.LVL175:
1133:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #else
 1185              		.loc 1 1133 0
 1186 000e 0004     		lsls	r0, r0, #16
 1187              	.LVL176:
 1188 0010 000C     		lsrs	r0, r0, #16
 1189 0012 014B     		ldr	r3, .L79
 1190 0014 1860     		str	r0, [r3]
1138:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 1191              		.loc 1 1138 0
 1192              		@ sp needed
 1193 0016 10BD     		pop	{r4, pc}
 1194              	.L80:
 1195              		.align	2
 1196              	.L79:
 1197 0018 14030B40 		.word	1074463508
 1198              		.cfi_endproc
 1199              	.LFE9:
 1200              		.size	capsense_SsCSDCalculateScanDuration, .-capsense_SsCSDCalculateScanDuration
 1201              		.section	.text.capsense_SsCSDStartSample,"ax",%progbits
 1202              		.align	2
 1203              		.global	capsense_SsCSDStartSample
 1204              		.code	16
 1205              		.thumb_func
 1206              		.type	capsense_SsCSDStartSample, %function
 1207              	capsense_SsCSDStartSample:
 1208              	.LFB12:
1328:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #if (capsense_ENABLE != capsense_CSDV2)
 1209              		.loc 1 1328 0
 1210              		.cfi_startproc
 1211              		@ args = 0, pretend = 0, frame = 0
 1212              		@ frame_needed = 0, uses_anonymous_args = 0
 1213 0000 10B5     		push	{r4, lr}
 1214              		.cfi_def_cfa_offset 8
 1215              		.cfi_offset 4, -8
 1216              		.cfi_offset 14, -4
1341:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 1217              		.loc 1 1341 0
 1218 0002 0A20     		movs	r0, #10
 1219 0004 FFF7FEFF 		bl	CyIntDisable
 1220              	.LVL177:
1344:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 1221              		.loc 1 1344 0
 1222 0008 0122     		movs	r2, #1
 1223 000a 2C4B     		ldr	r3, .L89
 1224 000c 1A60     		str	r2, [r3]
 1225              	.LBB6:
 1226              	.LBB7:
2134:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #endif
2135:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2136:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2137:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     /*******************************************************************************
2138:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     * Function Name: capsense_SsCSDCalibrate
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 62


2139:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     ****************************************************************************//**
2140:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *
2141:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     * \brief
2142:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *  Implements IDAC calibration for a desired widget using successive
2143:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *  approximation algorithm.
2144:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *
2145:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     * \details
2146:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *  Implements IDAC calibration for a desired widget using successive
2147:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *  approximation algorithm. It supports any type of CSD widgets, and works
2148:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *  with multi-frequency scan and compensation IDAC features enabled.
2149:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *
2150:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *  As result of function operation, the modulator IDAC that corresponds to the
2151:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *  sensor with the highest capacitance (the biggest modulator IDAC) is stored
2152:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *  into widget data structure. If it is dual-axis widget type (touchpad or matrix
2153:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *  buttons) or if multi-frequency scan feature is enabled then the maximum
2154:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *  modulator IDAC found separately for each multi-frequency channel and for
2155:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *  rows/columns.
2156:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *
2157:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *  If compensation IDAC is enabled, then it preserves IDAC value of
2158:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *  single-sensor calibration. In dual IDAC mode each sensor was calibrated with
2159:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *  equal values of modulator and compensation IDAC.
2160:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *
2161:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *  After IDACs were found each sensor scanned again to get real raw count stored
2162:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *  in sensor structure.
2163:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *
2164:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     * \param widgetId
2165:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *  Specifies the ID number of the CSD widget to calibrate its raw count.
2166:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *  A macro for the widget ID can be found in the
2167:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *  capsense Configuration header file defined as
2168:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *  capsense_<WidgetName>_WDGT_ID.
2169:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *
2170:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     * \param target
2171:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *  Specifies the calibration target in percentages of the maximum raw count.
2172:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *
2173:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *******************************************************************************/
2174:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     static void capsense_SsCSDCalibrate(uint32 widgetId, uint32 target)
2175:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     {
2176:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         uint32 snsIndex;
2177:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         uint32 freqChannel;
2178:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         uint32 calMask;
2179:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         uint32 temp;
2180:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         uint32 watchdogCounter;
2181:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2182:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         uint8 *ptrIdacMod;
2183:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         uint8 *ptrMaxIdac;
2184:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2185:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         uint8 maxIdac[capsense_NUM_SCAN_FREQS];
2186:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2187:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #if (capsense_CSD_MATRIX_WIDGET_EN || capsense_CSD_TOUCHPAD_WIDGET_EN)
2188:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             uint8 maxRowIdac[capsense_NUM_SCAN_FREQS];
2189:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             uint32 dualWidgetType = 0u;
2190:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #endif
2191:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2192:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         capsense_RAM_SNS_STRUCT *ptrRamSensor;
2193:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         capsense_FLASH_WD_STRUCT const *ptrFlashWidget = &capsense_dsFlash.wdgtArray[widgetId];
2194:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         capsense_RAM_WD_BASE_STRUCT *ptrRamWidget = (capsense_RAM_WD_BASE_STRUCT *)ptrFlashWidget->
2195:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 63


2196:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         ptrIdacMod = &ptrRamWidget->idacMod[0u];
2197:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         ptrMaxIdac = &maxIdac[0u];
2198:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2199:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         for(freqChannel = capsense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
2200:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         {
2201:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             maxIdac[freqChannel] = 0u;
2202:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             #if (capsense_CSD_MATRIX_WIDGET_EN || capsense_CSD_TOUCHPAD_WIDGET_EN)
2203:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 maxRowIdac[freqChannel] = 0u;
2204:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             #endif
2205:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         }
2206:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2207:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Calculate raw count level based on resolution and target */
2208:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         temp = (((0x00000001Lu << ptrRamWidget->resolution) - 1u) * target) / capsense_PERCENTAGE_1
2209:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2210:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #if (capsense_CSD_MATRIX_WIDGET_EN || capsense_CSD_TOUCHPAD_WIDGET_EN)
2211:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             if ((capsense_WD_TOUCHPAD_E == capsense_GET_WIDGET_TYPE(ptrFlashWidget)) ||
2212:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 (capsense_WD_MATRIX_BUTTON_E == capsense_GET_WIDGET_TYPE(ptrFlashWidget)))
2213:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             {
2214:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 dualWidgetType = 1u;
2215:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             }
2216:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #endif
2217:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2218:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Loop through the widget sensors */
2219:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         for(snsIndex = 0u; snsIndex < ptrFlashWidget->totalNumSns; snsIndex++)
2220:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         {
2221:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             #if (capsense_CSD_MATRIX_WIDGET_EN || capsense_CSD_TOUCHPAD_WIDGET_EN)
2222:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 if (snsIndex == ptrFlashWidget->numCols)
2223:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 {
2224:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     if (0u != dualWidgetType)
2225:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     {
2226:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                         ptrIdacMod = &ptrRamWidget->rowIdacMod[0u];
2227:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                         ptrMaxIdac = &maxRowIdac[0u];
2228:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     }
2229:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 }
2230:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             #endif
2231:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2232:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             ptrRamSensor = &((ptrFlashWidget->ptr2SnsRam)[snsIndex]);
2233:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2234:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             /* Set default IDAC code */
2235:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             calMask = capsense_CSD_CAL_MIDDLE_VALUE;
2236:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             for(freqChannel = capsense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
2237:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             {
2238:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 ptrIdacMod[freqChannel] = capsense_CSD_CAL_MIDDLE_VALUE;
2239:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 #if (capsense_ENABLE == capsense_CSD_IDAC_COMP_EN)
2240:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     ptrRamSensor->idacComp[freqChannel] = ptrIdacMod[freqChannel];
2241:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 #endif
2242:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             }
2243:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2244:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             /* Loop through IDAC code */
2245:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             do
2246:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             {
2247:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 /* Need to configure HW block with each IDAC change */
2248:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 capsense_CSDSetupWidgetExt(widgetId, snsIndex);
2249:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2250:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 #if (capsense_ENABLE == capsense_CSDV2)
2251:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     capsense_DischargeExtCapacitors(capsense_EXT_CAP_DISCHARGE_TIME);
2252:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 #endif
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 64


2253:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2254:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 /* Scan sensor */
2255:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 capsense_CSDScanExt();
2256:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2257:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 watchdogCounter = capsense_CSD_CALIBR_WATCHDOG_CYCLES_NUM;
2258:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 while (((capsense_dsRam.status & capsense_SW_STS_BUSY) != 0u) && (0uL != watchdogCo
2259:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 {
2260:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     watchdogCounter--;
2261:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 }
2262:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2263:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 /* Update IDAC based on scan result */
2264:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 for(freqChannel = capsense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
2265:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 {
2266:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     if (ptrRamSensor->raw[freqChannel] < temp)
2267:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     {
2268:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                         ptrIdacMod[freqChannel] &= (uint8)(~calMask);
2269:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     }
2270:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 }
2271:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2272:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 /* Switch to the lower IDAC mask */
2273:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 calMask >>= 1u;
2274:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 for(freqChannel = capsense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
2275:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 {
2276:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     ptrIdacMod[freqChannel] |= (uint8)calMask;
2277:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     #if (capsense_ENABLE == capsense_CSD_IDAC_COMP_EN)
2278:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                         ptrRamSensor->idacComp[freqChannel] = ptrIdacMod[freqChannel];
2279:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     #endif
2280:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     if (0u == calMask)
2281:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     {
2282:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                         if (0u == ptrIdacMod[freqChannel])
2283:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                         {
2284:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                             ptrIdacMod[freqChannel] = 1u;
2285:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                             #if (capsense_ENABLE == capsense_CSD_IDAC_COMP_EN)
2286:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                 ptrRamSensor->idacComp[freqChannel] = ptrIdacMod[freqChannel];
2287:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                             #endif
2288:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                         }
2289:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     }
2290:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 }
2291:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             }
2292:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             while (calMask != 0u);
2293:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2294:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             for(freqChannel = capsense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
2295:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             {
2296:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 if (ptrMaxIdac[freqChannel] < ptrIdacMod[freqChannel])
2297:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 {
2298:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     ptrMaxIdac[freqChannel] = ptrIdacMod[freqChannel];
2299:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 }
2300:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             }
2301:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2302:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             /* Perform scan again to get real raw count if IDAC was changed at the last iteration *
2303:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             capsense_CSDSetupWidgetExt(widgetId, snsIndex);
2304:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             capsense_CSDScanExt();
2305:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2306:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             watchdogCounter = capsense_CSD_CALIBR_WATCHDOG_CYCLES_NUM;
2307:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             while (((capsense_dsRam.status & capsense_SW_STS_BUSY) != 0u) && (0uL != watchdogCounte
2308:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             {
2309:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 watchdogCounter--;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 65


2310:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             }
2311:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         }
2312:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2313:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         for(freqChannel = capsense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
2314:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         {
2315:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             ptrRamWidget->idacMod[freqChannel] = maxIdac[freqChannel];
2316:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             #if (capsense_CSD_MATRIX_WIDGET_EN || capsense_CSD_TOUCHPAD_WIDGET_EN)
2317:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 if (0u != dualWidgetType)
2318:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 {
2319:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     ptrRamWidget->rowIdacMod[freqChannel] = maxRowIdac[freqChannel];
2320:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2321:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     #if (capsense_ENABLE == capsense_CSD_COL_ROW_IDAC_ALIGNMENT_EN)
2322:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                         #if (capsense_ENABLE == capsense_CSD_COMMON_SNS_CLK_EN)
2323:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                             if (ptrRamWidget->idacMod[freqChannel] < ptrRamWidget->rowIdacMod[freqC
2324:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                             {
2325:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                 temp = ptrRamWidget->rowIdacMod[freqChannel];
2326:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                 if (temp > capsense_CSD_CAL_IDAC_MAX_VALUE)
2327:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                 {
2328:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                     temp = capsense_CSD_CAL_IDAC_MAX_VALUE;
2329:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                 }
2330:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                 ptrRamWidget->idacMod[freqChannel] = (uint8)temp;
2331:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                             }
2332:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                             else
2333:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                             {
2334:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                 temp = ptrRamWidget->idacMod[freqChannel];
2335:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                 if (temp > capsense_CSD_CAL_IDAC_MAX_VALUE)
2336:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                 {
2337:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                     temp = capsense_CSD_CAL_IDAC_MAX_VALUE;
2338:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                 }
2339:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                 ptrRamWidget->rowIdacMod[freqChannel] = (uint8)temp;
2340:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                             }
2341:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                         #else
2342:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                             if (((uint32)ptrRamWidget->idacMod[freqChannel] * ptrRamWidget->snsClk)
2343:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                 ((uint32)ptrRamWidget->rowIdacMod[freqChannel] * ptrRamWidget->rowS
2344:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                             {
2345:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                 temp = ((uint32)ptrRamWidget->rowIdacMod[freqChannel] *
2346:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                                 ptrRamWidget->rowSnsClk) / ptrRamWidget->snsClk;
2347:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                 if (temp > capsense_CSD_CAL_IDAC_MAX_VALUE)
2348:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                 {
2349:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                     temp = capsense_CSD_CAL_IDAC_MAX_VALUE;
2350:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                 }
2351:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                 ptrRamWidget->idacMod[freqChannel] = (uint8)temp;
2352:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                             }
2353:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                             else
2354:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                             {
2355:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                 temp = ((uint32)ptrRamWidget->idacMod[freqChannel] *
2356:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                                 ptrRamWidget->snsClk) / ptrRamWidget->rowSnsClk;
2357:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                 if (temp > capsense_CSD_CAL_IDAC_MAX_VALUE)
2358:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                 {
2359:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                     temp = capsense_CSD_CAL_IDAC_MAX_VALUE;
2360:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                 }
2361:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                 ptrRamWidget->rowIdacMod[freqChannel] = (uint8)temp;
2362:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                             }
2363:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                         #endif
2364:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     #endif
2365:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 }
2366:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             #endif
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 66


2367:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         }
2368:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     }
2369:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2370:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2371:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     /*******************************************************************************
2372:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     * Function Name: capsense_CSDCalibrateWidget
2373:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     ****************************************************************************//**
2374:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *
2375:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     * \brief
2376:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *  Executes the IDAC calibration for all the sensors in the widget specified in
2377:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *  the input.
2378:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *
2379:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     * \details
2380:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *  Executes the IDAC calibration for all the sensors in the widget specified in
2381:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *  the input.
2382:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *
2383:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *  \note This function is obsolete and kept for backward compatibility only.
2384:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *  The capsense_CalibrateWidget() function should be used instead.
2385:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *
2386:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *  Performs a successive approximation search algorithm to find appropriate
2387:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *  IDAC values for sensors in the specified widget that provides the raw
2388:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *  count to the level specified by the target parameter.
2389:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *
2390:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *  Calibration fails if the achieved raw count is outside of the range specified
2391:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *  by the target and acceptable calibration deviation.
2392:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *
2393:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *  This function is available when the CSD Enable IDAC auto-calibration
2394:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *  parameter is enabled or the  SmartSense auto-tuning mode is configured.
2395:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *
2396:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     * \param widgetId
2397:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *  Specifies the ID number of the CSD widget to calibrate its raw count.
2398:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *  A macro for the widget ID can be found in the
2399:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *  capsense Configuration header file defined as
2400:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *  capsense_<WidgetName>_WDGT_ID.
2401:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *
2402:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     * \param target
2403:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *  Specifies the calibration target in percentages of the maximum raw count.
2404:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *
2405:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     * \return
2406:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *  Returns the status of the specified widget calibration:
2407:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *    - CYRET_SUCCESS - The operation is successfully completed.
2408:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *    - CYRET_BAD_PARAM - The input parameter is invalid.
2409:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *    - CYRET_BAD_DATA - The calibration failed and the Component may not operate
2410:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *      as expected.
2411:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *    - CYRET_TIMEOUT - The calibration failed due to timeout.
2412:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *    - CYRET_INVALID_STATE - The previous scanning is not completed and the
2413:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *      hardware block is busy.
2414:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *
2415:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *******************************************************************************/
2416:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     cystatus capsense_CSDCalibrateWidget(uint32 widgetId, uint32 target)
2417:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     {
2418:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
2419:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         uint32 watchdogCounter;
2420:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2421:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #if (capsense_ENABLE == capsense_CSD_IDAC_AUTO_GAIN_EN)
2422:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             uint32 gainSwitch;
2423:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #endif
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 67


2424:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2425:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         capsense_FLASH_WD_STRUCT const *ptrFlashWidget = &capsense_dsFlash.wdgtArray[widgetId];
2426:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2427:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         if (capsense_WDGT_SW_STS_BUSY == (capsense_dsRam.status & capsense_WDGT_SW_STS_BUSY))
2428:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         {
2429:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             /* Previous widget is being scanned, return error */
2430:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             calibrateStatus = CYRET_INVALID_STATE;
2431:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         }
2432:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         else
2433:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         {
2434:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             /* Set default IDAC gain */
2435:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             ((capsense_RAM_WD_BASE_STRUCT *)ptrFlashWidget->ptr2WdgtRam)->idacGainIndex =
2436:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 capsense_CSD_IDAC_GAIN_INDEX_DEFAULT;
2437:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2438:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             /* Perform calibration */
2439:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             #if (capsense_ENABLE != capsense_CSD_IDAC_AUTO_GAIN_EN)
2440:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 capsense_SsCSDCalibrate(widgetId, target);
2441:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             #else
2442:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 do
2443:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 {
2444:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     capsense_SsCSDCalibrate(widgetId, target);
2445:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     gainSwitch = capsense_SsCSDSwitchIdacGain(ptrFlashWidget);
2446:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 } while(0u != gainSwitch);
2447:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             #endif
2448:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2449:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             #if (capsense_ENABLE == capsense_CSD_IDAC_COMP_EN)
2450:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 /* IDAC Normalization in Dual IDAC mode */
2451:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 capsense_SsCSDNormalizeIdac(ptrFlashWidget, target);
2452:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             #endif
2453:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2454:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             /* Perform specified widget scan to check calibration result */
2455:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             capsense_CSDSetupWidget(widgetId);
2456:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             capsense_CSDScan();
2457:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2458:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             watchdogCounter = capsense_WIDGET_MAX_SCAN_TIME;
2459:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             while (((capsense_dsRam.status & capsense_SW_STS_BUSY) != 0u) && (0uL != watchdogCounte
2460:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             {
2461:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 watchdogCounter--;
2462:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             }
2463:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2464:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             /* Verification of calibration result */
2465:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             if (0u == watchdogCounter)
2466:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             {
2467:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 calibrateStatus = CYRET_TIMEOUT;
2468:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             }
2469:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             else
2470:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             {
2471:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 calibrateStatus = capsense_SsCSDCalibrateCheck(widgetId, target);
2472:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             }
2473:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2474:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****              /* Update CRC */
2475:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             #if (capsense_ENABLE ==capsense_TST_WDGT_CRC_EN)
2476:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 capsense_DsUpdateWidgetCrc(widgetId);
2477:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             #endif
2478:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         }
2479:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2480:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         return calibrateStatus;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 68


2481:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     }
2482:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** #endif /* ((capsense_CSD_SS_DIS != capsense_CSD_AUTOTUNE)) || \
2483:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             (capsense_ENABLE == capsense_CSD_IDAC_AUTOCAL_EN)) */
2484:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2485:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2486:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** #if (capsense_DISABLE == capsense_CSDV2)
2487:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     /*******************************************************************************
2488:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     * Function Name: capsense_SsCSDClockRestart
2489:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     ****************************************************************************//**
2490:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *
2491:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     * \brief
2492:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *  This function restarts the clocks.
2493:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *
2494:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     * \details
2495:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *  The function performs following:
2496:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *  1) Stops, sets dividers and starts ModClk clock;
2497:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *  2) Stops and starts SnsClk clock;
2498:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *  3) Scan one cycle to reset the flip-flop for Direct clock mode.
2499:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *
2500:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     *******************************************************************************/
2501:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     CY_INLINE static void capsense_SsCSDClockRestart(void)
2502:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     {
2503:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #if (capsense_CLK_SOURCE_DIRECT == capsense_CSD_SNS_CLK_SOURCE)
2504:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             uint32 watchdogCounter;
2505:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #endif /* (capsense_CLK_SOURCE_DIRECT == capsense_CSD_SNS_CLK_SOURCE) */
2506:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2507:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Stop clocks, set dividers, and start clock to align clock phase */
2508:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         capsense_SsSetModClkClockDivider((uint32)capsense_dsRam.modCsdClk);
2509:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2510:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #if (capsense_ENABLE == capsense_IS_M0S8PERI_BLOCK)
2511:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             /* Stop sense clock clock   */
2512:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             CY_SET_REG32(capsense_SNSCLK_CMD_PTR,
2513:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                          ((uint32)capsense_SnsClk__DIV_ID <<
2514:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                          capsense_SNSCLK_CMD_DIV_SHIFT)|
2515:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                          ((uint32)capsense_SNSCLK_CMD_DISABLE_MASK));
2516:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2517:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             /* Check whether previous sense clock start command has finished. */
2518:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             while(0u != (CY_GET_REG32(capsense_SNSCLK_CMD_PTR) & capsense_SNSCLK_CMD_ENABLE_MASK))
2519:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             {
2520:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 /* Wait until previous sense clock start command has finished. */
2521:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             }
2522:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2523:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             /* Start sense clock aligned to previously started modulator clock. */
2524:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             CY_SET_REG32(capsense_SNSCLK_CMD_PTR,
2525:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                          (uint32)(((uint32)capsense_SnsClk__DIV_ID << capsense_SNSCLK_CMD_DIV_SHIFT
2526:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                           ((uint32)capsense_ModClk__PA_DIV_ID << capsense_SNSCLK_CMD_PA_DIV_SHIFT) 
2527:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                           capsense_SNSCLK_CMD_ENABLE_MASK));
2528:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #else
2529:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             /* Clear bit to disable SnsClk clock. */
2530:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             CY_SET_REG32(capsense_SNSCLK_CMD_PTR,
2531:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                          CY_GET_REG32(capsense_SNSCLK_CMD_PTR) &
2532:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                          (uint32)(~(uint32)capsense_SnsClk__ENABLE_MASK));
2533:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2534:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             /* Set bit to enable SnsClk clock. */
2535:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             CY_SET_REG32(capsense_SNSCLK_CMD_PTR,
2536:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                          CY_GET_REG32(capsense_SNSCLK_CMD_PTR) |
2537:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                         capsense_SnsClk__ENABLE_MASK);
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 69


2538:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #endif /* (capsense_ENABLE == capsense_IS_M0S8PERI_BLOCK) */
2539:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2540:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #if (capsense_CLK_SOURCE_DIRECT == capsense_CSD_SNS_CLK_SOURCE)
2541:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             /* Scan one cycle to reset the flip-flop for Direct clock mode */
2542:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             CyIntDisable(capsense_ISR_NUMBER);
2543:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             CY_SET_REG32(capsense_COUNTER_PTR, capsense_ONE_CYCLE);
2544:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2545:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             watchdogCounter = capsense_ONE_CLOCK_WATCHDOG_CYCLES_NUM;
2546:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             while((0u != (CY_GET_REG32(capsense_COUNTER_PTR) & capsense_RESOLUTION_16_BITS)) && (0u
2547:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             {
2548:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 watchdogCounter--;
2549:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             }
2550:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             CY_SET_REG32(capsense_INTR_PTR, capsense_INTR_SET_MASK);
2551:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             CyIntClearPending(capsense_ISR_NUMBER);
2552:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #endif /* (capsense_CLK_SOURCE_DIRECT == capsense_CSD_SNS_CLK_SOURCE) */
2553:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     }
2554:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** #endif /* (capsense_DISABLE == capsense_CSDV2) */
2555:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2556:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2557:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** /*******************************************************************************
2558:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * Function Name: capsense_SsCSDCmodPrecharge
2559:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** ****************************************************************************//**
2560:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
2561:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * \brief
2562:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  This function initializes the Cmod charging to Vref.
2563:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
2564:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * \details
2565:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  For Third-generation HW block:
2566:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  The function initializes the Cmod charging to Vref.
2567:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  Then it waits the even when Cmod is completely charged
2568:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  to Vref to have stable raw counts. Software Watchdog Counter is implemented to
2569:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  prevent the project hanging.
2570:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
2571:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  For Fourth-generation HW block:
2572:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  Coarse initialization for CMOD and Cch.
2573:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  The coarse initialization is performed by HSCOMP.
2574:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  The HSCOMP monitors the Cmod voltage via Cmod sense path
2575:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  and charges the Cmod using HCAV switch via CSDBUS-A, AMUXBUS-A
2576:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  and static connection of Cmod to AMUXBUS-A.
2577:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
2578:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *******************************************************************************/
2579:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** CY_INLINE static void capsense_SsCSDCmodPrecharge(void)
2580:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** {
2581:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #if (capsense_ENABLE == capsense_CSDV2)
2582:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         uint32 watchdogCounter;
2583:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Fourth-generation HW block section */
2584:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2585:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CY_SET_REG32(capsense_CSDCMP_PTR, capsense_CSD_CSDCMP_INIT);
 1227              		.loc 1 2585 0
 1228 000e 0023     		movs	r3, #0
 1229 0010 2B49     		ldr	r1, .L89+4
 1230 0012 0B60     		str	r3, [r1]
2586:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CY_SET_REG32(capsense_SW_FW_MOD_SEL_PTR,  capsense_CSD_SW_FW_MOD_SEL_INIT);
 1231              		.loc 1 2586 0
 1232 0014 2B49     		ldr	r1, .L89+8
 1233 0016 0B60     		str	r3, [r1]
2587:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CY_SET_REG32(capsense_SW_FW_TANK_SEL_PTR, capsense_CSD_SW_FW_TANK_SEL_INIT);
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 70


 1234              		.loc 1 2587 0
 1235 0018 2B49     		ldr	r1, .L89+12
 1236 001a 0B60     		str	r3, [r1]
2588:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CY_SET_REG32(capsense_SW_SHIELD_SEL_PTR,  capsense_CSD_SW_SHIELD_SEL_INIT);
 1237              		.loc 1 2588 0
 1238 001c 0620     		movs	r0, #6
 1239 001e 2B49     		ldr	r1, .L89+16
 1240 0020 0860     		str	r0, [r1]
2589:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #if (capsense_ENABLE == capsense_CSD_SHIELD_EN)
2590:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             /*
2591:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****              * Connect CMOD to (sense path) to HSCOMP: HMPM or HMPS or HMPT switches depend on Cmod
2592:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****              * Connect AMUXBUS-B to HSCMP positive input
2593:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****              */
2594:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             CY_SET_REG32(capsense_SW_HS_P_SEL_PTR, capsense_SW_HS_P_SEL_COARSE);
2595:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2596:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             #if(0u != capsense_CSD_SHIELD_TANK_EN)
2597:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 /* Connect CTANK to AMUXBUS-A */
2598:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 capsense_WriteBitsSafe(capsense_CSH_HSIOM_PTR, capsense_CSH_HSIOM_MASK,
2599:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     (uint32)(capsense_HSIOM_SEL_AMUXA << capsense_CSH_HSIOM_SHIFT));
2600:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             #endif /* (0u != capsense_CSD_SHIELD_TANK_EN) */
2601:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #else
2602:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             /* Connect CMOD to (sense path) to HSCOMP: HMPM or HMPS or HMPT switches depend on Cmod
2603:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             CY_SET_REG32(capsense_SW_HS_P_SEL_PTR, capsense_SW_HS_P_SEL_COARSE);
 1241              		.loc 1 2603 0
 1242 0022 FA30     		adds	r0, r0, #250
 1243 0024 2A49     		ldr	r1, .L89+20
 1244 0026 0860     		str	r0, [r1]
2604:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #endif /* (capsense_ENABLE == capsense_CSD_SHIELD_EN) */
2605:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2606:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CY_SET_REG32(capsense_SW_RES_PTR, capsense_CSD_SW_RES_INIT);
 1245              		.loc 1 2606 0
 1246 0028 2A49     		ldr	r1, .L89+24
 1247 002a 0A60     		str	r2, [r1]
2607:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2608:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Clear all interrupt pending requests */
2609:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CY_SET_REG32(capsense_INTR_PTR, capsense_INTR_ALL_MASK);
 1248              		.loc 1 2609 0
 1249 002c 8321     		movs	r1, #131
 1250 002e 4900     		lsls	r1, r1, #1
 1251 0030 294A     		ldr	r2, .L89+28
 1252 0032 1160     		str	r1, [r2]
2610:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2611:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CY_SET_REG32(capsense_INTR_MASK_PTR, capsense_CLEAR_MASK);
 1253              		.loc 1 2611 0
 1254 0034 294A     		ldr	r2, .L89+32
 1255 0036 1360     		str	r3, [r2]
2612:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2613:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Start SEQUENCER for coarse initialization for Cmod */
2614:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CY_SET_REG32(capsense_SEQ_START_PTR, capsense_SEQ_START_SEQ_MODE_MASK |
 1256              		.loc 1 2614 0
 1257 0038 0322     		movs	r2, #3
 1258 003a 294B     		ldr	r3, .L89+36
 1259 003c 1A60     		str	r2, [r3]
 1260              	.LVL178:
2615:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                                          capsense_SEQ_START_START_MASK);
2616:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2617:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Init Watchdog Counter to prevent a hang */
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 71


2618:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         watchdogCounter = capsense_CSD_PRECHARGE_WATCHDOG_CYCLES_NUM;
 1261              		.loc 1 2618 0
 1262 003e F023     		movs	r3, #240
 1263 0040 00E0     		b	.L82
 1264              	.LVL179:
 1265              	.L84:
2619:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2620:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Wait for INTR.INIT goes high */
2621:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         while((0u == (CY_GET_REG32(capsense_INTR_PTR) & capsense_INTR_INIT_MASK)) && (0u != watchdo
2622:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         {
2623:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             watchdogCounter--;
 1266              		.loc 1 2623 0
 1267 0042 013B     		subs	r3, r3, #1
 1268              	.LVL180:
 1269              	.L82:
2621:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         {
 1270              		.loc 1 2621 0
 1271 0044 244A     		ldr	r2, .L89+28
 1272 0046 1268     		ldr	r2, [r2]
 1273 0048 5207     		lsls	r2, r2, #29
 1274 004a 01D4     		bmi	.L83
 1275 004c 002B     		cmp	r3, #0
 1276 004e F8D1     		bne	.L84
 1277              	.L83:
2624:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         }
2625:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2626:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         if (0u == watchdogCounter)
 1278              		.loc 1 2626 0
 1279 0050 002B     		cmp	r3, #0
 1280 0052 02D1     		bne	.L85
2627:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         {
2628:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             /* Set sequencer to idle state if coarse initialization fails */
2629:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             CY_SET_REG32(capsense_SEQ_START_PTR, capsense_SEQ_START_ABORT_MASK);
 1281              		.loc 1 2629 0
 1282 0054 0822     		movs	r2, #8
 1283 0056 224B     		ldr	r3, .L89+36
 1284              	.LVL181:
 1285 0058 1A60     		str	r2, [r3]
 1286              	.L85:
 1287              	.LBE7:
 1288              	.LBE6:
 1289              	.LBB8:
 1290              	.LBB9:
2630:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         }
2631:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2632:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #else
2633:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2634:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         uint32 tmpRegValue;
2635:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         uint32 newRegValue;
2636:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         uint32 watchdogCounter;
2637:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2638:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Save the current IDAC configuration */
2639:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         tmpRegValue = CY_GET_REG32(capsense_IDAC_PTR);
2640:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2641:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Wait until Cmod discharges below Vref */
2642:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CyDelayCycles(capsense_CMOD_DISCHARGE_CYCLES);
2643:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 72


2644:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         newRegValue = capsense_CSD_IDAC_PRECHARGE_CONFIG | (tmpRegValue & ~capsense_IDAC_MOD_CFG_MA
2645:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2646:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Set the IDAC configuration for fast Cmod precharge to Vref */
2647:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CY_SET_REG32(capsense_IDAC_PTR, newRegValue);
2648:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2649:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #if (capsense_IDAC_SINKING == capsense_CSD_IDAC_CONFIG)
2650:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             CY_SET_REG32(capsense_CONFIG_PTR, CY_GET_REG32(capsense_CONFIG_PTR) & ~capsense_CONFIG_
2651:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #endif /* (capsense_IDAC_SINKING == capsense_CSD_IDAC_CONFIG) */
2652:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2653:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Init Watchdog Counter to prevent a hang */
2654:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         watchdogCounter = capsense_CSD_PRECHARGE_WATCHDOG_CYCLES_NUM;
2655:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2656:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Wait until Cmod reaches to Vref */
2657:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         while((0u == (CY_GET_REG32(capsense_STATUS_PTR) & capsense_STATUS_SAMPLE)) && (0u != watchd
2658:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         {
2659:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             watchdogCounter--;
2660:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         }
2661:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2662:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #if (capsense_IDAC_SINKING == capsense_CSD_IDAC_CONFIG)
2663:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             CY_SET_REG32(capsense_CONFIG_PTR, CY_GET_REG32(capsense_CONFIG_PTR) | capsense_CONFIG_P
2664:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #endif /* (capsense_IDAC_SINKING == capsense_CSD_IDAC_CONFIG) */
2665:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2666:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Restore the current IDAC configuration */
2667:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CY_SET_REG32(capsense_IDAC_PTR, tmpRegValue);
2668:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2669:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Enable the sense modulator output */
2670:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CY_SET_REG32(capsense_CONFIG_PTR, capsense_configCsd | capsense_CTANK_PRECHARGE_CONFIG_CSD_
2671:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2672:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CyIntEnable(capsense_ISR_NUMBER);
2673:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2674:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #endif /* (capsense_ENABLE == capsense_CSDV2) */
2675:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** }
2676:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2677:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2678:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** /*******************************************************************************
2679:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * Function Name: capsense_SsCSDTriggerScan
2680:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** ****************************************************************************//**
2681:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
2682:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * \brief
2683:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  This function triggers the scanning.
2684:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
2685:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** * \details
2686:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  For Third-generation HW block:
2687:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  Writes resolution to start the scanning.
2688:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
2689:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  For Fourth-generation HW block:
2690:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  Trigger the fine initialization (scan some dummy cycles) and start sampling.
2691:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  Fine initialization for CMOD and Start scan.
2692:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  For the fine initialization and sampling, Cmod is static connected to AMUXBUS-A
2693:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  and in every conversion (one cycle of SnsClk), the sensor capacitance is charged
2694:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  from Cmod and discharged to ground using the switches in GPIO cell.
2695:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  The CSDCOMP monitors voltage on Cmod using the sense path and charges Cmod back
2696:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *  to Vref using IDACs by connecting IDAC to CSDBUS-A and then the AMUXBUS-A.
2697:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *
2698:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** *******************************************************************************/
2699:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** CY_INLINE static void capsense_SsCSDTriggerScan(void)
2700:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** {
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 73


2701:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #if (capsense_ENABLE == capsense_CSDV2)
2702:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2703:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Fourth-generation HW block section */
2704:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2705:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         uint32 watchdogCounter;
2706:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2707:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Clear previous interrupts */
2708:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CY_SET_REG32(capsense_INTR_PTR, capsense_INTR_ALL_MASK);
 1291              		.loc 1 2708 0
 1292 005a 8322     		movs	r2, #131
 1293 005c 5200     		lsls	r2, r2, #1
 1294 005e 1E4B     		ldr	r3, .L89+28
 1295 0060 1A60     		str	r2, [r3]
2709:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2710:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Clear pending interrupts  */
2711:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CyIntClearPending(capsense_ISR_NUMBER);
 1296              		.loc 1 2711 0
 1297 0062 0A20     		movs	r0, #10
 1298 0064 FFF7FEFF 		bl	CyIntClearPending
 1299              	.LVL182:
2712:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2713:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Enable CSD interrupt */
2714:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CyIntEnable(capsense_ISR_NUMBER);
 1300              		.loc 1 2714 0
 1301 0068 0A20     		movs	r0, #10
 1302 006a FFF7FEFF 		bl	CyIntEnable
 1303              	.LVL183:
2715:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2716:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2717:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CY_SET_REG32(capsense_SW_HS_P_SEL_PTR, capsense_CSD_SW_HS_P_SEL_SCAN);
 1304              		.loc 1 2717 0
 1305 006e 0023     		movs	r3, #0
 1306 0070 174A     		ldr	r2, .L89+20
 1307 0072 1360     		str	r3, [r2]
2718:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2719:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Set scanning configuration for switches */
2720:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CY_SET_REG32(capsense_SW_FW_MOD_SEL_PTR, capsense_CSD_SW_FW_MOD_SEL_SCAN);
 1308              		.loc 1 2720 0
 1309 0074 134A     		ldr	r2, .L89+8
 1310 0076 1360     		str	r3, [r2]
2721:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CY_SET_REG32(capsense_SW_FW_TANK_SEL_PTR,capsense_CSD_SW_FW_TANK_SEL_SCAN);
 1311              		.loc 1 2721 0
 1312 0078 134A     		ldr	r2, .L89+12
 1313 007a 1360     		str	r3, [r2]
2722:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2723:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CY_SET_REG32(capsense_SW_SHIELD_SEL_PTR,  capsense_CSD_SW_SHIELD_SEL_SCAN);
 1314              		.loc 1 2723 0
 1315 007c 134A     		ldr	r2, .L89+16
 1316 007e 1360     		str	r3, [r2]
2724:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2725:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #if((capsense_ENABLE == capsense_CSD_SHIELD_EN) && (capsense_ENABLE == capsense_CSD_SHIELD_
2726:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             /* Connect CTANK to AMUXBUS-B */
2727:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             capsense_SsCSDEnableShieldTank();
2728:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #endif /* ((capsense_ENABLE == capsense_CSD_SHIELD_EN) && (capsense_ENABLE == capsense_CSD_
2729:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2730:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CY_SET_REG32(capsense_SW_RES_PTR, capsense_CSD_SW_RES_SCAN);
 1317              		.loc 1 2730 0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 74


 1318 0080 5021     		movs	r1, #80
 1319 0082 144A     		ldr	r2, .L89+24
 1320 0084 1160     		str	r1, [r2]
2731:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CY_SET_REG32(capsense_CSDCMP_PTR, capsense_CSD_CSDCMP_SCAN);
 1321              		.loc 1 2731 0
 1322 0086 4F39     		subs	r1, r1, #79
 1323 0088 0D4A     		ldr	r2, .L89+4
 1324 008a 1160     		str	r1, [r2]
2732:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2733:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #if (capsense_DISABLE == capsense_CSD_SHIELD_EN)
2734:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             /* Disable HSCOMP during the sampling phase when shield is disabled */
2735:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             CY_SET_REG32(capsense_HSCMP_PTR, 0u);
 1325              		.loc 1 2735 0
 1326 008c 0B4A     		ldr	r2, .L89
 1327 008e 1360     		str	r3, [r2]
2736:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #else
2737:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             CY_SET_REG32(capsense_HSCMP_PTR, capsense_HSCMP_SCAN_MASK);
2738:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #endif /* (capsense_DISABLE == capsense_CSD_SHIELD_EN) */
2739:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2740:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #if (capsense_CLK_SOURCE_DIRECT != capsense_CSD_SNS_CLK_SOURCE)
2741:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             /* Force the LFSR to it's initial state (all ones) */
2742:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             CY_SET_REG32(capsense_SENSE_PERIOD_PTR, CY_GET_REG32(capsense_SENSE_PERIOD_PTR) |
 1328              		.loc 1 2742 0
 1329 0090 144A     		ldr	r2, .L89+40
 1330 0092 1368     		ldr	r3, [r2]
 1331 0094 8021     		movs	r1, #128
 1332 0096 4904     		lsls	r1, r1, #17
 1333 0098 0B43     		orrs	r3, r1
 1334 009a 1360     		str	r3, [r2]
2743:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                                            capsense_SENSE_PERIOD_LFSR_CLEAR_MASK);
2744:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #endif /* (capsense_CLK_SOURCE_DIRECT != capsense_CSD_SNS_CLK_SOURCE) */
2745:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2746:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Enable SAMPLE interrupt */
2747:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CY_SET_REG32(capsense_INTR_MASK_PTR, capsense_INTR_MASK_SAMPLE_MASK);
 1335              		.loc 1 2747 0
 1336 009c 0222     		movs	r2, #2
 1337 009e 0F4B     		ldr	r3, .L89+32
 1338 00a0 1A60     		str	r2, [r3]
 1339              	.LVL184:
2748:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2749:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Init Watchdog Counter to prevent a hang */
2750:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         watchdogCounter = capsense_CSD_PRECHARGE_WATCHDOG_CYCLES_NUM;
 1340              		.loc 1 2750 0
 1341 00a2 F023     		movs	r3, #240
 1342 00a4 00E0     		b	.L86
 1343              	.LVL185:
 1344              	.L88:
2751:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2752:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Wait for IDLE state of the HW sequencer */
2753:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         while((0u != (capsense_STAT_SEQ_REG & capsense_STAT_SEQ_SEQ_STATE_MASK)) && (0u != watchdog
2754:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         {
2755:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             watchdogCounter--;
 1345              		.loc 1 2755 0
 1346 00a6 013B     		subs	r3, r3, #1
 1347              	.LVL186:
 1348              	.L86:
2753:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         {
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 75


 1349              		.loc 1 2753 0
 1350 00a8 0F4A     		ldr	r2, .L89+44
 1351 00aa 1268     		ldr	r2, [r2]
 1352 00ac 5207     		lsls	r2, r2, #29
 1353 00ae 01D0     		beq	.L87
 1354 00b0 002B     		cmp	r3, #0
 1355 00b2 F8D1     		bne	.L88
 1356              	.L87:
2756:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         }
2757:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
2758:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         /* Start SEQUENCER for fine initialization scan for Cmod and then for normal scan */
2759:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CY_SET_REG32(capsense_SEQ_START_PTR, capsense_SEQ_START_AZ0_SKIP_MASK |
 1357              		.loc 1 2759 0
 1358 00b4 0D4A     		ldr	r2, .L89+48
 1359 00b6 0A4B     		ldr	r3, .L89+36
 1360              	.LVL187:
 1361 00b8 1A60     		str	r2, [r3]
 1362              	.LBE9:
 1363              	.LBE8:
1389:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 1364              		.loc 1 1389 0
 1365              		@ sp needed
 1366 00ba 10BD     		pop	{r4, pc}
 1367              	.L90:
 1368              		.align	2
 1369              	.L89:
 1370 00bc 80010B40 		.word	1074463104
 1371 00c0 8C010B40 		.word	1074463116
 1372 00c4 B0020B40 		.word	1074463408
 1373 00c8 B4020B40 		.word	1074463412
 1374 00cc 88020B40 		.word	1074463368
 1375 00d0 80020B40 		.word	1074463360
 1376 00d4 F0010B40 		.word	1074463216
 1377 00d8 F0000B40 		.word	1074462960
 1378 00dc F8000B40 		.word	1074462968
 1379 00e0 40030B40 		.word	1074463552
 1380 00e4 00020B40 		.word	1074463232
 1381 00e8 00000B40 		.word	1074462720
 1382 00ec 01030000 		.word	769
 1383              		.cfi_endproc
 1384              	.LFE12:
 1385              		.size	capsense_SsCSDStartSample, .-capsense_SsCSDStartSample
 1386              		.section	.text.capsense_CSDScanExt,"ax",%progbits
 1387              		.align	2
 1388              		.global	capsense_CSDScanExt
 1389              		.code	16
 1390              		.thumb_func
 1391              		.type	capsense_CSDScanExt, %function
 1392              	capsense_CSDScanExt:
 1393              	.LFB13:
1441:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #if ((capsense_DISABLE == capsense_CSD_COMMON_SNS_CLK_EN) && \
 1394              		.loc 1 1441 0
 1395              		.cfi_startproc
 1396              		@ args = 0, pretend = 0, frame = 0
 1397              		@ frame_needed = 0, uses_anonymous_args = 0
 1398 0000 10B5     		push	{r4, lr}
 1399              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 76


 1400              		.cfi_offset 4, -8
 1401              		.cfi_offset 14, -4
1452:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 1402              		.loc 1 1452 0
 1403 0002 054A     		ldr	r2, .L92
 1404 0004 D368     		ldr	r3, [r2, #12]
 1405 0006 0549     		ldr	r1, .L92+4
 1406 0008 0B43     		orrs	r3, r1
 1407 000a D360     		str	r3, [r2, #12]
1462:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #endif /* (capsense_CSD_ANALOG_STARTUP_DELAY_US > 0uL) */
 1408              		.loc 1 1462 0
 1409 000c 0A20     		movs	r0, #10
 1410 000e FFF7FEFF 		bl	CyDelayUs
 1411              	.LVL188:
1467:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** }
 1412              		.loc 1 1467 0
 1413 0012 FFF7FEFF 		bl	capsense_SsCSDStartSample
 1414              	.LVL189:
1468:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 1415              		.loc 1 1468 0
 1416              		@ sp needed
 1417 0016 10BD     		pop	{r4, pc}
 1418              	.L93:
 1419              		.align	2
 1420              	.L92:
 1421 0018 00000000 		.word	capsense_dsRam
 1422 001c 80000100 		.word	65664
 1423              		.cfi_endproc
 1424              	.LFE13:
 1425              		.size	capsense_CSDScanExt, .-capsense_CSDScanExt
 1426              		.section	.text.capsense_CSDConnectSns,"ax",%progbits
 1427              		.align	2
 1428              		.global	capsense_CSDConnectSns
 1429              		.code	16
 1430              		.thumb_func
 1431              		.type	capsense_CSDConnectSns, %function
 1432              	capsense_CSDConnectSns:
 1433              	.LFB17:
1734:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     uint32 newRegisterValue;
 1434              		.loc 1 1734 0
 1435              		.cfi_startproc
 1436              		@ args = 0, pretend = 0, frame = 0
 1437              		@ frame_needed = 0, uses_anonymous_args = 0
 1438              	.LVL190:
 1439 0000 70B5     		push	{r4, r5, r6, lr}
 1440              		.cfi_def_cfa_offset 16
 1441              		.cfi_offset 4, -16
 1442              		.cfi_offset 5, -12
 1443              		.cfi_offset 6, -8
 1444              		.cfi_offset 14, -4
 1445 0002 0400     		movs	r4, r0
1741:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     pinHSIOMShift = (uint32)snsAddrPtr->hsiomShift;
 1446              		.loc 1 1741 0
 1447 0004 857E     		ldrb	r5, [r0, #26]
 1448              	.LVL191:
1742:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 1449              		.loc 1 1742 0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 77


 1450 0006 067E     		ldrb	r6, [r0, #24]
 1451              	.LVL192:
1744:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 1452              		.loc 1 1744 0
 1453 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1454              	.LVL193:
1747:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     newRegisterValue &= ~(capsense_HSIOM_SEL_MASK << pinHSIOMShift);
 1455              		.loc 1 1747 0
 1456 000c 2368     		ldr	r3, [r4]
 1457 000e 1B68     		ldr	r3, [r3]
 1458              	.LVL194:
1748:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     newRegisterValue |= (uint32)((uint32)capsense_HSIOM_SEL_CSD_SENSE << pinHSIOMShift);
 1459              		.loc 1 1748 0
 1460 0010 0F22     		movs	r2, #15
 1461 0012 B240     		lsls	r2, r2, r6
 1462 0014 9343     		bics	r3, r2
 1463              	.LVL195:
 1464 0016 1A00     		movs	r2, r3
 1465              	.LVL196:
1749:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 1466              		.loc 1 1749 0
 1467 0018 0423     		movs	r3, #4
 1468 001a B340     		lsls	r3, r3, r6
 1469 001c 1343     		orrs	r3, r2
 1470              	.LVL197:
1752:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 1471              		.loc 1 1752 0
 1472 001e 6668     		ldr	r6, [r4, #4]
 1473              	.LVL198:
 1474 0020 3268     		ldr	r2, [r6]
 1475 0022 0721     		movs	r1, #7
 1476 0024 A940     		lsls	r1, r1, r5
 1477 0026 8A43     		bics	r2, r1
 1478 0028 3260     		str	r2, [r6]
1755:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 1479              		.loc 1 1755 0
 1480 002a 2268     		ldr	r2, [r4]
 1481 002c 1360     		str	r3, [r2]
1757:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** }
 1482              		.loc 1 1757 0
 1483 002e FFF7FEFF 		bl	CyExitCriticalSection
 1484              	.LVL199:
1758:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 1485              		.loc 1 1758 0
 1486              		@ sp needed
 1487              	.LVL200:
 1488              	.LVL201:
 1489 0032 70BD     		pop	{r4, r5, r6, pc}
 1490              		.cfi_endproc
 1491              	.LFE17:
 1492              		.size	capsense_CSDConnectSns, .-capsense_CSDConnectSns
 1493              		.section	.text.capsense_CSDScan,"ax",%progbits
 1494              		.align	2
 1495              		.global	capsense_CSDScan
 1496              		.code	16
 1497              		.thumb_func
 1498              		.type	capsense_CSDScan, %function
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 78


 1499              	capsense_CSDScan:
 1500              	.LFB14:
1508:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     capsense_RAM_WD_BASE_STRUCT const *ptrWdgt = (capsense_RAM_WD_BASE_STRUCT *)
 1501              		.loc 1 1508 0
 1502              		.cfi_startproc
 1503              		@ args = 0, pretend = 0, frame = 0
 1504              		@ frame_needed = 0, uses_anonymous_args = 0
 1505 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1506              		.cfi_def_cfa_offset 24
 1507              		.cfi_offset 3, -24
 1508              		.cfi_offset 4, -20
 1509              		.cfi_offset 5, -16
 1510              		.cfi_offset 6, -12
 1511              		.cfi_offset 7, -8
 1512              		.cfi_offset 14, -4
1510:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 1513              		.loc 1 1510 0
 1514 0002 224B     		ldr	r3, .L97
 1515 0004 1B78     		ldrb	r3, [r3]
 1516 0006 DBB2     		uxtb	r3, r3
1509:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                                     capsense_dsFlash.wdgtArray[capsense_widgetIndex
 1517              		.loc 1 1509 0
 1518 0008 9A00     		lsls	r2, r3, #2
 1519 000a D318     		adds	r3, r2, r3
 1520 000c DA00     		lsls	r2, r3, #3
 1521 000e 204B     		ldr	r3, .L97+4
 1522 0010 9A18     		adds	r2, r3, r2
 1523 0012 5768     		ldr	r7, [r2, #4]
 1524              	.LVL202:
1513:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     {
 1525              		.loc 1 1513 0
 1526 0014 1F4B     		ldr	r3, .L97+8
 1527 0016 BA22     		movs	r2, #186
 1528 0018 9A5C     		ldrb	r2, [r3, r2]
 1529 001a B821     		movs	r1, #184
 1530 001c 585C     		ldrb	r0, [r3, r1]
 1531 001e 8242     		cmp	r2, r0
 1532 0020 06D0     		beq	.L96
1515:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         capsense_dsRam.scanCurrentISC = capsense_dsRam.scanCsdISC;
 1533              		.loc 1 1515 0
 1534 0022 FFF7FEFF 		bl	capsense_SsSetAllIOsState
 1535              	.LVL203:
1516:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     }
 1536              		.loc 1 1516 0
 1537 0026 1B4B     		ldr	r3, .L97+8
 1538 0028 B822     		movs	r2, #184
 1539 002a 995C     		ldrb	r1, [r3, r2]
 1540 002c 0232     		adds	r2, r2, #2
 1541 002e 9954     		strb	r1, [r3, r2]
 1542              	.L96:
1523:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 1543              		.loc 1 1523 0
 1544 0030 194C     		ldr	r4, .L97+12
 1545 0032 0023     		movs	r3, #0
 1546 0034 2370     		strb	r3, [r4]
1526:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                               capsense_dsFlash.wdgtArray[capsense_widgetIndex].ptr2
 1547              		.loc 1 1526 0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 79


 1548 0036 154E     		ldr	r6, .L97
 1549 0038 3378     		ldrb	r3, [r6]
 1550 003a DBB2     		uxtb	r3, r3
1527:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                               + capsense_sensorIndex;
 1551              		.loc 1 1527 0
 1552 003c 144D     		ldr	r5, .L97+4
 1553 003e 9A00     		lsls	r2, r3, #2
 1554 0040 D318     		adds	r3, r2, r3
 1555 0042 DA00     		lsls	r2, r3, #3
 1556 0044 AA18     		adds	r2, r5, r2
 1557 0046 9168     		ldr	r1, [r2, #8]
1528:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 1558              		.loc 1 1528 0
 1559 0048 2378     		ldrb	r3, [r4]
 1560 004a DBB2     		uxtb	r3, r3
 1561 004c 9A00     		lsls	r2, r3, #2
 1562 004e D318     		adds	r3, r2, r3
 1563 0050 5A00     		lsls	r2, r3, #1
 1564 0052 8A18     		adds	r2, r1, r2
1526:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                               capsense_dsFlash.wdgtArray[capsense_widgetIndex].ptr2
 1565              		.loc 1 1526 0
 1566 0054 114B     		ldr	r3, .L97+16
 1567 0056 1A60     		str	r2, [r3]
1536:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 1568              		.loc 1 1536 0
 1569 0058 3800     		movs	r0, r7
 1570 005a FFF7FEFF 		bl	capsense_SsCSDSetUpIdacs
 1571              	.LVL204:
1555:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                         capsense_dsFlash.wdgtArray[capsense_widgetIndex].ptr2SnsFla
 1572              		.loc 1 1555 0
 1573 005e 3378     		ldrb	r3, [r6]
 1574 0060 DBB2     		uxtb	r3, r3
1556:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                         + capsense_sensorIndex;
 1575              		.loc 1 1556 0
 1576 0062 9A00     		lsls	r2, r3, #2
 1577 0064 D318     		adds	r3, r2, r3
 1578 0066 DA00     		lsls	r2, r3, #3
 1579 0068 5059     		ldr	r0, [r2, r5]
1557:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 1580              		.loc 1 1557 0
 1581 006a 2278     		ldrb	r2, [r4]
 1582 006c D2B2     		uxtb	r2, r2
 1583 006e D300     		lsls	r3, r2, #3
 1584 0070 9A1A     		subs	r2, r3, r2
 1585 0072 9300     		lsls	r3, r2, #2
 1586 0074 C018     		adds	r0, r0, r3
1555:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                         capsense_dsFlash.wdgtArray[capsense_widgetIndex].ptr2SnsFla
 1587              		.loc 1 1555 0
 1588 0076 0A4B     		ldr	r3, .L97+20
 1589 0078 1860     		str	r0, [r3]
1560:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 1590              		.loc 1 1560 0
 1591 007a FFF7FEFF 		bl	capsense_CSDConnectSns
 1592              	.LVL205:
1563:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #endif /* (capsense_ENABLE == capsense_CSD_GANGED_SNS_EN)  */
 1593              		.loc 1 1563 0
 1594 007e 0948     		ldr	r0, .L97+24
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 80


 1595 0080 FFF7FEFF 		bl	capsense_ISR_StartEx
 1596              	.LVL206:
1567:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** }
 1597              		.loc 1 1567 0
 1598 0084 FFF7FEFF 		bl	capsense_CSDScanExt
 1599              	.LVL207:
1568:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 1600              		.loc 1 1568 0
 1601              		@ sp needed
 1602              	.LVL208:
 1603 0088 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1604              	.L98:
 1605 008a C046     		.align	2
 1606              	.L97:
 1607 008c 00000000 		.word	capsense_widgetIndex
 1608 0090 00000000 		.word	capsense_dsFlash
 1609 0094 00000000 		.word	capsense_dsRam
 1610 0098 00000000 		.word	capsense_sensorIndex
 1611 009c 00000000 		.word	capsense_curRamSnsPtr
 1612 00a0 00000000 		.word	capsense_curSnsIOPtr
 1613 00a4 00000000 		.word	capsense_CSDPostMultiScan
 1614              		.cfi_endproc
 1615              	.LFE14:
 1616              		.size	capsense_CSDScan, .-capsense_CSDScan
 1617              		.section	.text.capsense_SsCSDConnectSensorExt,"ax",%progbits
 1618              		.align	2
 1619              		.global	capsense_SsCSDConnectSensorExt
 1620              		.code	16
 1621              		.thumb_func
 1622              		.type	capsense_SsCSDConnectSensorExt, %function
 1623              	capsense_SsCSDConnectSensorExt:
 1624              	.LFB15:
1591:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #if (capsense_ENABLE == capsense_CSD_GANGED_SNS_EN)
 1625              		.loc 1 1591 0
 1626              		.cfi_startproc
 1627              		@ args = 0, pretend = 0, frame = 0
 1628              		@ frame_needed = 0, uses_anonymous_args = 0
 1629              	.LVL209:
 1630 0000 10B5     		push	{r4, lr}
 1631              		.cfi_def_cfa_offset 8
 1632              		.cfi_offset 4, -8
 1633              		.cfi_offset 14, -4
1598:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                                       + sensorId;
 1634              		.loc 1 1598 0
 1635 0002 8300     		lsls	r3, r0, #2
 1636 0004 1818     		adds	r0, r3, r0
 1637              	.LVL210:
 1638 0006 C300     		lsls	r3, r0, #3
 1639 0008 054A     		ldr	r2, .L100
 1640 000a 9858     		ldr	r0, [r3, r2]
1599:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 1641              		.loc 1 1599 0
 1642 000c CB00     		lsls	r3, r1, #3
 1643 000e 591A     		subs	r1, r3, r1
 1644              	.LVL211:
 1645 0010 8B00     		lsls	r3, r1, #2
 1646 0012 C018     		adds	r0, r0, r3
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 81


1597:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                                       capsense_dsFlash.wdgtArray[widgetId].ptr2SnsF
 1647              		.loc 1 1597 0
 1648 0014 034B     		ldr	r3, .L100+4
 1649 0016 1860     		str	r0, [r3]
1633:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #endif /* (capsense_ENABLE == capsense_CSD_GANGED_SNS_EN) */
 1650              		.loc 1 1633 0
 1651 0018 FFF7FEFF 		bl	capsense_CSDConnectSns
 1652              	.LVL212:
1635:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 1653              		.loc 1 1635 0
 1654              		@ sp needed
 1655 001c 10BD     		pop	{r4, pc}
 1656              	.L101:
 1657 001e C046     		.align	2
 1658              	.L100:
 1659 0020 00000000 		.word	capsense_dsFlash
 1660 0024 00000000 		.word	capsense_curSnsIOPtr
 1661              		.cfi_endproc
 1662              	.LFE15:
 1663              		.size	capsense_SsCSDConnectSensorExt, .-capsense_SsCSDConnectSensorExt
 1664              		.section	.text.capsense_CSDDisconnectSns,"ax",%progbits
 1665              		.align	2
 1666              		.global	capsense_CSDDisconnectSns
 1667              		.code	16
 1668              		.thumb_func
 1669              		.type	capsense_CSDDisconnectSns, %function
 1670              	capsense_CSDDisconnectSns:
 1671              	.LFB18:
1786:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     uint8  interruptState;
 1672              		.loc 1 1786 0
 1673              		.cfi_startproc
 1674              		@ args = 0, pretend = 0, frame = 0
 1675              		@ frame_needed = 0, uses_anonymous_args = 0
 1676              	.LVL213:
 1677 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1678              		.cfi_def_cfa_offset 24
 1679              		.cfi_offset 3, -24
 1680              		.cfi_offset 4, -20
 1681              		.cfi_offset 5, -16
 1682              		.cfi_offset 6, -12
 1683              		.cfi_offset 7, -8
 1684              		.cfi_offset 14, -4
 1685 0002 0400     		movs	r4, r0
1793:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     pinModeShift = (uint32)snsAddrPtr->shift;
 1686              		.loc 1 1793 0
 1687 0004 067E     		ldrb	r6, [r0, #24]
 1688              	.LVL214:
1794:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 1689              		.loc 1 1794 0
 1690 0006 857E     		ldrb	r5, [r0, #26]
 1691              	.LVL215:
1796:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 1692              		.loc 1 1796 0
 1693 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1694              	.LVL216:
1798:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     newPcRegValue &= ~(capsense_GPIO_PC_MASK << pinModeShift);
 1695              		.loc 1 1798 0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 82


 1696 000c 6368     		ldr	r3, [r4, #4]
 1697 000e 1968     		ldr	r1, [r3]
 1698              	.LVL217:
1799:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 1699              		.loc 1 1799 0
 1700 0010 0723     		movs	r3, #7
 1701 0012 AB40     		lsls	r3, r3, r5
 1702 0014 9943     		bics	r1, r3
 1703              	.LVL218:
1801:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     newHsiomRegValue &= ~(capsense_HSIOM_SEL_MASK << pinHSIOMShift);
 1704              		.loc 1 1801 0
 1705 0016 2768     		ldr	r7, [r4]
 1706 0018 3B68     		ldr	r3, [r7]
 1707              	.LVL219:
1802:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     CY_SET_REG32(snsAddrPtr->hsiomPtr, newHsiomRegValue);
 1708              		.loc 1 1802 0
 1709 001a 0F22     		movs	r2, #15
 1710 001c B240     		lsls	r2, r2, r6
 1711 001e 9343     		bics	r3, r2
 1712              	.LVL220:
1803:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 1713              		.loc 1 1803 0
 1714 0020 3B60     		str	r3, [r7]
1805:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     {
 1715              		.loc 1 1805 0
 1716 0022 BA22     		movs	r2, #186
 1717 0024 0E4F     		ldr	r7, .L105
 1718 0026 BA5C     		ldrb	r2, [r7, r2]
 1719 0028 002A     		cmp	r2, #0
 1720 002a 05D1     		bne	.L103
1807:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         CY_SET_REG32(snsAddrPtr->pcPtr, newPcRegValue);
 1721              		.loc 1 1807 0
 1722 002c 0623     		movs	r3, #6
 1723              	.LVL221:
 1724 002e AB40     		lsls	r3, r3, r5
 1725 0030 1943     		orrs	r1, r3
 1726              	.LVL222:
1808:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     }
 1727              		.loc 1 1808 0
 1728 0032 6368     		ldr	r3, [r4, #4]
 1729 0034 1960     		str	r1, [r3]
 1730 0036 08E0     		b	.L104
 1731              	.LVL223:
 1732              	.L103:
1813:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         {
 1733              		.loc 1 1813 0
 1734 0038 022A     		cmp	r2, #2
 1735 003a 06D1     		bne	.L104
1816:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             CY_SET_REG32(snsAddrPtr->pcPtr, newPcRegValue);
 1736              		.loc 1 1816 0
 1737 003c 0332     		adds	r2, r2, #3
 1738 003e B240     		lsls	r2, r2, r6
 1739 0040 1343     		orrs	r3, r2
 1740              	.LVL224:
1817:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             CY_SET_REG32(snsAddrPtr->hsiomPtr, newHsiomRegValue);
 1741              		.loc 1 1817 0
 1742 0042 6268     		ldr	r2, [r4, #4]
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 83


 1743 0044 1160     		str	r1, [r2]
1818:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         }
 1744              		.loc 1 1818 0
 1745 0046 2268     		ldr	r2, [r4]
 1746 0048 1360     		str	r3, [r2]
 1747              	.LVL225:
 1748              	.L104:
1822:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 1749              		.loc 1 1822 0
 1750 004a A168     		ldr	r1, [r4, #8]
 1751              	.LVL226:
 1752 004c 0B68     		ldr	r3, [r1]
 1753 004e 647E     		ldrb	r4, [r4, #25]
 1754              	.LVL227:
 1755 0050 0122     		movs	r2, #1
 1756 0052 A240     		lsls	r2, r2, r4
 1757 0054 9343     		bics	r3, r2
 1758 0056 0B60     		str	r3, [r1]
1824:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** }
 1759              		.loc 1 1824 0
 1760 0058 FFF7FEFF 		bl	CyExitCriticalSection
 1761              	.LVL228:
1825:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 1762              		.loc 1 1825 0
 1763              		@ sp needed
 1764              	.LVL229:
 1765              	.LVL230:
 1766 005c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1767              	.L106:
 1768 005e C046     		.align	2
 1769              	.L105:
 1770 0060 00000000 		.word	capsense_dsRam
 1771              		.cfi_endproc
 1772              	.LFE18:
 1773              		.size	capsense_CSDDisconnectSns, .-capsense_CSDDisconnectSns
 1774              		.section	.text.capsense_SsCSDElectrodeCheck,"ax",%progbits
 1775              		.align	2
 1776              		.global	capsense_SsCSDElectrodeCheck
 1777              		.code	16
 1778              		.thumb_func
 1779              		.type	capsense_SsCSDElectrodeCheck, %function
 1780              	capsense_SsCSDElectrodeCheck:
 1781              	.LFB5:
 738:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #if (capsense_ENABLE == capsense_CSD_GANGED_SNS_EN)
 1782              		.loc 1 738 0
 1783              		.cfi_startproc
 1784              		@ args = 0, pretend = 0, frame = 0
 1785              		@ frame_needed = 0, uses_anonymous_args = 0
 1786 0000 10B5     		push	{r4, lr}
 1787              		.cfi_def_cfa_offset 8
 1788              		.cfi_offset 4, -8
 1789              		.cfi_offset 14, -4
 743:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     {
 1790              		.loc 1 743 0
 1791 0002 064B     		ldr	r3, .L109
 1792 0004 1B78     		ldrb	r3, [r3]
 1793 0006 012B     		cmp	r3, #1
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 84


 1794 0008 06D1     		bne	.L107
 771:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         #endif /* (capsense_ENABLE == capsense_CSD_GANGED_SNS_EN)  */
 1795              		.loc 1 771 0
 1796 000a 054B     		ldr	r3, .L109+4
 1797 000c 1868     		ldr	r0, [r3]
 1798 000e FFF7FEFF 		bl	capsense_CSDDisconnectSns
 1799              	.LVL231:
 774:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     }
 1800              		.loc 1 774 0
 1801 0012 0022     		movs	r2, #0
 1802 0014 014B     		ldr	r3, .L109
 1803 0016 1A70     		strb	r2, [r3]
 1804              	.L107:
 776:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 1805              		.loc 1 776 0
 1806              		@ sp needed
 1807 0018 10BD     		pop	{r4, pc}
 1808              	.L110:
 1809 001a C046     		.align	2
 1810              	.L109:
 1811 001c 00000000 		.word	.LANCHOR1
 1812 0020 00000000 		.word	capsense_curSnsIOPtr
 1813              		.cfi_endproc
 1814              	.LFE5:
 1815              		.size	capsense_SsCSDElectrodeCheck, .-capsense_SsCSDElectrodeCheck
 1816              		.section	.text.capsense_CSDSetupWidget,"ax",%progbits
 1817              		.align	2
 1818              		.global	capsense_CSDSetupWidget
 1819              		.code	16
 1820              		.thumb_func
 1821              		.type	capsense_CSDSetupWidget, %function
 1822              	capsense_CSDSetupWidget:
 1823              	.LFB10:
1180:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     capsense_RAM_WD_BASE_STRUCT const *ptrWdgt = (capsense_RAM_WD_BASE_STRUCT *)
 1824              		.loc 1 1180 0
 1825              		.cfi_startproc
 1826              		@ args = 0, pretend = 0, frame = 0
 1827              		@ frame_needed = 0, uses_anonymous_args = 0
 1828              	.LVL232:
 1829 0000 70B5     		push	{r4, r5, r6, lr}
 1830              		.cfi_def_cfa_offset 16
 1831              		.cfi_offset 4, -16
 1832              		.cfi_offset 5, -12
 1833              		.cfi_offset 6, -8
 1834              		.cfi_offset 14, -4
1181:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                                 capsense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
 1835              		.loc 1 1181 0
 1836 0002 124C     		ldr	r4, .L112
 1837 0004 8200     		lsls	r2, r0, #2
 1838 0006 1218     		adds	r2, r2, r0
 1839 0008 D300     		lsls	r3, r2, #3
 1840 000a E318     		adds	r3, r4, r3
 1841 000c 5D68     		ldr	r5, [r3, #4]
 1842              	.LVL233:
1185:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 1843              		.loc 1 1185 0
 1844 000e C0B2     		uxtb	r0, r0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 85


 1845              	.LVL234:
 1846 0010 0F4E     		ldr	r6, .L112+4
 1847 0012 3070     		strb	r0, [r6]
1187:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 1848              		.loc 1 1187 0
 1849 0014 0120     		movs	r0, #1
 1850 0016 FFF7FEFF 		bl	capsense_SsSwitchSensingMode
 1851              	.LVL235:
1195:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 1852              		.loc 1 1195 0
 1853 001a FFF7FEFF 		bl	capsense_SsCSDElectrodeCheck
 1854              	.LVL236:
1199:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 1855              		.loc 1 1199 0
 1856 001e 3378     		ldrb	r3, [r6]
 1857 0020 DBB2     		uxtb	r3, r3
 1858 0022 9A00     		lsls	r2, r3, #2
 1859 0024 D318     		adds	r3, r2, r3
 1860 0026 DA00     		lsls	r2, r3, #3
 1861 0028 1259     		ldr	r2, [r2, r4]
1198:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                     capsense_dsFlash.wdgtArray[capsense_widgetIndex].ptr2SnsFlash;
 1862              		.loc 1 1198 0
 1863 002a 0A4B     		ldr	r3, .L112+8
 1864 002c 1A60     		str	r2, [r3]
1202:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     capsense_dsRam.status |= capsense_widgetIndex;
 1865              		.loc 1 1202 0
 1866 002e 0A4B     		ldr	r3, .L112+12
 1867 0030 DA68     		ldr	r2, [r3, #12]
 1868 0032 7F21     		movs	r1, #127
 1869 0034 8A43     		bics	r2, r1
 1870 0036 DA60     		str	r2, [r3, #12]
1203:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 1871              		.loc 1 1203 0
 1872 0038 3178     		ldrb	r1, [r6]
 1873 003a DA68     		ldr	r2, [r3, #12]
 1874 003c 0A43     		orrs	r2, r1
 1875 003e DA60     		str	r2, [r3, #12]
1205:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #if (((capsense_DISABLE == capsense_CSD_COMMON_SNS_CLK_EN) || \
 1876              		.loc 1 1205 0
 1877 0040 2800     		movs	r0, r5
 1878 0042 FFF7FEFF 		bl	capsense_SsCSDCalculateScanDuration
 1879              	.LVL237:
1210:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #endif
 1880              		.loc 1 1210 0
 1881 0046 FFF7FEFF 		bl	capsense_SsCSDConfigClock
 1882              	.LVL238:
1212:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 1883              		.loc 1 1212 0
 1884              		@ sp needed
 1885              	.LVL239:
 1886 004a 70BD     		pop	{r4, r5, r6, pc}
 1887              	.L113:
 1888              		.align	2
 1889              	.L112:
 1890 004c 00000000 		.word	capsense_dsFlash
 1891 0050 00000000 		.word	capsense_widgetIndex
 1892 0054 00000000 		.word	capsense_curSnsIOPtr
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 86


 1893 0058 00000000 		.word	capsense_dsRam
 1894              		.cfi_endproc
 1895              	.LFE10:
 1896              		.size	capsense_CSDSetupWidget, .-capsense_CSDSetupWidget
 1897              		.section	.text.capsense_CSDSetupWidgetExt,"ax",%progbits
 1898              		.align	2
 1899              		.global	capsense_CSDSetupWidgetExt
 1900              		.code	16
 1901              		.thumb_func
 1902              		.type	capsense_CSDSetupWidgetExt, %function
 1903              	capsense_CSDSetupWidgetExt:
 1904              	.LFB11:
1266:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     capsense_RAM_WD_BASE_STRUCT const *ptrWdgt = (capsense_RAM_WD_BASE_STRUCT *)
 1905              		.loc 1 1266 0
 1906              		.cfi_startproc
 1907              		@ args = 0, pretend = 0, frame = 0
 1908              		@ frame_needed = 0, uses_anonymous_args = 0
 1909              	.LVL240:
 1910 0000 70B5     		push	{r4, r5, r6, lr}
 1911              		.cfi_def_cfa_offset 16
 1912              		.cfi_offset 4, -16
 1913              		.cfi_offset 5, -12
 1914              		.cfi_offset 6, -8
 1915              		.cfi_offset 14, -4
1267:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                                     capsense_dsFlash.wdgtArray[widgetId].ptr2WdgtRa
 1916              		.loc 1 1267 0
 1917 0002 8200     		lsls	r2, r0, #2
 1918 0004 1218     		adds	r2, r2, r0
 1919 0006 D300     		lsls	r3, r2, #3
 1920 0008 134A     		ldr	r2, .L115
 1921 000a D318     		adds	r3, r2, r3
 1922 000c 5D68     		ldr	r5, [r3, #4]
 1923              	.LVL241:
1271:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 1924              		.loc 1 1271 0
 1925 000e C9B2     		uxtb	r1, r1
 1926              	.LVL242:
 1927 0010 124C     		ldr	r4, .L115+4
 1928 0012 2170     		strb	r1, [r4]
1275:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                               + capsense_sensorIndex;
 1929              		.loc 1 1275 0
 1930 0014 9968     		ldr	r1, [r3, #8]
1276:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 1931              		.loc 1 1276 0
 1932 0016 2378     		ldrb	r3, [r4]
 1933 0018 DBB2     		uxtb	r3, r3
 1934 001a 9A00     		lsls	r2, r3, #2
 1935 001c D318     		adds	r3, r2, r3
 1936 001e 5A00     		lsls	r2, r3, #1
 1937 0020 8A18     		adds	r2, r1, r2
1274:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                               capsense_dsFlash.wdgtArray[widgetId].ptr2SnsRam
 1938              		.loc 1 1274 0
 1939 0022 0F4B     		ldr	r3, .L115+8
 1940 0024 1A60     		str	r2, [r3]
1278:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 1941              		.loc 1 1278 0
 1942 0026 FFF7FEFF 		bl	capsense_CSDSetupWidget
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 87


 1943              	.LVL243:
1281:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 1944              		.loc 1 1281 0
 1945 002a 2800     		movs	r0, r5
 1946 002c FFF7FEFF 		bl	capsense_SsCSDSetUpIdacs
 1947              	.LVL244:
1292:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         capsense_CSDConnectSns(capsense_curSnsIOPtr);
 1948              		.loc 1 1292 0
 1949 0030 2378     		ldrb	r3, [r4]
 1950 0032 DBB2     		uxtb	r3, r3
 1951 0034 0B49     		ldr	r1, .L115+12
 1952 0036 DA00     		lsls	r2, r3, #3
 1953 0038 D31A     		subs	r3, r2, r3
 1954 003a 9800     		lsls	r0, r3, #2
 1955 003c 0B68     		ldr	r3, [r1]
 1956 003e 9C46     		mov	ip, r3
 1957 0040 6044     		add	r0, r0, ip
 1958 0042 0860     		str	r0, [r1]
1293:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #endif /* (capsense_ENABLE == capsense_CSD_GANGED_SNS_EN)  */
 1959              		.loc 1 1293 0
 1960 0044 FFF7FEFF 		bl	capsense_CSDConnectSns
 1961              	.LVL245:
1303:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 1962              		.loc 1 1303 0
 1963 0048 0122     		movs	r2, #1
 1964 004a 074B     		ldr	r3, .L115+16
 1965 004c 1A70     		strb	r2, [r3]
1306:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** }
 1966              		.loc 1 1306 0
 1967 004e 0748     		ldr	r0, .L115+20
 1968 0050 FFF7FEFF 		bl	capsense_ISR_StartEx
 1969              	.LVL246:
1307:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 1970              		.loc 1 1307 0
 1971              		@ sp needed
 1972              	.LVL247:
 1973 0054 70BD     		pop	{r4, r5, r6, pc}
 1974              	.L116:
 1975 0056 C046     		.align	2
 1976              	.L115:
 1977 0058 00000000 		.word	capsense_dsFlash
 1978 005c 00000000 		.word	capsense_sensorIndex
 1979 0060 00000000 		.word	capsense_curRamSnsPtr
 1980 0064 00000000 		.word	capsense_curSnsIOPtr
 1981 0068 00000000 		.word	.LANCHOR1
 1982 006c 00000000 		.word	capsense_CSDPostSingleScan
 1983              		.cfi_endproc
 1984              	.LFE11:
 1985              		.size	capsense_CSDSetupWidgetExt, .-capsense_CSDSetupWidgetExt
 1986              		.section	.text.capsense_SsCSDCalibrate,"ax",%progbits
 1987              		.align	2
 1988              		.code	16
 1989              		.thumb_func
 1990              		.type	capsense_SsCSDCalibrate, %function
 1991              	capsense_SsCSDCalibrate:
 1992              	.LFB22:
2175:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         uint32 snsIndex;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 88


 1993              		.loc 1 2175 0
 1994              		.cfi_startproc
 1995              		@ args = 0, pretend = 0, frame = 16
 1996              		@ frame_needed = 0, uses_anonymous_args = 0
 1997              	.LVL248:
 1998 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1999              		.cfi_def_cfa_offset 20
 2000              		.cfi_offset 4, -20
 2001              		.cfi_offset 5, -16
 2002              		.cfi_offset 6, -12
 2003              		.cfi_offset 7, -8
 2004              		.cfi_offset 14, -4
 2005 0002 5746     		mov	r7, r10
 2006 0004 80B4     		push	{r7}
 2007              		.cfi_def_cfa_offset 24
 2008              		.cfi_offset 10, -24
 2009 0006 84B0     		sub	sp, sp, #16
 2010              		.cfi_def_cfa_offset 40
 2011 0008 0190     		str	r0, [sp, #4]
 2012              	.LVL249:
2194:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 2013              		.loc 1 2194 0
 2014 000a 8400     		lsls	r4, r0, #2
 2015 000c 8446     		mov	ip, r0
 2016 000e 6444     		add	r4, r4, ip
 2017 0010 E200     		lsls	r2, r4, #3
 2018 0012 544B     		ldr	r3, .L142
 2019 0014 9A18     		adds	r2, r3, r2
 2020 0016 5368     		ldr	r3, [r2, #4]
 2021 0018 9A46     		mov	r10, r3
 2022              	.LVL250:
2196:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         ptrMaxIdac = &maxIdac[0u];
 2023              		.loc 1 2196 0
 2024 001a 1D00     		movs	r5, r3
 2025 001c 0935     		adds	r5, r5, #9
 2026              	.LVL251:
2199:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         {
 2027              		.loc 1 2199 0
 2028 001e 0123     		movs	r3, #1
 2029              	.LVL252:
 2030 0020 03E0     		b	.L118
 2031              	.LVL253:
 2032              	.L119:
2201:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             #if (capsense_CSD_MATRIX_WIDGET_EN || capsense_CSD_TOUCHPAD_WIDGET_EN)
 2033              		.loc 1 2201 0
 2034 0022 0020     		movs	r0, #0
 2035 0024 03AB     		add	r3, sp, #12
 2036              	.LVL254:
 2037 0026 9854     		strb	r0, [r3, r2]
2199:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         {
 2038              		.loc 1 2199 0
 2039 0028 1300     		movs	r3, r2
 2040              	.LVL255:
 2041              	.L118:
2199:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         {
 2042              		.loc 1 2199 0 is_stmt 0 discriminator 1
 2043 002a 5A1E     		subs	r2, r3, #1
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 89


 2044              	.LVL256:
 2045 002c 002B     		cmp	r3, #0
 2046 002e F8D1     		bne	.L119
2208:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 2047              		.loc 1 2208 0 is_stmt 1
 2048 0030 5346     		mov	r3, r10
 2049 0032 1A88     		ldrh	r2, [r3]
 2050              	.LVL257:
 2051 0034 0123     		movs	r3, #1
 2052 0036 9340     		lsls	r3, r3, r2
 2053 0038 013B     		subs	r3, r3, #1
 2054 003a 5943     		muls	r1, r3
 2055              	.LVL258:
 2056 003c 0800     		movs	r0, r1
 2057 003e 6421     		movs	r1, #100
 2058 0040 FFF7FEFF 		bl	__aeabi_uidiv
 2059              	.LVL259:
 2060 0044 0600     		movs	r6, r0
 2061              	.LVL260:
2219:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         {
 2062              		.loc 1 2219 0
 2063 0046 0023     		movs	r3, #0
 2064 0048 0093     		str	r3, [sp]
 2065 004a 71E0     		b	.L120
 2066              	.LVL261:
 2067              	.L138:
2232:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 2068              		.loc 1 2232 0
 2069 004c 019B     		ldr	r3, [sp, #4]
 2070 004e 9A00     		lsls	r2, r3, #2
 2071              	.LVL262:
 2072 0050 9C46     		mov	ip, r3
 2073 0052 6244     		add	r2, r2, ip
 2074 0054 D300     		lsls	r3, r2, #3
 2075 0056 434A     		ldr	r2, .L142
 2076 0058 D318     		adds	r3, r2, r3
 2077 005a 9F68     		ldr	r7, [r3, #8]
 2078 005c 009A     		ldr	r2, [sp]
 2079 005e 9300     		lsls	r3, r2, #2
 2080 0060 9446     		mov	ip, r2
 2081 0062 6344     		add	r3, r3, ip
 2082 0064 5A00     		lsls	r2, r3, #1
 2083 0066 BF18     		adds	r7, r7, r2
 2084              	.LVL263:
2236:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             {
 2085              		.loc 1 2236 0
 2086 0068 0123     		movs	r3, #1
 2087 006a 04E0     		b	.L121
 2088              	.LVL264:
 2089              	.L122:
2238:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 #if (capsense_ENABLE == capsense_CSD_IDAC_COMP_EN)
 2090              		.loc 1 2238 0
 2091 006c 4023     		movs	r3, #64
 2092 006e AB54     		strb	r3, [r5, r2]
2240:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 #endif
 2093              		.loc 1 2240 0
 2094 0070 B918     		adds	r1, r7, r2
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 90


 2095 0072 4B72     		strb	r3, [r1, #9]
2236:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             {
 2096              		.loc 1 2236 0
 2097 0074 1300     		movs	r3, r2
 2098              	.LVL265:
 2099              	.L121:
2236:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             {
 2100              		.loc 1 2236 0 is_stmt 0 discriminator 1
 2101 0076 5A1E     		subs	r2, r3, #1
 2102              	.LVL266:
 2103 0078 002B     		cmp	r3, #0
 2104 007a F7D1     		bne	.L122
 2105 007c 4024     		movs	r4, #64
 2106              	.LVL267:
 2107              	.L131:
2248:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 2108              		.loc 1 2248 0 is_stmt 1
 2109 007e 0099     		ldr	r1, [sp]
 2110 0080 0198     		ldr	r0, [sp, #4]
 2111 0082 FFF7FEFF 		bl	capsense_CSDSetupWidgetExt
 2112              	.LVL268:
2251:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 #endif
 2113              		.loc 1 2251 0
 2114 0086 0120     		movs	r0, #1
 2115 0088 FFF7FEFF 		bl	capsense_DischargeExtCapacitors
 2116              	.LVL269:
2255:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 2117              		.loc 1 2255 0
 2118 008c FFF7FEFF 		bl	capsense_CSDScanExt
 2119              	.LVL270:
2257:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 while (((capsense_dsRam.status & capsense_SW_STS_BUSY) != 0u) && (0uL != watchdogCo
 2120              		.loc 1 2257 0
 2121 0090 354B     		ldr	r3, .L142+4
2258:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 {
 2122              		.loc 1 2258 0
 2123 0092 00E0     		b	.L123
 2124              	.LVL271:
 2125              	.L125:
2260:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 }
 2126              		.loc 1 2260 0
 2127 0094 013B     		subs	r3, r3, #1
 2128              	.LVL272:
 2129              	.L123:
2258:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 {
 2130              		.loc 1 2258 0
 2131 0096 354A     		ldr	r2, .L142+8
 2132 0098 D268     		ldr	r2, [r2, #12]
 2133 009a 1206     		lsls	r2, r2, #24
 2134 009c 0DD5     		bpl	.L141
2258:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 {
 2135              		.loc 1 2258 0 is_stmt 0 discriminator 1
 2136 009e 002B     		cmp	r3, #0
 2137 00a0 F8D1     		bne	.L125
 2138 00a2 0133     		adds	r3, r3, #1
 2139              	.LVL273:
 2140 00a4 0AE0     		b	.L124
 2141              	.LVL274:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 91


 2142              	.L127:
2266:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     {
 2143              		.loc 1 2266 0 is_stmt 1
 2144 00a6 5300     		lsls	r3, r2, #1
 2145 00a8 DB5B     		ldrh	r3, [r3, r7]
 2146 00aa 9E42     		cmp	r6, r3
 2147 00ac 03D9     		bls	.L126
2268:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     }
 2148              		.loc 1 2268 0
 2149 00ae A918     		adds	r1, r5, r2
 2150 00b0 0B78     		ldrb	r3, [r1]
 2151 00b2 A343     		bics	r3, r4
 2152 00b4 0B70     		strb	r3, [r1]
 2153              	.L126:
 2154 00b6 1300     		movs	r3, r2
 2155 00b8 00E0     		b	.L124
 2156              	.LVL275:
 2157              	.L141:
 2158 00ba 0123     		movs	r3, #1
 2159              	.LVL276:
 2160              	.L124:
2264:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 {
 2161              		.loc 1 2264 0 discriminator 1
 2162 00bc 5A1E     		subs	r2, r3, #1
 2163              	.LVL277:
 2164 00be 002B     		cmp	r3, #0
 2165 00c0 F1D1     		bne	.L127
2273:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 for(freqChannel = capsense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
 2166              		.loc 1 2273 0
 2167 00c2 6408     		lsrs	r4, r4, #1
 2168              	.LVL278:
2274:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 {
 2169              		.loc 1 2274 0
 2170 00c4 0133     		adds	r3, r3, #1
 2171 00c6 0FE0     		b	.L128
 2172              	.LVL279:
 2173              	.L130:
2276:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     #if (capsense_ENABLE == capsense_CSD_IDAC_COMP_EN)
 2174              		.loc 1 2276 0
 2175 00c8 A918     		adds	r1, r5, r2
 2176 00ca 0B78     		ldrb	r3, [r1]
 2177 00cc 2343     		orrs	r3, r4
 2178 00ce DBB2     		uxtb	r3, r3
 2179 00d0 0B70     		strb	r3, [r1]
2278:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     #endif
 2180              		.loc 1 2278 0
 2181 00d2 B818     		adds	r0, r7, r2
 2182 00d4 4372     		strb	r3, [r0, #9]
2280:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     {
 2183              		.loc 1 2280 0
 2184 00d6 002C     		cmp	r4, #0
 2185 00d8 05D1     		bne	.L129
2282:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                         {
 2186              		.loc 1 2282 0
 2187 00da 0B78     		ldrb	r3, [r1]
 2188 00dc 002B     		cmp	r3, #0
 2189 00de 02D1     		bne	.L129
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 92


2284:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                             #if (capsense_ENABLE == capsense_CSD_IDAC_COMP_EN)
 2190              		.loc 1 2284 0
 2191 00e0 0133     		adds	r3, r3, #1
 2192 00e2 0B70     		strb	r3, [r1]
2286:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                             #endif
 2193              		.loc 1 2286 0
 2194 00e4 4372     		strb	r3, [r0, #9]
 2195              	.L129:
 2196 00e6 1300     		movs	r3, r2
 2197              	.LVL280:
 2198              	.L128:
2274:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 {
 2199              		.loc 1 2274 0 discriminator 1
 2200 00e8 5A1E     		subs	r2, r3, #1
 2201              	.LVL281:
 2202 00ea 002B     		cmp	r3, #0
 2203 00ec ECD1     		bne	.L130
2292:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 2204              		.loc 1 2292 0
 2205 00ee 002C     		cmp	r4, #0
 2206 00f0 C5D1     		bne	.L131
 2207 00f2 0133     		adds	r3, r3, #1
 2208 00f4 07E0     		b	.L132
 2209              	.L134:
2296:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 {
 2210              		.loc 1 2296 0
 2211 00f6 03AB     		add	r3, sp, #12
 2212              	.LVL282:
 2213 00f8 9B18     		adds	r3, r3, r2
 2214              	.LVL283:
 2215 00fa 1878     		ldrb	r0, [r3]
 2216 00fc A95C     		ldrb	r1, [r5, r2]
 2217 00fe 8842     		cmp	r0, r1
 2218 0100 00D2     		bcs	.L133
2298:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 }
 2219              		.loc 1 2298 0
 2220 0102 1970     		strb	r1, [r3]
 2221              	.L133:
 2222 0104 1300     		movs	r3, r2
 2223              	.L132:
 2224              	.LVL284:
2294:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             {
 2225              		.loc 1 2294 0 discriminator 1
 2226 0106 5A1E     		subs	r2, r3, #1
 2227              	.LVL285:
 2228 0108 002B     		cmp	r3, #0
 2229 010a F4D1     		bne	.L134
2303:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             capsense_CSDScanExt();
 2230              		.loc 1 2303 0
 2231 010c 0099     		ldr	r1, [sp]
 2232 010e 0198     		ldr	r0, [sp, #4]
 2233 0110 FFF7FEFF 		bl	capsense_CSDSetupWidgetExt
 2234              	.LVL286:
2304:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 2235              		.loc 1 2304 0
 2236 0114 FFF7FEFF 		bl	capsense_CSDScanExt
 2237              	.LVL287:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 93


2306:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             while (((capsense_dsRam.status & capsense_SW_STS_BUSY) != 0u) && (0uL != watchdogCounte
 2238              		.loc 1 2306 0
 2239 0118 134B     		ldr	r3, .L142+4
2307:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             {
 2240              		.loc 1 2307 0
 2241 011a 00E0     		b	.L135
 2242              	.LVL288:
 2243              	.L137:
2309:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             }
 2244              		.loc 1 2309 0
 2245 011c 013B     		subs	r3, r3, #1
 2246              	.LVL289:
 2247              	.L135:
2307:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             {
 2248              		.loc 1 2307 0
 2249 011e 134A     		ldr	r2, .L142+8
 2250 0120 D268     		ldr	r2, [r2, #12]
 2251 0122 1206     		lsls	r2, r2, #24
 2252 0124 01D5     		bpl	.L136
2307:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             {
 2253              		.loc 1 2307 0 is_stmt 0 discriminator 1
 2254 0126 002B     		cmp	r3, #0
 2255 0128 F8D1     		bne	.L137
 2256              	.L136:
2219:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         {
 2257              		.loc 1 2219 0 is_stmt 1 discriminator 2
 2258 012a 009B     		ldr	r3, [sp]
 2259              	.LVL290:
 2260 012c 0133     		adds	r3, r3, #1
 2261 012e 0093     		str	r3, [sp]
 2262              	.LVL291:
 2263              	.L120:
2219:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         {
 2264              		.loc 1 2219 0 is_stmt 0 discriminator 1
 2265 0130 019B     		ldr	r3, [sp, #4]
 2266 0132 9A00     		lsls	r2, r3, #2
 2267 0134 9C46     		mov	ip, r3
 2268 0136 6244     		add	r2, r2, ip
 2269 0138 D300     		lsls	r3, r2, #3
 2270 013a 0A4A     		ldr	r2, .L142
 2271 013c D318     		adds	r3, r2, r3
 2272 013e 1B8B     		ldrh	r3, [r3, #24]
 2273 0140 009A     		ldr	r2, [sp]
 2274 0142 9A42     		cmp	r2, r3
 2275 0144 82D3     		bcc	.L138
 2276 0146 0123     		movs	r3, #1
 2277 0148 05E0     		b	.L139
 2278              	.LVL292:
 2279              	.L140:
2315:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             #if (capsense_CSD_MATRIX_WIDGET_EN || capsense_CSD_TOUCHPAD_WIDGET_EN)
 2280              		.loc 1 2315 0 is_stmt 1
 2281 014a 03AB     		add	r3, sp, #12
 2282              	.LVL293:
 2283 014c 995C     		ldrb	r1, [r3, r2]
 2284 014e 5346     		mov	r3, r10
 2285              	.LVL294:
 2286 0150 9B18     		adds	r3, r3, r2
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 94


 2287 0152 5972     		strb	r1, [r3, #9]
2313:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         {
 2288              		.loc 1 2313 0
 2289 0154 1300     		movs	r3, r2
 2290              	.LVL295:
 2291              	.L139:
2313:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         {
 2292              		.loc 1 2313 0 is_stmt 0 discriminator 1
 2293 0156 5A1E     		subs	r2, r3, #1
 2294              	.LVL296:
 2295 0158 002B     		cmp	r3, #0
 2296 015a F6D1     		bne	.L140
2368:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 2297              		.loc 1 2368 0 is_stmt 1
 2298 015c 04B0     		add	sp, sp, #16
 2299              	.LVL297:
 2300              		@ sp needed
 2301              	.LVL298:
 2302              	.LVL299:
 2303              	.LVL300:
 2304 015e 04BC     		pop	{r2}
 2305 0160 9246     		mov	r10, r2
 2306 0162 F0BD     		pop	{r4, r5, r6, r7, pc}
 2307              	.L143:
 2308              		.align	2
 2309              	.L142:
 2310 0164 00000000 		.word	capsense_dsFlash
 2311 0168 00A60E00 		.word	960000
 2312 016c 00000000 		.word	capsense_dsRam
 2313              		.cfi_endproc
 2314              	.LFE22:
 2315              		.size	capsense_SsCSDCalibrate, .-capsense_SsCSDCalibrate
 2316              		.section	.text.capsense_SsCSDDisconnectSnsExt,"ax",%progbits
 2317              		.align	2
 2318              		.global	capsense_SsCSDDisconnectSnsExt
 2319              		.code	16
 2320              		.thumb_func
 2321              		.type	capsense_SsCSDDisconnectSnsExt, %function
 2322              	capsense_SsCSDDisconnectSnsExt:
 2323              	.LFB16:
1661:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #if (capsense_ENABLE == capsense_CSD_GANGED_SNS_EN)
 2324              		.loc 1 1661 0
 2325              		.cfi_startproc
 2326              		@ args = 0, pretend = 0, frame = 0
 2327              		@ frame_needed = 0, uses_anonymous_args = 0
 2328              	.LVL301:
 2329 0000 10B5     		push	{r4, lr}
 2330              		.cfi_def_cfa_offset 8
 2331              		.cfi_offset 4, -8
 2332              		.cfi_offset 14, -4
1668:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                                       + sensorId;
 2333              		.loc 1 1668 0
 2334 0002 8300     		lsls	r3, r0, #2
 2335 0004 1818     		adds	r0, r3, r0
 2336              	.LVL302:
 2337 0006 C300     		lsls	r3, r0, #3
 2338 0008 054A     		ldr	r2, .L145
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 95


 2339 000a 9858     		ldr	r0, [r3, r2]
1669:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 2340              		.loc 1 1669 0
 2341 000c CB00     		lsls	r3, r1, #3
 2342 000e 591A     		subs	r1, r3, r1
 2343              	.LVL303:
 2344 0010 8B00     		lsls	r3, r1, #2
 2345 0012 C018     		adds	r0, r0, r3
1667:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                                                       capsense_dsFlash.wdgtArray[widgetId].ptr2SnsF
 2346              		.loc 1 1667 0
 2347 0014 034B     		ldr	r3, .L145+4
 2348 0016 1860     		str	r0, [r3]
1702:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****     #endif /* (capsense_ENABLE == capsense_CSD_GANGED_SNS_EN) */
 2349              		.loc 1 1702 0
 2350 0018 FFF7FEFF 		bl	capsense_CSDDisconnectSns
 2351              	.LVL304:
1704:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 2352              		.loc 1 1704 0
 2353              		@ sp needed
 2354 001c 10BD     		pop	{r4, pc}
 2355              	.L146:
 2356 001e C046     		.align	2
 2357              	.L145:
 2358 0020 00000000 		.word	capsense_dsFlash
 2359 0024 00000000 		.word	capsense_curSnsIOPtr
 2360              		.cfi_endproc
 2361              	.LFE16:
 2362              		.size	capsense_SsCSDDisconnectSnsExt, .-capsense_SsCSDDisconnectSnsExt
 2363              		.section	.text.capsense_CSDCalibrateWidget,"ax",%progbits
 2364              		.align	2
 2365              		.global	capsense_CSDCalibrateWidget
 2366              		.code	16
 2367              		.thumb_func
 2368              		.type	capsense_CSDCalibrateWidget, %function
 2369              	capsense_CSDCalibrateWidget:
 2370              	.LFB23:
2417:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 2371              		.loc 1 2417 0
 2372              		.cfi_startproc
 2373              		@ args = 0, pretend = 0, frame = 0
 2374              		@ frame_needed = 0, uses_anonymous_args = 0
 2375              	.LVL305:
 2376 0000 70B5     		push	{r4, r5, r6, lr}
 2377              		.cfi_def_cfa_offset 16
 2378              		.cfi_offset 4, -16
 2379              		.cfi_offset 5, -12
 2380              		.cfi_offset 6, -8
 2381              		.cfi_offset 14, -4
 2382 0002 0400     		movs	r4, r0
 2383 0004 0D00     		movs	r5, r1
 2384              	.LVL306:
2425:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 2385              		.loc 1 2425 0
 2386 0006 8300     		lsls	r3, r0, #2
 2387 0008 1B18     		adds	r3, r3, r0
 2388 000a DA00     		lsls	r2, r3, #3
 2389 000c 174E     		ldr	r6, .L155
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 96


 2390 000e 9619     		adds	r6, r2, r6
 2391              	.LVL307:
2427:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         {
 2392              		.loc 1 2427 0
 2393 0010 174B     		ldr	r3, .L155+4
 2394 0012 DB68     		ldr	r3, [r3, #12]
 2395 0014 DB03     		lsls	r3, r3, #15
 2396 0016 24D4     		bmi	.L153
2435:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 capsense_CSD_IDAC_GAIN_INDEX_DEFAULT;
 2397              		.loc 1 2435 0
 2398 0018 7368     		ldr	r3, [r6, #4]
 2399 001a 0422     		movs	r2, #4
 2400 001c 9A72     		strb	r2, [r3, #10]
 2401              	.LVL308:
 2402              	.L149:
2444:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                     gainSwitch = capsense_SsCSDSwitchIdacGain(ptrFlashWidget);
 2403              		.loc 1 2444 0 discriminator 1
 2404 001e 2900     		movs	r1, r5
 2405 0020 2000     		movs	r0, r4
 2406 0022 FFF7FEFF 		bl	capsense_SsCSDCalibrate
 2407              	.LVL309:
2445:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****                 } while(0u != gainSwitch);
 2408              		.loc 1 2445 0 discriminator 1
 2409 0026 3000     		movs	r0, r6
 2410 0028 FFF7FEFF 		bl	capsense_SsCSDSwitchIdacGain
 2411              	.LVL310:
2446:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             #endif
 2412              		.loc 1 2446 0 discriminator 1
 2413 002c 0028     		cmp	r0, #0
 2414 002e F6D1     		bne	.L149
2451:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             #endif
 2415              		.loc 1 2451 0
 2416 0030 2900     		movs	r1, r5
 2417 0032 3000     		movs	r0, r6
 2418              	.LVL311:
 2419 0034 FFF7FEFF 		bl	capsense_SsCSDNormalizeIdac
 2420              	.LVL312:
2455:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             capsense_CSDScan();
 2421              		.loc 1 2455 0
 2422 0038 2000     		movs	r0, r4
 2423 003a FFF7FEFF 		bl	capsense_CSDSetupWidget
 2424              	.LVL313:
2456:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** 
 2425              		.loc 1 2456 0
 2426 003e FFF7FEFF 		bl	capsense_CSDScan
 2427              	.LVL314:
2458:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             while (((capsense_dsRam.status & capsense_SW_STS_BUSY) != 0u) && (0uL != watchdogCounte
 2428              		.loc 1 2458 0
 2429 0042 0C4B     		ldr	r3, .L155+8
2459:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             {
 2430              		.loc 1 2459 0
 2431 0044 00E0     		b	.L150
 2432              	.LVL315:
 2433              	.L152:
2461:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             }
 2434              		.loc 1 2461 0
 2435 0046 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 97


 2436              	.LVL316:
 2437              	.L150:
2459:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             {
 2438              		.loc 1 2459 0
 2439 0048 094A     		ldr	r2, .L155+4
 2440 004a D268     		ldr	r2, [r2, #12]
 2441 004c 1206     		lsls	r2, r2, #24
 2442 004e 01D5     		bpl	.L151
2459:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             {
 2443              		.loc 1 2459 0 is_stmt 0 discriminator 1
 2444 0050 002B     		cmp	r3, #0
 2445 0052 F8D1     		bne	.L152
 2446              	.L151:
2465:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             {
 2447              		.loc 1 2465 0 is_stmt 1
 2448 0054 002B     		cmp	r3, #0
 2449 0056 06D0     		beq	.L154
2471:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             }
 2450              		.loc 1 2471 0
 2451 0058 2900     		movs	r1, r5
 2452 005a 2000     		movs	r0, r4
 2453 005c FFF7FEFF 		bl	capsense_SsCSDCalibrateCheck
 2454              	.LVL317:
 2455 0060 02E0     		b	.L148
 2456              	.LVL318:
 2457              	.L153:
2430:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****         }
 2458              		.loc 1 2430 0
 2459 0062 1120     		movs	r0, #17
 2460              	.LVL319:
 2461 0064 00E0     		b	.L148
 2462              	.LVL320:
 2463              	.L154:
2467:Generated_Source\PSoC4/capsense_SensingCSD_LL.c ****             }
 2464              		.loc 1 2467 0
 2465 0066 1020     		movs	r0, #16
 2466              	.LVL321:
 2467              	.L148:
2481:Generated_Source\PSoC4/capsense_SensingCSD_LL.c **** #endif /* ((capsense_CSD_SS_DIS != capsense_CSD_AUTOTUNE)) || \
 2468              		.loc 1 2481 0
 2469              		@ sp needed
 2470              	.LVL322:
 2471              	.LVL323:
 2472              	.LVL324:
 2473 0068 70BD     		pop	{r4, r5, r6, pc}
 2474              	.L156:
 2475 006a C046     		.align	2
 2476              	.L155:
 2477 006c 00000000 		.word	capsense_dsFlash
 2478 0070 00000000 		.word	capsense_dsRam
 2479 0074 00366E01 		.word	24000000
 2480              		.cfi_endproc
 2481              	.LFE23:
 2482              		.size	capsense_CSDCalibrateWidget, .-capsense_CSDCalibrateWidget
 2483              		.global	capsense_configCsd
 2484              		.data
 2485              		.align	2
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 98


 2486              		.set	.LANCHOR0,. + 0
 2487              		.type	capsense_configCsd, %object
 2488              		.size	capsense_configCsd, 4
 2489              	capsense_configCsd:
 2490 0000 20000004 		.word	67108896
 2491              		.bss
 2492              		.set	.LANCHOR1,. + 0
 2493              		.type	capsense_eleCsdDisconnectFlag, %object
 2494              		.size	capsense_eleCsdDisconnectFlag, 1
 2495              	capsense_eleCsdDisconnectFlag:
 2496 0000 00       		.space	1
 2497              		.text
 2498              	.Letext0:
 2499              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 2500              		.file 3 "Generated_Source\\PSoC4\\capsense_Configuration.h"
 2501              		.file 4 "Generated_Source\\PSoC4\\capsense_Structure.h"
 2502              		.file 5 "Generated_Source\\PSoC4\\capsense_Sensing.h"
 2503              		.file 6 "Generated_Source\\PSoC4/CyLib.h"
 2504              		.file 7 "Generated_Source\\PSoC4\\capsense_ISR.h"
 2505              		.section	.debug_info,"",%progbits
 2506              	.Ldebug_info0:
 2507 0000 D2130000 		.4byte	0x13d2
 2508 0004 0400     		.2byte	0x4
 2509 0006 00000000 		.4byte	.Ldebug_abbrev0
 2510 000a 04       		.byte	0x4
 2511 000b 01       		.uleb128 0x1
 2512 000c E7010000 		.4byte	.LASF193
 2513 0010 0C       		.byte	0xc
 2514 0011 FC0A0000 		.4byte	.LASF194
 2515 0015 A90B0000 		.4byte	.LASF195
 2516 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2517 001d 00000000 		.4byte	0
 2518 0021 00000000 		.4byte	.Ldebug_line0
 2519 0025 02       		.uleb128 0x2
 2520 0026 01       		.byte	0x1
 2521 0027 06       		.byte	0x6
 2522 0028 460B0000 		.4byte	.LASF0
 2523 002c 02       		.uleb128 0x2
 2524 002d 01       		.byte	0x1
 2525 002e 08       		.byte	0x8
 2526 002f A8090000 		.4byte	.LASF1
 2527 0033 02       		.uleb128 0x2
 2528 0034 02       		.byte	0x2
 2529 0035 05       		.byte	0x5
 2530 0036 FD070000 		.4byte	.LASF2
 2531 003a 02       		.uleb128 0x2
 2532 003b 02       		.byte	0x2
 2533 003c 07       		.byte	0x7
 2534 003d 570B0000 		.4byte	.LASF3
 2535 0041 02       		.uleb128 0x2
 2536 0042 04       		.byte	0x4
 2537 0043 05       		.byte	0x5
 2538 0044 44080000 		.4byte	.LASF4
 2539 0048 02       		.uleb128 0x2
 2540 0049 04       		.byte	0x4
 2541 004a 07       		.byte	0x7
 2542 004b 2B090000 		.4byte	.LASF5
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 99


 2543 004f 02       		.uleb128 0x2
 2544 0050 08       		.byte	0x8
 2545 0051 05       		.byte	0x5
 2546 0052 4A050000 		.4byte	.LASF6
 2547 0056 02       		.uleb128 0x2
 2548 0057 08       		.byte	0x8
 2549 0058 07       		.byte	0x7
 2550 0059 D9020000 		.4byte	.LASF7
 2551 005d 03       		.uleb128 0x3
 2552 005e 04       		.byte	0x4
 2553 005f 05       		.byte	0x5
 2554 0060 696E7400 		.ascii	"int\000"
 2555 0064 02       		.uleb128 0x2
 2556 0065 04       		.byte	0x4
 2557 0066 07       		.byte	0x7
 2558 0067 AE000000 		.4byte	.LASF8
 2559 006b 04       		.uleb128 0x4
 2560 006c 170C0000 		.4byte	.LASF9
 2561 0070 02       		.byte	0x2
 2562 0071 FC01     		.2byte	0x1fc
 2563 0073 2C000000 		.4byte	0x2c
 2564 0077 04       		.uleb128 0x4
 2565 0078 DB040000 		.4byte	.LASF10
 2566 007c 02       		.byte	0x2
 2567 007d FD01     		.2byte	0x1fd
 2568 007f 3A000000 		.4byte	0x3a
 2569 0083 04       		.uleb128 0x4
 2570 0084 F8050000 		.4byte	.LASF11
 2571 0088 02       		.byte	0x2
 2572 0089 FE01     		.2byte	0x1fe
 2573 008b 48000000 		.4byte	0x48
 2574 008f 02       		.uleb128 0x2
 2575 0090 04       		.byte	0x4
 2576 0091 04       		.byte	0x4
 2577 0092 DB010000 		.4byte	.LASF12
 2578 0096 02       		.uleb128 0x2
 2579 0097 08       		.byte	0x8
 2580 0098 04       		.byte	0x4
 2581 0099 1D0C0000 		.4byte	.LASF13
 2582 009d 02       		.uleb128 0x2
 2583 009e 01       		.byte	0x1
 2584 009f 08       		.byte	0x8
 2585 00a0 97040000 		.4byte	.LASF14
 2586 00a4 04       		.uleb128 0x4
 2587 00a5 9F090000 		.4byte	.LASF15
 2588 00a9 02       		.byte	0x2
 2589 00aa 9E02     		.2byte	0x29e
 2590 00ac 48000000 		.4byte	0x48
 2591 00b0 05       		.uleb128 0x5
 2592 00b1 6B000000 		.4byte	0x6b
 2593 00b5 04       		.uleb128 0x4
 2594 00b6 68070000 		.4byte	.LASF16
 2595 00ba 02       		.byte	0x2
 2596 00bb A802     		.2byte	0x2a8
 2597 00bd C1000000 		.4byte	0xc1
 2598 00c1 05       		.uleb128 0x5
 2599 00c2 83000000 		.4byte	0x83
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 100


 2600 00c6 04       		.uleb128 0x4
 2601 00c7 A8060000 		.4byte	.LASF17
 2602 00cb 03       		.byte	0x3
 2603 00cc 4301     		.2byte	0x143
 2604 00ce 77000000 		.4byte	0x77
 2605 00d2 04       		.uleb128 0x4
 2606 00d3 62040000 		.4byte	.LASF18
 2607 00d7 03       		.byte	0x3
 2608 00d8 4701     		.2byte	0x147
 2609 00da 6B000000 		.4byte	0x6b
 2610 00de 06       		.uleb128 0x6
 2611 00df 01       		.byte	0x1
 2612 00e0 2C000000 		.4byte	0x2c
 2613 00e4 04       		.byte	0x4
 2614 00e5 70       		.byte	0x70
 2615 00e6 09010000 		.4byte	0x109
 2616 00ea 07       		.uleb128 0x7
 2617 00eb 43040000 		.4byte	.LASF19
 2618 00ef 00       		.byte	0
 2619 00f0 07       		.uleb128 0x7
 2620 00f1 A5010000 		.4byte	.LASF20
 2621 00f5 01       		.byte	0x1
 2622 00f6 07       		.uleb128 0x7
 2623 00f7 1E010000 		.4byte	.LASF21
 2624 00fb 02       		.byte	0x2
 2625 00fc 07       		.uleb128 0x7
 2626 00fd C80A0000 		.4byte	.LASF22
 2627 0101 03       		.byte	0x3
 2628 0102 07       		.uleb128 0x7
 2629 0103 5E000000 		.4byte	.LASF23
 2630 0107 04       		.byte	0x4
 2631 0108 00       		.byte	0
 2632 0109 08       		.uleb128 0x8
 2633 010a 10       		.byte	0x10
 2634 010b 04       		.byte	0x4
 2635 010c AD       		.byte	0xad
 2636 010d 96010000 		.4byte	0x196
 2637 0111 09       		.uleb128 0x9
 2638 0112 11050000 		.4byte	.LASF24
 2639 0116 04       		.byte	0x4
 2640 0117 B2       		.byte	0xb2
 2641 0118 77000000 		.4byte	0x77
 2642 011c 00       		.byte	0
 2643 011d 09       		.uleb128 0x9
 2644 011e 8E090000 		.4byte	.LASF25
 2645 0122 04       		.byte	0x4
 2646 0123 B7       		.byte	0xb7
 2647 0124 C6000000 		.4byte	0xc6
 2648 0128 02       		.byte	0x2
 2649 0129 09       		.uleb128 0x9
 2650 012a 7D040000 		.4byte	.LASF26
 2651 012e 04       		.byte	0x4
 2652 012f BC       		.byte	0xbc
 2653 0130 6B000000 		.4byte	0x6b
 2654 0134 04       		.byte	0x4
 2655 0135 09       		.uleb128 0x9
 2656 0136 CF050000 		.4byte	.LASF27
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 101


 2657 013a 04       		.byte	0x4
 2658 013b C1       		.byte	0xc1
 2659 013c 6B000000 		.4byte	0x6b
 2660 0140 05       		.byte	0x5
 2661 0141 09       		.uleb128 0x9
 2662 0142 B6030000 		.4byte	.LASF28
 2663 0146 04       		.byte	0x4
 2664 0147 C7       		.byte	0xc7
 2665 0148 6B000000 		.4byte	0x6b
 2666 014c 06       		.byte	0x6
 2667 014d 09       		.uleb128 0x9
 2668 014e 76050000 		.4byte	.LASF29
 2669 0152 04       		.byte	0x4
 2670 0153 CD       		.byte	0xcd
 2671 0154 6B000000 		.4byte	0x6b
 2672 0158 07       		.byte	0x7
 2673 0159 09       		.uleb128 0x9
 2674 015a CA030000 		.4byte	.LASF30
 2675 015e 04       		.byte	0x4
 2676 015f D4       		.byte	0xd4
 2677 0160 D2000000 		.4byte	0xd2
 2678 0164 08       		.byte	0x8
 2679 0165 09       		.uleb128 0x9
 2680 0166 3D090000 		.4byte	.LASF31
 2681 016a 04       		.byte	0x4
 2682 016b DB       		.byte	0xdb
 2683 016c 96010000 		.4byte	0x196
 2684 0170 09       		.byte	0x9
 2685 0171 09       		.uleb128 0x9
 2686 0172 EF030000 		.4byte	.LASF32
 2687 0176 04       		.byte	0x4
 2688 0177 E0       		.byte	0xe0
 2689 0178 6B000000 		.4byte	0x6b
 2690 017c 0A       		.byte	0xa
 2691 017d 09       		.uleb128 0x9
 2692 017e B60A0000 		.4byte	.LASF33
 2693 0182 04       		.byte	0x4
 2694 0183 E8       		.byte	0xe8
 2695 0184 77000000 		.4byte	0x77
 2696 0188 0C       		.byte	0xc
 2697 0189 09       		.uleb128 0x9
 2698 018a BE070000 		.4byte	.LASF34
 2699 018e 04       		.byte	0x4
 2700 018f ED       		.byte	0xed
 2701 0190 6B000000 		.4byte	0x6b
 2702 0194 0E       		.byte	0xe
 2703 0195 00       		.byte	0
 2704 0196 0A       		.uleb128 0xa
 2705 0197 6B000000 		.4byte	0x6b
 2706 019b A6010000 		.4byte	0x1a6
 2707 019f 0B       		.uleb128 0xb
 2708 01a0 A6010000 		.4byte	0x1a6
 2709 01a4 00       		.byte	0
 2710 01a5 00       		.byte	0
 2711 01a6 02       		.uleb128 0x2
 2712 01a7 04       		.byte	0x4
 2713 01a8 07       		.byte	0x7
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 102


 2714 01a9 1A090000 		.4byte	.LASF35
 2715 01ad 0C       		.uleb128 0xc
 2716 01ae A10C0000 		.4byte	.LASF36
 2717 01b2 04       		.byte	0x4
 2718 01b3 EE       		.byte	0xee
 2719 01b4 09010000 		.4byte	0x109
 2720 01b8 08       		.uleb128 0x8
 2721 01b9 10       		.byte	0x10
 2722 01ba 04       		.byte	0x4
 2723 01bb F3       		.byte	0xf3
 2724 01bc 4E020000 		.4byte	0x24e
 2725 01c0 09       		.uleb128 0x9
 2726 01c1 11050000 		.4byte	.LASF24
 2727 01c5 04       		.byte	0x4
 2728 01c6 F8       		.byte	0xf8
 2729 01c7 77000000 		.4byte	0x77
 2730 01cb 00       		.byte	0
 2731 01cc 09       		.uleb128 0x9
 2732 01cd 8E090000 		.4byte	.LASF25
 2733 01d1 04       		.byte	0x4
 2734 01d2 FD       		.byte	0xfd
 2735 01d3 C6000000 		.4byte	0xc6
 2736 01d7 02       		.byte	0x2
 2737 01d8 0D       		.uleb128 0xd
 2738 01d9 7D040000 		.4byte	.LASF26
 2739 01dd 04       		.byte	0x4
 2740 01de 0201     		.2byte	0x102
 2741 01e0 6B000000 		.4byte	0x6b
 2742 01e4 04       		.byte	0x4
 2743 01e5 0D       		.uleb128 0xd
 2744 01e6 CF050000 		.4byte	.LASF27
 2745 01ea 04       		.byte	0x4
 2746 01eb 0701     		.2byte	0x107
 2747 01ed 6B000000 		.4byte	0x6b
 2748 01f1 05       		.byte	0x5
 2749 01f2 0D       		.uleb128 0xd
 2750 01f3 B6030000 		.4byte	.LASF28
 2751 01f7 04       		.byte	0x4
 2752 01f8 0D01     		.2byte	0x10d
 2753 01fa 6B000000 		.4byte	0x6b
 2754 01fe 06       		.byte	0x6
 2755 01ff 0D       		.uleb128 0xd
 2756 0200 76050000 		.4byte	.LASF29
 2757 0204 04       		.byte	0x4
 2758 0205 1301     		.2byte	0x113
 2759 0207 6B000000 		.4byte	0x6b
 2760 020b 07       		.byte	0x7
 2761 020c 0D       		.uleb128 0xd
 2762 020d CA030000 		.4byte	.LASF30
 2763 0211 04       		.byte	0x4
 2764 0212 1A01     		.2byte	0x11a
 2765 0214 D2000000 		.4byte	0xd2
 2766 0218 08       		.byte	0x8
 2767 0219 0D       		.uleb128 0xd
 2768 021a 3D090000 		.4byte	.LASF31
 2769 021e 04       		.byte	0x4
 2770 021f 2101     		.2byte	0x121
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 103


 2771 0221 96010000 		.4byte	0x196
 2772 0225 09       		.byte	0x9
 2773 0226 0D       		.uleb128 0xd
 2774 0227 EF030000 		.4byte	.LASF32
 2775 022b 04       		.byte	0x4
 2776 022c 2601     		.2byte	0x126
 2777 022e 6B000000 		.4byte	0x6b
 2778 0232 0A       		.byte	0xa
 2779 0233 0D       		.uleb128 0xd
 2780 0234 B60A0000 		.4byte	.LASF33
 2781 0238 04       		.byte	0x4
 2782 0239 2E01     		.2byte	0x12e
 2783 023b 77000000 		.4byte	0x77
 2784 023f 0C       		.byte	0xc
 2785 0240 0D       		.uleb128 0xd
 2786 0241 BE070000 		.4byte	.LASF34
 2787 0245 04       		.byte	0x4
 2788 0246 3301     		.2byte	0x133
 2789 0248 6B000000 		.4byte	0x6b
 2790 024c 0E       		.byte	0xe
 2791 024d 00       		.byte	0
 2792 024e 04       		.uleb128 0x4
 2793 024f 58050000 		.4byte	.LASF37
 2794 0253 04       		.byte	0x4
 2795 0254 3401     		.2byte	0x134
 2796 0256 B8010000 		.4byte	0x1b8
 2797 025a 0E       		.uleb128 0xe
 2798 025b 12       		.byte	0x12
 2799 025c 04       		.byte	0x4
 2800 025d 3901     		.2byte	0x139
 2801 025f 00030000 		.4byte	0x300
 2802 0263 0D       		.uleb128 0xd
 2803 0264 11050000 		.4byte	.LASF24
 2804 0268 04       		.byte	0x4
 2805 0269 3E01     		.2byte	0x13e
 2806 026b 77000000 		.4byte	0x77
 2807 026f 00       		.byte	0
 2808 0270 0D       		.uleb128 0xd
 2809 0271 8E090000 		.4byte	.LASF25
 2810 0275 04       		.byte	0x4
 2811 0276 4301     		.2byte	0x143
 2812 0278 C6000000 		.4byte	0xc6
 2813 027c 02       		.byte	0x2
 2814 027d 0D       		.uleb128 0xd
 2815 027e 7D040000 		.4byte	.LASF26
 2816 0282 04       		.byte	0x4
 2817 0283 4801     		.2byte	0x148
 2818 0285 6B000000 		.4byte	0x6b
 2819 0289 04       		.byte	0x4
 2820 028a 0D       		.uleb128 0xd
 2821 028b CF050000 		.4byte	.LASF27
 2822 028f 04       		.byte	0x4
 2823 0290 4D01     		.2byte	0x14d
 2824 0292 6B000000 		.4byte	0x6b
 2825 0296 05       		.byte	0x5
 2826 0297 0D       		.uleb128 0xd
 2827 0298 B6030000 		.4byte	.LASF28
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 104


 2828 029c 04       		.byte	0x4
 2829 029d 5301     		.2byte	0x153
 2830 029f 6B000000 		.4byte	0x6b
 2831 02a3 06       		.byte	0x6
 2832 02a4 0D       		.uleb128 0xd
 2833 02a5 76050000 		.4byte	.LASF29
 2834 02a9 04       		.byte	0x4
 2835 02aa 5901     		.2byte	0x159
 2836 02ac 6B000000 		.4byte	0x6b
 2837 02b0 07       		.byte	0x7
 2838 02b1 0D       		.uleb128 0xd
 2839 02b2 CA030000 		.4byte	.LASF30
 2840 02b6 04       		.byte	0x4
 2841 02b7 6001     		.2byte	0x160
 2842 02b9 D2000000 		.4byte	0xd2
 2843 02bd 08       		.byte	0x8
 2844 02be 0D       		.uleb128 0xd
 2845 02bf 3D090000 		.4byte	.LASF31
 2846 02c3 04       		.byte	0x4
 2847 02c4 6701     		.2byte	0x167
 2848 02c6 96010000 		.4byte	0x196
 2849 02ca 09       		.byte	0x9
 2850 02cb 0D       		.uleb128 0xd
 2851 02cc EF030000 		.4byte	.LASF32
 2852 02d0 04       		.byte	0x4
 2853 02d1 6C01     		.2byte	0x16c
 2854 02d3 6B000000 		.4byte	0x6b
 2855 02d7 0A       		.byte	0xa
 2856 02d8 0D       		.uleb128 0xd
 2857 02d9 B60A0000 		.4byte	.LASF33
 2858 02dd 04       		.byte	0x4
 2859 02de 7401     		.2byte	0x174
 2860 02e0 77000000 		.4byte	0x77
 2861 02e4 0C       		.byte	0xc
 2862 02e5 0D       		.uleb128 0xd
 2863 02e6 BE070000 		.4byte	.LASF34
 2864 02ea 04       		.byte	0x4
 2865 02eb 7901     		.2byte	0x179
 2866 02ed 6B000000 		.4byte	0x6b
 2867 02f1 0E       		.byte	0xe
 2868 02f2 0D       		.uleb128 0xd
 2869 02f3 BD0C0000 		.4byte	.LASF38
 2870 02f7 04       		.byte	0x4
 2871 02f8 7E01     		.2byte	0x17e
 2872 02fa 00030000 		.4byte	0x300
 2873 02fe 10       		.byte	0x10
 2874 02ff 00       		.byte	0
 2875 0300 0A       		.uleb128 0xa
 2876 0301 77000000 		.4byte	0x77
 2877 0305 10030000 		.4byte	0x310
 2878 0309 0B       		.uleb128 0xb
 2879 030a A6010000 		.4byte	0x1a6
 2880 030e 00       		.byte	0
 2881 030f 00       		.byte	0
 2882 0310 04       		.uleb128 0x4
 2883 0311 FC060000 		.4byte	.LASF39
 2884 0315 04       		.byte	0x4
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 105


 2885 0316 7F01     		.2byte	0x17f
 2886 0318 5A020000 		.4byte	0x25a
 2887 031c 0E       		.uleb128 0xe
 2888 031d 42       		.byte	0x42
 2889 031e 04       		.byte	0x4
 2890 031f 8501     		.2byte	0x185
 2891 0321 5A030000 		.4byte	0x35a
 2892 0325 0D       		.uleb128 0xd
 2893 0326 0E040000 		.4byte	.LASF40
 2894 032a 04       		.byte	0x4
 2895 032b 8A01     		.2byte	0x18a
 2896 032d 4E020000 		.4byte	0x24e
 2897 0331 00       		.byte	0
 2898 0332 0D       		.uleb128 0xd
 2899 0333 13040000 		.4byte	.LASF41
 2900 0337 04       		.byte	0x4
 2901 0338 8F01     		.2byte	0x18f
 2902 033a 4E020000 		.4byte	0x24e
 2903 033e 10       		.byte	0x10
 2904 033f 0D       		.uleb128 0xd
 2905 0340 18040000 		.4byte	.LASF42
 2906 0344 04       		.byte	0x4
 2907 0345 9401     		.2byte	0x194
 2908 0347 4E020000 		.4byte	0x24e
 2909 034b 20       		.byte	0x20
 2910 034c 0D       		.uleb128 0xd
 2911 034d 75080000 		.4byte	.LASF43
 2912 0351 04       		.byte	0x4
 2913 0352 9901     		.2byte	0x199
 2914 0354 10030000 		.4byte	0x310
 2915 0358 30       		.byte	0x30
 2916 0359 00       		.byte	0
 2917 035a 04       		.uleb128 0x4
 2918 035b 73060000 		.4byte	.LASF44
 2919 035f 04       		.byte	0x4
 2920 0360 9A01     		.2byte	0x19a
 2921 0362 1C030000 		.4byte	0x31c
 2922 0366 0E       		.uleb128 0xe
 2923 0367 0A       		.byte	0xa
 2924 0368 04       		.byte	0x4
 2925 0369 A001     		.2byte	0x1a0
 2926 036b BE030000 		.4byte	0x3be
 2927 036f 0F       		.uleb128 0xf
 2928 0370 72617700 		.ascii	"raw\000"
 2929 0374 04       		.byte	0x4
 2930 0375 A501     		.2byte	0x1a5
 2931 0377 00030000 		.4byte	0x300
 2932 037b 00       		.byte	0
 2933 037c 0D       		.uleb128 0xd
 2934 037d 520B0000 		.4byte	.LASF45
 2935 0381 04       		.byte	0x4
 2936 0382 AA01     		.2byte	0x1aa
 2937 0384 00030000 		.4byte	0x300
 2938 0388 02       		.byte	0x2
 2939 0389 0D       		.uleb128 0xd
 2940 038a 97090000 		.4byte	.LASF46
 2941 038e 04       		.byte	0x4
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 106


 2942 038f B001     		.2byte	0x1b0
 2943 0391 96010000 		.4byte	0x196
 2944 0395 04       		.byte	0x4
 2945 0396 0D       		.uleb128 0xd
 2946 0397 82080000 		.4byte	.LASF47
 2947 039b 04       		.byte	0x4
 2948 039c B501     		.2byte	0x1b5
 2949 039e C6000000 		.4byte	0xc6
 2950 03a2 06       		.byte	0x6
 2951 03a3 0D       		.uleb128 0xd
 2952 03a4 240C0000 		.4byte	.LASF48
 2953 03a8 04       		.byte	0x4
 2954 03a9 BA01     		.2byte	0x1ba
 2955 03ab BE030000 		.4byte	0x3be
 2956 03af 08       		.byte	0x8
 2957 03b0 0D       		.uleb128 0xd
 2958 03b1 23050000 		.4byte	.LASF49
 2959 03b5 04       		.byte	0x4
 2960 03b6 BF01     		.2byte	0x1bf
 2961 03b8 96010000 		.4byte	0x196
 2962 03bc 09       		.byte	0x9
 2963 03bd 00       		.byte	0
 2964 03be 0A       		.uleb128 0xa
 2965 03bf D2000000 		.4byte	0xd2
 2966 03c3 CE030000 		.4byte	0x3ce
 2967 03c7 0B       		.uleb128 0xb
 2968 03c8 A6010000 		.4byte	0x1a6
 2969 03cc 00       		.byte	0
 2970 03cd 00       		.byte	0
 2971 03ce 04       		.uleb128 0x4
 2972 03cf E7080000 		.4byte	.LASF50
 2973 03d3 04       		.byte	0x4
 2974 03d4 C001     		.2byte	0x1c0
 2975 03d6 66030000 		.4byte	0x366
 2976 03da 0E       		.uleb128 0xe
 2977 03db 50       		.byte	0x50
 2978 03dc 04       		.byte	0x4
 2979 03dd C601     		.2byte	0x1c6
 2980 03df 18040000 		.4byte	0x418
 2981 03e3 0D       		.uleb128 0xd
 2982 03e4 0E040000 		.4byte	.LASF40
 2983 03e8 04       		.byte	0x4
 2984 03e9 CB01     		.2byte	0x1cb
 2985 03eb 18040000 		.4byte	0x418
 2986 03ef 00       		.byte	0
 2987 03f0 0D       		.uleb128 0xd
 2988 03f1 13040000 		.4byte	.LASF41
 2989 03f5 04       		.byte	0x4
 2990 03f6 D001     		.2byte	0x1d0
 2991 03f8 18040000 		.4byte	0x418
 2992 03fc 0A       		.byte	0xa
 2993 03fd 0D       		.uleb128 0xd
 2994 03fe 18040000 		.4byte	.LASF42
 2995 0402 04       		.byte	0x4
 2996 0403 D501     		.2byte	0x1d5
 2997 0405 18040000 		.4byte	0x418
 2998 0409 14       		.byte	0x14
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 107


 2999 040a 0D       		.uleb128 0xd
 3000 040b 75080000 		.4byte	.LASF43
 3001 040f 04       		.byte	0x4
 3002 0410 DA01     		.2byte	0x1da
 3003 0412 28040000 		.4byte	0x428
 3004 0416 1E       		.byte	0x1e
 3005 0417 00       		.byte	0
 3006 0418 0A       		.uleb128 0xa
 3007 0419 CE030000 		.4byte	0x3ce
 3008 041d 28040000 		.4byte	0x428
 3009 0421 0B       		.uleb128 0xb
 3010 0422 A6010000 		.4byte	0x1a6
 3011 0426 00       		.byte	0
 3012 0427 00       		.byte	0
 3013 0428 0A       		.uleb128 0xa
 3014 0429 CE030000 		.4byte	0x3ce
 3015 042d 38040000 		.4byte	0x438
 3016 0431 0B       		.uleb128 0xb
 3017 0432 A6010000 		.4byte	0x1a6
 3018 0436 04       		.byte	0x4
 3019 0437 00       		.byte	0
 3020 0438 04       		.uleb128 0x4
 3021 0439 0E000000 		.4byte	.LASF51
 3022 043d 04       		.byte	0x4
 3023 043e DB01     		.2byte	0x1db
 3024 0440 DA030000 		.4byte	0x3da
 3025 0444 0E       		.uleb128 0xe
 3026 0445 BC       		.byte	0xbc
 3027 0446 04       		.byte	0x4
 3028 0447 E101     		.2byte	0x1e1
 3029 0449 5F050000 		.4byte	0x55f
 3030 044d 0D       		.uleb128 0xd
 3031 044e 81070000 		.4byte	.LASF52
 3032 0452 04       		.byte	0x4
 3033 0453 E801     		.2byte	0x1e8
 3034 0455 77000000 		.4byte	0x77
 3035 0459 00       		.byte	0
 3036 045a 0D       		.uleb128 0xd
 3037 045b 810C0000 		.4byte	.LASF53
 3038 045f 04       		.byte	0x4
 3039 0460 ED01     		.2byte	0x1ed
 3040 0462 77000000 		.4byte	0x77
 3041 0466 02       		.byte	0x2
 3042 0467 0D       		.uleb128 0xd
 3043 0468 CD000000 		.4byte	.LASF54
 3044 046c 04       		.byte	0x4
 3045 046d F201     		.2byte	0x1f2
 3046 046f 77000000 		.4byte	0x77
 3047 0473 04       		.byte	0x4
 3048 0474 0D       		.uleb128 0xd
 3049 0475 A9080000 		.4byte	.LASF55
 3050 0479 04       		.byte	0x4
 3051 047a F801     		.2byte	0x1f8
 3052 047c 77000000 		.4byte	0x77
 3053 0480 06       		.byte	0x6
 3054 0481 0D       		.uleb128 0xd
 3055 0482 BB000000 		.4byte	.LASF56
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 108


 3056 0486 04       		.byte	0x4
 3057 0487 FD01     		.2byte	0x1fd
 3058 0489 77000000 		.4byte	0x77
 3059 048d 08       		.byte	0x8
 3060 048e 0D       		.uleb128 0xd
 3061 048f 1C050000 		.4byte	.LASF57
 3062 0493 04       		.byte	0x4
 3063 0494 0202     		.2byte	0x202
 3064 0496 C1000000 		.4byte	0xc1
 3065 049a 0C       		.byte	0xc
 3066 049b 0D       		.uleb128 0xd
 3067 049c 6A080000 		.4byte	.LASF58
 3068 04a0 04       		.byte	0x4
 3069 04a1 0802     		.2byte	0x208
 3070 04a3 5F050000 		.4byte	0x55f
 3071 04a7 10       		.byte	0x10
 3072 04a8 0D       		.uleb128 0xd
 3073 04a9 0F090000 		.4byte	.LASF59
 3074 04ad 04       		.byte	0x4
 3075 04ae 0F02     		.2byte	0x20f
 3076 04b0 5F050000 		.4byte	0x55f
 3077 04b4 14       		.byte	0x14
 3078 04b5 0D       		.uleb128 0xd
 3079 04b6 B4070000 		.4byte	.LASF60
 3080 04ba 04       		.byte	0x4
 3081 04bb 1F02     		.2byte	0x21f
 3082 04bd 6F050000 		.4byte	0x56f
 3083 04c1 18       		.byte	0x18
 3084 04c2 0D       		.uleb128 0xd
 3085 04c3 D8050000 		.4byte	.LASF61
 3086 04c7 04       		.byte	0x4
 3087 04c8 2502     		.2byte	0x225
 3088 04ca 77000000 		.4byte	0x77
 3089 04ce 1C       		.byte	0x1c
 3090 04cf 0D       		.uleb128 0xd
 3091 04d0 6E030000 		.4byte	.LASF62
 3092 04d4 04       		.byte	0x4
 3093 04d5 2A02     		.2byte	0x22a
 3094 04d7 6B000000 		.4byte	0x6b
 3095 04db 1E       		.byte	0x1e
 3096 04dc 0D       		.uleb128 0xd
 3097 04dd E8090000 		.4byte	.LASF63
 3098 04e1 04       		.byte	0x4
 3099 04e2 2F02     		.2byte	0x22f
 3100 04e4 6B000000 		.4byte	0x6b
 3101 04e8 1F       		.byte	0x1f
 3102 04e9 0D       		.uleb128 0xd
 3103 04ea AB050000 		.4byte	.LASF64
 3104 04ee 04       		.byte	0x4
 3105 04ef 3402     		.2byte	0x234
 3106 04f1 5A030000 		.4byte	0x35a
 3107 04f5 20       		.byte	0x20
 3108 04f6 0D       		.uleb128 0xd
 3109 04f7 D1020000 		.4byte	.LASF65
 3110 04fb 04       		.byte	0x4
 3111 04fc 3902     		.2byte	0x239
 3112 04fe 38040000 		.4byte	0x438
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 109


 3113 0502 62       		.byte	0x62
 3114 0503 0D       		.uleb128 0xd
 3115 0504 99000000 		.4byte	.LASF66
 3116 0508 04       		.byte	0x4
 3117 0509 3E02     		.2byte	0x23e
 3118 050b 6B000000 		.4byte	0x6b
 3119 050f B2       		.byte	0xb2
 3120 0510 0D       		.uleb128 0xd
 3121 0511 F0020000 		.4byte	.LASF67
 3122 0515 04       		.byte	0x4
 3123 0516 4302     		.2byte	0x243
 3124 0518 6B000000 		.4byte	0x6b
 3125 051c B3       		.byte	0xb3
 3126 051d 0D       		.uleb128 0xd
 3127 051e 6E070000 		.4byte	.LASF68
 3128 0522 04       		.byte	0x4
 3129 0523 4802     		.2byte	0x248
 3130 0525 77000000 		.4byte	0x77
 3131 0529 B4       		.byte	0xb4
 3132 052a 0D       		.uleb128 0xd
 3133 052b BF050000 		.4byte	.LASF69
 3134 052f 04       		.byte	0x4
 3135 0530 4D02     		.2byte	0x24d
 3136 0532 00030000 		.4byte	0x300
 3137 0536 B6       		.byte	0xb6
 3138 0537 0D       		.uleb128 0xd
 3139 0538 D5000000 		.4byte	.LASF70
 3140 053c 04       		.byte	0x4
 3141 053d 5202     		.2byte	0x252
 3142 053f 6B000000 		.4byte	0x6b
 3143 0543 B8       		.byte	0xb8
 3144 0544 0D       		.uleb128 0xd
 3145 0545 5D070000 		.4byte	.LASF71
 3146 0549 04       		.byte	0x4
 3147 054a 5702     		.2byte	0x257
 3148 054c 6B000000 		.4byte	0x6b
 3149 0550 B9       		.byte	0xb9
 3150 0551 0D       		.uleb128 0xd
 3151 0552 F2090000 		.4byte	.LASF72
 3152 0556 04       		.byte	0x4
 3153 0557 5C02     		.2byte	0x25c
 3154 0559 6B000000 		.4byte	0x6b
 3155 055d BA       		.byte	0xba
 3156 055e 00       		.byte	0
 3157 055f 0A       		.uleb128 0xa
 3158 0560 83000000 		.4byte	0x83
 3159 0564 6F050000 		.4byte	0x56f
 3160 0568 0B       		.uleb128 0xb
 3161 0569 A6010000 		.4byte	0x1a6
 3162 056d 00       		.byte	0
 3163 056e 00       		.byte	0
 3164 056f 0A       		.uleb128 0xa
 3165 0570 6B000000 		.4byte	0x6b
 3166 0574 7F050000 		.4byte	0x57f
 3167 0578 0B       		.uleb128 0xb
 3168 0579 A6010000 		.4byte	0x1a6
 3169 057d 03       		.byte	0x3
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 110


 3170 057e 00       		.byte	0
 3171 057f 04       		.uleb128 0x4
 3172 0580 0D0A0000 		.4byte	.LASF73
 3173 0584 04       		.byte	0x4
 3174 0585 5D02     		.2byte	0x25d
 3175 0587 44040000 		.4byte	0x444
 3176 058b 0E       		.uleb128 0xe
 3177 058c 1C       		.byte	0x1c
 3178 058d 04       		.byte	0x4
 3179 058e 6302     		.2byte	0x263
 3180 0590 0A060000 		.4byte	0x60a
 3181 0594 0D       		.uleb128 0xd
 3182 0595 EF050000 		.4byte	.LASF74
 3183 0599 04       		.byte	0x4
 3184 059a 6802     		.2byte	0x268
 3185 059c 0A060000 		.4byte	0x60a
 3186 05a0 00       		.byte	0
 3187 05a1 0D       		.uleb128 0xd
 3188 05a2 44050000 		.4byte	.LASF75
 3189 05a6 04       		.byte	0x4
 3190 05a7 6D02     		.2byte	0x26d
 3191 05a9 0A060000 		.4byte	0x60a
 3192 05ad 04       		.byte	0x4
 3193 05ae 0D       		.uleb128 0xd
 3194 05af 8C030000 		.4byte	.LASF76
 3195 05b3 04       		.byte	0x4
 3196 05b4 7202     		.2byte	0x272
 3197 05b6 0A060000 		.4byte	0x60a
 3198 05ba 08       		.byte	0x8
 3199 05bb 0D       		.uleb128 0xd
 3200 05bc D3080000 		.4byte	.LASF77
 3201 05c0 04       		.byte	0x4
 3202 05c1 7702     		.2byte	0x277
 3203 05c3 0A060000 		.4byte	0x60a
 3204 05c7 0C       		.byte	0xc
 3205 05c8 0D       		.uleb128 0xd
 3206 05c9 A00A0000 		.4byte	.LASF78
 3207 05cd 04       		.byte	0x4
 3208 05ce 7C02     		.2byte	0x27c
 3209 05d0 83000000 		.4byte	0x83
 3210 05d4 10       		.byte	0x10
 3211 05d5 0D       		.uleb128 0xd
 3212 05d6 32060000 		.4byte	.LASF79
 3213 05da 04       		.byte	0x4
 3214 05db 8102     		.2byte	0x281
 3215 05dd 83000000 		.4byte	0x83
 3216 05e1 14       		.byte	0x14
 3217 05e2 0D       		.uleb128 0xd
 3218 05e3 BA040000 		.4byte	.LASF80
 3219 05e7 04       		.byte	0x4
 3220 05e8 8602     		.2byte	0x286
 3221 05ea 6B000000 		.4byte	0x6b
 3222 05ee 18       		.byte	0x18
 3223 05ef 0D       		.uleb128 0xd
 3224 05f0 23090000 		.4byte	.LASF81
 3225 05f4 04       		.byte	0x4
 3226 05f5 8B02     		.2byte	0x28b
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 111


 3227 05f7 6B000000 		.4byte	0x6b
 3228 05fb 19       		.byte	0x19
 3229 05fc 0D       		.uleb128 0xd
 3230 05fd E1010000 		.4byte	.LASF82
 3231 0601 04       		.byte	0x4
 3232 0602 9002     		.2byte	0x290
 3233 0604 6B000000 		.4byte	0x6b
 3234 0608 1A       		.byte	0x1a
 3235 0609 00       		.byte	0
 3236 060a 10       		.uleb128 0x10
 3237 060b 04       		.byte	0x4
 3238 060c B5000000 		.4byte	0xb5
 3239 0610 04       		.uleb128 0x4
 3240 0611 B6090000 		.4byte	.LASF83
 3241 0615 04       		.byte	0x4
 3242 0616 9102     		.2byte	0x291
 3243 0618 8B050000 		.4byte	0x58b
 3244 061c 0E       		.uleb128 0xe
 3245 061d 28       		.byte	0x28
 3246 061e 04       		.byte	0x4
 3247 061f C402     		.2byte	0x2c4
 3248 0621 DC060000 		.4byte	0x6dc
 3249 0625 0D       		.uleb128 0xd
 3250 0626 7F0B0000 		.4byte	.LASF84
 3251 062a 04       		.byte	0x4
 3252 062b CD02     		.2byte	0x2cd
 3253 062d DC060000 		.4byte	0x6dc
 3254 0631 00       		.byte	0
 3255 0632 0D       		.uleb128 0xd
 3256 0633 010A0000 		.4byte	.LASF85
 3257 0637 04       		.byte	0x4
 3258 0638 D402     		.2byte	0x2d4
 3259 063a E3060000 		.4byte	0x6e3
 3260 063e 04       		.byte	0x4
 3261 063f 0D       		.uleb128 0xd
 3262 0640 8A070000 		.4byte	.LASF86
 3263 0644 04       		.byte	0x4
 3264 0645 DA02     		.2byte	0x2da
 3265 0647 E5060000 		.4byte	0x6e5
 3266 064b 08       		.byte	0x8
 3267 064c 0D       		.uleb128 0xd
 3268 064d 18060000 		.4byte	.LASF87
 3269 0651 04       		.byte	0x4
 3270 0652 E002     		.2byte	0x2e0
 3271 0654 E3060000 		.4byte	0x6e3
 3272 0658 0C       		.byte	0xc
 3273 0659 0D       		.uleb128 0xd
 3274 065a 45090000 		.4byte	.LASF88
 3275 065e 04       		.byte	0x4
 3276 065f E702     		.2byte	0x2e7
 3277 0661 EB060000 		.4byte	0x6eb
 3278 0665 10       		.byte	0x10
 3279 0666 0D       		.uleb128 0xd
 3280 0667 CF090000 		.4byte	.LASF89
 3281 066b 04       		.byte	0x4
 3282 066c EC02     		.2byte	0x2ec
 3283 066e 83000000 		.4byte	0x83
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 112


 3284 0672 14       		.byte	0x14
 3285 0673 0D       		.uleb128 0xd
 3286 0674 1D040000 		.4byte	.LASF90
 3287 0678 04       		.byte	0x4
 3288 0679 F302     		.2byte	0x2f3
 3289 067b 77000000 		.4byte	0x77
 3290 067f 18       		.byte	0x18
 3291 0680 0D       		.uleb128 0xd
 3292 0681 19030000 		.4byte	.LASF91
 3293 0685 04       		.byte	0x4
 3294 0686 FA02     		.2byte	0x2fa
 3295 0688 6B000000 		.4byte	0x6b
 3296 068c 1A       		.byte	0x1a
 3297 068d 0D       		.uleb128 0xd
 3298 068e DC090000 		.4byte	.LASF92
 3299 0692 04       		.byte	0x4
 3300 0693 0003     		.2byte	0x300
 3301 0695 6B000000 		.4byte	0x6b
 3302 0699 1B       		.byte	0x1b
 3303 069a 0D       		.uleb128 0xd
 3304 069b 07090000 		.4byte	.LASF93
 3305 069f 04       		.byte	0x4
 3306 06a0 0A03     		.2byte	0x30a
 3307 06a2 6B000000 		.4byte	0x6b
 3308 06a6 1C       		.byte	0x1c
 3309 06a7 0D       		.uleb128 0xd
 3310 06a8 560A0000 		.4byte	.LASF94
 3311 06ac 04       		.byte	0x4
 3312 06ad 1203     		.2byte	0x312
 3313 06af 6B000000 		.4byte	0x6b
 3314 06b3 1D       		.byte	0x1d
 3315 06b4 0D       		.uleb128 0xd
 3316 06b5 D7070000 		.4byte	.LASF95
 3317 06b9 04       		.byte	0x4
 3318 06ba 1703     		.2byte	0x317
 3319 06bc 77000000 		.4byte	0x77
 3320 06c0 1E       		.byte	0x1e
 3321 06c1 0D       		.uleb128 0xd
 3322 06c2 7A090000 		.4byte	.LASF96
 3323 06c6 04       		.byte	0x4
 3324 06c7 2003     		.2byte	0x320
 3325 06c9 83000000 		.4byte	0x83
 3326 06cd 20       		.byte	0x20
 3327 06ce 0D       		.uleb128 0xd
 3328 06cf 85010000 		.4byte	.LASF97
 3329 06d3 04       		.byte	0x4
 3330 06d4 2503     		.2byte	0x325
 3331 06d6 6B000000 		.4byte	0x6b
 3332 06da 24       		.byte	0x24
 3333 06db 00       		.byte	0
 3334 06dc 10       		.uleb128 0x10
 3335 06dd 04       		.byte	0x4
 3336 06de E2060000 		.4byte	0x6e2
 3337 06e2 11       		.uleb128 0x11
 3338 06e3 12       		.uleb128 0x12
 3339 06e4 04       		.byte	0x4
 3340 06e5 10       		.uleb128 0x10
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 113


 3341 06e6 04       		.byte	0x4
 3342 06e7 CE030000 		.4byte	0x3ce
 3343 06eb 10       		.uleb128 0x10
 3344 06ec 04       		.byte	0x4
 3345 06ed 6B000000 		.4byte	0x6b
 3346 06f1 04       		.uleb128 0x4
 3347 06f2 93020000 		.4byte	.LASF98
 3348 06f6 04       		.byte	0x4
 3349 06f7 2603     		.2byte	0x326
 3350 06f9 1C060000 		.4byte	0x61c
 3351 06fd 0E       		.uleb128 0xe
 3352 06fe A0       		.byte	0xa0
 3353 06ff 04       		.byte	0x4
 3354 0700 2C03     		.2byte	0x32c
 3355 0702 14070000 		.4byte	0x714
 3356 0706 0D       		.uleb128 0xd
 3357 0707 DD0C0000 		.4byte	.LASF99
 3358 070b 04       		.byte	0x4
 3359 070c 3103     		.2byte	0x331
 3360 070e 14070000 		.4byte	0x714
 3361 0712 00       		.byte	0
 3362 0713 00       		.byte	0
 3363 0714 0A       		.uleb128 0xa
 3364 0715 F1060000 		.4byte	0x6f1
 3365 0719 24070000 		.4byte	0x724
 3366 071d 0B       		.uleb128 0xb
 3367 071e A6010000 		.4byte	0x1a6
 3368 0722 03       		.byte	0x3
 3369 0723 00       		.byte	0
 3370 0724 04       		.uleb128 0x4
 3371 0725 320C0000 		.4byte	.LASF100
 3372 0729 04       		.byte	0x4
 3373 072a 3203     		.2byte	0x332
 3374 072c FD060000 		.4byte	0x6fd
 3375 0730 02       		.uleb128 0x2
 3376 0731 08       		.byte	0x8
 3377 0732 04       		.byte	0x4
 3378 0733 51070000 		.4byte	.LASF101
 3379 0737 08       		.uleb128 0x8
 3380 0738 08       		.byte	0x8
 3381 0739 05       		.byte	0x5
 3382 073a CF       		.byte	0xcf
 3383 073b 58070000 		.4byte	0x758
 3384 073f 09       		.uleb128 0x9
 3385 0740 FF080000 		.4byte	.LASF102
 3386 0744 05       		.byte	0x5
 3387 0745 D4       		.byte	0xd4
 3388 0746 83000000 		.4byte	0x83
 3389 074a 00       		.byte	0
 3390 074b 09       		.uleb128 0x9
 3391 074c 28060000 		.4byte	.LASF103
 3392 0750 05       		.byte	0x5
 3393 0751 D9       		.byte	0xd9
 3394 0752 83000000 		.4byte	0x83
 3395 0756 04       		.byte	0x4
 3396 0757 00       		.byte	0
 3397 0758 0C       		.uleb128 0xc
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 114


 3398 0759 DC060000 		.4byte	.LASF104
 3399 075d 05       		.byte	0x5
 3400 075e DA       		.byte	0xda
 3401 075f 37070000 		.4byte	0x737
 3402 0763 13       		.uleb128 0x13
 3403 0764 5E0A0000 		.4byte	.LASF106
 3404 0768 01       		.byte	0x1
 3405 0769 8D01     		.2byte	0x18d
 3406 076b 00000000 		.4byte	.LFB1
 3407 076f 10000000 		.4byte	.LFE1-.LFB1
 3408 0773 01       		.uleb128 0x1
 3409 0774 9C       		.byte	0x9c
 3410 0775 9A070000 		.4byte	0x79a
 3411 0779 14       		.uleb128 0x14
 3412 077a BE070000 		.4byte	.LASF34
 3413 077e 01       		.byte	0x1
 3414 077f 8D01     		.2byte	0x18d
 3415 0781 83000000 		.4byte	0x83
 3416 0785 00000000 		.4byte	.LLST0
 3417 0789 14       		.uleb128 0x14
 3418 078a 530C0000 		.4byte	.LASF105
 3419 078e 01       		.byte	0x1
 3420 078f 8D01     		.2byte	0x18d
 3421 0791 83000000 		.4byte	0x83
 3422 0795 21000000 		.4byte	.LLST1
 3423 0799 00       		.byte	0
 3424 079a 15       		.uleb128 0x15
 3425 079b 210A0000 		.4byte	.LASF107
 3426 079f 01       		.byte	0x1
 3427 07a0 AD01     		.2byte	0x1ad
 3428 07a2 00000000 		.4byte	.LFB2
 3429 07a6 50000000 		.4byte	.LFE2-.LFB2
 3430 07aa 01       		.uleb128 0x1
 3431 07ab 9C       		.byte	0x9c
 3432 07ac BF070000 		.4byte	0x7bf
 3433 07b0 16       		.uleb128 0x16
 3434 07b1 CC060000 		.4byte	.LASF110
 3435 07b5 01       		.byte	0x1
 3436 07b6 B001     		.2byte	0x1b0
 3437 07b8 83000000 		.4byte	0x83
 3438 07bc 01       		.uleb128 0x1
 3439 07bd 50       		.byte	0x50
 3440 07be 00       		.byte	0
 3441 07bf 17       		.uleb128 0x17
 3442 07c0 8F080000 		.4byte	.LASF196
 3443 07c4 01       		.byte	0x1
 3444 07c5 D601     		.2byte	0x1d6
 3445 07c7 00000000 		.4byte	.LFB3
 3446 07cb 1C000000 		.4byte	.LFE3-.LFB3
 3447 07cf 01       		.uleb128 0x1
 3448 07d0 9C       		.byte	0x9c
 3449 07d1 18       		.uleb128 0x18
 3450 07d2 22030000 		.4byte	.LASF119
 3451 07d6 01       		.byte	0x1
 3452 07d7 3B07     		.2byte	0x73b
 3453 07d9 A4000000 		.4byte	0xa4
 3454 07dd 00000000 		.4byte	.LFB19
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 115


 3455 07e1 A0000000 		.4byte	.LFE19-.LFB19
 3456 07e5 01       		.uleb128 0x1
 3457 07e6 9C       		.byte	0x9c
 3458 07e7 98080000 		.4byte	0x898
 3459 07eb 14       		.uleb128 0x14
 3460 07ec 8A0C0000 		.4byte	.LASF108
 3461 07f0 01       		.byte	0x1
 3462 07f1 3B07     		.2byte	0x73b
 3463 07f3 83000000 		.4byte	0x83
 3464 07f7 41000000 		.4byte	.LLST2
 3465 07fb 14       		.uleb128 0x14
 3466 07fc 85030000 		.4byte	.LASF109
 3467 0800 01       		.byte	0x1
 3468 0801 3B07     		.2byte	0x73b
 3469 0803 83000000 		.4byte	0x83
 3470 0807 83000000 		.4byte	.LLST3
 3471 080b 19       		.uleb128 0x19
 3472 080c 9B050000 		.4byte	.LASF111
 3473 0810 01       		.byte	0x1
 3474 0811 3D07     		.2byte	0x73d
 3475 0813 A4000000 		.4byte	0xa4
 3476 0817 A4000000 		.4byte	.LLST4
 3477 081b 19       		.uleb128 0x19
 3478 081c 3F030000 		.4byte	.LASF112
 3479 0820 01       		.byte	0x1
 3480 0821 3E07     		.2byte	0x73e
 3481 0823 83000000 		.4byte	0x83
 3482 0827 D0000000 		.4byte	.LLST5
 3483 082b 19       		.uleb128 0x19
 3484 082c 1A070000 		.4byte	.LASF113
 3485 0830 01       		.byte	0x1
 3486 0831 3F07     		.2byte	0x73f
 3487 0833 83000000 		.4byte	0x83
 3488 0837 F9000000 		.4byte	.LLST6
 3489 083b 19       		.uleb128 0x19
 3490 083c E3050000 		.4byte	.LASF114
 3491 0840 01       		.byte	0x1
 3492 0841 4007     		.2byte	0x740
 3493 0843 83000000 		.4byte	0x83
 3494 0847 18010000 		.4byte	.LLST7
 3495 084b 19       		.uleb128 0x19
 3496 084c 81050000 		.4byte	.LASF115
 3497 0850 01       		.byte	0x1
 3498 0851 4107     		.2byte	0x741
 3499 0853 83000000 		.4byte	0x83
 3500 0857 41010000 		.4byte	.LLST8
 3501 085b 19       		.uleb128 0x19
 3502 085c 37060000 		.4byte	.LASF116
 3503 0860 01       		.byte	0x1
 3504 0861 4207     		.2byte	0x742
 3505 0863 83000000 		.4byte	0x83
 3506 0867 6A010000 		.4byte	.LLST9
 3507 086b 1A       		.uleb128 0x1a
 3508 086c 0F010000 		.4byte	.LASF121
 3509 0870 01       		.byte	0x1
 3510 0871 4407     		.2byte	0x744
 3511 0873 98080000 		.4byte	0x898
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 116


 3512 0877 19       		.uleb128 0x19
 3513 0878 78030000 		.4byte	.LASF117
 3514 087c 01       		.byte	0x1
 3515 087d 4507     		.2byte	0x745
 3516 087f A3080000 		.4byte	0x8a3
 3517 0883 B6010000 		.4byte	.LLST10
 3518 0887 19       		.uleb128 0x19
 3519 0888 F1040000 		.4byte	.LASF118
 3520 088c 01       		.byte	0x1
 3521 088d 4607     		.2byte	0x746
 3522 088f E5060000 		.4byte	0x6e5
 3523 0893 13020000 		.4byte	.LLST11
 3524 0897 00       		.byte	0
 3525 0898 10       		.uleb128 0x10
 3526 0899 04       		.byte	0x4
 3527 089a 9E080000 		.4byte	0x89e
 3528 089e 1B       		.uleb128 0x1b
 3529 089f F1060000 		.4byte	0x6f1
 3530 08a3 10       		.uleb128 0x10
 3531 08a4 04       		.byte	0x4
 3532 08a5 AD010000 		.4byte	0x1ad
 3533 08a9 18       		.uleb128 0x18
 3534 08aa 830A0000 		.4byte	.LASF120
 3535 08ae 01       		.byte	0x1
 3536 08af 8007     		.2byte	0x780
 3537 08b1 83000000 		.4byte	0x83
 3538 08b5 00000000 		.4byte	.LFB20
 3539 08b9 9C000000 		.4byte	.LFE20-.LFB20
 3540 08bd 01       		.uleb128 0x1
 3541 08be 9C       		.byte	0x9c
 3542 08bf 64090000 		.4byte	0x964
 3543 08c3 14       		.uleb128 0x14
 3544 08c4 0F010000 		.4byte	.LASF121
 3545 08c8 01       		.byte	0x1
 3546 08c9 8007     		.2byte	0x780
 3547 08cb 98080000 		.4byte	0x898
 3548 08cf 26020000 		.4byte	.LLST12
 3549 08d3 19       		.uleb128 0x19
 3550 08d4 C7000000 		.4byte	.LASF122
 3551 08d8 01       		.byte	0x1
 3552 08d9 8207     		.2byte	0x782
 3553 08db 83000000 		.4byte	0x83
 3554 08df 6B020000 		.4byte	.LLST13
 3555 08e3 19       		.uleb128 0x19
 3556 08e4 B2040000 		.4byte	.LASF123
 3557 08e8 01       		.byte	0x1
 3558 08e9 8307     		.2byte	0x783
 3559 08eb 83000000 		.4byte	0x83
 3560 08ef 89020000 		.4byte	.LLST14
 3561 08f3 19       		.uleb128 0x19
 3562 08f4 87080000 		.4byte	.LASF124
 3563 08f8 01       		.byte	0x1
 3564 08f9 8407     		.2byte	0x784
 3565 08fb 83000000 		.4byte	0x83
 3566 08ff A8020000 		.4byte	.LLST15
 3567 0903 19       		.uleb128 0x19
 3568 0904 1C050000 		.4byte	.LASF57
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 117


 3569 0908 01       		.byte	0x1
 3570 0909 8507     		.2byte	0x785
 3571 090b 83000000 		.4byte	0x83
 3572 090f F4020000 		.4byte	.LLST16
 3573 0913 19       		.uleb128 0x19
 3574 0914 E3050000 		.4byte	.LASF114
 3575 0918 01       		.byte	0x1
 3576 0919 8607     		.2byte	0x786
 3577 091b 83000000 		.4byte	0x83
 3578 091f 2B030000 		.4byte	.LLST17
 3579 0923 19       		.uleb128 0x19
 3580 0924 58040000 		.4byte	.LASF125
 3581 0928 01       		.byte	0x1
 3582 0929 8707     		.2byte	0x787
 3583 092b 83000000 		.4byte	0x83
 3584 092f 81030000 		.4byte	.LLST18
 3585 0933 19       		.uleb128 0x19
 3586 0934 78030000 		.4byte	.LASF117
 3587 0938 01       		.byte	0x1
 3588 0939 8907     		.2byte	0x789
 3589 093b A3080000 		.4byte	0x8a3
 3590 093f D6030000 		.4byte	.LLST19
 3591 0943 19       		.uleb128 0x19
 3592 0944 1A070000 		.4byte	.LASF113
 3593 0948 01       		.byte	0x1
 3594 0949 8B07     		.2byte	0x78b
 3595 094b 83000000 		.4byte	0x83
 3596 094f E9030000 		.4byte	.LLST20
 3597 0953 19       		.uleb128 0x19
 3598 0954 F1040000 		.4byte	.LASF118
 3599 0958 01       		.byte	0x1
 3600 0959 8C07     		.2byte	0x78c
 3601 095b E5060000 		.4byte	0x6e5
 3602 095f 07040000 		.4byte	.LLST21
 3603 0963 00       		.byte	0
 3604 0964 15       		.uleb128 0x15
 3605 0965 57060000 		.4byte	.LASF126
 3606 0969 01       		.byte	0x1
 3607 096a E207     		.2byte	0x7e2
 3608 096c 00000000 		.4byte	.LFB21
 3609 0970 CC000000 		.4byte	.LFE21-.LFB21
 3610 0974 01       		.uleb128 0x1
 3611 0975 9C       		.byte	0x9c
 3612 0976 3B0A0000 		.4byte	0xa3b
 3613 097a 14       		.uleb128 0x14
 3614 097b 0F010000 		.4byte	.LASF121
 3615 097f 01       		.byte	0x1
 3616 0980 E207     		.2byte	0x7e2
 3617 0982 98080000 		.4byte	0x898
 3618 0986 1A040000 		.4byte	.LLST22
 3619 098a 14       		.uleb128 0x14
 3620 098b 85030000 		.4byte	.LASF109
 3621 098f 01       		.byte	0x1
 3622 0990 E207     		.2byte	0x7e2
 3623 0992 83000000 		.4byte	0x83
 3624 0996 46040000 		.4byte	.LLST23
 3625 099a 19       		.uleb128 0x19
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 118


 3626 099b 1A070000 		.4byte	.LASF113
 3627 099f 01       		.byte	0x1
 3628 09a0 E407     		.2byte	0x7e4
 3629 09a2 83000000 		.4byte	0x83
 3630 09a6 72040000 		.4byte	.LLST24
 3631 09aa 19       		.uleb128 0x19
 3632 09ab E3050000 		.4byte	.LASF114
 3633 09af 01       		.byte	0x1
 3634 09b0 E507     		.2byte	0x7e5
 3635 09b2 83000000 		.4byte	0x83
 3636 09b6 A8040000 		.4byte	.LLST25
 3637 09ba 19       		.uleb128 0x19
 3638 09bb B2040000 		.4byte	.LASF123
 3639 09bf 01       		.byte	0x1
 3640 09c0 E607     		.2byte	0x7e6
 3641 09c2 83000000 		.4byte	0x83
 3642 09c6 EA040000 		.4byte	.LLST26
 3643 09ca 19       		.uleb128 0x19
 3644 09cb 87080000 		.4byte	.LASF124
 3645 09cf 01       		.byte	0x1
 3646 09d0 E707     		.2byte	0x7e7
 3647 09d2 83000000 		.4byte	0x83
 3648 09d6 08050000 		.4byte	.LLST27
 3649 09da 19       		.uleb128 0x19
 3650 09db 2B000000 		.4byte	.LASF127
 3651 09df 01       		.byte	0x1
 3652 09e0 E807     		.2byte	0x7e8
 3653 09e2 83000000 		.4byte	0x83
 3654 09e6 47050000 		.4byte	.LLST28
 3655 09ea 19       		.uleb128 0x19
 3656 09eb C0060000 		.4byte	.LASF128
 3657 09ef 01       		.byte	0x1
 3658 09f0 E907     		.2byte	0x7e9
 3659 09f2 83000000 		.4byte	0x83
 3660 09f6 65050000 		.4byte	.LLST29
 3661 09fa 19       		.uleb128 0x19
 3662 09fb C1030000 		.4byte	.LASF129
 3663 09ff 01       		.byte	0x1
 3664 0a00 EA07     		.2byte	0x7ea
 3665 0a02 83000000 		.4byte	0x83
 3666 0a06 84050000 		.4byte	.LLST30
 3667 0a0a 19       		.uleb128 0x19
 3668 0a0b A9000000 		.4byte	.LASF130
 3669 0a0f 01       		.byte	0x1
 3670 0a10 EB07     		.2byte	0x7eb
 3671 0a12 83000000 		.4byte	0x83
 3672 0a16 A2050000 		.4byte	.LLST31
 3673 0a1a 19       		.uleb128 0x19
 3674 0a1b 78030000 		.4byte	.LASF117
 3675 0a1f 01       		.byte	0x1
 3676 0a20 ED07     		.2byte	0x7ed
 3677 0a22 A3080000 		.4byte	0x8a3
 3678 0a26 EC050000 		.4byte	.LLST32
 3679 0a2a 19       		.uleb128 0x19
 3680 0a2b F1040000 		.4byte	.LASF118
 3681 0a2f 01       		.byte	0x1
 3682 0a30 EE07     		.2byte	0x7ee
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 119


 3683 0a32 E5060000 		.4byte	0x6e5
 3684 0a36 0A060000 		.4byte	.LLST33
 3685 0a3a 00       		.byte	0
 3686 0a3b 1C       		.uleb128 0x1c
 3687 0a3c 8F060000 		.4byte	.LASF132
 3688 0a40 01       		.byte	0x1
 3689 0a41 0C02     		.2byte	0x20c
 3690 0a43 00000000 		.4byte	.LFB4
 3691 0a47 38010000 		.4byte	.LFE4-.LFB4
 3692 0a4b 01       		.uleb128 0x1
 3693 0a4c 9C       		.byte	0x9c
 3694 0a4d DE0A0000 		.4byte	0xade
 3695 0a51 19       		.uleb128 0x19
 3696 0a52 CB070000 		.4byte	.LASF131
 3697 0a56 01       		.byte	0x1
 3698 0a57 0F02     		.2byte	0x20f
 3699 0a59 83000000 		.4byte	0x83
 3700 0a5d 28060000 		.4byte	.LLST34
 3701 0a61 1D       		.uleb128 0x1d
 3702 0a62 14000000 		.4byte	.LVL117
 3703 0a66 51130000 		.4byte	0x1351
 3704 0a6a 1E       		.uleb128 0x1e
 3705 0a6b 24000000 		.4byte	.LVL118
 3706 0a6f 5C130000 		.4byte	0x135c
 3707 0a73 7D0A0000 		.4byte	0xa7d
 3708 0a77 1F       		.uleb128 0x1f
 3709 0a78 01       		.uleb128 0x1
 3710 0a79 50       		.byte	0x50
 3711 0a7a 01       		.uleb128 0x1
 3712 0a7b 31       		.byte	0x31
 3713 0a7c 00       		.byte	0
 3714 0a7d 1E       		.uleb128 0x1e
 3715 0a7e 66000000 		.4byte	.LVL123
 3716 0a82 67130000 		.4byte	0x1367
 3717 0a86 A00A0000 		.4byte	0xaa0
 3718 0a8a 1F       		.uleb128 0x1f
 3719 0a8b 01       		.uleb128 0x1
 3720 0a8c 50       		.byte	0x50
 3721 0a8d 05       		.uleb128 0x5
 3722 0a8e 0C       		.byte	0xc
 3723 0a8f 00040240 		.4byte	0x40020400
 3724 0a93 1F       		.uleb128 0x1f
 3725 0a94 01       		.uleb128 0x1
 3726 0a95 51       		.byte	0x51
 3727 0a96 02       		.uleb128 0x2
 3728 0a97 08       		.byte	0x8
 3729 0a98 F0       		.byte	0xf0
 3730 0a99 1F       		.uleb128 0x1f
 3731 0a9a 01       		.uleb128 0x1
 3732 0a9b 52       		.byte	0x52
 3733 0a9c 02       		.uleb128 0x2
 3734 0a9d 08       		.byte	0x8
 3735 0a9e 60       		.byte	0x60
 3736 0a9f 00       		.byte	0
 3737 0aa0 1E       		.uleb128 0x1e
 3738 0aa1 70000000 		.4byte	.LVL124
 3739 0aa5 67130000 		.4byte	0x1367
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 120


 3740 0aa9 C20A0000 		.4byte	0xac2
 3741 0aad 1F       		.uleb128 0x1f
 3742 0aae 01       		.uleb128 0x1
 3743 0aaf 50       		.byte	0x50
 3744 0ab0 05       		.uleb128 0x5
 3745 0ab1 0C       		.byte	0xc
 3746 0ab2 00040440 		.4byte	0x40040400
 3747 0ab6 1F       		.uleb128 0x1f
 3748 0ab7 01       		.uleb128 0x1
 3749 0ab8 51       		.byte	0x51
 3750 0ab9 01       		.uleb128 0x1
 3751 0aba 32       		.byte	0x32
 3752 0abb 1F       		.uleb128 0x1f
 3753 0abc 01       		.uleb128 0x1
 3754 0abd 52       		.byte	0x52
 3755 0abe 02       		.uleb128 0x2
 3756 0abf 74       		.byte	0x74
 3757 0ac0 00       		.sleb128 0
 3758 0ac1 00       		.byte	0
 3759 0ac2 1D       		.uleb128 0x1d
 3760 0ac3 A2000000 		.4byte	.LVL133
 3761 0ac7 BF070000 		.4byte	0x7bf
 3762 0acb 1D       		.uleb128 0x1d
 3763 0acc AA000000 		.4byte	.LVL134
 3764 0ad0 72130000 		.4byte	0x1372
 3765 0ad4 1D       		.uleb128 0x1d
 3766 0ad5 AE000000 		.4byte	.LVL135
 3767 0ad9 9A070000 		.4byte	0x79a
 3768 0add 00       		.byte	0
 3769 0ade 1C       		.uleb128 0x1c
 3770 0adf FF050000 		.4byte	.LASF133
 3771 0ae3 01       		.byte	0x1
 3772 0ae4 1E03     		.2byte	0x31e
 3773 0ae6 00000000 		.4byte	.LFB6
 3774 0aea 60000000 		.4byte	.LFE6-.LFB6
 3775 0aee 01       		.uleb128 0x1
 3776 0aef 9C       		.byte	0x9c
 3777 0af0 690B0000 		.4byte	0xb69
 3778 0af4 14       		.uleb128 0x14
 3779 0af5 9D010000 		.4byte	.LASF134
 3780 0af9 01       		.byte	0x1
 3781 0afa 1E03     		.2byte	0x31e
 3782 0afc 690B0000 		.4byte	0xb69
 3783 0b00 78060000 		.4byte	.LLST35
 3784 0b04 19       		.uleb128 0x19
 3785 0b05 E0000000 		.4byte	.LASF135
 3786 0b09 01       		.byte	0x1
 3787 0b0a 2003     		.2byte	0x320
 3788 0b0c 6B000000 		.4byte	0x6b
 3789 0b10 A4060000 		.4byte	.LLST36
 3790 0b14 19       		.uleb128 0x19
 3791 0b15 780C0000 		.4byte	.LASF136
 3792 0b19 01       		.byte	0x1
 3793 0b1a 2103     		.2byte	0x321
 3794 0b1c 83000000 		.4byte	0x83
 3795 0b20 C2060000 		.4byte	.LLST37
 3796 0b24 19       		.uleb128 0x19
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 121


 3797 0b25 D9080000 		.4byte	.LASF137
 3798 0b29 01       		.byte	0x1
 3799 0b2a 2703     		.2byte	0x327
 3800 0b2c 83000000 		.4byte	0x83
 3801 0b30 D5060000 		.4byte	.LLST38
 3802 0b34 19       		.uleb128 0x19
 3803 0b35 00000000 		.4byte	.LASF138
 3804 0b39 01       		.byte	0x1
 3805 0b3a 2903     		.2byte	0x329
 3806 0b3c 83000000 		.4byte	0x83
 3807 0b40 E8060000 		.4byte	.LLST39
 3808 0b44 1D       		.uleb128 0x1d
 3809 0b45 10000000 		.4byte	.LVL138
 3810 0b49 7D130000 		.4byte	0x137d
 3811 0b4d 1D       		.uleb128 0x1d
 3812 0b4e 2A000000 		.4byte	.LVL144
 3813 0b52 88130000 		.4byte	0x1388
 3814 0b56 1D       		.uleb128 0x1d
 3815 0b57 2E000000 		.4byte	.LVL145
 3816 0b5b 7D130000 		.4byte	0x137d
 3817 0b5f 1D       		.uleb128 0x1d
 3818 0b60 46000000 		.4byte	.LVL150
 3819 0b64 88130000 		.4byte	0x1388
 3820 0b68 00       		.byte	0
 3821 0b69 10       		.uleb128 0x10
 3822 0b6a 04       		.byte	0x4
 3823 0b6b 6F0B0000 		.4byte	0xb6f
 3824 0b6f 1B       		.uleb128 0x1b
 3825 0b70 AD010000 		.4byte	0x1ad
 3826 0b74 20       		.uleb128 0x20
 3827 0b75 55090000 		.4byte	.LASF168
 3828 0b79 01       		.byte	0x1
 3829 0b7a 9803     		.2byte	0x398
 3830 0b7c 83000000 		.4byte	0x83
 3831 0b80 00000000 		.4byte	.LFB7
 3832 0b84 2A000000 		.4byte	.LFE7-.LFB7
 3833 0b88 01       		.uleb128 0x1
 3834 0b89 9C       		.byte	0x9c
 3835 0b8a CF0B0000 		.4byte	0xbcf
 3836 0b8e 14       		.uleb128 0x14
 3837 0b8f 530C0000 		.4byte	.LASF105
 3838 0b93 01       		.byte	0x1
 3839 0b94 9803     		.2byte	0x398
 3840 0b96 83000000 		.4byte	0x83
 3841 0b9a FB060000 		.4byte	.LLST40
 3842 0b9e 14       		.uleb128 0x14
 3843 0b9f 11050000 		.4byte	.LASF24
 3844 0ba3 01       		.byte	0x1
 3845 0ba4 9803     		.2byte	0x398
 3846 0ba6 83000000 		.4byte	0x83
 3847 0baa 27070000 		.4byte	.LLST41
 3848 0bae 14       		.uleb128 0x14
 3849 0baf 79020000 		.4byte	.LASF139
 3850 0bb3 01       		.byte	0x1
 3851 0bb4 9803     		.2byte	0x398
 3852 0bb6 83000000 		.4byte	0x83
 3853 0bba 48070000 		.4byte	.LLST42
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 122


 3854 0bbe 19       		.uleb128 0x19
 3855 0bbf E2040000 		.4byte	.LASF140
 3856 0bc3 01       		.byte	0x1
 3857 0bc4 9A03     		.2byte	0x39a
 3858 0bc6 83000000 		.4byte	0x83
 3859 0bca 81070000 		.4byte	.LLST43
 3860 0bce 00       		.byte	0
 3861 0bcf 1C       		.uleb128 0x1c
 3862 0bd0 C1010000 		.4byte	.LASF141
 3863 0bd4 01       		.byte	0x1
 3864 0bd5 EA03     		.2byte	0x3ea
 3865 0bd7 00000000 		.4byte	.LFB8
 3866 0bdb 44000000 		.4byte	.LFE8-.LFB8
 3867 0bdf 01       		.uleb128 0x1
 3868 0be0 9C       		.byte	0x9c
 3869 0be1 2F0C0000 		.4byte	0xc2f
 3870 0be5 19       		.uleb128 0x19
 3871 0be6 530C0000 		.4byte	.LASF105
 3872 0bea 01       		.byte	0x1
 3873 0beb EC03     		.2byte	0x3ec
 3874 0bed 83000000 		.4byte	0x83
 3875 0bf1 9F070000 		.4byte	.LLST44
 3876 0bf5 19       		.uleb128 0x19
 3877 0bf6 79020000 		.4byte	.LASF139
 3878 0bfa 01       		.byte	0x1
 3879 0bfb ED03     		.2byte	0x3ed
 3880 0bfd 83000000 		.4byte	0x83
 3881 0c01 B2070000 		.4byte	.LLST45
 3882 0c05 19       		.uleb128 0x19
 3883 0c06 CB070000 		.4byte	.LASF131
 3884 0c0a 01       		.byte	0x1
 3885 0c0b EE03     		.2byte	0x3ee
 3886 0c0d 83000000 		.4byte	0x83
 3887 0c11 D2070000 		.4byte	.LLST46
 3888 0c15 19       		.uleb128 0x19
 3889 0c16 9D010000 		.4byte	.LASF134
 3890 0c1a 01       		.byte	0x1
 3891 0c1b F003     		.2byte	0x3f0
 3892 0c1d 690B0000 		.4byte	0xb69
 3893 0c21 E5070000 		.4byte	.LLST47
 3894 0c25 1D       		.uleb128 0x1d
 3895 0c26 38000000 		.4byte	.LVL172
 3896 0c2a 63070000 		.4byte	0x763
 3897 0c2e 00       		.byte	0
 3898 0c2f 1C       		.uleb128 0x1c
 3899 0c30 92030000 		.4byte	.LASF142
 3900 0c34 01       		.byte	0x1
 3901 0c35 5104     		.2byte	0x451
 3902 0c37 00000000 		.4byte	.LFB9
 3903 0c3b 1C000000 		.4byte	.LFE9-.LFB9
 3904 0c3f 01       		.uleb128 0x1
 3905 0c40 9C       		.byte	0x9c
 3906 0c41 7F0C0000 		.4byte	0xc7f
 3907 0c45 14       		.uleb128 0x14
 3908 0c46 9D010000 		.4byte	.LASF134
 3909 0c4a 01       		.byte	0x1
 3910 0c4b 5104     		.2byte	0x451
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 123


 3911 0c4d 690B0000 		.4byte	0xb69
 3912 0c51 04080000 		.4byte	.LLST48
 3913 0c55 19       		.uleb128 0x19
 3914 0c56 E2040000 		.4byte	.LASF140
 3915 0c5a 01       		.byte	0x1
 3916 0c5b 5404     		.2byte	0x454
 3917 0c5d 83000000 		.4byte	0x83
 3918 0c61 30080000 		.4byte	.LLST49
 3919 0c65 19       		.uleb128 0x19
 3920 0c66 530C0000 		.4byte	.LASF105
 3921 0c6a 01       		.byte	0x1
 3922 0c6b 5504     		.2byte	0x455
 3923 0c6d 83000000 		.4byte	0x83
 3924 0c71 43080000 		.4byte	.LLST50
 3925 0c75 1D       		.uleb128 0x1d
 3926 0c76 0E000000 		.4byte	.LVL175
 3927 0c7a 740B0000 		.4byte	0xb74
 3928 0c7e 00       		.byte	0
 3929 0c7f 21       		.uleb128 0x21
 3930 0c80 2C0B0000 		.4byte	.LASF144
 3931 0c84 01       		.byte	0x1
 3932 0c85 8B0A     		.2byte	0xa8b
 3933 0c87 03       		.byte	0x3
 3934 0c88 990C0000 		.4byte	0xc99
 3935 0c8c 1A       		.uleb128 0x1a
 3936 0c8d 83020000 		.4byte	.LASF143
 3937 0c91 01       		.byte	0x1
 3938 0c92 910A     		.2byte	0xa91
 3939 0c94 83000000 		.4byte	0x83
 3940 0c98 00       		.byte	0
 3941 0c99 21       		.uleb128 0x21
 3942 0c9a B7080000 		.4byte	.LASF145
 3943 0c9e 01       		.byte	0x1
 3944 0c9f 130A     		.2byte	0xa13
 3945 0ca1 03       		.byte	0x3
 3946 0ca2 B30C0000 		.4byte	0xcb3
 3947 0ca6 1A       		.uleb128 0x1a
 3948 0ca7 83020000 		.4byte	.LASF143
 3949 0cab 01       		.byte	0x1
 3950 0cac 160A     		.2byte	0xa16
 3951 0cae 83000000 		.4byte	0x83
 3952 0cb2 00       		.byte	0
 3953 0cb3 1C       		.uleb128 0x1c
 3954 0cb4 29040000 		.4byte	.LASF146
 3955 0cb8 01       		.byte	0x1
 3956 0cb9 2F05     		.2byte	0x52f
 3957 0cbb 00000000 		.4byte	.LFB12
 3958 0cbf F0000000 		.4byte	.LFE12-.LFB12
 3959 0cc3 01       		.uleb128 0x1
 3960 0cc4 9C       		.byte	0x9c
 3961 0cc5 4B0D0000 		.4byte	0xd4b
 3962 0cc9 22       		.uleb128 0x22
 3963 0cca 990C0000 		.4byte	0xc99
 3964 0cce 0E000000 		.4byte	.LBB6
 3965 0cd2 4C000000 		.4byte	.LBE6-.LBB6
 3966 0cd6 01       		.byte	0x1
 3967 0cd7 4C05     		.2byte	0x54c
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 124


 3968 0cd9 F10C0000 		.4byte	0xcf1
 3969 0cdd 23       		.uleb128 0x23
 3970 0cde 0E000000 		.4byte	.LBB7
 3971 0ce2 4C000000 		.4byte	.LBE7-.LBB7
 3972 0ce6 24       		.uleb128 0x24
 3973 0ce7 A60C0000 		.4byte	0xca6
 3974 0ceb 56080000 		.4byte	.LLST51
 3975 0cef 00       		.byte	0
 3976 0cf0 00       		.byte	0
 3977 0cf1 22       		.uleb128 0x22
 3978 0cf2 7F0C0000 		.4byte	0xc7f
 3979 0cf6 5A000000 		.4byte	.LBB8
 3980 0cfa 60000000 		.4byte	.LBE8-.LBB8
 3981 0cfe 01       		.byte	0x1
 3982 0cff 4F05     		.2byte	0x54f
 3983 0d01 3B0D0000 		.4byte	0xd3b
 3984 0d05 23       		.uleb128 0x23
 3985 0d06 5A000000 		.4byte	.LBB9
 3986 0d0a 60000000 		.4byte	.LBE9-.LBB9
 3987 0d0e 24       		.uleb128 0x24
 3988 0d0f 8C0C0000 		.4byte	0xc8c
 3989 0d13 76080000 		.4byte	.LLST52
 3990 0d17 1E       		.uleb128 0x1e
 3991 0d18 68000000 		.4byte	.LVL182
 3992 0d1c 93130000 		.4byte	0x1393
 3993 0d20 2A0D0000 		.4byte	0xd2a
 3994 0d24 1F       		.uleb128 0x1f
 3995 0d25 01       		.uleb128 0x1
 3996 0d26 50       		.byte	0x50
 3997 0d27 01       		.uleb128 0x1
 3998 0d28 3A       		.byte	0x3a
 3999 0d29 00       		.byte	0
 4000 0d2a 25       		.uleb128 0x25
 4001 0d2b 6E000000 		.4byte	.LVL183
 4002 0d2f 9E130000 		.4byte	0x139e
 4003 0d33 1F       		.uleb128 0x1f
 4004 0d34 01       		.uleb128 0x1
 4005 0d35 50       		.byte	0x50
 4006 0d36 01       		.uleb128 0x1
 4007 0d37 3A       		.byte	0x3a
 4008 0d38 00       		.byte	0
 4009 0d39 00       		.byte	0
 4010 0d3a 00       		.byte	0
 4011 0d3b 25       		.uleb128 0x25
 4012 0d3c 08000000 		.4byte	.LVL177
 4013 0d40 A9130000 		.4byte	0x13a9
 4014 0d44 1F       		.uleb128 0x1f
 4015 0d45 01       		.uleb128 0x1
 4016 0d46 50       		.byte	0x50
 4017 0d47 01       		.uleb128 0x1
 4018 0d48 3A       		.byte	0x3a
 4019 0d49 00       		.byte	0
 4020 0d4a 00       		.byte	0
 4021 0d4b 1C       		.uleb128 0x1c
 4022 0d4c 030C0000 		.4byte	.LASF147
 4023 0d50 01       		.byte	0x1
 4024 0d51 A005     		.2byte	0x5a0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 125


 4025 0d53 00000000 		.4byte	.LFB13
 4026 0d57 20000000 		.4byte	.LFE13-.LFB13
 4027 0d5b 01       		.uleb128 0x1
 4028 0d5c 9C       		.byte	0x9c
 4029 0d5d 7E0D0000 		.4byte	0xd7e
 4030 0d61 1E       		.uleb128 0x1e
 4031 0d62 12000000 		.4byte	.LVL188
 4032 0d66 B4130000 		.4byte	0x13b4
 4033 0d6a 740D0000 		.4byte	0xd74
 4034 0d6e 1F       		.uleb128 0x1f
 4035 0d6f 01       		.uleb128 0x1
 4036 0d70 50       		.byte	0x50
 4037 0d71 01       		.uleb128 0x1
 4038 0d72 3A       		.byte	0x3a
 4039 0d73 00       		.byte	0
 4040 0d74 1D       		.uleb128 0x1d
 4041 0d75 16000000 		.4byte	.LVL189
 4042 0d79 B30C0000 		.4byte	0xcb3
 4043 0d7d 00       		.byte	0
 4044 0d7e 1C       		.uleb128 0x1c
 4045 0d7f 610C0000 		.4byte	.LASF148
 4046 0d83 01       		.byte	0x1
 4047 0d84 C506     		.2byte	0x6c5
 4048 0d86 00000000 		.4byte	.LFB17
 4049 0d8a 34000000 		.4byte	.LFE17-.LFB17
 4050 0d8e 01       		.uleb128 0x1
 4051 0d8f 9C       		.byte	0x9c
 4052 0d90 F70D0000 		.4byte	0xdf7
 4053 0d94 14       		.uleb128 0x14
 4054 0d95 32000000 		.4byte	.LASF149
 4055 0d99 01       		.byte	0x1
 4056 0d9a C506     		.2byte	0x6c5
 4057 0d9c F70D0000 		.4byte	0xdf7
 4058 0da0 96080000 		.4byte	.LLST53
 4059 0da4 19       		.uleb128 0x19
 4060 0da5 5D030000 		.4byte	.LASF150
 4061 0da9 01       		.byte	0x1
 4062 0daa C706     		.2byte	0x6c7
 4063 0dac 83000000 		.4byte	0x83
 4064 0db0 C2080000 		.4byte	.LLST54
 4065 0db4 19       		.uleb128 0x19
 4066 0db5 E0000000 		.4byte	.LASF135
 4067 0db9 01       		.byte	0x1
 4068 0dba C806     		.2byte	0x6c8
 4069 0dbc 6B000000 		.4byte	0x6b
 4070 0dc0 EB080000 		.4byte	.LLST55
 4071 0dc4 19       		.uleb128 0x19
 4072 0dc5 78010000 		.4byte	.LASF151
 4073 0dc9 01       		.byte	0x1
 4074 0dca C906     		.2byte	0x6c9
 4075 0dcc 83000000 		.4byte	0x83
 4076 0dd0 FE080000 		.4byte	.LLST56
 4077 0dd4 19       		.uleb128 0x19
 4078 0dd5 36080000 		.4byte	.LASF152
 4079 0dd9 01       		.byte	0x1
 4080 0dda CA06     		.2byte	0x6ca
 4081 0ddc 83000000 		.4byte	0x83
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 126


 4082 0de0 11090000 		.4byte	.LLST57
 4083 0de4 1D       		.uleb128 0x1d
 4084 0de5 0C000000 		.4byte	.LVL193
 4085 0de9 7D130000 		.4byte	0x137d
 4086 0ded 1D       		.uleb128 0x1d
 4087 0dee 32000000 		.4byte	.LVL199
 4088 0df2 88130000 		.4byte	0x1388
 4089 0df6 00       		.byte	0
 4090 0df7 10       		.uleb128 0x10
 4091 0df8 04       		.byte	0x4
 4092 0df9 FD0D0000 		.4byte	0xdfd
 4093 0dfd 1B       		.uleb128 0x1b
 4094 0dfe 10060000 		.4byte	0x610
 4095 0e02 1C       		.uleb128 0x1c
 4096 0e03 FD030000 		.4byte	.LASF153
 4097 0e07 01       		.byte	0x1
 4098 0e08 E305     		.2byte	0x5e3
 4099 0e0a 00000000 		.4byte	.LFB14
 4100 0e0e A8000000 		.4byte	.LFE14-.LFB14
 4101 0e12 01       		.uleb128 0x1
 4102 0e13 9C       		.byte	0x9c
 4103 0e14 610E0000 		.4byte	0xe61
 4104 0e18 19       		.uleb128 0x19
 4105 0e19 9D010000 		.4byte	.LASF134
 4106 0e1d 01       		.byte	0x1
 4107 0e1e E505     		.2byte	0x5e5
 4108 0e20 690B0000 		.4byte	0xb69
 4109 0e24 24090000 		.4byte	.LLST58
 4110 0e28 1D       		.uleb128 0x1d
 4111 0e29 26000000 		.4byte	.LVL203
 4112 0e2d 51130000 		.4byte	0x1351
 4113 0e31 1E       		.uleb128 0x1e
 4114 0e32 5E000000 		.4byte	.LVL204
 4115 0e36 DE0A0000 		.4byte	0xade
 4116 0e3a 450E0000 		.4byte	0xe45
 4117 0e3e 1F       		.uleb128 0x1f
 4118 0e3f 01       		.uleb128 0x1
 4119 0e40 50       		.byte	0x50
 4120 0e41 02       		.uleb128 0x2
 4121 0e42 77       		.byte	0x77
 4122 0e43 00       		.sleb128 0
 4123 0e44 00       		.byte	0
 4124 0e45 1D       		.uleb128 0x1d
 4125 0e46 7E000000 		.4byte	.LVL205
 4126 0e4a 7E0D0000 		.4byte	0xd7e
 4127 0e4e 1D       		.uleb128 0x1d
 4128 0e4f 84000000 		.4byte	.LVL206
 4129 0e53 BF130000 		.4byte	0x13bf
 4130 0e57 1D       		.uleb128 0x1d
 4131 0e58 88000000 		.4byte	.LVL207
 4132 0e5c 4B0D0000 		.4byte	0xd4b
 4133 0e60 00       		.byte	0
 4134 0e61 1C       		.uleb128 0x1c
 4135 0e62 7A000000 		.4byte	.LASF154
 4136 0e66 01       		.byte	0x1
 4137 0e67 3606     		.2byte	0x636
 4138 0e69 00000000 		.4byte	.LFB15
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 127


 4139 0e6d 28000000 		.4byte	.LFE15-.LFB15
 4140 0e71 01       		.uleb128 0x1
 4141 0e72 9C       		.byte	0x9c
 4142 0e73 A10E0000 		.4byte	0xea1
 4143 0e77 14       		.uleb128 0x14
 4144 0e78 8A0C0000 		.4byte	.LASF108
 4145 0e7c 01       		.byte	0x1
 4146 0e7d 3606     		.2byte	0x636
 4147 0e7f 83000000 		.4byte	0x83
 4148 0e83 37090000 		.4byte	.LLST59
 4149 0e87 14       		.uleb128 0x14
 4150 0e88 94010000 		.4byte	.LASF155
 4151 0e8c 01       		.byte	0x1
 4152 0e8d 3606     		.2byte	0x636
 4153 0e8f 83000000 		.4byte	0x83
 4154 0e93 58090000 		.4byte	.LLST60
 4155 0e97 1D       		.uleb128 0x1d
 4156 0e98 1C000000 		.4byte	.LVL212
 4157 0e9c 7E0D0000 		.4byte	0xd7e
 4158 0ea0 00       		.byte	0
 4159 0ea1 1C       		.uleb128 0x1c
 4160 0ea2 D5030000 		.4byte	.LASF156
 4161 0ea6 01       		.byte	0x1
 4162 0ea7 F906     		.2byte	0x6f9
 4163 0ea9 00000000 		.4byte	.LFB18
 4164 0ead 64000000 		.4byte	.LFE18-.LFB18
 4165 0eb1 01       		.uleb128 0x1
 4166 0eb2 9C       		.byte	0x9c
 4167 0eb3 2A0F0000 		.4byte	0xf2a
 4168 0eb7 14       		.uleb128 0x14
 4169 0eb8 32000000 		.4byte	.LASF149
 4170 0ebc 01       		.byte	0x1
 4171 0ebd F906     		.2byte	0x6f9
 4172 0ebf F70D0000 		.4byte	0xdf7
 4173 0ec3 79090000 		.4byte	.LLST61
 4174 0ec7 19       		.uleb128 0x19
 4175 0ec8 E0000000 		.4byte	.LASF135
 4176 0ecc 01       		.byte	0x1
 4177 0ecd FB06     		.2byte	0x6fb
 4178 0ecf 6B000000 		.4byte	0x6b
 4179 0ed3 A5090000 		.4byte	.LLST62
 4180 0ed7 19       		.uleb128 0x19
 4181 0ed8 36080000 		.4byte	.LASF152
 4182 0edc 01       		.byte	0x1
 4183 0edd FC06     		.2byte	0x6fc
 4184 0edf 83000000 		.4byte	0x83
 4185 0ee3 B8090000 		.4byte	.LLST63
 4186 0ee7 19       		.uleb128 0x19
 4187 0ee8 78010000 		.4byte	.LASF151
 4188 0eec 01       		.byte	0x1
 4189 0eed FD06     		.2byte	0x6fd
 4190 0eef 83000000 		.4byte	0x83
 4191 0ef3 CB090000 		.4byte	.LLST64
 4192 0ef7 19       		.uleb128 0x19
 4193 0ef8 930C0000 		.4byte	.LASF157
 4194 0efc 01       		.byte	0x1
 4195 0efd FE06     		.2byte	0x6fe
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 128


 4196 0eff 83000000 		.4byte	0x83
 4197 0f03 DE090000 		.4byte	.LLST65
 4198 0f07 19       		.uleb128 0x19
 4199 0f08 07080000 		.4byte	.LASF158
 4200 0f0c 01       		.byte	0x1
 4201 0f0d FF06     		.2byte	0x6ff
 4202 0f0f 83000000 		.4byte	0x83
 4203 0f13 F1090000 		.4byte	.LLST66
 4204 0f17 1D       		.uleb128 0x1d
 4205 0f18 0C000000 		.4byte	.LVL216
 4206 0f1c 7D130000 		.4byte	0x137d
 4207 0f20 1D       		.uleb128 0x1d
 4208 0f21 5C000000 		.4byte	.LVL228
 4209 0f25 88130000 		.4byte	0x1388
 4210 0f29 00       		.byte	0
 4211 0f2a 1C       		.uleb128 0x1c
 4212 0f2b 4D080000 		.4byte	.LASF159
 4213 0f2f 01       		.byte	0x1
 4214 0f30 E102     		.2byte	0x2e1
 4215 0f32 00000000 		.4byte	.LFB5
 4216 0f36 24000000 		.4byte	.LFE5-.LFB5
 4217 0f3a 01       		.uleb128 0x1
 4218 0f3b 9C       		.byte	0x9c
 4219 0f3c 4A0F0000 		.4byte	0xf4a
 4220 0f40 1D       		.uleb128 0x1d
 4221 0f41 12000000 		.4byte	.LVL231
 4222 0f45 A10E0000 		.4byte	0xea1
 4223 0f49 00       		.byte	0
 4224 0f4a 1C       		.uleb128 0x1c
 4225 0f4b 3E0A0000 		.4byte	.LASF160
 4226 0f4f 01       		.byte	0x1
 4227 0f50 9B04     		.2byte	0x49b
 4228 0f52 00000000 		.4byte	.LFB10
 4229 0f56 5C000000 		.4byte	.LFE10-.LFB10
 4230 0f5a 01       		.uleb128 0x1
 4231 0f5b 9C       		.byte	0x9c
 4232 0f5c BA0F0000 		.4byte	0xfba
 4233 0f60 14       		.uleb128 0x14
 4234 0f61 8A0C0000 		.4byte	.LASF108
 4235 0f65 01       		.byte	0x1
 4236 0f66 9B04     		.2byte	0x49b
 4237 0f68 83000000 		.4byte	0x83
 4238 0f6c 0F0A0000 		.4byte	.LLST67
 4239 0f70 19       		.uleb128 0x19
 4240 0f71 9D010000 		.4byte	.LASF134
 4241 0f75 01       		.byte	0x1
 4242 0f76 9D04     		.2byte	0x49d
 4243 0f78 690B0000 		.4byte	0xb69
 4244 0f7c 300A0000 		.4byte	.LLST68
 4245 0f80 1E       		.uleb128 0x1e
 4246 0f81 1A000000 		.4byte	.LVL235
 4247 0f85 CA130000 		.4byte	0x13ca
 4248 0f89 930F0000 		.4byte	0xf93
 4249 0f8d 1F       		.uleb128 0x1f
 4250 0f8e 01       		.uleb128 0x1
 4251 0f8f 50       		.byte	0x50
 4252 0f90 01       		.uleb128 0x1
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 129


 4253 0f91 31       		.byte	0x31
 4254 0f92 00       		.byte	0
 4255 0f93 1D       		.uleb128 0x1d
 4256 0f94 1E000000 		.4byte	.LVL236
 4257 0f98 2A0F0000 		.4byte	0xf2a
 4258 0f9c 1E       		.uleb128 0x1e
 4259 0f9d 46000000 		.4byte	.LVL237
 4260 0fa1 2F0C0000 		.4byte	0xc2f
 4261 0fa5 B00F0000 		.4byte	0xfb0
 4262 0fa9 1F       		.uleb128 0x1f
 4263 0faa 01       		.uleb128 0x1
 4264 0fab 50       		.byte	0x50
 4265 0fac 02       		.uleb128 0x2
 4266 0fad 75       		.byte	0x75
 4267 0fae 00       		.sleb128 0
 4268 0faf 00       		.byte	0
 4269 0fb0 1D       		.uleb128 0x1d
 4270 0fb1 4A000000 		.4byte	.LVL238
 4271 0fb5 CF0B0000 		.4byte	0xbcf
 4272 0fb9 00       		.byte	0
 4273 0fba 1C       		.uleb128 0x1c
 4274 0fbb AC020000 		.4byte	.LASF161
 4275 0fbf 01       		.byte	0x1
 4276 0fc0 F104     		.2byte	0x4f1
 4277 0fc2 00000000 		.4byte	.LFB11
 4278 0fc6 70000000 		.4byte	.LFE11-.LFB11
 4279 0fca 01       		.uleb128 0x1
 4280 0fcb 9C       		.byte	0x9c
 4281 0fcc 3C100000 		.4byte	0x103c
 4282 0fd0 14       		.uleb128 0x14
 4283 0fd1 8A0C0000 		.4byte	.LASF108
 4284 0fd5 01       		.byte	0x1
 4285 0fd6 F104     		.2byte	0x4f1
 4286 0fd8 83000000 		.4byte	0x83
 4287 0fdc 430A0000 		.4byte	.LLST69
 4288 0fe0 14       		.uleb128 0x14
 4289 0fe1 94010000 		.4byte	.LASF155
 4290 0fe5 01       		.byte	0x1
 4291 0fe6 F104     		.2byte	0x4f1
 4292 0fe8 83000000 		.4byte	0x83
 4293 0fec 640A0000 		.4byte	.LLST70
 4294 0ff0 19       		.uleb128 0x19
 4295 0ff1 9D010000 		.4byte	.LASF134
 4296 0ff5 01       		.byte	0x1
 4297 0ff6 F304     		.2byte	0x4f3
 4298 0ff8 690B0000 		.4byte	0xb69
 4299 0ffc 850A0000 		.4byte	.LLST71
 4300 1000 1E       		.uleb128 0x1e
 4301 1001 2A000000 		.4byte	.LVL243
 4302 1005 4A0F0000 		.4byte	0xf4a
 4303 1009 15100000 		.4byte	0x1015
 4304 100d 1F       		.uleb128 0x1f
 4305 100e 01       		.uleb128 0x1
 4306 100f 50       		.byte	0x50
 4307 1010 03       		.uleb128 0x3
 4308 1011 F3       		.byte	0xf3
 4309 1012 01       		.uleb128 0x1
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 130


 4310 1013 50       		.byte	0x50
 4311 1014 00       		.byte	0
 4312 1015 1E       		.uleb128 0x1e
 4313 1016 30000000 		.4byte	.LVL244
 4314 101a DE0A0000 		.4byte	0xade
 4315 101e 29100000 		.4byte	0x1029
 4316 1022 1F       		.uleb128 0x1f
 4317 1023 01       		.uleb128 0x1
 4318 1024 50       		.byte	0x50
 4319 1025 02       		.uleb128 0x2
 4320 1026 75       		.byte	0x75
 4321 1027 00       		.sleb128 0
 4322 1028 00       		.byte	0
 4323 1029 1D       		.uleb128 0x1d
 4324 102a 48000000 		.4byte	.LVL245
 4325 102e 7E0D0000 		.4byte	0xd7e
 4326 1032 1D       		.uleb128 0x1d
 4327 1033 54000000 		.4byte	.LVL246
 4328 1037 BF130000 		.4byte	0x13bf
 4329 103b 00       		.byte	0
 4330 103c 15       		.uleb128 0x15
 4331 103d 2C050000 		.4byte	.LASF162
 4332 1041 01       		.byte	0x1
 4333 1042 7E08     		.2byte	0x87e
 4334 1044 00000000 		.4byte	.LFB22
 4335 1048 70010000 		.4byte	.LFE22-.LFB22
 4336 104c 01       		.uleb128 0x1
 4337 104d 9C       		.byte	0x9c
 4338 104e 7B110000 		.4byte	0x117b
 4339 1052 14       		.uleb128 0x14
 4340 1053 8A0C0000 		.4byte	.LASF108
 4341 1057 01       		.byte	0x1
 4342 1058 7E08     		.2byte	0x87e
 4343 105a 83000000 		.4byte	0x83
 4344 105e 980A0000 		.4byte	.LLST72
 4345 1062 14       		.uleb128 0x14
 4346 1063 85030000 		.4byte	.LASF109
 4347 1067 01       		.byte	0x1
 4348 1068 7E08     		.2byte	0x87e
 4349 106a 83000000 		.4byte	0x83
 4350 106e C20A0000 		.4byte	.LLST73
 4351 1072 19       		.uleb128 0x19
 4352 1073 1A070000 		.4byte	.LASF113
 4353 1077 01       		.byte	0x1
 4354 1078 8008     		.2byte	0x880
 4355 107a 83000000 		.4byte	0x83
 4356 107e E30A0000 		.4byte	.LLST74
 4357 1082 19       		.uleb128 0x19
 4358 1083 E3050000 		.4byte	.LASF114
 4359 1087 01       		.byte	0x1
 4360 1088 8108     		.2byte	0x881
 4361 108a 83000000 		.4byte	0x83
 4362 108e 1A0B0000 		.4byte	.LLST75
 4363 1092 19       		.uleb128 0x19
 4364 1093 11030000 		.4byte	.LASF163
 4365 1097 01       		.byte	0x1
 4366 1098 8208     		.2byte	0x882
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 131


 4367 109a 83000000 		.4byte	0x83
 4368 109e 010C0000 		.4byte	.LLST76
 4369 10a2 19       		.uleb128 0x19
 4370 10a3 B2080000 		.4byte	.LASF164
 4371 10a7 01       		.byte	0x1
 4372 10a8 8308     		.2byte	0x883
 4373 10aa 83000000 		.4byte	0x83
 4374 10ae 210C0000 		.4byte	.LLST77
 4375 10b2 19       		.uleb128 0x19
 4376 10b3 83020000 		.4byte	.LASF143
 4377 10b7 01       		.byte	0x1
 4378 10b8 8408     		.2byte	0x884
 4379 10ba 83000000 		.4byte	0x83
 4380 10be 3F0C0000 		.4byte	.LLST78
 4381 10c2 19       		.uleb128 0x19
 4382 10c3 480C0000 		.4byte	.LASF165
 4383 10c7 01       		.byte	0x1
 4384 10c8 8608     		.2byte	0x886
 4385 10ca EB060000 		.4byte	0x6eb
 4386 10ce 950C0000 		.4byte	.LLST79
 4387 10d2 19       		.uleb128 0x19
 4388 10d3 B4050000 		.4byte	.LASF166
 4389 10d7 01       		.byte	0x1
 4390 10d8 8708     		.2byte	0x887
 4391 10da EB060000 		.4byte	0x6eb
 4392 10de B50C0000 		.4byte	.LLST80
 4393 10e2 16       		.uleb128 0x16
 4394 10e3 B2040000 		.4byte	.LASF123
 4395 10e7 01       		.byte	0x1
 4396 10e8 8908     		.2byte	0x889
 4397 10ea 96010000 		.4byte	0x196
 4398 10ee 02       		.uleb128 0x2
 4399 10ef 91       		.byte	0x91
 4400 10f0 64       		.sleb128 -28
 4401 10f1 19       		.uleb128 0x19
 4402 10f2 F1040000 		.4byte	.LASF118
 4403 10f6 01       		.byte	0x1
 4404 10f7 9008     		.2byte	0x890
 4405 10f9 E5060000 		.4byte	0x6e5
 4406 10fd 120D0000 		.4byte	.LLST81
 4407 1101 1A       		.uleb128 0x1a
 4408 1102 0F010000 		.4byte	.LASF121
 4409 1106 01       		.byte	0x1
 4410 1107 9108     		.2byte	0x891
 4411 1109 98080000 		.4byte	0x898
 4412 110d 19       		.uleb128 0x19
 4413 110e 78030000 		.4byte	.LASF117
 4414 1112 01       		.byte	0x1
 4415 1113 9208     		.2byte	0x892
 4416 1115 A3080000 		.4byte	0x8a3
 4417 1119 250D0000 		.4byte	.LLST82
 4418 111d 1E       		.uleb128 0x1e
 4419 111e 86000000 		.4byte	.LVL268
 4420 1122 BA0F0000 		.4byte	0xfba
 4421 1126 39110000 		.4byte	0x1139
 4422 112a 1F       		.uleb128 0x1f
 4423 112b 01       		.uleb128 0x1
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 132


 4424 112c 50       		.byte	0x50
 4425 112d 03       		.uleb128 0x3
 4426 112e 91       		.byte	0x91
 4427 112f 5C       		.sleb128 -36
 4428 1130 06       		.byte	0x6
 4429 1131 1F       		.uleb128 0x1f
 4430 1132 01       		.uleb128 0x1
 4431 1133 51       		.byte	0x51
 4432 1134 03       		.uleb128 0x3
 4433 1135 7D       		.byte	0x7d
 4434 1136 00       		.sleb128 0
 4435 1137 06       		.byte	0x6
 4436 1138 00       		.byte	0
 4437 1139 1E       		.uleb128 0x1e
 4438 113a 8C000000 		.4byte	.LVL269
 4439 113e 5C130000 		.4byte	0x135c
 4440 1142 4C110000 		.4byte	0x114c
 4441 1146 1F       		.uleb128 0x1f
 4442 1147 01       		.uleb128 0x1
 4443 1148 50       		.byte	0x50
 4444 1149 01       		.uleb128 0x1
 4445 114a 31       		.byte	0x31
 4446 114b 00       		.byte	0
 4447 114c 1D       		.uleb128 0x1d
 4448 114d 90000000 		.4byte	.LVL270
 4449 1151 4B0D0000 		.4byte	0xd4b
 4450 1155 1E       		.uleb128 0x1e
 4451 1156 14010000 		.4byte	.LVL286
 4452 115a BA0F0000 		.4byte	0xfba
 4453 115e 71110000 		.4byte	0x1171
 4454 1162 1F       		.uleb128 0x1f
 4455 1163 01       		.uleb128 0x1
 4456 1164 50       		.byte	0x50
 4457 1165 03       		.uleb128 0x3
 4458 1166 91       		.byte	0x91
 4459 1167 5C       		.sleb128 -36
 4460 1168 06       		.byte	0x6
 4461 1169 1F       		.uleb128 0x1f
 4462 116a 01       		.uleb128 0x1
 4463 116b 51       		.byte	0x51
 4464 116c 03       		.uleb128 0x3
 4465 116d 7D       		.byte	0x7d
 4466 116e 00       		.sleb128 0
 4467 116f 06       		.byte	0x6
 4468 1170 00       		.byte	0
 4469 1171 1D       		.uleb128 0x1d
 4470 1172 18010000 		.4byte	.LVL287
 4471 1176 4B0D0000 		.4byte	0xd4b
 4472 117a 00       		.byte	0
 4473 117b 1C       		.uleb128 0x1c
 4474 117c 95070000 		.4byte	.LASF167
 4475 1180 01       		.byte	0x1
 4476 1181 7C06     		.2byte	0x67c
 4477 1183 00000000 		.4byte	.LFB16
 4478 1187 28000000 		.4byte	.LFE16-.LFB16
 4479 118b 01       		.uleb128 0x1
 4480 118c 9C       		.byte	0x9c
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 133


 4481 118d BB110000 		.4byte	0x11bb
 4482 1191 14       		.uleb128 0x14
 4483 1192 8A0C0000 		.4byte	.LASF108
 4484 1196 01       		.byte	0x1
 4485 1197 7C06     		.2byte	0x67c
 4486 1199 83000000 		.4byte	0x83
 4487 119d 430D0000 		.4byte	.LLST83
 4488 11a1 14       		.uleb128 0x14
 4489 11a2 94010000 		.4byte	.LASF155
 4490 11a6 01       		.byte	0x1
 4491 11a7 7C06     		.2byte	0x67c
 4492 11a9 83000000 		.4byte	0x83
 4493 11ad 640D0000 		.4byte	.LLST84
 4494 11b1 1D       		.uleb128 0x1d
 4495 11b2 1C000000 		.4byte	.LVL304
 4496 11b6 A10E0000 		.4byte	0xea1
 4497 11ba 00       		.byte	0
 4498 11bb 26       		.uleb128 0x26
 4499 11bc 5C010000 		.4byte	.LASF169
 4500 11c0 01       		.byte	0x1
 4501 11c1 7009     		.2byte	0x970
 4502 11c3 A4000000 		.4byte	0xa4
 4503 11c7 00000000 		.4byte	.LFB23
 4504 11cb 78000000 		.4byte	.LFE23-.LFB23
 4505 11cf 01       		.uleb128 0x1
 4506 11d0 9C       		.byte	0x9c
 4507 11d1 B1120000 		.4byte	0x12b1
 4508 11d5 14       		.uleb128 0x14
 4509 11d6 8A0C0000 		.4byte	.LASF108
 4510 11da 01       		.byte	0x1
 4511 11db 7009     		.2byte	0x970
 4512 11dd 83000000 		.4byte	0x83
 4513 11e1 850D0000 		.4byte	.LLST85
 4514 11e5 14       		.uleb128 0x14
 4515 11e6 85030000 		.4byte	.LASF109
 4516 11ea 01       		.byte	0x1
 4517 11eb 7009     		.2byte	0x970
 4518 11ed 83000000 		.4byte	0x83
 4519 11f1 C70D0000 		.4byte	.LLST86
 4520 11f5 19       		.uleb128 0x19
 4521 11f6 9B050000 		.4byte	.LASF111
 4522 11fa 01       		.byte	0x1
 4523 11fb 7209     		.2byte	0x972
 4524 11fd A4000000 		.4byte	0xa4
 4525 1201 090E0000 		.4byte	.LLST87
 4526 1205 19       		.uleb128 0x19
 4527 1206 83020000 		.4byte	.LASF143
 4528 120a 01       		.byte	0x1
 4529 120b 7309     		.2byte	0x973
 4530 120d 83000000 		.4byte	0x83
 4531 1211 3F0E0000 		.4byte	.LLST88
 4532 1215 19       		.uleb128 0x19
 4533 1216 BD0A0000 		.4byte	.LASF170
 4534 121a 01       		.byte	0x1
 4535 121b 7609     		.2byte	0x976
 4536 121d 83000000 		.4byte	0x83
 4537 1221 6D0E0000 		.4byte	.LLST89
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 134


 4538 1225 19       		.uleb128 0x19
 4539 1226 0F010000 		.4byte	.LASF121
 4540 122a 01       		.byte	0x1
 4541 122b 7909     		.2byte	0x979
 4542 122d 98080000 		.4byte	0x898
 4543 1231 800E0000 		.4byte	.LLST90
 4544 1235 1E       		.uleb128 0x1e
 4545 1236 26000000 		.4byte	.LVL309
 4546 123a 3C100000 		.4byte	0x103c
 4547 123e 4F120000 		.4byte	0x124f
 4548 1242 1F       		.uleb128 0x1f
 4549 1243 01       		.uleb128 0x1
 4550 1244 50       		.byte	0x50
 4551 1245 02       		.uleb128 0x2
 4552 1246 74       		.byte	0x74
 4553 1247 00       		.sleb128 0
 4554 1248 1F       		.uleb128 0x1f
 4555 1249 01       		.uleb128 0x1
 4556 124a 51       		.byte	0x51
 4557 124b 02       		.uleb128 0x2
 4558 124c 75       		.byte	0x75
 4559 124d 00       		.sleb128 0
 4560 124e 00       		.byte	0
 4561 124f 1E       		.uleb128 0x1e
 4562 1250 2C000000 		.4byte	.LVL310
 4563 1254 A9080000 		.4byte	0x8a9
 4564 1258 63120000 		.4byte	0x1263
 4565 125c 1F       		.uleb128 0x1f
 4566 125d 01       		.uleb128 0x1
 4567 125e 50       		.byte	0x50
 4568 125f 02       		.uleb128 0x2
 4569 1260 76       		.byte	0x76
 4570 1261 00       		.sleb128 0
 4571 1262 00       		.byte	0
 4572 1263 1E       		.uleb128 0x1e
 4573 1264 38000000 		.4byte	.LVL312
 4574 1268 64090000 		.4byte	0x964
 4575 126c 7D120000 		.4byte	0x127d
 4576 1270 1F       		.uleb128 0x1f
 4577 1271 01       		.uleb128 0x1
 4578 1272 50       		.byte	0x50
 4579 1273 02       		.uleb128 0x2
 4580 1274 76       		.byte	0x76
 4581 1275 00       		.sleb128 0
 4582 1276 1F       		.uleb128 0x1f
 4583 1277 01       		.uleb128 0x1
 4584 1278 51       		.byte	0x51
 4585 1279 02       		.uleb128 0x2
 4586 127a 75       		.byte	0x75
 4587 127b 00       		.sleb128 0
 4588 127c 00       		.byte	0
 4589 127d 1E       		.uleb128 0x1e
 4590 127e 3E000000 		.4byte	.LVL313
 4591 1282 4A0F0000 		.4byte	0xf4a
 4592 1286 91120000 		.4byte	0x1291
 4593 128a 1F       		.uleb128 0x1f
 4594 128b 01       		.uleb128 0x1
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 135


 4595 128c 50       		.byte	0x50
 4596 128d 02       		.uleb128 0x2
 4597 128e 74       		.byte	0x74
 4598 128f 00       		.sleb128 0
 4599 1290 00       		.byte	0
 4600 1291 1D       		.uleb128 0x1d
 4601 1292 42000000 		.4byte	.LVL314
 4602 1296 020E0000 		.4byte	0xe02
 4603 129a 25       		.uleb128 0x25
 4604 129b 60000000 		.4byte	.LVL317
 4605 129f D1070000 		.4byte	0x7d1
 4606 12a3 1F       		.uleb128 0x1f
 4607 12a4 01       		.uleb128 0x1
 4608 12a5 50       		.byte	0x50
 4609 12a6 02       		.uleb128 0x2
 4610 12a7 74       		.byte	0x74
 4611 12a8 00       		.sleb128 0
 4612 12a9 1F       		.uleb128 0x1f
 4613 12aa 01       		.uleb128 0x1
 4614 12ab 51       		.byte	0x51
 4615 12ac 02       		.uleb128 0x2
 4616 12ad 75       		.byte	0x75
 4617 12ae 00       		.sleb128 0
 4618 12af 00       		.byte	0
 4619 12b0 00       		.byte	0
 4620 12b1 27       		.uleb128 0x27
 4621 12b2 18080000 		.4byte	.LASF171
 4622 12b6 01       		.byte	0x1
 4623 12b7 7B       		.byte	0x7b
 4624 12b8 6B000000 		.4byte	0x6b
 4625 12bc 05       		.uleb128 0x5
 4626 12bd 03       		.byte	0x3
 4627 12be 00000000 		.4byte	capsense_eleCsdDisconnectFlag
 4628 12c2 28       		.uleb128 0x28
 4629 12c3 8C050000 		.4byte	.LASF172
 4630 12c7 04       		.byte	0x4
 4631 12c8 C604     		.2byte	0x4c6
 4632 12ca 7F050000 		.4byte	0x57f
 4633 12ce 28       		.uleb128 0x28
 4634 12cf 00030000 		.4byte	.LASF173
 4635 12d3 04       		.byte	0x4
 4636 12d4 C704     		.2byte	0x4c7
 4637 12d6 DA120000 		.4byte	0x12da
 4638 12da 1B       		.uleb128 0x1b
 4639 12db 24070000 		.4byte	0x724
 4640 12df 29       		.uleb128 0x29
 4641 12e0 48030000 		.4byte	.LASF174
 4642 12e4 05       		.byte	0x5
 4643 12e5 B1       		.byte	0xb1
 4644 12e6 B0000000 		.4byte	0xb0
 4645 12ea 29       		.uleb128 0x29
 4646 12eb 42060000 		.4byte	.LASF175
 4647 12ef 05       		.byte	0x5
 4648 12f0 B2       		.byte	0xb2
 4649 12f1 B0000000 		.4byte	0xb0
 4650 12f5 29       		.uleb128 0x29
 4651 12f6 C5040000 		.4byte	.LASF176
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 136


 4652 12fa 05       		.byte	0x5
 4653 12fb B5       		.byte	0xb5
 4654 12fc E5060000 		.4byte	0x6e5
 4655 1300 29       		.uleb128 0x29
 4656 1301 C60C0000 		.4byte	.LASF177
 4657 1305 05       		.byte	0x5
 4658 1306 BC       		.byte	0xbc
 4659 1307 0B130000 		.4byte	0x130b
 4660 130b 1B       		.uleb128 0x1b
 4661 130c 6B000000 		.4byte	0x6b
 4662 1310 29       		.uleb128 0x29
 4663 1311 6A0B0000 		.4byte	.LASF178
 4664 1315 05       		.byte	0x5
 4665 1316 CA       		.byte	0xca
 4666 1317 F70D0000 		.4byte	0xdf7
 4667 131b 0A       		.uleb128 0xa
 4668 131c 2B130000 		.4byte	0x132b
 4669 1320 2B130000 		.4byte	0x132b
 4670 1324 0B       		.uleb128 0xb
 4671 1325 A6010000 		.4byte	0x1a6
 4672 1329 05       		.byte	0x5
 4673 132a 00       		.byte	0
 4674 132b 1B       		.uleb128 0x1b
 4675 132c 58070000 		.4byte	0x758
 4676 1330 29       		.uleb128 0x29
 4677 1331 3A070000 		.4byte	.LASF179
 4678 1335 05       		.byte	0x5
 4679 1336 F5       		.byte	0xf5
 4680 1337 3B130000 		.4byte	0x133b
 4681 133b 1B       		.uleb128 0x1b
 4682 133c 1B130000 		.4byte	0x131b
 4683 1340 2A       		.uleb128 0x2a
 4684 1341 FE040000 		.4byte	.LASF180
 4685 1345 01       		.byte	0x1
 4686 1346 74       		.byte	0x74
 4687 1347 83000000 		.4byte	0x83
 4688 134b 05       		.uleb128 0x5
 4689 134c 03       		.byte	0x3
 4690 134d 00000000 		.4byte	capsense_configCsd
 4691 1351 2B       		.uleb128 0x2b
 4692 1352 E3070000 		.4byte	.LASF181
 4693 1356 E3070000 		.4byte	.LASF181
 4694 135a 05       		.byte	0x5
 4695 135b 84       		.byte	0x84
 4696 135c 2B       		.uleb128 0x2b
 4697 135d EF000000 		.4byte	.LASF182
 4698 1361 EF000000 		.4byte	.LASF182
 4699 1365 05       		.byte	0x5
 4700 1366 A8       		.byte	0xa8
 4701 1367 2B       		.uleb128 0x2b
 4702 1368 23070000 		.4byte	.LASF183
 4703 136c 23070000 		.4byte	.LASF183
 4704 1370 05       		.byte	0x5
 4705 1371 A9       		.byte	0xa9
 4706 1372 2B       		.uleb128 0x2b
 4707 1373 3D000000 		.4byte	.LASF184
 4708 1377 3D000000 		.4byte	.LASF184
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 137


 4709 137b 05       		.byte	0x5
 4710 137c 7F       		.byte	0x7f
 4711 137d 2B       		.uleb128 0x2b
 4712 137e E50A0000 		.4byte	.LASF185
 4713 1382 E50A0000 		.4byte	.LASF185
 4714 1386 06       		.byte	0x6
 4715 1387 F8       		.byte	0xf8
 4716 1388 2B       		.uleb128 0x2b
 4717 1389 9C040000 		.4byte	.LASF186
 4718 138d 9C040000 		.4byte	.LASF186
 4719 1391 06       		.byte	0x6
 4720 1392 F9       		.byte	0xf9
 4721 1393 2B       		.uleb128 0x2b
 4722 1394 85040000 		.4byte	.LASF187
 4723 1398 85040000 		.4byte	.LASF187
 4724 139c 06       		.byte	0x6
 4725 139d DB       		.byte	0xdb
 4726 139e 2B       		.uleb128 0x2b
 4727 139f AA0A0000 		.4byte	.LASF188
 4728 13a3 AA0A0000 		.4byte	.LASF188
 4729 13a7 06       		.byte	0x6
 4730 13a8 D6       		.byte	0xd6
 4731 13a9 2B       		.uleb128 0x2b
 4732 13aa 4F010000 		.4byte	.LASF189
 4733 13ae 4F010000 		.4byte	.LASF189
 4734 13b2 06       		.byte	0x6
 4735 13b3 D8       		.byte	0xd8
 4736 13b4 2B       		.uleb128 0x2b
 4737 13b5 C7020000 		.4byte	.LASF190
 4738 13b9 C7020000 		.4byte	.LASF190
 4739 13bd 06       		.byte	0x6
 4740 13be ED       		.byte	0xed
 4741 13bf 2B       		.uleb128 0x2b
 4742 13c0 3A010000 		.4byte	.LASF191
 4743 13c4 3A010000 		.4byte	.LASF191
 4744 13c8 07       		.byte	0x7
 4745 13c9 18       		.byte	0x18
 4746 13ca 2B       		.uleb128 0x2b
 4747 13cb 8C0B0000 		.4byte	.LASF192
 4748 13cf 8C0B0000 		.4byte	.LASF192
 4749 13d3 05       		.byte	0x5
 4750 13d4 85       		.byte	0x85
 4751 13d5 00       		.byte	0
 4752              		.section	.debug_abbrev,"",%progbits
 4753              	.Ldebug_abbrev0:
 4754 0000 01       		.uleb128 0x1
 4755 0001 11       		.uleb128 0x11
 4756 0002 01       		.byte	0x1
 4757 0003 25       		.uleb128 0x25
 4758 0004 0E       		.uleb128 0xe
 4759 0005 13       		.uleb128 0x13
 4760 0006 0B       		.uleb128 0xb
 4761 0007 03       		.uleb128 0x3
 4762 0008 0E       		.uleb128 0xe
 4763 0009 1B       		.uleb128 0x1b
 4764 000a 0E       		.uleb128 0xe
 4765 000b 55       		.uleb128 0x55
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 138


 4766 000c 17       		.uleb128 0x17
 4767 000d 11       		.uleb128 0x11
 4768 000e 01       		.uleb128 0x1
 4769 000f 10       		.uleb128 0x10
 4770 0010 17       		.uleb128 0x17
 4771 0011 00       		.byte	0
 4772 0012 00       		.byte	0
 4773 0013 02       		.uleb128 0x2
 4774 0014 24       		.uleb128 0x24
 4775 0015 00       		.byte	0
 4776 0016 0B       		.uleb128 0xb
 4777 0017 0B       		.uleb128 0xb
 4778 0018 3E       		.uleb128 0x3e
 4779 0019 0B       		.uleb128 0xb
 4780 001a 03       		.uleb128 0x3
 4781 001b 0E       		.uleb128 0xe
 4782 001c 00       		.byte	0
 4783 001d 00       		.byte	0
 4784 001e 03       		.uleb128 0x3
 4785 001f 24       		.uleb128 0x24
 4786 0020 00       		.byte	0
 4787 0021 0B       		.uleb128 0xb
 4788 0022 0B       		.uleb128 0xb
 4789 0023 3E       		.uleb128 0x3e
 4790 0024 0B       		.uleb128 0xb
 4791 0025 03       		.uleb128 0x3
 4792 0026 08       		.uleb128 0x8
 4793 0027 00       		.byte	0
 4794 0028 00       		.byte	0
 4795 0029 04       		.uleb128 0x4
 4796 002a 16       		.uleb128 0x16
 4797 002b 00       		.byte	0
 4798 002c 03       		.uleb128 0x3
 4799 002d 0E       		.uleb128 0xe
 4800 002e 3A       		.uleb128 0x3a
 4801 002f 0B       		.uleb128 0xb
 4802 0030 3B       		.uleb128 0x3b
 4803 0031 05       		.uleb128 0x5
 4804 0032 49       		.uleb128 0x49
 4805 0033 13       		.uleb128 0x13
 4806 0034 00       		.byte	0
 4807 0035 00       		.byte	0
 4808 0036 05       		.uleb128 0x5
 4809 0037 35       		.uleb128 0x35
 4810 0038 00       		.byte	0
 4811 0039 49       		.uleb128 0x49
 4812 003a 13       		.uleb128 0x13
 4813 003b 00       		.byte	0
 4814 003c 00       		.byte	0
 4815 003d 06       		.uleb128 0x6
 4816 003e 04       		.uleb128 0x4
 4817 003f 01       		.byte	0x1
 4818 0040 0B       		.uleb128 0xb
 4819 0041 0B       		.uleb128 0xb
 4820 0042 49       		.uleb128 0x49
 4821 0043 13       		.uleb128 0x13
 4822 0044 3A       		.uleb128 0x3a
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 139


 4823 0045 0B       		.uleb128 0xb
 4824 0046 3B       		.uleb128 0x3b
 4825 0047 0B       		.uleb128 0xb
 4826 0048 01       		.uleb128 0x1
 4827 0049 13       		.uleb128 0x13
 4828 004a 00       		.byte	0
 4829 004b 00       		.byte	0
 4830 004c 07       		.uleb128 0x7
 4831 004d 28       		.uleb128 0x28
 4832 004e 00       		.byte	0
 4833 004f 03       		.uleb128 0x3
 4834 0050 0E       		.uleb128 0xe
 4835 0051 1C       		.uleb128 0x1c
 4836 0052 0B       		.uleb128 0xb
 4837 0053 00       		.byte	0
 4838 0054 00       		.byte	0
 4839 0055 08       		.uleb128 0x8
 4840 0056 13       		.uleb128 0x13
 4841 0057 01       		.byte	0x1
 4842 0058 0B       		.uleb128 0xb
 4843 0059 0B       		.uleb128 0xb
 4844 005a 3A       		.uleb128 0x3a
 4845 005b 0B       		.uleb128 0xb
 4846 005c 3B       		.uleb128 0x3b
 4847 005d 0B       		.uleb128 0xb
 4848 005e 01       		.uleb128 0x1
 4849 005f 13       		.uleb128 0x13
 4850 0060 00       		.byte	0
 4851 0061 00       		.byte	0
 4852 0062 09       		.uleb128 0x9
 4853 0063 0D       		.uleb128 0xd
 4854 0064 00       		.byte	0
 4855 0065 03       		.uleb128 0x3
 4856 0066 0E       		.uleb128 0xe
 4857 0067 3A       		.uleb128 0x3a
 4858 0068 0B       		.uleb128 0xb
 4859 0069 3B       		.uleb128 0x3b
 4860 006a 0B       		.uleb128 0xb
 4861 006b 49       		.uleb128 0x49
 4862 006c 13       		.uleb128 0x13
 4863 006d 38       		.uleb128 0x38
 4864 006e 0B       		.uleb128 0xb
 4865 006f 00       		.byte	0
 4866 0070 00       		.byte	0
 4867 0071 0A       		.uleb128 0xa
 4868 0072 01       		.uleb128 0x1
 4869 0073 01       		.byte	0x1
 4870 0074 49       		.uleb128 0x49
 4871 0075 13       		.uleb128 0x13
 4872 0076 01       		.uleb128 0x1
 4873 0077 13       		.uleb128 0x13
 4874 0078 00       		.byte	0
 4875 0079 00       		.byte	0
 4876 007a 0B       		.uleb128 0xb
 4877 007b 21       		.uleb128 0x21
 4878 007c 00       		.byte	0
 4879 007d 49       		.uleb128 0x49
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 140


 4880 007e 13       		.uleb128 0x13
 4881 007f 2F       		.uleb128 0x2f
 4882 0080 0B       		.uleb128 0xb
 4883 0081 00       		.byte	0
 4884 0082 00       		.byte	0
 4885 0083 0C       		.uleb128 0xc
 4886 0084 16       		.uleb128 0x16
 4887 0085 00       		.byte	0
 4888 0086 03       		.uleb128 0x3
 4889 0087 0E       		.uleb128 0xe
 4890 0088 3A       		.uleb128 0x3a
 4891 0089 0B       		.uleb128 0xb
 4892 008a 3B       		.uleb128 0x3b
 4893 008b 0B       		.uleb128 0xb
 4894 008c 49       		.uleb128 0x49
 4895 008d 13       		.uleb128 0x13
 4896 008e 00       		.byte	0
 4897 008f 00       		.byte	0
 4898 0090 0D       		.uleb128 0xd
 4899 0091 0D       		.uleb128 0xd
 4900 0092 00       		.byte	0
 4901 0093 03       		.uleb128 0x3
 4902 0094 0E       		.uleb128 0xe
 4903 0095 3A       		.uleb128 0x3a
 4904 0096 0B       		.uleb128 0xb
 4905 0097 3B       		.uleb128 0x3b
 4906 0098 05       		.uleb128 0x5
 4907 0099 49       		.uleb128 0x49
 4908 009a 13       		.uleb128 0x13
 4909 009b 38       		.uleb128 0x38
 4910 009c 0B       		.uleb128 0xb
 4911 009d 00       		.byte	0
 4912 009e 00       		.byte	0
 4913 009f 0E       		.uleb128 0xe
 4914 00a0 13       		.uleb128 0x13
 4915 00a1 01       		.byte	0x1
 4916 00a2 0B       		.uleb128 0xb
 4917 00a3 0B       		.uleb128 0xb
 4918 00a4 3A       		.uleb128 0x3a
 4919 00a5 0B       		.uleb128 0xb
 4920 00a6 3B       		.uleb128 0x3b
 4921 00a7 05       		.uleb128 0x5
 4922 00a8 01       		.uleb128 0x1
 4923 00a9 13       		.uleb128 0x13
 4924 00aa 00       		.byte	0
 4925 00ab 00       		.byte	0
 4926 00ac 0F       		.uleb128 0xf
 4927 00ad 0D       		.uleb128 0xd
 4928 00ae 00       		.byte	0
 4929 00af 03       		.uleb128 0x3
 4930 00b0 08       		.uleb128 0x8
 4931 00b1 3A       		.uleb128 0x3a
 4932 00b2 0B       		.uleb128 0xb
 4933 00b3 3B       		.uleb128 0x3b
 4934 00b4 05       		.uleb128 0x5
 4935 00b5 49       		.uleb128 0x49
 4936 00b6 13       		.uleb128 0x13
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 141


 4937 00b7 38       		.uleb128 0x38
 4938 00b8 0B       		.uleb128 0xb
 4939 00b9 00       		.byte	0
 4940 00ba 00       		.byte	0
 4941 00bb 10       		.uleb128 0x10
 4942 00bc 0F       		.uleb128 0xf
 4943 00bd 00       		.byte	0
 4944 00be 0B       		.uleb128 0xb
 4945 00bf 0B       		.uleb128 0xb
 4946 00c0 49       		.uleb128 0x49
 4947 00c1 13       		.uleb128 0x13
 4948 00c2 00       		.byte	0
 4949 00c3 00       		.byte	0
 4950 00c4 11       		.uleb128 0x11
 4951 00c5 26       		.uleb128 0x26
 4952 00c6 00       		.byte	0
 4953 00c7 00       		.byte	0
 4954 00c8 00       		.byte	0
 4955 00c9 12       		.uleb128 0x12
 4956 00ca 0F       		.uleb128 0xf
 4957 00cb 00       		.byte	0
 4958 00cc 0B       		.uleb128 0xb
 4959 00cd 0B       		.uleb128 0xb
 4960 00ce 00       		.byte	0
 4961 00cf 00       		.byte	0
 4962 00d0 13       		.uleb128 0x13
 4963 00d1 2E       		.uleb128 0x2e
 4964 00d2 01       		.byte	0x1
 4965 00d3 03       		.uleb128 0x3
 4966 00d4 0E       		.uleb128 0xe
 4967 00d5 3A       		.uleb128 0x3a
 4968 00d6 0B       		.uleb128 0xb
 4969 00d7 3B       		.uleb128 0x3b
 4970 00d8 05       		.uleb128 0x5
 4971 00d9 27       		.uleb128 0x27
 4972 00da 19       		.uleb128 0x19
 4973 00db 11       		.uleb128 0x11
 4974 00dc 01       		.uleb128 0x1
 4975 00dd 12       		.uleb128 0x12
 4976 00de 06       		.uleb128 0x6
 4977 00df 40       		.uleb128 0x40
 4978 00e0 18       		.uleb128 0x18
 4979 00e1 9742     		.uleb128 0x2117
 4980 00e3 19       		.uleb128 0x19
 4981 00e4 01       		.uleb128 0x1
 4982 00e5 13       		.uleb128 0x13
 4983 00e6 00       		.byte	0
 4984 00e7 00       		.byte	0
 4985 00e8 14       		.uleb128 0x14
 4986 00e9 05       		.uleb128 0x5
 4987 00ea 00       		.byte	0
 4988 00eb 03       		.uleb128 0x3
 4989 00ec 0E       		.uleb128 0xe
 4990 00ed 3A       		.uleb128 0x3a
 4991 00ee 0B       		.uleb128 0xb
 4992 00ef 3B       		.uleb128 0x3b
 4993 00f0 05       		.uleb128 0x5
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 142


 4994 00f1 49       		.uleb128 0x49
 4995 00f2 13       		.uleb128 0x13
 4996 00f3 02       		.uleb128 0x2
 4997 00f4 17       		.uleb128 0x17
 4998 00f5 00       		.byte	0
 4999 00f6 00       		.byte	0
 5000 00f7 15       		.uleb128 0x15
 5001 00f8 2E       		.uleb128 0x2e
 5002 00f9 01       		.byte	0x1
 5003 00fa 03       		.uleb128 0x3
 5004 00fb 0E       		.uleb128 0xe
 5005 00fc 3A       		.uleb128 0x3a
 5006 00fd 0B       		.uleb128 0xb
 5007 00fe 3B       		.uleb128 0x3b
 5008 00ff 05       		.uleb128 0x5
 5009 0100 27       		.uleb128 0x27
 5010 0101 19       		.uleb128 0x19
 5011 0102 11       		.uleb128 0x11
 5012 0103 01       		.uleb128 0x1
 5013 0104 12       		.uleb128 0x12
 5014 0105 06       		.uleb128 0x6
 5015 0106 40       		.uleb128 0x40
 5016 0107 18       		.uleb128 0x18
 5017 0108 9642     		.uleb128 0x2116
 5018 010a 19       		.uleb128 0x19
 5019 010b 01       		.uleb128 0x1
 5020 010c 13       		.uleb128 0x13
 5021 010d 00       		.byte	0
 5022 010e 00       		.byte	0
 5023 010f 16       		.uleb128 0x16
 5024 0110 34       		.uleb128 0x34
 5025 0111 00       		.byte	0
 5026 0112 03       		.uleb128 0x3
 5027 0113 0E       		.uleb128 0xe
 5028 0114 3A       		.uleb128 0x3a
 5029 0115 0B       		.uleb128 0xb
 5030 0116 3B       		.uleb128 0x3b
 5031 0117 05       		.uleb128 0x5
 5032 0118 49       		.uleb128 0x49
 5033 0119 13       		.uleb128 0x13
 5034 011a 02       		.uleb128 0x2
 5035 011b 18       		.uleb128 0x18
 5036 011c 00       		.byte	0
 5037 011d 00       		.byte	0
 5038 011e 17       		.uleb128 0x17
 5039 011f 2E       		.uleb128 0x2e
 5040 0120 00       		.byte	0
 5041 0121 03       		.uleb128 0x3
 5042 0122 0E       		.uleb128 0xe
 5043 0123 3A       		.uleb128 0x3a
 5044 0124 0B       		.uleb128 0xb
 5045 0125 3B       		.uleb128 0x3b
 5046 0126 05       		.uleb128 0x5
 5047 0127 27       		.uleb128 0x27
 5048 0128 19       		.uleb128 0x19
 5049 0129 11       		.uleb128 0x11
 5050 012a 01       		.uleb128 0x1
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 143


 5051 012b 12       		.uleb128 0x12
 5052 012c 06       		.uleb128 0x6
 5053 012d 40       		.uleb128 0x40
 5054 012e 18       		.uleb128 0x18
 5055 012f 9742     		.uleb128 0x2117
 5056 0131 19       		.uleb128 0x19
 5057 0132 00       		.byte	0
 5058 0133 00       		.byte	0
 5059 0134 18       		.uleb128 0x18
 5060 0135 2E       		.uleb128 0x2e
 5061 0136 01       		.byte	0x1
 5062 0137 03       		.uleb128 0x3
 5063 0138 0E       		.uleb128 0xe
 5064 0139 3A       		.uleb128 0x3a
 5065 013a 0B       		.uleb128 0xb
 5066 013b 3B       		.uleb128 0x3b
 5067 013c 05       		.uleb128 0x5
 5068 013d 27       		.uleb128 0x27
 5069 013e 19       		.uleb128 0x19
 5070 013f 49       		.uleb128 0x49
 5071 0140 13       		.uleb128 0x13
 5072 0141 11       		.uleb128 0x11
 5073 0142 01       		.uleb128 0x1
 5074 0143 12       		.uleb128 0x12
 5075 0144 06       		.uleb128 0x6
 5076 0145 40       		.uleb128 0x40
 5077 0146 18       		.uleb128 0x18
 5078 0147 9642     		.uleb128 0x2116
 5079 0149 19       		.uleb128 0x19
 5080 014a 01       		.uleb128 0x1
 5081 014b 13       		.uleb128 0x13
 5082 014c 00       		.byte	0
 5083 014d 00       		.byte	0
 5084 014e 19       		.uleb128 0x19
 5085 014f 34       		.uleb128 0x34
 5086 0150 00       		.byte	0
 5087 0151 03       		.uleb128 0x3
 5088 0152 0E       		.uleb128 0xe
 5089 0153 3A       		.uleb128 0x3a
 5090 0154 0B       		.uleb128 0xb
 5091 0155 3B       		.uleb128 0x3b
 5092 0156 05       		.uleb128 0x5
 5093 0157 49       		.uleb128 0x49
 5094 0158 13       		.uleb128 0x13
 5095 0159 02       		.uleb128 0x2
 5096 015a 17       		.uleb128 0x17
 5097 015b 00       		.byte	0
 5098 015c 00       		.byte	0
 5099 015d 1A       		.uleb128 0x1a
 5100 015e 34       		.uleb128 0x34
 5101 015f 00       		.byte	0
 5102 0160 03       		.uleb128 0x3
 5103 0161 0E       		.uleb128 0xe
 5104 0162 3A       		.uleb128 0x3a
 5105 0163 0B       		.uleb128 0xb
 5106 0164 3B       		.uleb128 0x3b
 5107 0165 05       		.uleb128 0x5
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 144


 5108 0166 49       		.uleb128 0x49
 5109 0167 13       		.uleb128 0x13
 5110 0168 00       		.byte	0
 5111 0169 00       		.byte	0
 5112 016a 1B       		.uleb128 0x1b
 5113 016b 26       		.uleb128 0x26
 5114 016c 00       		.byte	0
 5115 016d 49       		.uleb128 0x49
 5116 016e 13       		.uleb128 0x13
 5117 016f 00       		.byte	0
 5118 0170 00       		.byte	0
 5119 0171 1C       		.uleb128 0x1c
 5120 0172 2E       		.uleb128 0x2e
 5121 0173 01       		.byte	0x1
 5122 0174 3F       		.uleb128 0x3f
 5123 0175 19       		.uleb128 0x19
 5124 0176 03       		.uleb128 0x3
 5125 0177 0E       		.uleb128 0xe
 5126 0178 3A       		.uleb128 0x3a
 5127 0179 0B       		.uleb128 0xb
 5128 017a 3B       		.uleb128 0x3b
 5129 017b 05       		.uleb128 0x5
 5130 017c 27       		.uleb128 0x27
 5131 017d 19       		.uleb128 0x19
 5132 017e 11       		.uleb128 0x11
 5133 017f 01       		.uleb128 0x1
 5134 0180 12       		.uleb128 0x12
 5135 0181 06       		.uleb128 0x6
 5136 0182 40       		.uleb128 0x40
 5137 0183 18       		.uleb128 0x18
 5138 0184 9742     		.uleb128 0x2117
 5139 0186 19       		.uleb128 0x19
 5140 0187 01       		.uleb128 0x1
 5141 0188 13       		.uleb128 0x13
 5142 0189 00       		.byte	0
 5143 018a 00       		.byte	0
 5144 018b 1D       		.uleb128 0x1d
 5145 018c 898201   		.uleb128 0x4109
 5146 018f 00       		.byte	0
 5147 0190 11       		.uleb128 0x11
 5148 0191 01       		.uleb128 0x1
 5149 0192 31       		.uleb128 0x31
 5150 0193 13       		.uleb128 0x13
 5151 0194 00       		.byte	0
 5152 0195 00       		.byte	0
 5153 0196 1E       		.uleb128 0x1e
 5154 0197 898201   		.uleb128 0x4109
 5155 019a 01       		.byte	0x1
 5156 019b 11       		.uleb128 0x11
 5157 019c 01       		.uleb128 0x1
 5158 019d 31       		.uleb128 0x31
 5159 019e 13       		.uleb128 0x13
 5160 019f 01       		.uleb128 0x1
 5161 01a0 13       		.uleb128 0x13
 5162 01a1 00       		.byte	0
 5163 01a2 00       		.byte	0
 5164 01a3 1F       		.uleb128 0x1f
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 145


 5165 01a4 8A8201   		.uleb128 0x410a
 5166 01a7 00       		.byte	0
 5167 01a8 02       		.uleb128 0x2
 5168 01a9 18       		.uleb128 0x18
 5169 01aa 9142     		.uleb128 0x2111
 5170 01ac 18       		.uleb128 0x18
 5171 01ad 00       		.byte	0
 5172 01ae 00       		.byte	0
 5173 01af 20       		.uleb128 0x20
 5174 01b0 2E       		.uleb128 0x2e
 5175 01b1 01       		.byte	0x1
 5176 01b2 3F       		.uleb128 0x3f
 5177 01b3 19       		.uleb128 0x19
 5178 01b4 03       		.uleb128 0x3
 5179 01b5 0E       		.uleb128 0xe
 5180 01b6 3A       		.uleb128 0x3a
 5181 01b7 0B       		.uleb128 0xb
 5182 01b8 3B       		.uleb128 0x3b
 5183 01b9 05       		.uleb128 0x5
 5184 01ba 27       		.uleb128 0x27
 5185 01bb 19       		.uleb128 0x19
 5186 01bc 49       		.uleb128 0x49
 5187 01bd 13       		.uleb128 0x13
 5188 01be 11       		.uleb128 0x11
 5189 01bf 01       		.uleb128 0x1
 5190 01c0 12       		.uleb128 0x12
 5191 01c1 06       		.uleb128 0x6
 5192 01c2 40       		.uleb128 0x40
 5193 01c3 18       		.uleb128 0x18
 5194 01c4 9642     		.uleb128 0x2116
 5195 01c6 19       		.uleb128 0x19
 5196 01c7 01       		.uleb128 0x1
 5197 01c8 13       		.uleb128 0x13
 5198 01c9 00       		.byte	0
 5199 01ca 00       		.byte	0
 5200 01cb 21       		.uleb128 0x21
 5201 01cc 2E       		.uleb128 0x2e
 5202 01cd 01       		.byte	0x1
 5203 01ce 03       		.uleb128 0x3
 5204 01cf 0E       		.uleb128 0xe
 5205 01d0 3A       		.uleb128 0x3a
 5206 01d1 0B       		.uleb128 0xb
 5207 01d2 3B       		.uleb128 0x3b
 5208 01d3 05       		.uleb128 0x5
 5209 01d4 27       		.uleb128 0x27
 5210 01d5 19       		.uleb128 0x19
 5211 01d6 20       		.uleb128 0x20
 5212 01d7 0B       		.uleb128 0xb
 5213 01d8 01       		.uleb128 0x1
 5214 01d9 13       		.uleb128 0x13
 5215 01da 00       		.byte	0
 5216 01db 00       		.byte	0
 5217 01dc 22       		.uleb128 0x22
 5218 01dd 1D       		.uleb128 0x1d
 5219 01de 01       		.byte	0x1
 5220 01df 31       		.uleb128 0x31
 5221 01e0 13       		.uleb128 0x13
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 146


 5222 01e1 11       		.uleb128 0x11
 5223 01e2 01       		.uleb128 0x1
 5224 01e3 12       		.uleb128 0x12
 5225 01e4 06       		.uleb128 0x6
 5226 01e5 58       		.uleb128 0x58
 5227 01e6 0B       		.uleb128 0xb
 5228 01e7 59       		.uleb128 0x59
 5229 01e8 05       		.uleb128 0x5
 5230 01e9 01       		.uleb128 0x1
 5231 01ea 13       		.uleb128 0x13
 5232 01eb 00       		.byte	0
 5233 01ec 00       		.byte	0
 5234 01ed 23       		.uleb128 0x23
 5235 01ee 0B       		.uleb128 0xb
 5236 01ef 01       		.byte	0x1
 5237 01f0 11       		.uleb128 0x11
 5238 01f1 01       		.uleb128 0x1
 5239 01f2 12       		.uleb128 0x12
 5240 01f3 06       		.uleb128 0x6
 5241 01f4 00       		.byte	0
 5242 01f5 00       		.byte	0
 5243 01f6 24       		.uleb128 0x24
 5244 01f7 34       		.uleb128 0x34
 5245 01f8 00       		.byte	0
 5246 01f9 31       		.uleb128 0x31
 5247 01fa 13       		.uleb128 0x13
 5248 01fb 02       		.uleb128 0x2
 5249 01fc 17       		.uleb128 0x17
 5250 01fd 00       		.byte	0
 5251 01fe 00       		.byte	0
 5252 01ff 25       		.uleb128 0x25
 5253 0200 898201   		.uleb128 0x4109
 5254 0203 01       		.byte	0x1
 5255 0204 11       		.uleb128 0x11
 5256 0205 01       		.uleb128 0x1
 5257 0206 31       		.uleb128 0x31
 5258 0207 13       		.uleb128 0x13
 5259 0208 00       		.byte	0
 5260 0209 00       		.byte	0
 5261 020a 26       		.uleb128 0x26
 5262 020b 2E       		.uleb128 0x2e
 5263 020c 01       		.byte	0x1
 5264 020d 3F       		.uleb128 0x3f
 5265 020e 19       		.uleb128 0x19
 5266 020f 03       		.uleb128 0x3
 5267 0210 0E       		.uleb128 0xe
 5268 0211 3A       		.uleb128 0x3a
 5269 0212 0B       		.uleb128 0xb
 5270 0213 3B       		.uleb128 0x3b
 5271 0214 05       		.uleb128 0x5
 5272 0215 27       		.uleb128 0x27
 5273 0216 19       		.uleb128 0x19
 5274 0217 49       		.uleb128 0x49
 5275 0218 13       		.uleb128 0x13
 5276 0219 11       		.uleb128 0x11
 5277 021a 01       		.uleb128 0x1
 5278 021b 12       		.uleb128 0x12
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 147


 5279 021c 06       		.uleb128 0x6
 5280 021d 40       		.uleb128 0x40
 5281 021e 18       		.uleb128 0x18
 5282 021f 9742     		.uleb128 0x2117
 5283 0221 19       		.uleb128 0x19
 5284 0222 01       		.uleb128 0x1
 5285 0223 13       		.uleb128 0x13
 5286 0224 00       		.byte	0
 5287 0225 00       		.byte	0
 5288 0226 27       		.uleb128 0x27
 5289 0227 34       		.uleb128 0x34
 5290 0228 00       		.byte	0
 5291 0229 03       		.uleb128 0x3
 5292 022a 0E       		.uleb128 0xe
 5293 022b 3A       		.uleb128 0x3a
 5294 022c 0B       		.uleb128 0xb
 5295 022d 3B       		.uleb128 0x3b
 5296 022e 0B       		.uleb128 0xb
 5297 022f 49       		.uleb128 0x49
 5298 0230 13       		.uleb128 0x13
 5299 0231 02       		.uleb128 0x2
 5300 0232 18       		.uleb128 0x18
 5301 0233 00       		.byte	0
 5302 0234 00       		.byte	0
 5303 0235 28       		.uleb128 0x28
 5304 0236 34       		.uleb128 0x34
 5305 0237 00       		.byte	0
 5306 0238 03       		.uleb128 0x3
 5307 0239 0E       		.uleb128 0xe
 5308 023a 3A       		.uleb128 0x3a
 5309 023b 0B       		.uleb128 0xb
 5310 023c 3B       		.uleb128 0x3b
 5311 023d 05       		.uleb128 0x5
 5312 023e 49       		.uleb128 0x49
 5313 023f 13       		.uleb128 0x13
 5314 0240 3F       		.uleb128 0x3f
 5315 0241 19       		.uleb128 0x19
 5316 0242 3C       		.uleb128 0x3c
 5317 0243 19       		.uleb128 0x19
 5318 0244 00       		.byte	0
 5319 0245 00       		.byte	0
 5320 0246 29       		.uleb128 0x29
 5321 0247 34       		.uleb128 0x34
 5322 0248 00       		.byte	0
 5323 0249 03       		.uleb128 0x3
 5324 024a 0E       		.uleb128 0xe
 5325 024b 3A       		.uleb128 0x3a
 5326 024c 0B       		.uleb128 0xb
 5327 024d 3B       		.uleb128 0x3b
 5328 024e 0B       		.uleb128 0xb
 5329 024f 49       		.uleb128 0x49
 5330 0250 13       		.uleb128 0x13
 5331 0251 3F       		.uleb128 0x3f
 5332 0252 19       		.uleb128 0x19
 5333 0253 3C       		.uleb128 0x3c
 5334 0254 19       		.uleb128 0x19
 5335 0255 00       		.byte	0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 148


 5336 0256 00       		.byte	0
 5337 0257 2A       		.uleb128 0x2a
 5338 0258 34       		.uleb128 0x34
 5339 0259 00       		.byte	0
 5340 025a 03       		.uleb128 0x3
 5341 025b 0E       		.uleb128 0xe
 5342 025c 3A       		.uleb128 0x3a
 5343 025d 0B       		.uleb128 0xb
 5344 025e 3B       		.uleb128 0x3b
 5345 025f 0B       		.uleb128 0xb
 5346 0260 49       		.uleb128 0x49
 5347 0261 13       		.uleb128 0x13
 5348 0262 3F       		.uleb128 0x3f
 5349 0263 19       		.uleb128 0x19
 5350 0264 02       		.uleb128 0x2
 5351 0265 18       		.uleb128 0x18
 5352 0266 00       		.byte	0
 5353 0267 00       		.byte	0
 5354 0268 2B       		.uleb128 0x2b
 5355 0269 2E       		.uleb128 0x2e
 5356 026a 00       		.byte	0
 5357 026b 3F       		.uleb128 0x3f
 5358 026c 19       		.uleb128 0x19
 5359 026d 3C       		.uleb128 0x3c
 5360 026e 19       		.uleb128 0x19
 5361 026f 6E       		.uleb128 0x6e
 5362 0270 0E       		.uleb128 0xe
 5363 0271 03       		.uleb128 0x3
 5364 0272 0E       		.uleb128 0xe
 5365 0273 3A       		.uleb128 0x3a
 5366 0274 0B       		.uleb128 0xb
 5367 0275 3B       		.uleb128 0x3b
 5368 0276 0B       		.uleb128 0xb
 5369 0277 00       		.byte	0
 5370 0278 00       		.byte	0
 5371 0279 00       		.byte	0
 5372              		.section	.debug_loc,"",%progbits
 5373              	.Ldebug_loc0:
 5374              	.LLST0:
 5375 0000 00000000 		.4byte	.LVL0
 5376 0004 04000000 		.4byte	.LVL2
 5377 0008 0100     		.2byte	0x1
 5378 000a 50       		.byte	0x50
 5379 000b 04000000 		.4byte	.LVL2
 5380 000f 10000000 		.4byte	.LFE1
 5381 0013 0400     		.2byte	0x4
 5382 0015 F3       		.byte	0xf3
 5383 0016 01       		.uleb128 0x1
 5384 0017 50       		.byte	0x50
 5385 0018 9F       		.byte	0x9f
 5386 0019 00000000 		.4byte	0
 5387 001d 00000000 		.4byte	0
 5388              	.LLST1:
 5389 0021 00000000 		.4byte	.LVL0
 5390 0025 02000000 		.4byte	.LVL1
 5391 0029 0100     		.2byte	0x1
 5392 002b 51       		.byte	0x51
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 149


 5393 002c 02000000 		.4byte	.LVL1
 5394 0030 10000000 		.4byte	.LFE1
 5395 0034 0300     		.2byte	0x3
 5396 0036 71       		.byte	0x71
 5397 0037 01       		.sleb128 1
 5398 0038 9F       		.byte	0x9f
 5399 0039 00000000 		.4byte	0
 5400 003d 00000000 		.4byte	0
 5401              	.LLST2:
 5402 0041 00000000 		.4byte	.LVL4
 5403 0045 26000000 		.4byte	.LVL9
 5404 0049 0100     		.2byte	0x1
 5405 004b 50       		.byte	0x50
 5406 004c 26000000 		.4byte	.LVL9
 5407 0050 2A000000 		.4byte	.LVL11
 5408 0054 0100     		.2byte	0x1
 5409 0056 55       		.byte	0x55
 5410 0057 2A000000 		.4byte	.LVL11
 5411 005b 2C000000 		.4byte	.LVL12
 5412 005f 0100     		.2byte	0x1
 5413 0061 50       		.byte	0x50
 5414 0062 2C000000 		.4byte	.LVL12
 5415 0066 96000000 		.4byte	.LVL36
 5416 006a 0100     		.2byte	0x1
 5417 006c 55       		.byte	0x55
 5418 006d 96000000 		.4byte	.LVL36
 5419 0071 A0000000 		.4byte	.LFE19
 5420 0075 0400     		.2byte	0x4
 5421 0077 F3       		.byte	0xf3
 5422 0078 01       		.uleb128 0x1
 5423 0079 50       		.byte	0x50
 5424 007a 9F       		.byte	0x9f
 5425 007b 00000000 		.4byte	0
 5426 007f 00000000 		.4byte	0
 5427              	.LLST3:
 5428 0083 00000000 		.4byte	.LVL4
 5429 0087 40000000 		.4byte	.LVL16
 5430 008b 0100     		.2byte	0x1
 5431 008d 51       		.byte	0x51
 5432 008e 40000000 		.4byte	.LVL16
 5433 0092 A0000000 		.4byte	.LFE19
 5434 0096 0400     		.2byte	0x4
 5435 0098 F3       		.byte	0xf3
 5436 0099 01       		.uleb128 0x1
 5437 009a 51       		.byte	0x51
 5438 009b 9F       		.byte	0x9f
 5439 009c 00000000 		.4byte	0
 5440 00a0 00000000 		.4byte	0
 5441              	.LLST4:
 5442 00a4 0A000000 		.4byte	.LVL5
 5443 00a8 5A000000 		.4byte	.LVL23
 5444 00ac 0200     		.2byte	0x2
 5445 00ae 30       		.byte	0x30
 5446 00af 9F       		.byte	0x9f
 5447 00b0 5A000000 		.4byte	.LVL23
 5448 00b4 78000000 		.4byte	.LVL29
 5449 00b8 0200     		.2byte	0x2
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 150


 5450 00ba 91       		.byte	0x91
 5451 00bb 64       		.sleb128 -28
 5452 00bc 7A000000 		.4byte	.LVL30
 5453 00c0 A0000000 		.4byte	.LFE19
 5454 00c4 0200     		.2byte	0x2
 5455 00c6 91       		.byte	0x91
 5456 00c7 64       		.sleb128 -28
 5457 00c8 00000000 		.4byte	0
 5458 00cc 00000000 		.4byte	0
 5459              	.LLST5:
 5460 00d0 20000000 		.4byte	.LVL8
 5461 00d4 54000000 		.4byte	.LVL22
 5462 00d8 0100     		.2byte	0x1
 5463 00da 57       		.byte	0x57
 5464 00db 5E000000 		.4byte	.LVL24
 5465 00df 6A000000 		.4byte	.LVL25
 5466 00e3 0100     		.2byte	0x1
 5467 00e5 50       		.byte	0x50
 5468 00e6 74000000 		.4byte	.LVL28
 5469 00ea 7E000000 		.4byte	.LVL31
 5470 00ee 0100     		.2byte	0x1
 5471 00f0 50       		.byte	0x50
 5472 00f1 00000000 		.4byte	0
 5473 00f5 00000000 		.4byte	0
 5474              	.LLST6:
 5475 00f9 52000000 		.4byte	.LVL21
 5476 00fd 5A000000 		.4byte	.LVL23
 5477 0101 0200     		.2byte	0x2
 5478 0103 30       		.byte	0x30
 5479 0104 9F       		.byte	0x9f
 5480 0105 5A000000 		.4byte	.LVL23
 5481 0109 96000000 		.4byte	.LVL38
 5482 010d 0100     		.2byte	0x1
 5483 010f 57       		.byte	0x57
 5484 0110 00000000 		.4byte	0
 5485 0114 00000000 		.4byte	0
 5486              	.LLST7:
 5487 0118 5A000000 		.4byte	.LVL23
 5488 011c 6A000000 		.4byte	.LVL25
 5489 0120 0100     		.2byte	0x1
 5490 0122 52       		.byte	0x52
 5491 0123 6C000000 		.4byte	.LVL26
 5492 0127 6E000000 		.4byte	.LVL27
 5493 012b 0100     		.2byte	0x1
 5494 012d 53       		.byte	0x53
 5495 012e 6E000000 		.4byte	.LVL27
 5496 0132 82000000 		.4byte	.LVL33
 5497 0136 0100     		.2byte	0x1
 5498 0138 52       		.byte	0x52
 5499 0139 00000000 		.4byte	0
 5500 013d 00000000 		.4byte	0
 5501              	.LLST8:
 5502 0141 32000000 		.4byte	.LVL13
 5503 0145 52000000 		.4byte	.LVL21
 5504 0149 0100     		.2byte	0x1
 5505 014b 58       		.byte	0x58
 5506 014c 52000000 		.4byte	.LVL21
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 151


 5507 0150 5A000000 		.4byte	.LVL23
 5508 0154 0100     		.2byte	0x1
 5509 0156 50       		.byte	0x50
 5510 0157 5A000000 		.4byte	.LVL23
 5511 015b A0000000 		.4byte	.LFE19
 5512 015f 0100     		.2byte	0x1
 5513 0161 51       		.byte	0x51
 5514 0162 00000000 		.4byte	0
 5515 0166 00000000 		.4byte	0
 5516              	.LLST9:
 5517 016a 20000000 		.4byte	.LVL8
 5518 016e 28000000 		.4byte	.LVL10
 5519 0172 0200     		.2byte	0x2
 5520 0174 30       		.byte	0x30
 5521 0175 9F       		.byte	0x9f
 5522 0176 28000000 		.4byte	.LVL10
 5523 017a 2A000000 		.4byte	.LVL11
 5524 017e 0100     		.2byte	0x1
 5525 0180 50       		.byte	0x50
 5526 0181 2A000000 		.4byte	.LVL11
 5527 0185 2C000000 		.4byte	.LVL12
 5528 0189 0200     		.2byte	0x2
 5529 018b 30       		.byte	0x30
 5530 018c 9F       		.byte	0x9f
 5531 018d 2C000000 		.4byte	.LVL12
 5532 0191 3E000000 		.4byte	.LVL15
 5533 0195 0100     		.2byte	0x1
 5534 0197 50       		.byte	0x50
 5535 0198 46000000 		.4byte	.LVL18
 5536 019c 48000000 		.4byte	.LVL19
 5537 01a0 0100     		.2byte	0x1
 5538 01a2 50       		.byte	0x50
 5539 01a3 48000000 		.4byte	.LVL19
 5540 01a7 96000000 		.4byte	.LVL37
 5541 01ab 0100     		.2byte	0x1
 5542 01ad 56       		.byte	0x56
 5543 01ae 00000000 		.4byte	0
 5544 01b2 00000000 		.4byte	0
 5545              	.LLST10:
 5546 01b6 16000000 		.4byte	.LVL6
 5547 01ba 43000000 		.4byte	.LVL17-1
 5548 01be 0100     		.2byte	0x1
 5549 01c0 52       		.byte	0x52
 5550 01c1 6A000000 		.4byte	.LVL25
 5551 01c5 6C000000 		.4byte	.LVL26
 5552 01c9 0E00     		.2byte	0xe
 5553 01cb 75       		.byte	0x75
 5554 01cc 00       		.sleb128 0
 5555 01cd 32       		.byte	0x32
 5556 01ce 24       		.byte	0x24
 5557 01cf 75       		.byte	0x75
 5558 01d0 00       		.sleb128 0
 5559 01d1 22       		.byte	0x22
 5560 01d2 33       		.byte	0x33
 5561 01d3 24       		.byte	0x24
 5562 01d4 72       		.byte	0x72
 5563 01d5 00       		.sleb128 0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 152


 5564 01d6 22       		.byte	0x22
 5565 01d7 23       		.byte	0x23
 5566 01d8 04       		.uleb128 0x4
 5567 01d9 8A000000 		.4byte	.LVL34
 5568 01dd 96000000 		.4byte	.LVL36
 5569 01e1 0E00     		.2byte	0xe
 5570 01e3 75       		.byte	0x75
 5571 01e4 00       		.sleb128 0
 5572 01e5 32       		.byte	0x32
 5573 01e6 24       		.byte	0x24
 5574 01e7 75       		.byte	0x75
 5575 01e8 00       		.sleb128 0
 5576 01e9 22       		.byte	0x22
 5577 01ea 33       		.byte	0x33
 5578 01eb 24       		.byte	0x24
 5579 01ec 72       		.byte	0x72
 5580 01ed 00       		.sleb128 0
 5581 01ee 22       		.byte	0x22
 5582 01ef 23       		.byte	0x23
 5583 01f0 04       		.uleb128 0x4
 5584 01f1 96000000 		.4byte	.LVL36
 5585 01f5 A0000000 		.4byte	.LFE19
 5586 01f9 1000     		.2byte	0x10
 5587 01fb F3       		.byte	0xf3
 5588 01fc 01       		.uleb128 0x1
 5589 01fd 50       		.byte	0x50
 5590 01fe 32       		.byte	0x32
 5591 01ff 24       		.byte	0x24
 5592 0200 F3       		.byte	0xf3
 5593 0201 01       		.uleb128 0x1
 5594 0202 50       		.byte	0x50
 5595 0203 22       		.byte	0x22
 5596 0204 33       		.byte	0x33
 5597 0205 24       		.byte	0x24
 5598 0206 72       		.byte	0x72
 5599 0207 00       		.sleb128 0
 5600 0208 22       		.byte	0x22
 5601 0209 23       		.byte	0x23
 5602 020a 04       		.uleb128 0x4
 5603 020b 00000000 		.4byte	0
 5604 020f 00000000 		.4byte	0
 5605              	.LLST11:
 5606 0213 18000000 		.4byte	.LVL7
 5607 0217 96000000 		.4byte	.LVL35
 5608 021b 0100     		.2byte	0x1
 5609 021d 54       		.byte	0x54
 5610 021e 00000000 		.4byte	0
 5611 0222 00000000 		.4byte	0
 5612              	.LLST12:
 5613 0226 00000000 		.4byte	.LVL39
 5614 022a 16000000 		.4byte	.LVL44
 5615 022e 0100     		.2byte	0x1
 5616 0230 50       		.byte	0x50
 5617 0231 16000000 		.4byte	.LVL44
 5618 0235 78000000 		.4byte	.LVL63
 5619 0239 0100     		.2byte	0x1
 5620 023b 57       		.byte	0x57
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 153


 5621 023c 78000000 		.4byte	.LVL63
 5622 0240 86000000 		.4byte	.LVL67
 5623 0244 0400     		.2byte	0x4
 5624 0246 F3       		.byte	0xf3
 5625 0247 01       		.uleb128 0x1
 5626 0248 50       		.byte	0x50
 5627 0249 9F       		.byte	0x9f
 5628 024a 86000000 		.4byte	.LVL67
 5629 024e 8E000000 		.4byte	.LVL71
 5630 0252 0100     		.2byte	0x1
 5631 0254 57       		.byte	0x57
 5632 0255 8E000000 		.4byte	.LVL71
 5633 0259 9C000000 		.4byte	.LFE20
 5634 025d 0400     		.2byte	0x4
 5635 025f F3       		.byte	0xf3
 5636 0260 01       		.uleb128 0x1
 5637 0261 50       		.byte	0x50
 5638 0262 9F       		.byte	0x9f
 5639 0263 00000000 		.4byte	0
 5640 0267 00000000 		.4byte	0
 5641              	.LLST13:
 5642 026b 76000000 		.4byte	.LVL62
 5643 026f 84000000 		.4byte	.LVL66
 5644 0273 0100     		.2byte	0x1
 5645 0275 50       		.byte	0x50
 5646 0276 8E000000 		.4byte	.LVL71
 5647 027a 90000000 		.4byte	.LVL72
 5648 027e 0100     		.2byte	0x1
 5649 0280 50       		.byte	0x50
 5650 0281 00000000 		.4byte	0
 5651 0285 00000000 		.4byte	0
 5652              	.LLST14:
 5653 0289 12000000 		.4byte	.LVL43
 5654 028d 1C000000 		.4byte	.LVL45
 5655 0291 0200     		.2byte	0x2
 5656 0293 30       		.byte	0x30
 5657 0294 9F       		.byte	0x9f
 5658 0295 1C000000 		.4byte	.LVL45
 5659 0299 90000000 		.4byte	.LVL76
 5660 029d 0100     		.2byte	0x1
 5661 029f 59       		.byte	0x59
 5662 02a0 00000000 		.4byte	0
 5663 02a4 00000000 		.4byte	0
 5664              	.LLST15:
 5665 02a8 12000000 		.4byte	.LVL43
 5666 02ac 1C000000 		.4byte	.LVL45
 5667 02b0 0300     		.2byte	0x3
 5668 02b2 08       		.byte	0x8
 5669 02b3 7F       		.byte	0x7f
 5670 02b4 9F       		.byte	0x9f
 5671 02b5 1C000000 		.4byte	.LVL45
 5672 02b9 2C000000 		.4byte	.LVL47
 5673 02bd 0100     		.2byte	0x1
 5674 02bf 50       		.byte	0x50
 5675 02c0 2E000000 		.4byte	.LVL48
 5676 02c4 42000000 		.4byte	.LVL51
 5677 02c8 0100     		.2byte	0x1
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 154


 5678 02ca 50       		.byte	0x50
 5679 02cb 46000000 		.4byte	.LVL52
 5680 02cf 6A000000 		.4byte	.LVL60
 5681 02d3 0100     		.2byte	0x1
 5682 02d5 50       		.byte	0x50
 5683 02d6 86000000 		.4byte	.LVL67
 5684 02da 88000000 		.4byte	.LVL68
 5685 02de 0100     		.2byte	0x1
 5686 02e0 50       		.byte	0x50
 5687 02e1 8A000000 		.4byte	.LVL69
 5688 02e5 8C000000 		.4byte	.LVL70
 5689 02e9 0100     		.2byte	0x1
 5690 02eb 50       		.byte	0x50
 5691 02ec 00000000 		.4byte	0
 5692 02f0 00000000 		.4byte	0
 5693              	.LLST16:
 5694 02f4 0A000000 		.4byte	.LVL40
 5695 02f8 82000000 		.4byte	.LVL65
 5696 02fc 0200     		.2byte	0x2
 5697 02fe 30       		.byte	0x30
 5698 02ff 9F       		.byte	0x9f
 5699 0300 82000000 		.4byte	.LVL65
 5700 0304 86000000 		.4byte	.LVL67
 5701 0308 0200     		.2byte	0x2
 5702 030a 31       		.byte	0x31
 5703 030b 9F       		.byte	0x9f
 5704 030c 86000000 		.4byte	.LVL67
 5705 0310 90000000 		.4byte	.LVL72
 5706 0314 0200     		.2byte	0x2
 5707 0316 30       		.byte	0x30
 5708 0317 9F       		.byte	0x9f
 5709 0318 90000000 		.4byte	.LVL72
 5710 031c 9C000000 		.4byte	.LFE20
 5711 0320 0100     		.2byte	0x1
 5712 0322 50       		.byte	0x50
 5713 0323 00000000 		.4byte	0
 5714 0327 00000000 		.4byte	0
 5715              	.LLST17:
 5716 032b 12000000 		.4byte	.LVL43
 5717 032f 1C000000 		.4byte	.LVL45
 5718 0333 0200     		.2byte	0x2
 5719 0335 31       		.byte	0x31
 5720 0336 9F       		.byte	0x9f
 5721 0337 1C000000 		.4byte	.LVL45
 5722 033b 2E000000 		.4byte	.LVL48
 5723 033f 0100     		.2byte	0x1
 5724 0341 52       		.byte	0x52
 5725 0342 2E000000 		.4byte	.LVL48
 5726 0346 30000000 		.4byte	.LVL49
 5727 034a 0100     		.2byte	0x1
 5728 034c 53       		.byte	0x53
 5729 034d 30000000 		.4byte	.LVL49
 5730 0351 48000000 		.4byte	.LVL53
 5731 0355 0100     		.2byte	0x1
 5732 0357 52       		.byte	0x52
 5733 0358 48000000 		.4byte	.LVL53
 5734 035c 4A000000 		.4byte	.LVL54
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 155


 5735 0360 0100     		.2byte	0x1
 5736 0362 53       		.byte	0x53
 5737 0363 4A000000 		.4byte	.LVL54
 5738 0367 66000000 		.4byte	.LVL59
 5739 036b 0100     		.2byte	0x1
 5740 036d 52       		.byte	0x52
 5741 036e 86000000 		.4byte	.LVL67
 5742 0372 8E000000 		.4byte	.LVL71
 5743 0376 0100     		.2byte	0x1
 5744 0378 52       		.byte	0x52
 5745 0379 00000000 		.4byte	0
 5746 037d 00000000 		.4byte	0
 5747              	.LLST18:
 5748 0381 12000000 		.4byte	.LVL43
 5749 0385 5E000000 		.4byte	.LVL57
 5750 0389 0100     		.2byte	0x1
 5751 038b 55       		.byte	0x55
 5752 038c 5E000000 		.4byte	.LVL57
 5753 0390 6C000000 		.4byte	.LVL61
 5754 0394 0100     		.2byte	0x1
 5755 0396 53       		.byte	0x53
 5756 0397 6C000000 		.4byte	.LVL61
 5757 039b 80000000 		.4byte	.LVL64
 5758 039f 0100     		.2byte	0x1
 5759 03a1 55       		.byte	0x55
 5760 03a2 80000000 		.4byte	.LVL64
 5761 03a6 86000000 		.4byte	.LVL67
 5762 03aa 0100     		.2byte	0x1
 5763 03ac 58       		.byte	0x58
 5764 03ad 86000000 		.4byte	.LVL67
 5765 03b1 8E000000 		.4byte	.LVL71
 5766 03b5 0100     		.2byte	0x1
 5767 03b7 53       		.byte	0x53
 5768 03b8 8E000000 		.4byte	.LVL71
 5769 03bc 90000000 		.4byte	.LVL72
 5770 03c0 0100     		.2byte	0x1
 5771 03c2 55       		.byte	0x55
 5772 03c3 90000000 		.4byte	.LVL72
 5773 03c7 90000000 		.4byte	.LVL75
 5774 03cb 0100     		.2byte	0x1
 5775 03cd 58       		.byte	0x58
 5776 03ce 00000000 		.4byte	0
 5777 03d2 00000000 		.4byte	0
 5778              	.LLST19:
 5779 03d6 0C000000 		.4byte	.LVL41
 5780 03da 90000000 		.4byte	.LVL74
 5781 03de 0100     		.2byte	0x1
 5782 03e0 56       		.byte	0x56
 5783 03e1 00000000 		.4byte	0
 5784 03e5 00000000 		.4byte	0
 5785              	.LLST20:
 5786 03e9 38000000 		.4byte	.LVL50
 5787 03ed 64000000 		.4byte	.LVL58
 5788 03f1 0100     		.2byte	0x1
 5789 03f3 51       		.byte	0x51
 5790 03f4 86000000 		.4byte	.LVL67
 5791 03f8 8E000000 		.4byte	.LVL71
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 156


 5792 03fc 0100     		.2byte	0x1
 5793 03fe 51       		.byte	0x51
 5794 03ff 00000000 		.4byte	0
 5795 0403 00000000 		.4byte	0
 5796              	.LLST21:
 5797 0407 0E000000 		.4byte	.LVL42
 5798 040b 90000000 		.4byte	.LVL73
 5799 040f 0100     		.2byte	0x1
 5800 0411 54       		.byte	0x54
 5801 0412 00000000 		.4byte	0
 5802 0416 00000000 		.4byte	0
 5803              	.LLST22:
 5804 041a 00000000 		.4byte	.LVL77
 5805 041e 24000000 		.4byte	.LVL82
 5806 0422 0100     		.2byte	0x1
 5807 0424 50       		.byte	0x50
 5808 0425 24000000 		.4byte	.LVL82
 5809 0429 C2000000 		.4byte	.LVL114
 5810 042d 0100     		.2byte	0x1
 5811 042f 57       		.byte	0x57
 5812 0430 C2000000 		.4byte	.LVL114
 5813 0434 CC000000 		.4byte	.LFE21
 5814 0438 0400     		.2byte	0x4
 5815 043a F3       		.byte	0xf3
 5816 043b 01       		.uleb128 0x1
 5817 043c 50       		.byte	0x50
 5818 043d 9F       		.byte	0x9f
 5819 043e 00000000 		.4byte	0
 5820 0442 00000000 		.4byte	0
 5821              	.LLST23:
 5822 0446 00000000 		.4byte	.LVL77
 5823 044a 24000000 		.4byte	.LVL82
 5824 044e 0100     		.2byte	0x1
 5825 0450 51       		.byte	0x51
 5826 0451 24000000 		.4byte	.LVL82
 5827 0455 C2000000 		.4byte	.LVL115
 5828 0459 0100     		.2byte	0x1
 5829 045b 5A       		.byte	0x5a
 5830 045c C2000000 		.4byte	.LVL115
 5831 0460 CC000000 		.4byte	.LFE21
 5832 0464 0400     		.2byte	0x4
 5833 0466 F3       		.byte	0xf3
 5834 0467 01       		.uleb128 0x1
 5835 0468 51       		.byte	0x51
 5836 0469 9F       		.byte	0x9f
 5837 046a 00000000 		.4byte	0
 5838 046e 00000000 		.4byte	0
 5839              	.LLST24:
 5840 0472 32000000 		.4byte	.LVL85
 5841 0476 38000000 		.4byte	.LVL86
 5842 047a 0200     		.2byte	0x2
 5843 047c 30       		.byte	0x30
 5844 047d 9F       		.byte	0x9f
 5845 047e 38000000 		.4byte	.LVL86
 5846 0482 59000000 		.4byte	.LVL95-1
 5847 0486 0100     		.2byte	0x1
 5848 0488 52       		.byte	0x52
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 157


 5849 0489 74000000 		.4byte	.LVL100
 5850 048d 78000000 		.4byte	.LVL101
 5851 0491 0200     		.2byte	0x2
 5852 0493 30       		.byte	0x30
 5853 0494 9F       		.byte	0x9f
 5854 0495 78000000 		.4byte	.LVL101
 5855 0499 BA000000 		.4byte	.LVL111
 5856 049d 0100     		.2byte	0x1
 5857 049f 56       		.byte	0x56
 5858 04a0 00000000 		.4byte	0
 5859 04a4 00000000 		.4byte	0
 5860              	.LLST25:
 5861 04a8 20000000 		.4byte	.LVL80
 5862 04ac 24000000 		.4byte	.LVL82
 5863 04b0 0200     		.2byte	0x2
 5864 04b2 31       		.byte	0x31
 5865 04b3 9F       		.byte	0x9f
 5866 04b4 24000000 		.4byte	.LVL82
 5867 04b8 BA000000 		.4byte	.LVL111
 5868 04bc 0100     		.2byte	0x1
 5869 04be 55       		.byte	0x55
 5870 04bf BA000000 		.4byte	.LVL111
 5871 04c3 BC000000 		.4byte	.LVL112
 5872 04c7 0100     		.2byte	0x1
 5873 04c9 53       		.byte	0x53
 5874 04ca BC000000 		.4byte	.LVL112
 5875 04ce C2000000 		.4byte	.LVL113
 5876 04d2 0100     		.2byte	0x1
 5877 04d4 55       		.byte	0x55
 5878 04d5 C2000000 		.4byte	.LVL113
 5879 04d9 CC000000 		.4byte	.LFE21
 5880 04dd 0300     		.2byte	0x3
 5881 04df 73       		.byte	0x73
 5882 04e0 7F       		.sleb128 -1
 5883 04e1 9F       		.byte	0x9f
 5884 04e2 00000000 		.4byte	0
 5885 04e6 00000000 		.4byte	0
 5886              	.LLST26:
 5887 04ea 2C000000 		.4byte	.LVL83
 5888 04ee 2E000000 		.4byte	.LVL84
 5889 04f2 0100     		.2byte	0x1
 5890 04f4 53       		.byte	0x53
 5891 04f5 2E000000 		.4byte	.LVL84
 5892 04f9 6A000000 		.4byte	.LVL99
 5893 04fd 0100     		.2byte	0x1
 5894 04ff 59       		.byte	0x59
 5895 0500 00000000 		.4byte	0
 5896 0504 00000000 		.4byte	0
 5897              	.LLST27:
 5898 0508 2C000000 		.4byte	.LVL83
 5899 050c 2E000000 		.4byte	.LVL84
 5900 0510 0100     		.2byte	0x1
 5901 0512 53       		.byte	0x53
 5902 0513 2E000000 		.4byte	.LVL84
 5903 0517 38000000 		.4byte	.LVL86
 5904 051b 0100     		.2byte	0x1
 5905 051d 59       		.byte	0x59
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 158


 5906 051e 38000000 		.4byte	.LVL86
 5907 0522 40000000 		.4byte	.LVL87
 5908 0526 0100     		.2byte	0x1
 5909 0528 54       		.byte	0x54
 5910 0529 40000000 		.4byte	.LVL87
 5911 052d 46000000 		.4byte	.LVL90
 5912 0531 0100     		.2byte	0x1
 5913 0533 51       		.byte	0x51
 5914 0534 46000000 		.4byte	.LVL90
 5915 0538 74000000 		.4byte	.LVL100
 5916 053c 0100     		.2byte	0x1
 5917 053e 54       		.byte	0x54
 5918 053f 00000000 		.4byte	0
 5919 0543 00000000 		.4byte	0
 5920              	.LLST28:
 5921 0547 32000000 		.4byte	.LVL85
 5922 054b 42000000 		.4byte	.LVL88
 5923 054f 0100     		.2byte	0x1
 5924 0551 50       		.byte	0x50
 5925 0552 44000000 		.4byte	.LVL89
 5926 0556 54000000 		.4byte	.LVL94
 5927 055a 0100     		.2byte	0x1
 5928 055c 50       		.byte	0x50
 5929 055d 00000000 		.4byte	0
 5930 0561 00000000 		.4byte	0
 5931              	.LLST29:
 5932 0565 20000000 		.4byte	.LVL80
 5933 0569 22000000 		.4byte	.LVL81
 5934 056d 0100     		.2byte	0x1
 5935 056f 53       		.byte	0x53
 5936 0570 22000000 		.4byte	.LVL81
 5937 0574 CC000000 		.4byte	.LFE21
 5938 0578 0200     		.2byte	0x2
 5939 057a 91       		.byte	0x91
 5940 057b 5C       		.sleb128 -36
 5941 057c 00000000 		.4byte	0
 5942 0580 00000000 		.4byte	0
 5943              	.LLST30:
 5944 0584 5C000000 		.4byte	.LVL96
 5945 0588 5E000000 		.4byte	.LVL97
 5946 058c 0100     		.2byte	0x1
 5947 058e 50       		.byte	0x50
 5948 058f 8E000000 		.4byte	.LVL103
 5949 0593 A2000000 		.4byte	.LVL107
 5950 0597 0100     		.2byte	0x1
 5951 0599 50       		.byte	0x50
 5952 059a 00000000 		.4byte	0
 5953 059e 00000000 		.4byte	0
 5954              	.LLST31:
 5955 05a2 64000000 		.4byte	.LVL98
 5956 05a6 6A000000 		.4byte	.LVL99
 5957 05aa 0100     		.2byte	0x1
 5958 05ac 50       		.byte	0x50
 5959 05ad 6A000000 		.4byte	.LVL99
 5960 05b1 98000000 		.4byte	.LVL104
 5961 05b5 0100     		.2byte	0x1
 5962 05b7 59       		.byte	0x59
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 159


 5963 05b8 98000000 		.4byte	.LVL104
 5964 05bc 9C000000 		.4byte	.LVL105
 5965 05c0 0100     		.2byte	0x1
 5966 05c2 52       		.byte	0x52
 5967 05c3 9C000000 		.4byte	.LVL105
 5968 05c7 A0000000 		.4byte	.LVL106
 5969 05cb 0100     		.2byte	0x1
 5970 05cd 59       		.byte	0x59
 5971 05ce A0000000 		.4byte	.LVL106
 5972 05d2 A9000000 		.4byte	.LVL108-1
 5973 05d6 0100     		.2byte	0x1
 5974 05d8 52       		.byte	0x52
 5975 05d9 A9000000 		.4byte	.LVL108-1
 5976 05dd BA000000 		.4byte	.LVL111
 5977 05e1 0100     		.2byte	0x1
 5978 05e3 59       		.byte	0x59
 5979 05e4 00000000 		.4byte	0
 5980 05e8 00000000 		.4byte	0
 5981              	.LLST32:
 5982 05ec 14000000 		.4byte	.LVL78
 5983 05f0 16000000 		.4byte	.LVL79
 5984 05f4 0100     		.2byte	0x1
 5985 05f6 53       		.byte	0x53
 5986 05f7 16000000 		.4byte	.LVL79
 5987 05fb C2000000 		.4byte	.LVL116
 5988 05ff 0100     		.2byte	0x1
 5989 0601 5B       		.byte	0x5b
 5990 0602 00000000 		.4byte	0
 5991 0606 00000000 		.4byte	0
 5992              	.LLST33:
 5993 060a 2E000000 		.4byte	.LVL84
 5994 060e 52000000 		.4byte	.LVL93
 5995 0612 0100     		.2byte	0x1
 5996 0614 53       		.byte	0x53
 5997 0615 74000000 		.4byte	.LVL100
 5998 0619 BA000000 		.4byte	.LVL111
 5999 061d 0100     		.2byte	0x1
 6000 061f 54       		.byte	0x54
 6001 0620 00000000 		.4byte	0
 6002 0624 00000000 		.4byte	0
 6003              	.LLST34:
 6004 0628 30000000 		.4byte	.LVL119
 6005 062c 3A000000 		.4byte	.LVL121
 6006 0630 0100     		.2byte	0x1
 6007 0632 53       		.byte	0x53
 6008 0633 3A000000 		.4byte	.LVL121
 6009 0637 3C000000 		.4byte	.LVL122
 6010 063b 0200     		.2byte	0x2
 6011 063d 75       		.byte	0x75
 6012 063e 00       		.sleb128 0
 6013 063f 74000000 		.4byte	.LVL125
 6014 0643 82000000 		.4byte	.LVL127
 6015 0647 0100     		.2byte	0x1
 6016 0649 53       		.byte	0x53
 6017 064a 82000000 		.4byte	.LVL127
 6018 064e 84000000 		.4byte	.LVL128
 6019 0652 0500     		.2byte	0x5
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 160


 6020 0654 0C       		.byte	0xc
 6021 0655 94020B40 		.4byte	0x400b0294
 6022 0659 86000000 		.4byte	.LVL129
 6023 065d 8C000000 		.4byte	.LVL131
 6024 0661 0100     		.2byte	0x1
 6025 0663 53       		.byte	0x53
 6026 0664 8C000000 		.4byte	.LVL131
 6027 0668 92000000 		.4byte	.LVL132
 6028 066c 0200     		.2byte	0x2
 6029 066e 75       		.byte	0x75
 6030 066f 00       		.sleb128 0
 6031 0670 00000000 		.4byte	0
 6032 0674 00000000 		.4byte	0
 6033              	.LLST35:
 6034 0678 00000000 		.4byte	.LVL136
 6035 067c 0F000000 		.4byte	.LVL138-1
 6036 0680 0100     		.2byte	0x1
 6037 0682 50       		.byte	0x50
 6038 0683 0F000000 		.4byte	.LVL138-1
 6039 0687 1E000000 		.4byte	.LVL141
 6040 068b 0100     		.2byte	0x1
 6041 068d 57       		.byte	0x57
 6042 068e 1E000000 		.4byte	.LVL141
 6043 0692 60000000 		.4byte	.LFE6
 6044 0696 0400     		.2byte	0x4
 6045 0698 F3       		.byte	0xf3
 6046 0699 01       		.uleb128 0x1
 6047 069a 50       		.byte	0x50
 6048 069b 9F       		.byte	0x9f
 6049 069c 00000000 		.4byte	0
 6050 06a0 00000000 		.4byte	0
 6051              	.LLST36:
 6052 06a4 10000000 		.4byte	.LVL138
 6053 06a8 29000000 		.4byte	.LVL144-1
 6054 06ac 0100     		.2byte	0x1
 6055 06ae 50       		.byte	0x50
 6056 06af 2E000000 		.4byte	.LVL145
 6057 06b3 45000000 		.4byte	.LVL150-1
 6058 06b7 0100     		.2byte	0x1
 6059 06b9 50       		.byte	0x50
 6060 06ba 00000000 		.4byte	0
 6061 06be 00000000 		.4byte	0
 6062              	.LLST37:
 6063 06c2 0C000000 		.4byte	.LVL137
 6064 06c6 46000000 		.4byte	.LVL151
 6065 06ca 0100     		.2byte	0x1
 6066 06cc 55       		.byte	0x55
 6067 06cd 00000000 		.4byte	0
 6068 06d1 00000000 		.4byte	0
 6069              	.LLST38:
 6070 06d5 14000000 		.4byte	.LVL139
 6071 06d9 29000000 		.4byte	.LVL144-1
 6072 06dd 0100     		.2byte	0x1
 6073 06df 52       		.byte	0x52
 6074 06e0 00000000 		.4byte	0
 6075 06e4 00000000 		.4byte	0
 6076              	.LLST39:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 161


 6077 06e8 32000000 		.4byte	.LVL146
 6078 06ec 45000000 		.4byte	.LVL150-1
 6079 06f0 0100     		.2byte	0x1
 6080 06f2 53       		.byte	0x53
 6081 06f3 00000000 		.4byte	0
 6082 06f7 00000000 		.4byte	0
 6083              	.LLST40:
 6084 06fb 00000000 		.4byte	.LVL152
 6085 06ff 08000000 		.4byte	.LVL153
 6086 0703 0100     		.2byte	0x1
 6087 0705 50       		.byte	0x50
 6088 0706 08000000 		.4byte	.LVL153
 6089 070a 19000000 		.4byte	.LVL157-1
 6090 070e 0100     		.2byte	0x1
 6091 0710 53       		.byte	0x53
 6092 0711 19000000 		.4byte	.LVL157-1
 6093 0715 2A000000 		.4byte	.LFE7
 6094 0719 0400     		.2byte	0x4
 6095 071b F3       		.byte	0xf3
 6096 071c 01       		.uleb128 0x1
 6097 071d 50       		.byte	0x50
 6098 071e 9F       		.byte	0x9f
 6099 071f 00000000 		.4byte	0
 6100 0723 00000000 		.4byte	0
 6101              	.LLST41:
 6102 0727 00000000 		.4byte	.LVL152
 6103 072b 16000000 		.4byte	.LVL156
 6104 072f 0100     		.2byte	0x1
 6105 0731 51       		.byte	0x51
 6106 0732 16000000 		.4byte	.LVL156
 6107 0736 2A000000 		.4byte	.LFE7
 6108 073a 0400     		.2byte	0x4
 6109 073c F3       		.byte	0xf3
 6110 073d 01       		.uleb128 0x1
 6111 073e 51       		.byte	0x51
 6112 073f 9F       		.byte	0x9f
 6113 0740 00000000 		.4byte	0
 6114 0744 00000000 		.4byte	0
 6115              	.LLST42:
 6116 0748 00000000 		.4byte	.LVL152
 6117 074c 19000000 		.4byte	.LVL157-1
 6118 0750 0100     		.2byte	0x1
 6119 0752 52       		.byte	0x52
 6120 0753 19000000 		.4byte	.LVL157-1
 6121 0757 1C000000 		.4byte	.LVL158
 6122 075b 0100     		.2byte	0x1
 6123 075d 54       		.byte	0x54
 6124 075e 1C000000 		.4byte	.LVL158
 6125 0762 28000000 		.4byte	.LVL161
 6126 0766 0300     		.2byte	0x3
 6127 0768 74       		.byte	0x74
 6128 0769 05       		.sleb128 5
 6129 076a 9F       		.byte	0x9f
 6130 076b 28000000 		.4byte	.LVL161
 6131 076f 2A000000 		.4byte	.LFE7
 6132 0773 0400     		.2byte	0x4
 6133 0775 F3       		.byte	0xf3
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 162


 6134 0776 01       		.uleb128 0x1
 6135 0777 52       		.byte	0x52
 6136 0778 9F       		.byte	0x9f
 6137 0779 00000000 		.4byte	0
 6138 077d 00000000 		.4byte	0
 6139              	.LLST43:
 6140 0781 0A000000 		.4byte	.LVL154
 6141 0785 19000000 		.4byte	.LVL157-1
 6142 0789 0100     		.2byte	0x1
 6143 078b 50       		.byte	0x50
 6144 078c 1A000000 		.4byte	.LVL157
 6145 0790 28000000 		.4byte	.LVL160
 6146 0794 0100     		.2byte	0x1
 6147 0796 50       		.byte	0x50
 6148 0797 00000000 		.4byte	0
 6149 079b 00000000 		.4byte	0
 6150              	.LLST44:
 6151 079f 16000000 		.4byte	.LVL163
 6152 07a3 37000000 		.4byte	.LVL172-1
 6153 07a7 0100     		.2byte	0x1
 6154 07a9 51       		.byte	0x51
 6155 07aa 00000000 		.4byte	0
 6156 07ae 00000000 		.4byte	0
 6157              	.LLST45:
 6158 07b2 18000000 		.4byte	.LVL164
 6159 07b6 28000000 		.4byte	.LVL168
 6160 07ba 0100     		.2byte	0x1
 6161 07bc 53       		.byte	0x53
 6162 07bd 28000000 		.4byte	.LVL168
 6163 07c1 2A000000 		.4byte	.LVL169
 6164 07c5 0300     		.2byte	0x3
 6165 07c7 73       		.byte	0x73
 6166 07c8 05       		.sleb128 5
 6167 07c9 9F       		.byte	0x9f
 6168 07ca 00000000 		.4byte	0
 6169 07ce 00000000 		.4byte	0
 6170              	.LLST46:
 6171 07d2 1A000000 		.4byte	.LVL165
 6172 07d6 37000000 		.4byte	.LVL172-1
 6173 07da 0100     		.2byte	0x1
 6174 07dc 50       		.byte	0x50
 6175 07dd 00000000 		.4byte	0
 6176 07e1 00000000 		.4byte	0
 6177              	.LLST47:
 6178 07e5 14000000 		.4byte	.LVL162
 6179 07e9 18000000 		.4byte	.LVL164
 6180 07ed 0100     		.2byte	0x1
 6181 07ef 53       		.byte	0x53
 6182 07f0 18000000 		.4byte	.LVL164
 6183 07f4 1C000000 		.4byte	.LVL166
 6184 07f8 0200     		.2byte	0x2
 6185 07fa 72       		.byte	0x72
 6186 07fb 04       		.sleb128 4
 6187 07fc 00000000 		.4byte	0
 6188 0800 00000000 		.4byte	0
 6189              	.LLST48:
 6190 0804 00000000 		.4byte	.LVL173
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 163


 6191 0808 06000000 		.4byte	.LVL174
 6192 080c 0100     		.2byte	0x1
 6193 080e 50       		.byte	0x50
 6194 080f 06000000 		.4byte	.LVL174
 6195 0813 0D000000 		.4byte	.LVL175-1
 6196 0817 0100     		.2byte	0x1
 6197 0819 53       		.byte	0x53
 6198 081a 0D000000 		.4byte	.LVL175-1
 6199 081e 1C000000 		.4byte	.LFE9
 6200 0822 0400     		.2byte	0x4
 6201 0824 F3       		.byte	0xf3
 6202 0825 01       		.uleb128 0x1
 6203 0826 50       		.byte	0x50
 6204 0827 9F       		.byte	0x9f
 6205 0828 00000000 		.4byte	0
 6206 082c 00000000 		.4byte	0
 6207              	.LLST49:
 6208 0830 0E000000 		.4byte	.LVL175
 6209 0834 10000000 		.4byte	.LVL176
 6210 0838 0100     		.2byte	0x1
 6211 083a 50       		.byte	0x50
 6212 083b 00000000 		.4byte	0
 6213 083f 00000000 		.4byte	0
 6214              	.LLST50:
 6215 0843 06000000 		.4byte	.LVL174
 6216 0847 0D000000 		.4byte	.LVL175-1
 6217 084b 0100     		.2byte	0x1
 6218 084d 50       		.byte	0x50
 6219 084e 00000000 		.4byte	0
 6220 0852 00000000 		.4byte	0
 6221              	.LLST51:
 6222 0856 3E000000 		.4byte	.LVL178
 6223 085a 42000000 		.4byte	.LVL179
 6224 085e 0300     		.2byte	0x3
 6225 0860 08       		.byte	0x8
 6226 0861 F0       		.byte	0xf0
 6227 0862 9F       		.byte	0x9f
 6228 0863 42000000 		.4byte	.LVL179
 6229 0867 58000000 		.4byte	.LVL181
 6230 086b 0100     		.2byte	0x1
 6231 086d 53       		.byte	0x53
 6232 086e 00000000 		.4byte	0
 6233 0872 00000000 		.4byte	0
 6234              	.LLST52:
 6235 0876 A2000000 		.4byte	.LVL184
 6236 087a A6000000 		.4byte	.LVL185
 6237 087e 0300     		.2byte	0x3
 6238 0880 08       		.byte	0x8
 6239 0881 F0       		.byte	0xf0
 6240 0882 9F       		.byte	0x9f
 6241 0883 A6000000 		.4byte	.LVL185
 6242 0887 B8000000 		.4byte	.LVL187
 6243 088b 0100     		.2byte	0x1
 6244 088d 53       		.byte	0x53
 6245 088e 00000000 		.4byte	0
 6246 0892 00000000 		.4byte	0
 6247              	.LLST53:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 164


 6248 0896 00000000 		.4byte	.LVL190
 6249 089a 0B000000 		.4byte	.LVL193-1
 6250 089e 0100     		.2byte	0x1
 6251 08a0 50       		.byte	0x50
 6252 08a1 0B000000 		.4byte	.LVL193-1
 6253 08a5 32000000 		.4byte	.LVL200
 6254 08a9 0100     		.2byte	0x1
 6255 08ab 54       		.byte	0x54
 6256 08ac 32000000 		.4byte	.LVL200
 6257 08b0 34000000 		.4byte	.LFE17
 6258 08b4 0400     		.2byte	0x4
 6259 08b6 F3       		.byte	0xf3
 6260 08b7 01       		.uleb128 0x1
 6261 08b8 50       		.byte	0x50
 6262 08b9 9F       		.byte	0x9f
 6263 08ba 00000000 		.4byte	0
 6264 08be 00000000 		.4byte	0
 6265              	.LLST54:
 6266 08c2 10000000 		.4byte	.LVL194
 6267 08c6 16000000 		.4byte	.LVL195
 6268 08ca 0100     		.2byte	0x1
 6269 08cc 53       		.byte	0x53
 6270 08cd 18000000 		.4byte	.LVL196
 6271 08d1 1E000000 		.4byte	.LVL197
 6272 08d5 0100     		.2byte	0x1
 6273 08d7 52       		.byte	0x52
 6274 08d8 1E000000 		.4byte	.LVL197
 6275 08dc 31000000 		.4byte	.LVL199-1
 6276 08e0 0100     		.2byte	0x1
 6277 08e2 53       		.byte	0x53
 6278 08e3 00000000 		.4byte	0
 6279 08e7 00000000 		.4byte	0
 6280              	.LLST55:
 6281 08eb 0C000000 		.4byte	.LVL193
 6282 08ef 31000000 		.4byte	.LVL199-1
 6283 08f3 0100     		.2byte	0x1
 6284 08f5 50       		.byte	0x50
 6285 08f6 00000000 		.4byte	0
 6286 08fa 00000000 		.4byte	0
 6287              	.LLST56:
 6288 08fe 06000000 		.4byte	.LVL191
 6289 0902 32000000 		.4byte	.LVL201
 6290 0906 0100     		.2byte	0x1
 6291 0908 55       		.byte	0x55
 6292 0909 00000000 		.4byte	0
 6293 090d 00000000 		.4byte	0
 6294              	.LLST57:
 6295 0911 08000000 		.4byte	.LVL192
 6296 0915 20000000 		.4byte	.LVL198
 6297 0919 0100     		.2byte	0x1
 6298 091b 56       		.byte	0x56
 6299 091c 00000000 		.4byte	0
 6300 0920 00000000 		.4byte	0
 6301              	.LLST58:
 6302 0924 14000000 		.4byte	.LVL202
 6303 0928 88000000 		.4byte	.LVL208
 6304 092c 0100     		.2byte	0x1
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 165


 6305 092e 57       		.byte	0x57
 6306 092f 00000000 		.4byte	0
 6307 0933 00000000 		.4byte	0
 6308              	.LLST59:
 6309 0937 00000000 		.4byte	.LVL209
 6310 093b 06000000 		.4byte	.LVL210
 6311 093f 0100     		.2byte	0x1
 6312 0941 50       		.byte	0x50
 6313 0942 06000000 		.4byte	.LVL210
 6314 0946 28000000 		.4byte	.LFE15
 6315 094a 0400     		.2byte	0x4
 6316 094c F3       		.byte	0xf3
 6317 094d 01       		.uleb128 0x1
 6318 094e 50       		.byte	0x50
 6319 094f 9F       		.byte	0x9f
 6320 0950 00000000 		.4byte	0
 6321 0954 00000000 		.4byte	0
 6322              	.LLST60:
 6323 0958 00000000 		.4byte	.LVL209
 6324 095c 10000000 		.4byte	.LVL211
 6325 0960 0100     		.2byte	0x1
 6326 0962 51       		.byte	0x51
 6327 0963 10000000 		.4byte	.LVL211
 6328 0967 28000000 		.4byte	.LFE15
 6329 096b 0400     		.2byte	0x4
 6330 096d F3       		.byte	0xf3
 6331 096e 01       		.uleb128 0x1
 6332 096f 51       		.byte	0x51
 6333 0970 9F       		.byte	0x9f
 6334 0971 00000000 		.4byte	0
 6335 0975 00000000 		.4byte	0
 6336              	.LLST61:
 6337 0979 00000000 		.4byte	.LVL213
 6338 097d 0B000000 		.4byte	.LVL216-1
 6339 0981 0100     		.2byte	0x1
 6340 0983 50       		.byte	0x50
 6341 0984 0B000000 		.4byte	.LVL216-1
 6342 0988 50000000 		.4byte	.LVL227
 6343 098c 0100     		.2byte	0x1
 6344 098e 54       		.byte	0x54
 6345 098f 50000000 		.4byte	.LVL227
 6346 0993 64000000 		.4byte	.LFE18
 6347 0997 0400     		.2byte	0x4
 6348 0999 F3       		.byte	0xf3
 6349 099a 01       		.uleb128 0x1
 6350 099b 50       		.byte	0x50
 6351 099c 9F       		.byte	0x9f
 6352 099d 00000000 		.4byte	0
 6353 09a1 00000000 		.4byte	0
 6354              	.LLST62:
 6355 09a5 0C000000 		.4byte	.LVL216
 6356 09a9 5B000000 		.4byte	.LVL228-1
 6357 09ad 0100     		.2byte	0x1
 6358 09af 50       		.byte	0x50
 6359 09b0 00000000 		.4byte	0
 6360 09b4 00000000 		.4byte	0
 6361              	.LLST63:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 166


 6362 09b8 06000000 		.4byte	.LVL214
 6363 09bc 5C000000 		.4byte	.LVL230
 6364 09c0 0100     		.2byte	0x1
 6365 09c2 56       		.byte	0x56
 6366 09c3 00000000 		.4byte	0
 6367 09c7 00000000 		.4byte	0
 6368              	.LLST64:
 6369 09cb 08000000 		.4byte	.LVL215
 6370 09cf 5C000000 		.4byte	.LVL229
 6371 09d3 0100     		.2byte	0x1
 6372 09d5 55       		.byte	0x55
 6373 09d6 00000000 		.4byte	0
 6374 09da 00000000 		.4byte	0
 6375              	.LLST65:
 6376 09de 10000000 		.4byte	.LVL217
 6377 09e2 4C000000 		.4byte	.LVL226
 6378 09e6 0100     		.2byte	0x1
 6379 09e8 51       		.byte	0x51
 6380 09e9 00000000 		.4byte	0
 6381 09ed 00000000 		.4byte	0
 6382              	.LLST66:
 6383 09f1 1A000000 		.4byte	.LVL219
 6384 09f5 2E000000 		.4byte	.LVL221
 6385 09f9 0100     		.2byte	0x1
 6386 09fb 53       		.byte	0x53
 6387 09fc 38000000 		.4byte	.LVL223
 6388 0a00 4A000000 		.4byte	.LVL225
 6389 0a04 0100     		.2byte	0x1
 6390 0a06 53       		.byte	0x53
 6391 0a07 00000000 		.4byte	0
 6392 0a0b 00000000 		.4byte	0
 6393              	.LLST67:
 6394 0a0f 00000000 		.4byte	.LVL232
 6395 0a13 10000000 		.4byte	.LVL234
 6396 0a17 0100     		.2byte	0x1
 6397 0a19 50       		.byte	0x50
 6398 0a1a 10000000 		.4byte	.LVL234
 6399 0a1e 5C000000 		.4byte	.LFE10
 6400 0a22 0400     		.2byte	0x4
 6401 0a24 F3       		.byte	0xf3
 6402 0a25 01       		.uleb128 0x1
 6403 0a26 50       		.byte	0x50
 6404 0a27 9F       		.byte	0x9f
 6405 0a28 00000000 		.4byte	0
 6406 0a2c 00000000 		.4byte	0
 6407              	.LLST68:
 6408 0a30 0E000000 		.4byte	.LVL233
 6409 0a34 4A000000 		.4byte	.LVL239
 6410 0a38 0100     		.2byte	0x1
 6411 0a3a 55       		.byte	0x55
 6412 0a3b 00000000 		.4byte	0
 6413 0a3f 00000000 		.4byte	0
 6414              	.LLST69:
 6415 0a43 00000000 		.4byte	.LVL240
 6416 0a47 29000000 		.4byte	.LVL243-1
 6417 0a4b 0100     		.2byte	0x1
 6418 0a4d 50       		.byte	0x50
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 167


 6419 0a4e 29000000 		.4byte	.LVL243-1
 6420 0a52 70000000 		.4byte	.LFE11
 6421 0a56 0400     		.2byte	0x4
 6422 0a58 F3       		.byte	0xf3
 6423 0a59 01       		.uleb128 0x1
 6424 0a5a 50       		.byte	0x50
 6425 0a5b 9F       		.byte	0x9f
 6426 0a5c 00000000 		.4byte	0
 6427 0a60 00000000 		.4byte	0
 6428              	.LLST70:
 6429 0a64 00000000 		.4byte	.LVL240
 6430 0a68 10000000 		.4byte	.LVL242
 6431 0a6c 0100     		.2byte	0x1
 6432 0a6e 51       		.byte	0x51
 6433 0a6f 10000000 		.4byte	.LVL242
 6434 0a73 70000000 		.4byte	.LFE11
 6435 0a77 0400     		.2byte	0x4
 6436 0a79 F3       		.byte	0xf3
 6437 0a7a 01       		.uleb128 0x1
 6438 0a7b 51       		.byte	0x51
 6439 0a7c 9F       		.byte	0x9f
 6440 0a7d 00000000 		.4byte	0
 6441 0a81 00000000 		.4byte	0
 6442              	.LLST71:
 6443 0a85 0E000000 		.4byte	.LVL241
 6444 0a89 54000000 		.4byte	.LVL247
 6445 0a8d 0100     		.2byte	0x1
 6446 0a8f 55       		.byte	0x55
 6447 0a90 00000000 		.4byte	0
 6448 0a94 00000000 		.4byte	0
 6449              	.LLST72:
 6450 0a98 00000000 		.4byte	.LVL248
 6451 0a9c 22000000 		.4byte	.LVL253
 6452 0aa0 0100     		.2byte	0x1
 6453 0aa2 50       		.byte	0x50
 6454 0aa3 22000000 		.4byte	.LVL253
 6455 0aa7 43000000 		.4byte	.LVL259-1
 6456 0aab 0100     		.2byte	0x1
 6457 0aad 5C       		.byte	0x5c
 6458 0aae 43000000 		.4byte	.LVL259-1
 6459 0ab2 70010000 		.4byte	.LFE22
 6460 0ab6 0200     		.2byte	0x2
 6461 0ab8 91       		.byte	0x91
 6462 0ab9 5C       		.sleb128 -36
 6463 0aba 00000000 		.4byte	0
 6464 0abe 00000000 		.4byte	0
 6465              	.LLST73:
 6466 0ac2 00000000 		.4byte	.LVL248
 6467 0ac6 3C000000 		.4byte	.LVL258
 6468 0aca 0100     		.2byte	0x1
 6469 0acc 51       		.byte	0x51
 6470 0acd 3C000000 		.4byte	.LVL258
 6471 0ad1 70010000 		.4byte	.LFE22
 6472 0ad5 0400     		.2byte	0x4
 6473 0ad7 F3       		.byte	0xf3
 6474 0ad8 01       		.uleb128 0x1
 6475 0ad9 51       		.byte	0x51
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 168


 6476 0ada 9F       		.byte	0x9f
 6477 0adb 00000000 		.4byte	0
 6478 0adf 00000000 		.4byte	0
 6479              	.LLST74:
 6480 0ae3 46000000 		.4byte	.LVL260
 6481 0ae7 4C000000 		.4byte	.LVL261
 6482 0aeb 0200     		.2byte	0x2
 6483 0aed 30       		.byte	0x30
 6484 0aee 9F       		.byte	0x9f
 6485 0aef 4C000000 		.4byte	.LVL261
 6486 0af3 50000000 		.4byte	.LVL262
 6487 0af7 0100     		.2byte	0x1
 6488 0af9 52       		.byte	0x52
 6489 0afa 50000000 		.4byte	.LVL262
 6490 0afe 5E010000 		.4byte	.LVL297
 6491 0b02 0200     		.2byte	0x2
 6492 0b04 7D       		.byte	0x7d
 6493 0b05 00       		.sleb128 0
 6494 0b06 5E010000 		.4byte	.LVL297
 6495 0b0a 70010000 		.4byte	.LFE22
 6496 0b0e 0200     		.2byte	0x2
 6497 0b10 91       		.byte	0x91
 6498 0b11 58       		.sleb128 -40
 6499 0b12 00000000 		.4byte	0
 6500 0b16 00000000 		.4byte	0
 6501              	.LLST75:
 6502 0b1a 1E000000 		.4byte	.LVL251
 6503 0b1e 22000000 		.4byte	.LVL253
 6504 0b22 0200     		.2byte	0x2
 6505 0b24 31       		.byte	0x31
 6506 0b25 9F       		.byte	0x9f
 6507 0b26 22000000 		.4byte	.LVL253
 6508 0b2a 2A000000 		.4byte	.LVL255
 6509 0b2e 0100     		.2byte	0x1
 6510 0b30 52       		.byte	0x52
 6511 0b31 2A000000 		.4byte	.LVL255
 6512 0b35 2C000000 		.4byte	.LVL256
 6513 0b39 0100     		.2byte	0x1
 6514 0b3b 53       		.byte	0x53
 6515 0b3c 2C000000 		.4byte	.LVL256
 6516 0b40 34000000 		.4byte	.LVL257
 6517 0b44 0100     		.2byte	0x1
 6518 0b46 52       		.byte	0x52
 6519 0b47 68000000 		.4byte	.LVL263
 6520 0b4b 6C000000 		.4byte	.LVL264
 6521 0b4f 0200     		.2byte	0x2
 6522 0b51 31       		.byte	0x31
 6523 0b52 9F       		.byte	0x9f
 6524 0b53 6C000000 		.4byte	.LVL264
 6525 0b57 76000000 		.4byte	.LVL265
 6526 0b5b 0100     		.2byte	0x1
 6527 0b5d 52       		.byte	0x52
 6528 0b5e 76000000 		.4byte	.LVL265
 6529 0b62 78000000 		.4byte	.LVL266
 6530 0b66 0100     		.2byte	0x1
 6531 0b68 53       		.byte	0x53
 6532 0b69 78000000 		.4byte	.LVL266
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 169


 6533 0b6d 85000000 		.4byte	.LVL268-1
 6534 0b71 0100     		.2byte	0x1
 6535 0b73 52       		.byte	0x52
 6536 0b74 A6000000 		.4byte	.LVL274
 6537 0b78 BA000000 		.4byte	.LVL275
 6538 0b7c 0100     		.2byte	0x1
 6539 0b7e 52       		.byte	0x52
 6540 0b7f BC000000 		.4byte	.LVL276
 6541 0b83 BE000000 		.4byte	.LVL277
 6542 0b87 0100     		.2byte	0x1
 6543 0b89 53       		.byte	0x53
 6544 0b8a BE000000 		.4byte	.LVL277
 6545 0b8e C4000000 		.4byte	.LVL278
 6546 0b92 0100     		.2byte	0x1
 6547 0b94 52       		.byte	0x52
 6548 0b95 C4000000 		.4byte	.LVL278
 6549 0b99 C8000000 		.4byte	.LVL279
 6550 0b9d 0200     		.2byte	0x2
 6551 0b9f 31       		.byte	0x31
 6552 0ba0 9F       		.byte	0x9f
 6553 0ba1 C8000000 		.4byte	.LVL279
 6554 0ba5 E8000000 		.4byte	.LVL280
 6555 0ba9 0100     		.2byte	0x1
 6556 0bab 52       		.byte	0x52
 6557 0bac E8000000 		.4byte	.LVL280
 6558 0bb0 EA000000 		.4byte	.LVL281
 6559 0bb4 0100     		.2byte	0x1
 6560 0bb6 53       		.byte	0x53
 6561 0bb7 EA000000 		.4byte	.LVL281
 6562 0bbb 06010000 		.4byte	.LVL284
 6563 0bbf 0100     		.2byte	0x1
 6564 0bc1 52       		.byte	0x52
 6565 0bc2 06010000 		.4byte	.LVL284
 6566 0bc6 08010000 		.4byte	.LVL285
 6567 0bca 0100     		.2byte	0x1
 6568 0bcc 53       		.byte	0x53
 6569 0bcd 08010000 		.4byte	.LVL285
 6570 0bd1 13010000 		.4byte	.LVL286-1
 6571 0bd5 0100     		.2byte	0x1
 6572 0bd7 52       		.byte	0x52
 6573 0bd8 4A010000 		.4byte	.LVL292
 6574 0bdc 56010000 		.4byte	.LVL295
 6575 0be0 0100     		.2byte	0x1
 6576 0be2 52       		.byte	0x52
 6577 0be3 56010000 		.4byte	.LVL295
 6578 0be7 58010000 		.4byte	.LVL296
 6579 0beb 0100     		.2byte	0x1
 6580 0bed 53       		.byte	0x53
 6581 0bee 58010000 		.4byte	.LVL296
 6582 0bf2 70010000 		.4byte	.LFE22
 6583 0bf6 0100     		.2byte	0x1
 6584 0bf8 52       		.byte	0x52
 6585 0bf9 00000000 		.4byte	0
 6586 0bfd 00000000 		.4byte	0
 6587              	.LLST76:
 6588 0c01 68000000 		.4byte	.LVL263
 6589 0c05 7E000000 		.4byte	.LVL267
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 170


 6590 0c09 0300     		.2byte	0x3
 6591 0c0b 08       		.byte	0x8
 6592 0c0c 40       		.byte	0x40
 6593 0c0d 9F       		.byte	0x9f
 6594 0c0e 7E000000 		.4byte	.LVL267
 6595 0c12 30010000 		.4byte	.LVL291
 6596 0c16 0100     		.2byte	0x1
 6597 0c18 54       		.byte	0x54
 6598 0c19 00000000 		.4byte	0
 6599 0c1d 00000000 		.4byte	0
 6600              	.LLST77:
 6601 0c21 46000000 		.4byte	.LVL260
 6602 0c25 4C000000 		.4byte	.LVL261
 6603 0c29 0100     		.2byte	0x1
 6604 0c2b 50       		.byte	0x50
 6605 0c2c 4C000000 		.4byte	.LVL261
 6606 0c30 5E010000 		.4byte	.LVL299
 6607 0c34 0100     		.2byte	0x1
 6608 0c36 56       		.byte	0x56
 6609 0c37 00000000 		.4byte	0
 6610 0c3b 00000000 		.4byte	0
 6611              	.LLST78:
 6612 0c3f 90000000 		.4byte	.LVL270
 6613 0c43 94000000 		.4byte	.LVL271
 6614 0c47 0600     		.2byte	0x6
 6615 0c49 0C       		.byte	0xc
 6616 0c4a 00A60E00 		.4byte	0xea600
 6617 0c4e 9F       		.byte	0x9f
 6618 0c4f 94000000 		.4byte	.LVL271
 6619 0c53 A4000000 		.4byte	.LVL273
 6620 0c57 0100     		.2byte	0x1
 6621 0c59 53       		.byte	0x53
 6622 0c5a A4000000 		.4byte	.LVL273
 6623 0c5e A6000000 		.4byte	.LVL274
 6624 0c62 0300     		.2byte	0x3
 6625 0c64 73       		.byte	0x73
 6626 0c65 7F       		.sleb128 -1
 6627 0c66 9F       		.byte	0x9f
 6628 0c67 BA000000 		.4byte	.LVL275
 6629 0c6b BC000000 		.4byte	.LVL276
 6630 0c6f 0100     		.2byte	0x1
 6631 0c71 53       		.byte	0x53
 6632 0c72 18010000 		.4byte	.LVL287
 6633 0c76 1C010000 		.4byte	.LVL288
 6634 0c7a 0600     		.2byte	0x6
 6635 0c7c 0C       		.byte	0xc
 6636 0c7d 00A60E00 		.4byte	0xea600
 6637 0c81 9F       		.byte	0x9f
 6638 0c82 1C010000 		.4byte	.LVL288
 6639 0c86 2C010000 		.4byte	.LVL290
 6640 0c8a 0100     		.2byte	0x1
 6641 0c8c 53       		.byte	0x53
 6642 0c8d 00000000 		.4byte	0
 6643 0c91 00000000 		.4byte	0
 6644              	.LLST79:
 6645 0c95 1E000000 		.4byte	.LVL251
 6646 0c99 5E010000 		.4byte	.LVL298
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 171


 6647 0c9d 0100     		.2byte	0x1
 6648 0c9f 55       		.byte	0x55
 6649 0ca0 5E010000 		.4byte	.LVL298
 6650 0ca4 5E010000 		.4byte	.LVL300
 6651 0ca8 0300     		.2byte	0x3
 6652 0caa 7A       		.byte	0x7a
 6653 0cab 09       		.sleb128 9
 6654 0cac 9F       		.byte	0x9f
 6655 0cad 00000000 		.4byte	0
 6656 0cb1 00000000 		.4byte	0
 6657              	.LLST80:
 6658 0cb5 1E000000 		.4byte	.LVL251
 6659 0cb9 26000000 		.4byte	.LVL254
 6660 0cbd 0300     		.2byte	0x3
 6661 0cbf 91       		.byte	0x91
 6662 0cc0 64       		.sleb128 -28
 6663 0cc1 9F       		.byte	0x9f
 6664 0cc2 26000000 		.4byte	.LVL254
 6665 0cc6 2A000000 		.4byte	.LVL255
 6666 0cca 0100     		.2byte	0x1
 6667 0ccc 53       		.byte	0x53
 6668 0ccd 2A000000 		.4byte	.LVL255
 6669 0cd1 F8000000 		.4byte	.LVL282
 6670 0cd5 0300     		.2byte	0x3
 6671 0cd7 91       		.byte	0x91
 6672 0cd8 64       		.sleb128 -28
 6673 0cd9 9F       		.byte	0x9f
 6674 0cda F8000000 		.4byte	.LVL282
 6675 0cde FA000000 		.4byte	.LVL283
 6676 0ce2 0100     		.2byte	0x1
 6677 0ce4 53       		.byte	0x53
 6678 0ce5 FA000000 		.4byte	.LVL283
 6679 0ce9 4C010000 		.4byte	.LVL293
 6680 0ced 0300     		.2byte	0x3
 6681 0cef 91       		.byte	0x91
 6682 0cf0 64       		.sleb128 -28
 6683 0cf1 9F       		.byte	0x9f
 6684 0cf2 4C010000 		.4byte	.LVL293
 6685 0cf6 50010000 		.4byte	.LVL294
 6686 0cfa 0100     		.2byte	0x1
 6687 0cfc 53       		.byte	0x53
 6688 0cfd 50010000 		.4byte	.LVL294
 6689 0d01 70010000 		.4byte	.LFE22
 6690 0d05 0300     		.2byte	0x3
 6691 0d07 91       		.byte	0x91
 6692 0d08 64       		.sleb128 -28
 6693 0d09 9F       		.byte	0x9f
 6694 0d0a 00000000 		.4byte	0
 6695 0d0e 00000000 		.4byte	0
 6696              	.LLST81:
 6697 0d12 68000000 		.4byte	.LVL263
 6698 0d16 30010000 		.4byte	.LVL291
 6699 0d1a 0100     		.2byte	0x1
 6700 0d1c 57       		.byte	0x57
 6701 0d1d 00000000 		.4byte	0
 6702 0d21 00000000 		.4byte	0
 6703              	.LLST82:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 172


 6704 0d25 1A000000 		.4byte	.LVL250
 6705 0d29 20000000 		.4byte	.LVL252
 6706 0d2d 0100     		.2byte	0x1
 6707 0d2f 53       		.byte	0x53
 6708 0d30 20000000 		.4byte	.LVL252
 6709 0d34 5E010000 		.4byte	.LVL300
 6710 0d38 0100     		.2byte	0x1
 6711 0d3a 5A       		.byte	0x5a
 6712 0d3b 00000000 		.4byte	0
 6713 0d3f 00000000 		.4byte	0
 6714              	.LLST83:
 6715 0d43 00000000 		.4byte	.LVL301
 6716 0d47 06000000 		.4byte	.LVL302
 6717 0d4b 0100     		.2byte	0x1
 6718 0d4d 50       		.byte	0x50
 6719 0d4e 06000000 		.4byte	.LVL302
 6720 0d52 28000000 		.4byte	.LFE16
 6721 0d56 0400     		.2byte	0x4
 6722 0d58 F3       		.byte	0xf3
 6723 0d59 01       		.uleb128 0x1
 6724 0d5a 50       		.byte	0x50
 6725 0d5b 9F       		.byte	0x9f
 6726 0d5c 00000000 		.4byte	0
 6727 0d60 00000000 		.4byte	0
 6728              	.LLST84:
 6729 0d64 00000000 		.4byte	.LVL301
 6730 0d68 10000000 		.4byte	.LVL303
 6731 0d6c 0100     		.2byte	0x1
 6732 0d6e 51       		.byte	0x51
 6733 0d6f 10000000 		.4byte	.LVL303
 6734 0d73 28000000 		.4byte	.LFE16
 6735 0d77 0400     		.2byte	0x4
 6736 0d79 F3       		.byte	0xf3
 6737 0d7a 01       		.uleb128 0x1
 6738 0d7b 51       		.byte	0x51
 6739 0d7c 9F       		.byte	0x9f
 6740 0d7d 00000000 		.4byte	0
 6741 0d81 00000000 		.4byte	0
 6742              	.LLST85:
 6743 0d85 00000000 		.4byte	.LVL305
 6744 0d89 1E000000 		.4byte	.LVL308
 6745 0d8d 0100     		.2byte	0x1
 6746 0d8f 50       		.byte	0x50
 6747 0d90 1E000000 		.4byte	.LVL308
 6748 0d94 62000000 		.4byte	.LVL318
 6749 0d98 0100     		.2byte	0x1
 6750 0d9a 54       		.byte	0x54
 6751 0d9b 62000000 		.4byte	.LVL318
 6752 0d9f 64000000 		.4byte	.LVL319
 6753 0da3 0100     		.2byte	0x1
 6754 0da5 50       		.byte	0x50
 6755 0da6 64000000 		.4byte	.LVL319
 6756 0daa 68000000 		.4byte	.LVL322
 6757 0dae 0100     		.2byte	0x1
 6758 0db0 54       		.byte	0x54
 6759 0db1 68000000 		.4byte	.LVL322
 6760 0db5 78000000 		.4byte	.LFE23
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 173


 6761 0db9 0400     		.2byte	0x4
 6762 0dbb F3       		.byte	0xf3
 6763 0dbc 01       		.uleb128 0x1
 6764 0dbd 50       		.byte	0x50
 6765 0dbe 9F       		.byte	0x9f
 6766 0dbf 00000000 		.4byte	0
 6767 0dc3 00000000 		.4byte	0
 6768              	.LLST86:
 6769 0dc7 00000000 		.4byte	.LVL305
 6770 0dcb 1E000000 		.4byte	.LVL308
 6771 0dcf 0100     		.2byte	0x1
 6772 0dd1 51       		.byte	0x51
 6773 0dd2 1E000000 		.4byte	.LVL308
 6774 0dd6 62000000 		.4byte	.LVL318
 6775 0dda 0100     		.2byte	0x1
 6776 0ddc 55       		.byte	0x55
 6777 0ddd 62000000 		.4byte	.LVL318
 6778 0de1 66000000 		.4byte	.LVL320
 6779 0de5 0100     		.2byte	0x1
 6780 0de7 51       		.byte	0x51
 6781 0de8 66000000 		.4byte	.LVL320
 6782 0dec 68000000 		.4byte	.LVL323
 6783 0df0 0100     		.2byte	0x1
 6784 0df2 55       		.byte	0x55
 6785 0df3 68000000 		.4byte	.LVL323
 6786 0df7 78000000 		.4byte	.LFE23
 6787 0dfb 0400     		.2byte	0x4
 6788 0dfd F3       		.byte	0xf3
 6789 0dfe 01       		.uleb128 0x1
 6790 0dff 51       		.byte	0x51
 6791 0e00 9F       		.byte	0x9f
 6792 0e01 00000000 		.4byte	0
 6793 0e05 00000000 		.4byte	0
 6794              	.LLST87:
 6795 0e09 06000000 		.4byte	.LVL306
 6796 0e0d 60000000 		.4byte	.LVL317
 6797 0e11 0200     		.2byte	0x2
 6798 0e13 30       		.byte	0x30
 6799 0e14 9F       		.byte	0x9f
 6800 0e15 60000000 		.4byte	.LVL317
 6801 0e19 62000000 		.4byte	.LVL318
 6802 0e1d 0100     		.2byte	0x1
 6803 0e1f 50       		.byte	0x50
 6804 0e20 62000000 		.4byte	.LVL318
 6805 0e24 68000000 		.4byte	.LVL321
 6806 0e28 0200     		.2byte	0x2
 6807 0e2a 30       		.byte	0x30
 6808 0e2b 9F       		.byte	0x9f
 6809 0e2c 68000000 		.4byte	.LVL321
 6810 0e30 78000000 		.4byte	.LFE23
 6811 0e34 0100     		.2byte	0x1
 6812 0e36 50       		.byte	0x50
 6813 0e37 00000000 		.4byte	0
 6814 0e3b 00000000 		.4byte	0
 6815              	.LLST88:
 6816 0e3f 42000000 		.4byte	.LVL314
 6817 0e43 46000000 		.4byte	.LVL315
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 174


 6818 0e47 0600     		.2byte	0x6
 6819 0e49 0C       		.byte	0xc
 6820 0e4a 00366E01 		.4byte	0x16e3600
 6821 0e4e 9F       		.byte	0x9f
 6822 0e4f 46000000 		.4byte	.LVL315
 6823 0e53 5F000000 		.4byte	.LVL317-1
 6824 0e57 0100     		.2byte	0x1
 6825 0e59 53       		.byte	0x53
 6826 0e5a 66000000 		.4byte	.LVL320
 6827 0e5e 68000000 		.4byte	.LVL321
 6828 0e62 0100     		.2byte	0x1
 6829 0e64 53       		.byte	0x53
 6830 0e65 00000000 		.4byte	0
 6831 0e69 00000000 		.4byte	0
 6832              	.LLST89:
 6833 0e6d 2C000000 		.4byte	.LVL310
 6834 0e71 34000000 		.4byte	.LVL311
 6835 0e75 0100     		.2byte	0x1
 6836 0e77 50       		.byte	0x50
 6837 0e78 00000000 		.4byte	0
 6838 0e7c 00000000 		.4byte	0
 6839              	.LLST90:
 6840 0e80 10000000 		.4byte	.LVL307
 6841 0e84 68000000 		.4byte	.LVL324
 6842 0e88 0100     		.2byte	0x1
 6843 0e8a 56       		.byte	0x56
 6844 0e8b 00000000 		.4byte	0
 6845 0e8f 00000000 		.4byte	0
 6846              		.section	.debug_aranges,"",%progbits
 6847 0000 CC000000 		.4byte	0xcc
 6848 0004 0200     		.2byte	0x2
 6849 0006 00000000 		.4byte	.Ldebug_info0
 6850 000a 04       		.byte	0x4
 6851 000b 00       		.byte	0
 6852 000c 0000     		.2byte	0
 6853 000e 0000     		.2byte	0
 6854 0010 00000000 		.4byte	.LFB1
 6855 0014 10000000 		.4byte	.LFE1-.LFB1
 6856 0018 00000000 		.4byte	.LFB2
 6857 001c 50000000 		.4byte	.LFE2-.LFB2
 6858 0020 00000000 		.4byte	.LFB3
 6859 0024 1C000000 		.4byte	.LFE3-.LFB3
 6860 0028 00000000 		.4byte	.LFB19
 6861 002c A0000000 		.4byte	.LFE19-.LFB19
 6862 0030 00000000 		.4byte	.LFB20
 6863 0034 9C000000 		.4byte	.LFE20-.LFB20
 6864 0038 00000000 		.4byte	.LFB21
 6865 003c CC000000 		.4byte	.LFE21-.LFB21
 6866 0040 00000000 		.4byte	.LFB4
 6867 0044 38010000 		.4byte	.LFE4-.LFB4
 6868 0048 00000000 		.4byte	.LFB6
 6869 004c 60000000 		.4byte	.LFE6-.LFB6
 6870 0050 00000000 		.4byte	.LFB7
 6871 0054 2A000000 		.4byte	.LFE7-.LFB7
 6872 0058 00000000 		.4byte	.LFB8
 6873 005c 44000000 		.4byte	.LFE8-.LFB8
 6874 0060 00000000 		.4byte	.LFB9
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 175


 6875 0064 1C000000 		.4byte	.LFE9-.LFB9
 6876 0068 00000000 		.4byte	.LFB12
 6877 006c F0000000 		.4byte	.LFE12-.LFB12
 6878 0070 00000000 		.4byte	.LFB13
 6879 0074 20000000 		.4byte	.LFE13-.LFB13
 6880 0078 00000000 		.4byte	.LFB17
 6881 007c 34000000 		.4byte	.LFE17-.LFB17
 6882 0080 00000000 		.4byte	.LFB14
 6883 0084 A8000000 		.4byte	.LFE14-.LFB14
 6884 0088 00000000 		.4byte	.LFB15
 6885 008c 28000000 		.4byte	.LFE15-.LFB15
 6886 0090 00000000 		.4byte	.LFB18
 6887 0094 64000000 		.4byte	.LFE18-.LFB18
 6888 0098 00000000 		.4byte	.LFB5
 6889 009c 24000000 		.4byte	.LFE5-.LFB5
 6890 00a0 00000000 		.4byte	.LFB10
 6891 00a4 5C000000 		.4byte	.LFE10-.LFB10
 6892 00a8 00000000 		.4byte	.LFB11
 6893 00ac 70000000 		.4byte	.LFE11-.LFB11
 6894 00b0 00000000 		.4byte	.LFB22
 6895 00b4 70010000 		.4byte	.LFE22-.LFB22
 6896 00b8 00000000 		.4byte	.LFB16
 6897 00bc 28000000 		.4byte	.LFE16-.LFB16
 6898 00c0 00000000 		.4byte	.LFB23
 6899 00c4 78000000 		.4byte	.LFE23-.LFB23
 6900 00c8 00000000 		.4byte	0
 6901 00cc 00000000 		.4byte	0
 6902              		.section	.debug_ranges,"",%progbits
 6903              	.Ldebug_ranges0:
 6904 0000 00000000 		.4byte	.LFB1
 6905 0004 10000000 		.4byte	.LFE1
 6906 0008 00000000 		.4byte	.LFB2
 6907 000c 50000000 		.4byte	.LFE2
 6908 0010 00000000 		.4byte	.LFB3
 6909 0014 1C000000 		.4byte	.LFE3
 6910 0018 00000000 		.4byte	.LFB19
 6911 001c A0000000 		.4byte	.LFE19
 6912 0020 00000000 		.4byte	.LFB20
 6913 0024 9C000000 		.4byte	.LFE20
 6914 0028 00000000 		.4byte	.LFB21
 6915 002c CC000000 		.4byte	.LFE21
 6916 0030 00000000 		.4byte	.LFB4
 6917 0034 38010000 		.4byte	.LFE4
 6918 0038 00000000 		.4byte	.LFB6
 6919 003c 60000000 		.4byte	.LFE6
 6920 0040 00000000 		.4byte	.LFB7
 6921 0044 2A000000 		.4byte	.LFE7
 6922 0048 00000000 		.4byte	.LFB8
 6923 004c 44000000 		.4byte	.LFE8
 6924 0050 00000000 		.4byte	.LFB9
 6925 0054 1C000000 		.4byte	.LFE9
 6926 0058 00000000 		.4byte	.LFB12
 6927 005c F0000000 		.4byte	.LFE12
 6928 0060 00000000 		.4byte	.LFB13
 6929 0064 20000000 		.4byte	.LFE13
 6930 0068 00000000 		.4byte	.LFB17
 6931 006c 34000000 		.4byte	.LFE17
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 176


 6932 0070 00000000 		.4byte	.LFB14
 6933 0074 A8000000 		.4byte	.LFE14
 6934 0078 00000000 		.4byte	.LFB15
 6935 007c 28000000 		.4byte	.LFE15
 6936 0080 00000000 		.4byte	.LFB18
 6937 0084 64000000 		.4byte	.LFE18
 6938 0088 00000000 		.4byte	.LFB5
 6939 008c 24000000 		.4byte	.LFE5
 6940 0090 00000000 		.4byte	.LFB10
 6941 0094 5C000000 		.4byte	.LFE10
 6942 0098 00000000 		.4byte	.LFB11
 6943 009c 70000000 		.4byte	.LFE11
 6944 00a0 00000000 		.4byte	.LFB22
 6945 00a4 70010000 		.4byte	.LFE22
 6946 00a8 00000000 		.4byte	.LFB16
 6947 00ac 28000000 		.4byte	.LFE16
 6948 00b0 00000000 		.4byte	.LFB23
 6949 00b4 78000000 		.4byte	.LFE23
 6950 00b8 00000000 		.4byte	0
 6951 00bc 00000000 		.4byte	0
 6952              		.section	.debug_line,"",%progbits
 6953              	.Ldebug_line0:
 6954 0000 C7040000 		.section	.debug_str,"MS",%progbits,1
 6954      0200BA00 
 6954      00000201 
 6954      FB0E0D00 
 6954      01010101 
 6955              	.LASF138:
 6956 0000 69646163 		.ascii	"idacBRegValue\000"
 6956      42526567 
 6956      56616C75 
 6956      6500
 6957              	.LASF51:
 6958 000e 63617073 		.ascii	"capsense_RAM_SNS_LIST_STRUCT\000"
 6958      656E7365 
 6958      5F52414D 
 6958      5F534E53 
 6958      5F4C4953 
 6959              	.LASF127:
 6960 002b 6D696E52 		.ascii	"minRaw\000"
 6960      617700
 6961              	.LASF149:
 6962 0032 736E7341 		.ascii	"snsAddrPtr\000"
 6962      64647250 
 6962      747200
 6963              	.LASF184:
 6964 003d 63617073 		.ascii	"capsense_SsSetModClkClockDivider\000"
 6964      656E7365 
 6964      5F537353 
 6964      65744D6F 
 6964      64436C6B 
 6965              	.LASF23:
 6966 005e 63617073 		.ascii	"capsense_SENSE_METHOD_ISX_E\000"
 6966      656E7365 
 6966      5F53454E 
 6966      53455F4D 
 6966      4554484F 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 177


 6967              	.LASF154:
 6968 007a 63617073 		.ascii	"capsense_SsCSDConnectSensorExt\000"
 6968      656E7365 
 6968      5F537343 
 6968      5344436F 
 6968      6E6E6563 
 6969              	.LASF66:
 6970 0099 736E7254 		.ascii	"snrTestWidgetId\000"
 6970      65737457 
 6970      69646765 
 6970      74496400 
 6971              	.LASF130:
 6972 00a9 694D6F64 		.ascii	"iMod\000"
 6972      00
 6973              	.LASF8:
 6974 00ae 756E7369 		.ascii	"unsigned int\000"
 6974      676E6564 
 6974      20696E74 
 6974      00
 6975              	.LASF56:
 6976 00bb 7363616E 		.ascii	"scanCounter\000"
 6976      436F756E 
 6976      74657200 
 6977              	.LASF122:
 6978 00c7 72617469 		.ascii	"ratio\000"
 6978      6F00
 6979              	.LASF54:
 6980 00cd 6877436C 		.ascii	"hwClock\000"
 6980      6F636B00 
 6981              	.LASF70:
 6982 00d5 7363616E 		.ascii	"scanCsdISC\000"
 6982      43736449 
 6982      534300
 6983              	.LASF135:
 6984 00e0 696E7465 		.ascii	"interruptState\000"
 6984      72727570 
 6984      74537461 
 6984      746500
 6985              	.LASF182:
 6986 00ef 63617073 		.ascii	"capsense_DischargeExtCapacitors\000"
 6986      656E7365 
 6986      5F446973 
 6986      63686172 
 6986      67654578 
 6987              	.LASF121:
 6988 010f 70747246 		.ascii	"ptrFlashWidget\000"
 6988      6C617368 
 6988      57696467 
 6988      657400
 6989              	.LASF21:
 6990 011e 63617073 		.ascii	"capsense_SENSE_METHOD_CSX_E\000"
 6990      656E7365 
 6990      5F53454E 
 6990      53455F4D 
 6990      4554484F 
 6991              	.LASF191:
 6992 013a 63617073 		.ascii	"capsense_ISR_StartEx\000"
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 178


 6992      656E7365 
 6992      5F495352 
 6992      5F537461 
 6992      72744578 
 6993              	.LASF189:
 6994 014f 4379496E 		.ascii	"CyIntDisable\000"
 6994      74446973 
 6994      61626C65 
 6994      00
 6995              	.LASF169:
 6996 015c 63617073 		.ascii	"capsense_CSDCalibrateWidget\000"
 6996      656E7365 
 6996      5F435344 
 6996      43616C69 
 6996      62726174 
 6997              	.LASF151:
 6998 0178 70696E4D 		.ascii	"pinModeShift\000"
 6998      6F646553 
 6998      68696674 
 6998      00
 6999              	.LASF97:
 7000 0185 69697246 		.ascii	"iirFilterCoeff\000"
 7000      696C7465 
 7000      72436F65 
 7000      666600
 7001              	.LASF155:
 7002 0194 73656E73 		.ascii	"sensorId\000"
 7002      6F724964 
 7002      00
 7003              	.LASF134:
 7004 019d 70747257 		.ascii	"ptrWdgt\000"
 7004      64677400 
 7005              	.LASF20:
 7006 01a5 63617073 		.ascii	"capsense_SENSE_METHOD_CSD_E\000"
 7006      656E7365 
 7006      5F53454E 
 7006      53455F4D 
 7006      4554484F 
 7007              	.LASF141:
 7008 01c1 63617073 		.ascii	"capsense_SsCSDConfigClock\000"
 7008      656E7365 
 7008      5F537343 
 7008      5344436F 
 7008      6E666967 
 7009              	.LASF12:
 7010 01db 666C6F61 		.ascii	"float\000"
 7010      7400
 7011              	.LASF82:
 7012 01e1 73686966 		.ascii	"shift\000"
 7012      7400
 7013              	.LASF193:
 7014 01e7 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 7014      43313120 
 7014      352E342E 
 7014      31203230 
 7014      31363036 
 7015 021a 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 179


 7015      20726576 
 7015      6973696F 
 7015      6E203233 
 7015      37373135 
 7016 024d 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 7016      67202D66 
 7016      66756E63 
 7016      74696F6E 
 7016      2D736563 
 7017              	.LASF139:
 7018 0279 736E7343 		.ascii	"snsClkSrc\000"
 7018      6C6B5372 
 7018      6300
 7019              	.LASF143:
 7020 0283 77617463 		.ascii	"watchdogCounter\000"
 7020      68646F67 
 7020      436F756E 
 7020      74657200 
 7021              	.LASF98:
 7022 0293 63617073 		.ascii	"capsense_FLASH_WD_STRUCT\000"
 7022      656E7365 
 7022      5F464C41 
 7022      53485F57 
 7022      445F5354 
 7023              	.LASF161:
 7024 02ac 63617073 		.ascii	"capsense_CSDSetupWidgetExt\000"
 7024      656E7365 
 7024      5F435344 
 7024      53657475 
 7024      70576964 
 7025              	.LASF190:
 7026 02c7 43794465 		.ascii	"CyDelayUs\000"
 7026      6C617955 
 7026      7300
 7027              	.LASF65:
 7028 02d1 736E734C 		.ascii	"snsList\000"
 7028      69737400 
 7029              	.LASF7:
 7030 02d9 6C6F6E67 		.ascii	"long long unsigned int\000"
 7030      206C6F6E 
 7030      6720756E 
 7030      7369676E 
 7030      65642069 
 7031              	.LASF67:
 7032 02f0 736E7254 		.ascii	"snrTestSensorId\000"
 7032      65737453 
 7032      656E736F 
 7032      72496400 
 7033              	.LASF173:
 7034 0300 63617073 		.ascii	"capsense_dsFlash\000"
 7034      656E7365 
 7034      5F647346 
 7034      6C617368 
 7034      00
 7035              	.LASF163:
 7036 0311 63616C4D 		.ascii	"calMask\000"
 7036      61736B00 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 180


 7037              	.LASF91:
 7038 0319 77646774 		.ascii	"wdgtType\000"
 7038      54797065 
 7038      00
 7039              	.LASF119:
 7040 0322 63617073 		.ascii	"capsense_SsCSDCalibrateCheck\000"
 7040      656E7365 
 7040      5F537343 
 7040      53444361 
 7040      6C696272 
 7041              	.LASF112:
 7042 033f 72617763 		.ascii	"rawcount\000"
 7042      6F756E74 
 7042      00
 7043              	.LASF174:
 7044 0348 63617073 		.ascii	"capsense_widgetIndex\000"
 7044      656E7365 
 7044      5F776964 
 7044      67657449 
 7044      6E646578 
 7045              	.LASF150:
 7046 035d 6E657752 		.ascii	"newRegisterValue\000"
 7046      65676973 
 7046      74657256 
 7046      616C7565 
 7046      00
 7047              	.LASF62:
 7048 036e 6D6F6443 		.ascii	"modCsdClk\000"
 7048      7364436C 
 7048      6B00
 7049              	.LASF117:
 7050 0378 70747252 		.ascii	"ptrRamWidget\000"
 7050      616D5769 
 7050      64676574 
 7050      00
 7051              	.LASF109:
 7052 0385 74617267 		.ascii	"target\000"
 7052      657400
 7053              	.LASF76:
 7054 038c 64725074 		.ascii	"drPtr\000"
 7054      7200
 7055              	.LASF142:
 7056 0392 63617073 		.ascii	"capsense_SsCSDCalculateScanDuration\000"
 7056      656E7365 
 7056      5F537343 
 7056      53444361 
 7056      6C63756C 
 7057              	.LASF28:
 7058 03b6 68797374 		.ascii	"hysteresis\000"
 7058      65726573 
 7058      697300
 7059              	.LASF129:
 7060 03c1 7261774C 		.ascii	"rawLevel\000"
 7060      6576656C 
 7060      00
 7061              	.LASF30:
 7062 03ca 6C6F7742 		.ascii	"lowBslnRst\000"
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 181


 7062      736C6E52 
 7062      737400
 7063              	.LASF156:
 7064 03d5 63617073 		.ascii	"capsense_CSDDisconnectSns\000"
 7064      656E7365 
 7064      5F435344 
 7064      44697363 
 7064      6F6E6E65 
 7065              	.LASF32:
 7066 03ef 69646163 		.ascii	"idacGainIndex\000"
 7066      4761696E 
 7066      496E6465 
 7066      7800
 7067              	.LASF153:
 7068 03fd 63617073 		.ascii	"capsense_CSDScan\000"
 7068      656E7365 
 7068      5F435344 
 7068      5363616E 
 7068      00
 7069              	.LASF40:
 7070 040e 62746E30 		.ascii	"btn0\000"
 7070      00
 7071              	.LASF41:
 7072 0413 62746E31 		.ascii	"btn1\000"
 7072      00
 7073              	.LASF42:
 7074 0418 62746E32 		.ascii	"btn2\000"
 7074      00
 7075              	.LASF90:
 7076 041d 746F7461 		.ascii	"totalNumSns\000"
 7076      6C4E756D 
 7076      536E7300 
 7077              	.LASF146:
 7078 0429 63617073 		.ascii	"capsense_SsCSDStartSample\000"
 7078      656E7365 
 7078      5F537343 
 7078      53445374 
 7078      61727453 
 7079              	.LASF19:
 7080 0443 63617073 		.ascii	"capsense_UNDEFINED_E\000"
 7080      656E7365 
 7080      5F554E44 
 7080      4546494E 
 7080      45445F45 
 7081              	.LASF125:
 7082 0458 6761696E 		.ascii	"gainIndex\000"
 7082      496E6465 
 7082      7800
 7083              	.LASF18:
 7084 0462 63617073 		.ascii	"capsense_LOW_BSLN_RST_TYPE\000"
 7084      656E7365 
 7084      5F4C4F57 
 7084      5F42534C 
 7084      4E5F5253 
 7085              	.LASF26:
 7086 047d 6E6F6973 		.ascii	"noiseTh\000"
 7086      65546800 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 182


 7087              	.LASF187:
 7088 0485 4379496E 		.ascii	"CyIntClearPending\000"
 7088      74436C65 
 7088      61725065 
 7088      6E64696E 
 7088      6700
 7089              	.LASF14:
 7090 0497 63686172 		.ascii	"char\000"
 7090      00
 7091              	.LASF186:
 7092 049c 43794578 		.ascii	"CyExitCriticalSection\000"
 7092      69744372 
 7092      69746963 
 7092      616C5365 
 7092      6374696F 
 7093              	.LASF123:
 7094 04b2 6D617849 		.ascii	"maxIdac\000"
 7094      64616300 
 7095              	.LASF80:
 7096 04ba 6873696F 		.ascii	"hsiomShift\000"
 7096      6D536869 
 7096      667400
 7097              	.LASF176:
 7098 04c5 63617073 		.ascii	"capsense_curRamSnsPtr\000"
 7098      656E7365 
 7098      5F637572 
 7098      52616D53 
 7098      6E735074 
 7099              	.LASF10:
 7100 04db 75696E74 		.ascii	"uint16\000"
 7100      313600
 7101              	.LASF140:
 7102 04e2 636F6E76 		.ascii	"conversionsNum\000"
 7102      65727369 
 7102      6F6E734E 
 7102      756D00
 7103              	.LASF118:
 7104 04f1 70747252 		.ascii	"ptrRamSensor\000"
 7104      616D5365 
 7104      6E736F72 
 7104      00
 7105              	.LASF180:
 7106 04fe 63617073 		.ascii	"capsense_configCsd\000"
 7106      656E7365 
 7106      5F636F6E 
 7106      66696743 
 7106      736400
 7107              	.LASF24:
 7108 0511 7265736F 		.ascii	"resolution\000"
 7108      6C757469 
 7108      6F6E00
 7109              	.LASF57:
 7110 051c 73746174 		.ascii	"status\000"
 7110      757300
 7111              	.LASF49:
 7112 0523 69646163 		.ascii	"idacComp\000"
 7112      436F6D70 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 183


 7112      00
 7113              	.LASF162:
 7114 052c 63617073 		.ascii	"capsense_SsCSDCalibrate\000"
 7114      656E7365 
 7114      5F537343 
 7114      53444361 
 7114      6C696272 
 7115              	.LASF75:
 7116 0544 70635074 		.ascii	"pcPtr\000"
 7116      7200
 7117              	.LASF6:
 7118 054a 6C6F6E67 		.ascii	"long long int\000"
 7118      206C6F6E 
 7118      6720696E 
 7118      7400
 7119              	.LASF37:
 7120 0558 63617073 		.ascii	"capsense_RAM_WD_BUTTON_STRUCT\000"
 7120      656E7365 
 7120      5F52414D 
 7120      5F57445F 
 7120      42555454 
 7121              	.LASF29:
 7122 0576 6F6E4465 		.ascii	"onDebounce\000"
 7122      626F756E 
 7122      636500
 7123              	.LASF115:
 7124 0581 75707065 		.ascii	"upperLimit\000"
 7124      724C696D 
 7124      697400
 7125              	.LASF172:
 7126 058c 63617073 		.ascii	"capsense_dsRam\000"
 7126      656E7365 
 7126      5F647352 
 7126      616D00
 7127              	.LASF111:
 7128 059b 63616C69 		.ascii	"calibrateStatus\000"
 7128      62726174 
 7128      65537461 
 7128      74757300 
 7129              	.LASF64:
 7130 05ab 77646774 		.ascii	"wdgtList\000"
 7130      4C697374 
 7130      00
 7131              	.LASF166:
 7132 05b4 7074724D 		.ascii	"ptrMaxIdac\000"
 7132      61784964 
 7132      616300
 7133              	.LASF69:
 7134 05bf 736E7254 		.ascii	"snrTestRawCount\000"
 7134      65737452 
 7134      6177436F 
 7134      756E7400 
 7135              	.LASF27:
 7136 05cf 6E4E6F69 		.ascii	"nNoiseTh\000"
 7136      73655468 
 7136      00
 7137              	.LASF61:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 184


 7138 05d8 63736430 		.ascii	"csd0Config\000"
 7138      436F6E66 
 7138      696700
 7139              	.LASF114:
 7140 05e3 66726571 		.ascii	"freqChannel\000"
 7140      4368616E 
 7140      6E656C00 
 7141              	.LASF74:
 7142 05ef 6873696F 		.ascii	"hsiomPtr\000"
 7142      6D507472 
 7142      00
 7143              	.LASF11:
 7144 05f8 75696E74 		.ascii	"uint32\000"
 7144      333200
 7145              	.LASF133:
 7146 05ff 63617073 		.ascii	"capsense_SsCSDSetUpIdacs\000"
 7146      656E7365 
 7146      5F537343 
 7146      53445365 
 7146      74557049 
 7147              	.LASF87:
 7148 0618 70747232 		.ascii	"ptr2FltrHistory\000"
 7148      466C7472 
 7148      48697374 
 7148      6F727900 
 7149              	.LASF103:
 7150 0628 6761696E 		.ascii	"gainValue\000"
 7150      56616C75 
 7150      6500
 7151              	.LASF79:
 7152 0632 6D61736B 		.ascii	"mask\000"
 7152      00
 7153              	.LASF116:
 7154 0637 6C6F7765 		.ascii	"lowerLimit\000"
 7154      724C696D 
 7154      697400
 7155              	.LASF175:
 7156 0642 63617073 		.ascii	"capsense_sensorIndex\000"
 7156      656E7365 
 7156      5F73656E 
 7156      736F7249 
 7156      6E646578 
 7157              	.LASF126:
 7158 0657 63617073 		.ascii	"capsense_SsCSDNormalizeIdac\000"
 7158      656E7365 
 7158      5F537343 
 7158      53444E6F 
 7158      726D616C 
 7159              	.LASF44:
 7160 0673 63617073 		.ascii	"capsense_RAM_WD_LIST_STRUCT\000"
 7160      656E7365 
 7160      5F52414D 
 7160      5F57445F 
 7160      4C495354 
 7161              	.LASF132:
 7162 068f 63617073 		.ascii	"capsense_SsCSDInitialize\000"
 7162      656E7365 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 185


 7162      5F537343 
 7162      5344496E 
 7162      69746961 
 7163              	.LASF17:
 7164 06a8 63617073 		.ascii	"capsense_THRESHOLD_TYPE\000"
 7164      656E7365 
 7164      5F544852 
 7164      4553484F 
 7164      4C445F54 
 7165              	.LASF128:
 7166 06c0 6D617852 		.ascii	"maxRawLevel\000"
 7166      61774C65 
 7166      76656C00 
 7167              	.LASF110:
 7168 06cc 73616D70 		.ascii	"sampleClkFreqHz\000"
 7168      6C65436C 
 7168      6B467265 
 7168      71487A00 
 7169              	.LASF104:
 7170 06dc 63617073 		.ascii	"capsense_IDAC_GAIN_TABLE_STRUCT\000"
 7170      656E7365 
 7170      5F494441 
 7170      435F4741 
 7170      494E5F54 
 7171              	.LASF39:
 7172 06fc 63617073 		.ascii	"capsense_RAM_WD_SLIDER_STRUCT\000"
 7172      656E7365 
 7172      5F52414D 
 7172      5F57445F 
 7172      534C4944 
 7173              	.LASF113:
 7174 071a 736E7349 		.ascii	"snsIndex\000"
 7174      6E646578 
 7174      00
 7175              	.LASF183:
 7176 0723 63617073 		.ascii	"capsense_WriteBitsSafe\000"
 7176      656E7365 
 7176      5F577269 
 7176      74654269 
 7176      74735361 
 7177              	.LASF179:
 7178 073a 63617073 		.ascii	"capsense_idacGainTable\000"
 7178      656E7365 
 7178      5F696461 
 7178      63476169 
 7178      6E546162 
 7179              	.LASF101:
 7180 0751 6C6F6E67 		.ascii	"long double\000"
 7180      20646F75 
 7180      626C6500 
 7181              	.LASF71:
 7182 075d 7363616E 		.ascii	"scanCsxISC\000"
 7182      43737849 
 7182      534300
 7183              	.LASF16:
 7184 0768 72656733 		.ascii	"reg32\000"
 7184      3200
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 186


 7185              	.LASF68:
 7186 076e 736E7254 		.ascii	"snrTestScanCounter\000"
 7186      65737453 
 7186      63616E43 
 7186      6F756E74 
 7186      657200
 7187              	.LASF52:
 7188 0781 636F6E66 		.ascii	"configId\000"
 7188      69674964 
 7188      00
 7189              	.LASF86:
 7190 078a 70747232 		.ascii	"ptr2SnsRam\000"
 7190      536E7352 
 7190      616D00
 7191              	.LASF167:
 7192 0795 63617073 		.ascii	"capsense_SsCSDDisconnectSnsExt\000"
 7192      656E7365 
 7192      5F537343 
 7192      53444469 
 7192      73636F6E 
 7193              	.LASF60:
 7194 07b4 736E7353 		.ascii	"snsStatus\000"
 7194      74617475 
 7194      7300
 7195              	.LASF34:
 7196 07be 736E7343 		.ascii	"snsClkSource\000"
 7196      6C6B536F 
 7196      75726365 
 7196      00
 7197              	.LASF131:
 7198 07cb 6E657752 		.ascii	"newRegValue\000"
 7198      65675661 
 7198      6C756500 
 7199              	.LASF95:
 7200 07d7 78526573 		.ascii	"xResolution\000"
 7200      6F6C7574 
 7200      696F6E00 
 7201              	.LASF181:
 7202 07e3 63617073 		.ascii	"capsense_SsSetAllIOsState\000"
 7202      656E7365 
 7202      5F537353 
 7202      6574416C 
 7202      6C494F73 
 7203              	.LASF2:
 7204 07fd 73686F72 		.ascii	"short int\000"
 7204      7420696E 
 7204      7400
 7205              	.LASF158:
 7206 0807 6E657748 		.ascii	"newHsiomRegValue\000"
 7206      73696F6D 
 7206      52656756 
 7206      616C7565 
 7206      00
 7207              	.LASF171:
 7208 0818 63617073 		.ascii	"capsense_eleCsdDisconnectFlag\000"
 7208      656E7365 
 7208      5F656C65 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 187


 7208      43736444 
 7208      6973636F 
 7209              	.LASF152:
 7210 0836 70696E48 		.ascii	"pinHSIOMShift\000"
 7210      53494F4D 
 7210      53686966 
 7210      7400
 7211              	.LASF4:
 7212 0844 6C6F6E67 		.ascii	"long int\000"
 7212      20696E74 
 7212      00
 7213              	.LASF159:
 7214 084d 63617073 		.ascii	"capsense_SsCSDElectrodeCheck\000"
 7214      656E7365 
 7214      5F537343 
 7214      5344456C 
 7214      65637472 
 7215              	.LASF58:
 7216 086a 77646774 		.ascii	"wdgtEnable\000"
 7216      456E6162 
 7216      6C6500
 7217              	.LASF43:
 7218 0875 6C696E65 		.ascii	"linearslider\000"
 7218      6172736C 
 7218      69646572 
 7218      00
 7219              	.LASF47:
 7220 0882 64696666 		.ascii	"diff\000"
 7220      00
 7221              	.LASF124:
 7222 0887 6D696E49 		.ascii	"minIdac\000"
 7222      64616300 
 7223              	.LASF196:
 7224 088f 63617073 		.ascii	"capsense_SsCSDConfigIDACs\000"
 7224      656E7365 
 7224      5F537343 
 7224      5344436F 
 7224      6E666967 
 7225              	.LASF55:
 7226 08a9 74756E65 		.ascii	"tunerCmd\000"
 7226      72436D64 
 7226      00
 7227              	.LASF164:
 7228 08b2 74656D70 		.ascii	"temp\000"
 7228      00
 7229              	.LASF145:
 7230 08b7 63617073 		.ascii	"capsense_SsCSDCmodPrecharge\000"
 7230      656E7365 
 7230      5F537343 
 7230      5344436D 
 7230      6F645072 
 7231              	.LASF77:
 7232 08d3 70735074 		.ascii	"psPtr\000"
 7232      7200
 7233              	.LASF137:
 7234 08d9 69646163 		.ascii	"idacARegValue\000"
 7234      41526567 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 188


 7234      56616C75 
 7234      6500
 7235              	.LASF50:
 7236 08e7 63617073 		.ascii	"capsense_RAM_SNS_STRUCT\000"
 7236      656E7365 
 7236      5F52414D 
 7236      5F534E53 
 7236      5F535452 
 7237              	.LASF102:
 7238 08ff 6761696E 		.ascii	"gainReg\000"
 7238      52656700 
 7239              	.LASF93:
 7240 0907 6E756D43 		.ascii	"numCols\000"
 7240      6F6C7300 
 7241              	.LASF59:
 7242 090f 77646774 		.ascii	"wdgtStatus\000"
 7242      53746174 
 7242      757300
 7243              	.LASF35:
 7244 091a 73697A65 		.ascii	"sizetype\000"
 7244      74797065 
 7244      00
 7245              	.LASF81:
 7246 0923 64725368 		.ascii	"drShift\000"
 7246      69667400 
 7247              	.LASF5:
 7248 092b 6C6F6E67 		.ascii	"long unsigned int\000"
 7248      20756E73 
 7248      69676E65 
 7248      6420696E 
 7248      7400
 7249              	.LASF31:
 7250 093d 69646163 		.ascii	"idacMod\000"
 7250      4D6F6400 
 7251              	.LASF88:
 7252 0945 70747232 		.ascii	"ptr2DebounceArr\000"
 7252      4465626F 
 7252      756E6365 
 7252      41727200 
 7253              	.LASF168:
 7254 0955 63617073 		.ascii	"capsense_SsCSDGetNumberOfConversions\000"
 7254      656E7365 
 7254      5F537343 
 7254      53444765 
 7254      744E756D 
 7255              	.LASF96:
 7256 097a 7843656E 		.ascii	"xCentroidMultiplier\000"
 7256      74726F69 
 7256      644D756C 
 7256      7469706C 
 7256      69657200 
 7257              	.LASF25:
 7258 098e 66696E67 		.ascii	"fingerTh\000"
 7258      65725468 
 7258      00
 7259              	.LASF46:
 7260 0997 62736C6E 		.ascii	"bslnExt\000"
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 189


 7260      45787400 
 7261              	.LASF15:
 7262 099f 63797374 		.ascii	"cystatus\000"
 7262      61747573 
 7262      00
 7263              	.LASF1:
 7264 09a8 756E7369 		.ascii	"unsigned char\000"
 7264      676E6564 
 7264      20636861 
 7264      7200
 7265              	.LASF83:
 7266 09b6 63617073 		.ascii	"capsense_FLASH_IO_STRUCT\000"
 7266      656E7365 
 7266      5F464C41 
 7266      53485F49 
 7266      4F5F5354 
 7267              	.LASF89:
 7268 09cf 73746174 		.ascii	"staticConfig\000"
 7268      6963436F 
 7268      6E666967 
 7268      00
 7269              	.LASF92:
 7270 09dc 73656E73 		.ascii	"senseMethod\000"
 7270      654D6574 
 7270      686F6400 
 7271              	.LASF63:
 7272 09e8 6D6F6443 		.ascii	"modCsxClk\000"
 7272      7378436C 
 7272      6B00
 7273              	.LASF72:
 7274 09f2 7363616E 		.ascii	"scanCurrentISC\000"
 7274      43757272 
 7274      656E7449 
 7274      534300
 7275              	.LASF85:
 7276 0a01 70747232 		.ascii	"ptr2WdgtRam\000"
 7276      57646774 
 7276      52616D00 
 7277              	.LASF73:
 7278 0a0d 63617073 		.ascii	"capsense_RAM_STRUCT\000"
 7278      656E7365 
 7278      5F52414D 
 7278      5F535452 
 7278      55435400 
 7279              	.LASF107:
 7280 0a21 63617073 		.ascii	"capsense_SsCSDSetFilterDelay\000"
 7280      656E7365 
 7280      5F537343 
 7280      53445365 
 7280      7446696C 
 7281              	.LASF160:
 7282 0a3e 63617073 		.ascii	"capsense_CSDSetupWidget\000"
 7282      656E7365 
 7282      5F435344 
 7282      53657475 
 7282      70576964 
 7283              	.LASF94:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 190


 7284 0a56 6E756D52 		.ascii	"numRows\000"
 7284      6F777300 
 7285              	.LASF106:
 7286 0a5e 63617073 		.ascii	"capsense_SsCSDSetModeSnsClockDivider\000"
 7286      656E7365 
 7286      5F537343 
 7286      53445365 
 7286      744D6F64 
 7287              	.LASF120:
 7288 0a83 63617073 		.ascii	"capsense_SsCSDSwitchIdacGain\000"
 7288      656E7365 
 7288      5F537343 
 7288      53445377 
 7288      69746368 
 7289              	.LASF78:
 7290 0aa0 6873696F 		.ascii	"hsiomMask\000"
 7290      6D4D6173 
 7290      6B00
 7291              	.LASF188:
 7292 0aaa 4379496E 		.ascii	"CyIntEnable\000"
 7292      74456E61 
 7292      626C6500 
 7293              	.LASF33:
 7294 0ab6 736E7343 		.ascii	"snsClk\000"
 7294      6C6B00
 7295              	.LASF170:
 7296 0abd 6761696E 		.ascii	"gainSwitch\000"
 7296      53776974 
 7296      636800
 7297              	.LASF22:
 7298 0ac8 63617073 		.ascii	"capsense_SENSE_METHOD_BIST_E\000"
 7298      656E7365 
 7298      5F53454E 
 7298      53455F4D 
 7298      4554484F 
 7299              	.LASF185:
 7300 0ae5 4379456E 		.ascii	"CyEnterCriticalSection\000"
 7300      74657243 
 7300      72697469 
 7300      63616C53 
 7300      65637469 
 7301              	.LASF194:
 7302 0afc 47656E65 		.ascii	"Generated_Source\\PSoC4\\capsense_SensingCSD_LL.c\000"
 7302      72617465 
 7302      645F536F 
 7302      75726365 
 7302      5C50536F 
 7303              	.LASF144:
 7304 0b2c 63617073 		.ascii	"capsense_SsCSDTriggerScan\000"
 7304      656E7365 
 7304      5F537343 
 7304      53445472 
 7304      69676765 
 7305              	.LASF0:
 7306 0b46 7369676E 		.ascii	"signed char\000"
 7306      65642063 
 7306      68617200 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 191


 7307              	.LASF45:
 7308 0b52 62736C6E 		.ascii	"bsln\000"
 7308      00
 7309              	.LASF3:
 7310 0b57 73686F72 		.ascii	"short unsigned int\000"
 7310      7420756E 
 7310      7369676E 
 7310      65642069 
 7310      6E7400
 7311              	.LASF178:
 7312 0b6a 63617073 		.ascii	"capsense_curSnsIOPtr\000"
 7312      656E7365 
 7312      5F637572 
 7312      536E7349 
 7312      4F507472 
 7313              	.LASF84:
 7314 0b7f 70747232 		.ascii	"ptr2SnsFlash\000"
 7314      536E7346 
 7314      6C617368 
 7314      00
 7315              	.LASF192:
 7316 0b8c 63617073 		.ascii	"capsense_SsSwitchSensingMode\000"
 7316      656E7365 
 7316      5F537353 
 7316      77697463 
 7316      6853656E 
 7317              	.LASF195:
 7318 0ba9 433A5C72 		.ascii	"C:\\repopsitorios\\aixt\\ports\\Cypress\\CY8CKIT-14"
 7318      65706F70 
 7318      7369746F 
 7318      72696F73 
 7318      5C616978 
 7319 0bd7 352D3430 		.ascii	"5-40XX\\projects\\Configuracion_General.cydsn\000"
 7319      58585C70 
 7319      726F6A65 
 7319      6374735C 
 7319      436F6E66 
 7320              	.LASF147:
 7321 0c03 63617073 		.ascii	"capsense_CSDScanExt\000"
 7321      656E7365 
 7321      5F435344 
 7321      5363616E 
 7321      45787400 
 7322              	.LASF9:
 7323 0c17 75696E74 		.ascii	"uint8\000"
 7323      3800
 7324              	.LASF13:
 7325 0c1d 646F7562 		.ascii	"double\000"
 7325      6C6500
 7326              	.LASF48:
 7327 0c24 6E656742 		.ascii	"negBslnRstCnt\000"
 7327      736C6E52 
 7327      7374436E 
 7327      7400
 7328              	.LASF100:
 7329 0c32 63617073 		.ascii	"capsense_FLASH_STRUCT\000"
 7329      656E7365 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccTo6ZUR.s 			page 192


 7329      5F464C41 
 7329      53485F53 
 7329      54525543 
 7330              	.LASF165:
 7331 0c48 70747249 		.ascii	"ptrIdacMod\000"
 7331      6461634D 
 7331      6F6400
 7332              	.LASF105:
 7333 0c53 736E7343 		.ascii	"snsClkDivider\000"
 7333      6C6B4469 
 7333      76696465 
 7333      7200
 7334              	.LASF148:
 7335 0c61 63617073 		.ascii	"capsense_CSDConnectSns\000"
 7335      656E7365 
 7335      5F435344 
 7335      436F6E6E 
 7335      65637453 
 7336              	.LASF136:
 7337 0c78 69646163 		.ascii	"idacGain\000"
 7337      4761696E 
 7337      00
 7338              	.LASF53:
 7339 0c81 64657669 		.ascii	"deviceId\000"
 7339      63654964 
 7339      00
 7340              	.LASF108:
 7341 0c8a 77696467 		.ascii	"widgetId\000"
 7341      65744964 
 7341      00
 7342              	.LASF157:
 7343 0c93 6E657750 		.ascii	"newPcRegValue\000"
 7343      63526567 
 7343      56616C75 
 7343      6500
 7344              	.LASF36:
 7345 0ca1 63617073 		.ascii	"capsense_RAM_WD_BASE_STRUCT\000"
 7345      656E7365 
 7345      5F52414D 
 7345      5F57445F 
 7345      42415345 
 7346              	.LASF38:
 7347 0cbd 706F7369 		.ascii	"position\000"
 7347      74696F6E 
 7347      00
 7348              	.LASF177:
 7349 0cc6 63617073 		.ascii	"capsense_scanFreqIndex\000"
 7349      656E7365 
 7349      5F736361 
 7349      6E467265 
 7349      71496E64 
 7350              	.LASF99:
 7351 0cdd 77646774 		.ascii	"wdgtArray\000"
 7351      41727261 
 7351      7900
 7352              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
