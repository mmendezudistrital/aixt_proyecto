ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"capsense_SensingCSX_LL.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.capsense_SsCSXPostSingleScan,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	capsense_SsCSXPostSingleScan, %function
  24              	capsense_SsCSXPostSingleScan:
  25              	.LFB8:
  26              		.file 1 "Generated_Source\\PSoC4\\capsense_SensingCSX_LL.c"
   1:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \file capsense_SensingCSX_LL.c
   3:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \version 7.10
   4:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
   5:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \brief
   6:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *   This file defines the data structure global variables and provides
   7:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *   implementation for the low-level APIs of the CSX part of
   8:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *   the Sensing module. The file contains the APIs used for the CSD block
   9:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *   initialization, calibration and scanning.
  10:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
  11:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \see capsense v7.10 Datasheet
  12:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
  13:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *//*****************************************************************************
  14:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * Copyright (2016-2019), Cypress Semiconductor Corporation.
  15:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** ********************************************************************************
  16:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  17:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * protected by and subject to worldwide patent protection (United States and
  18:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * foreign), United States copyright laws and international treaty provisions.
  19:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  20:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * license to copy, use, modify, create derivative works of, and compile the
  21:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  22:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * custom software in support of licensee product to be used only in conjunction
  23:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  24:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * Any reproduction, modification, translation, compilation, or representation of
  25:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * this software except as specified above is prohibited without the express
  26:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * written permission of Cypress.
  27:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
  28:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  29:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  30:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  31:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * Cypress reserves the right to make changes without further notice to the
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 2


  32:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * materials described herein. Cypress does not assume any liability arising out
  33:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * of the application or use of any product or circuit described herein. Cypress
  34:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * does not authorize its products for use as critical components in life-support
  35:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * systems where a malfunction or failure may reasonably be expected to result in
  36:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  37:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * support systems application implies that the manufacturer assumes all risk of
  38:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  39:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * limited by and subject to the applicable Cypress software license agreement.
  40:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *******************************************************************************/
  41:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** #include <cytypes.h>
  42:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** #include "CyLib.h"
  43:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
  44:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** #include "capsense_Structure.h"
  45:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** #include "capsense_Configuration.h"
  46:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** #include "capsense_SensingCSX_LL.h"
  47:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** #include "capsense_Sensing.h"
  48:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** #if (capsense_ENABLE == capsense_SELF_TEST_EN)
  49:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #include "capsense_SelfTest.h"
  50:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** #endif
  51:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
  52:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** #include "cyapicallbacks.h"
  53:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
  54:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** #if (capsense_ENABLE == capsense_CSX_EN)
  55:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
  56:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** /*******************************************************************************
  57:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * Function constants
  58:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *******************************************************************************/
  59:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
  60:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** #define  capsense_NUM_HALF_CYCLES                       (2u)
  61:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
  62:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
  63:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** /*******************************************************************************
  64:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * Defines module variables
  65:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *******************************************************************************/
  66:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
  67:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** /* Local variable used to store the Scan period */
  68:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** volatile uint16 capsense_csxScanPeriod = 0u;
  69:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** /* Local variable used to return raw count from the post scan ISR */
  70:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** volatile uint16 capsense_csxRawCount = 0u;
  71:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
  72:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** #if(capsense_ENABLE != capsense_CSDV2)
  73:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     volatile uint32 capsense_csxRawGarbage = 0u;
  74:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** #endif /* (capsense_ENABLE != capsense_CSDV2) */
  75:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
  76:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** /* Pointer to Flash structure to hold Tx electrode that was connected previously */
  77:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** static capsense_FLASH_IO_STRUCT const *capsense_curTxIOPtr;
  78:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** /* Pointer to Flash structure to hold Rx electrode that was connected previously */
  79:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** static capsense_FLASH_IO_STRUCT const *capsense_curRxIOPtr;
  80:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** /* Local variable to hold total Tx in widget, while scanning all the sensors in widget */
  81:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** static uint16 capsense_curWdgtTotalRx = 0u;
  82:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** /* Local variable to hold total Rx in widget, while scanning all the sensors in widget */
  83:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** static uint16 capsense_curWdgtTotalTx = 0u;
  84:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** /* Flag to indicate that electrodes were connected previously */
  85:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** static uint16 capsense_eleCsxDisconnectFlag = 0u;
  86:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** /* Pointer to Flash structure holding info of sensor to be scanned */
  87:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** #if (capsense_ENABLE == capsense_CSX_GANGED_SNS_EN)
  88:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     static capsense_FLASH_SNS_STRUCT const *capsense_curGangRxPtr = 0u;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 3


  89:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     static capsense_FLASH_SNS_STRUCT const *capsense_curGangTxPtr = 0u;
  90:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** #endif
  91:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
  92:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** /*******************************************************************************
  93:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * Module local function declarations
  94:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *******************************************************************************/
  95:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** /**
  96:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \cond SECTION_C_INTERNAL
  97:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \addtogroup group_c_internal
  98:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \{
  99:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** */
 100:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 101:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** static void capsense_SsCSXStartSample(void);
 102:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** static void capsense_SsCSXPostMultiScan(void);
 103:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** static void capsense_SsCSXPostSingleScan(void);
 104:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** static uint16 capsense_SsCalcCsxScanPeriod(capsense_RAM_WD_BASE_STRUCT const *wdgtPtr);
 105:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 106:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** #if(capsense_ENABLE == capsense_CSDV2)
 107:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     CY_INLINE static void capsense_SsCSXStartSampleExt(void);
 108:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** #endif
 109:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 110:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** #if (capsense_ENABLE == capsense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 111:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     static uint32 capsense_SsCSXOversample(void);
 112:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** #endif
 113:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 114:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** #if (capsense_ENABLE == capsense_CSX_GANGED_SNS_EN)
 115:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     static void capsense_SsCSXPostMultiScanGanged(void);
 116:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** #endif
 117:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 118:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** #if (capsense_CSX_IDAC_AUTOCAL_EN == capsense_ENABLE)
 119:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     static cystatus capsense_SsCSXCalibrateCheck(uint32 widgetId, uint32 scanPeriod, uint32 target)
 120:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** #endif
 121:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 122:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** /* Pointer to Pointer to function used to register callback in ISR */
 123:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** void (*capsense_CSXPostScanApiPtr)(void) = &capsense_SsCSXPostMultiScan;
 124:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** /** \}
 125:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \endcond */
 126:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 127:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** /*******************************************************************************
 128:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * Function Name: capsense_CSXInitialize
 129:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** ****************************************************************************//**
 130:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
 131:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \brief
 132:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *   Performs hardware and firmware initialization required for the CSX operation
 133:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *   of the capsense Component.
 134:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
 135:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \details
 136:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *   This function initializes hardware to perform the CSX sensing operation. This
 137:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *   function is called by the capsense_Start() API during the Component
 138:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *   initialization. If both CSX and CSD sensing methods are used in the Component,
 139:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *   this function is called by the capsense_SetupWidget() API to change hardware
 140:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *   configured for CSD to re-initialize for the CSX sensing.
 141:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
 142:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *   If the CSD and CSX widgets are used in the Component, it is recommended not to
 143:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *   mix the CSD widgets between the CSX widgets, instead, place all CSX widgets in
 144:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *   the required scanning order and then place the CSD widgets in the customizer.
 145:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *   For the Component API, this action will eliminate the need for changing the hardware
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 4


 146:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *   configuration for every widget scan and will increase the execution speed
 147:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *   in the capsense_ScanAllWidgets() when the API is called.
 148:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
 149:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *   Similarly, it is recommended to set up and scan all the CSX widgets in such
 150:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *   a sequence that the capsense_SetupWidget() API  shouldn't need
 151:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *   hardware  sensing-configuration change.
 152:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
 153:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *   It is highly not recommended to call this API directly from the application layer.
 154:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
 155:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *******************************************************************************/
 156:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** void capsense_CSXInitialize(void)
 157:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** {
 158:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #if(capsense_ENABLE == capsense_CSDV2)
 159:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         uint8  interruptState;
 160:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         uint32 tmpRegVal;
 161:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 162:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         /* Set all the sensors to inactive state */
 163:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         if(capsense_dsRam.scanCurrentISC != capsense_dsRam.scanCsxISC)
 164:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         {
 165:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             capsense_SsSetAllIOsState((uint32)capsense_dsRam.scanCsxISC);
 166:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             capsense_dsRam.scanCurrentISC = capsense_dsRam.scanCsxISC;
 167:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         }
 168:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 169:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_INTR_PTR,             capsense_DEFAULT_CSD_INTR_CFG);
 170:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_INTR_SET_PTR,         capsense_DEFAULT_CSD_INTR_SET_CFG);
 171:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_INTR_MASK_PTR,        capsense_DEFAULT_CSD_INTR_MASK_CFG);
 172:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_HSCMP_PTR,            capsense_DEFAULT_CSD_HSCMP_CFG);
 173:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_AMBUF_PTR,            capsense_DEFAULT_CSD_AMBUF_CFG);
 174:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_REFGEN_PTR,           capsense_DEFAULT_CSD_REFGEN_CFG);
 175:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_CSDCMP_PTR,           capsense_DEFAULT_CSD_CSDCMP_CFG);
 176:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_CSD_IDACA_PTR,         capsense_DEFAULT_CSD_IDACA_CFG);
 177:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 178:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         #if((0u != capsense_ADC_EN) || (0u != capsense_CSD_IDAC_COMP_EN))
 179:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             CY_SET_REG32(capsense_CSD_IDACB_PTR,    capsense_DEFAULT_CSD_IDACB_CFG);
 180:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         #endif /* (0u != capsense_ADC_EN) || (0u != capsense_CSD_IDAC_COMP_EN) */
 181:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 182:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_SW_RES_PTR,           capsense_DEFAULT_CSD_SW_RES_CFG);
 183:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_SENSE_PERIOD_PTR,     capsense_DEFAULT_CSD_SENSE_PERIOD_CFG);
 184:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_SENSE_DUTY_PTR,       capsense_DEFAULT_CSD_SENSE_DUTY_CFG);
 185:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_SW_HS_P_SEL_PTR,      capsense_DEFAULT_CSD_SW_HS_P_SEL_CFG);
 186:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_SW_HS_N_SEL_PTR,      capsense_DEFAULT_CSD_SW_HS_N_SEL_CFG);
 187:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_SW_SHIELD_SEL_PTR,    capsense_DEFAULT_CSD_SW_SHIELD_SEL_CFG);
 188:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_SW_AMUXBUF_SEL_PTR,   capsense_DEFAULT_CSD_SW_AMUXBUF_SEL_CFG);
 189:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 190:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         interruptState = CyEnterCriticalSection();
 191:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(capsense_SW_BYP_SEL_PTR);
 192:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         tmpRegVal &= ~(capsense_SW_BYP_SEL_SW_BYA_MASK);
 193:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         tmpRegVal |= capsense_DEFAULT_CSD_SW_BYP_SEL_CFG;
 194:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_SW_BYP_SEL_PTR,       tmpRegVal);
 195:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 196:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 197:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_SW_CMP_P_SEL_PTR,     capsense_DEFAULT_CSD_SW_CMP_P_SEL_CFG);
 198:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_SW_CMP_N_SEL_PTR,     capsense_DEFAULT_CSD_SW_CMP_N_SEL_CFG);
 199:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 200:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         interruptState = CyEnterCriticalSection();
 201:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(capsense_SW_REFGEN_SEL_PTR);
 202:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         tmpRegVal &= ~capsense_SW_REFGEN_SEL_SW_MASK;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 5


 203:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         tmpRegVal |= capsense_DEFAULT_CSD_SW_REFGEN_SEL_CFG;
 204:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_SW_REFGEN_SEL_PTR,    tmpRegVal);
 205:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 206:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 207:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_SW_FW_MOD_SEL_PTR,    capsense_DEFAULT_CSD_SW_FW_MOD_SEL_CFG);
 208:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_SW_FW_TANK_SEL_PTR,   capsense_DEFAULT_CSD_SW_FW_TANK_SEL_CFG);
 209:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_SW_DSI_SEL_PTR,       capsense_DEFAULT_CSD_SW_DSI_SEL_CFG);
 210:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_SEQ_TIME_PTR,         capsense_DEFAULT_CSD_SEQ_TIME_CFG);
 211:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_SEQ_INIT_CNT_PTR,     capsense_DEFAULT_CSD_SEQ_INIT_CNT_CFG);
 212:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_SEQ_NORM_CNT_PTR,     capsense_DEFAULT_CSD_SEQ_NORM_CNT_CFG);
 213:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_CTL_PTR,          capsense_DEFAULT_CSD_ADC_CTL_CFG);
 214:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_SEQ_START_PTR,        capsense_DEFAULT_CSD_SEQ_START_CFG);
 215:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_CONFIG_PTR,           capsense_DEFAULT_CSD_CONFIG_CFG);
 216:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 217:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         capsense_DischargeExtCapacitors(capsense_EXT_CAP_DISCHARGE_TIME);
 218:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 219:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         interruptState = CyEnterCriticalSection();
 220:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(capsense_CintA_PC_PTR);
 221:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         tmpRegVal &= (~(capsense_GPIO_PC_MASK << (capsense_CintA_SHIFT * capsense_GPIO_PC_BIT_SIZE)
 222:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_CintA_PC_PTR, tmpRegVal);
 223:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 224:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 225:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         interruptState = CyEnterCriticalSection();
 226:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(capsense_CintB_PC_PTR);
 227:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         tmpRegVal &= (~(capsense_GPIO_PC_MASK << (capsense_CintB__SHIFT * capsense_GPIO_PC_BIT_SIZE
 228:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_CintB_PC_PTR, tmpRegVal);
 229:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 230:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 231:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         /* Connect CintA_tank pin to AMUXBUS-A using HSIOM registers. */
 232:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         interruptState = CyEnterCriticalSection();
 233:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(capsense_CintA_HSIOM_PTR);
 234:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         tmpRegVal &= ~capsense_CintA_HSIOM_MASK;
 235:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         tmpRegVal |= (capsense_HSIOM_SEL_AMUXA << capsense_CintA_HSIOM_SHIFT);
 236:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_CintA_HSIOM_PTR, tmpRegVal);
 237:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 238:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 239:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         /* Connect CintB to AMUXBUS-A using HSIOM registers. */
 240:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         interruptState = CyEnterCriticalSection();
 241:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(capsense_CintB_HSIOM_PTR);
 242:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         tmpRegVal &= ~capsense_CintB_HSIOM_MASK;
 243:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         tmpRegVal |= (capsense_HSIOM_SEL_AMUXA << capsense_CintB_HSIOM_SHIFT);
 244:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_CintB_HSIOM_PTR, tmpRegVal);
 245:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 246:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 247:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         capsense_SsSetModClkClockDivider((uint32)capsense_dsRam.modCsxClk);
 248:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 249:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         #if (capsense_ENABLE == capsense_CSX_COMMON_TX_CLK_EN)
 250:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             capsense_SsSetSnsClockDivider((uint32)capsense_dsRam.snsCsxClk);
 251:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         #endif
 252:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 253:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #else
 254:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         uint32 trimValue;
 255:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 256:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         /* Set all the sensors to inactive state */
 257:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         if(capsense_dsRam.scanCurrentISC != capsense_dsRam.scanCsxISC)
 258:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         {
 259:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             capsense_SsSetAllIOsState((uint32)capsense_dsRam.scanCsxISC);
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 6


 260:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             capsense_dsRam.scanCurrentISC = capsense_dsRam.scanCsxISC;
 261:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         }
 262:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 263:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         #if(capsense_ENABLE == capsense_CSD_IDAC_COMP_EN)
 264:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             trimValue = CY_GET_REG32(capsense_IDAC_PTR);
 265:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             trimValue &= ~(capsense_IDAC_COMP_CFG_MASK | capsense_IDAC_FEEDBACK_MODE_MASK);
 266:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             CY_SET_REG32(capsense_IDAC_PTR, trimValue);
 267:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         #endif /* (capsense_ENABLE == capsense_CSD_IDAC_COMP_EN) */
 268:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 269:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         /* Connect CintB to AMUXBUS-A using HSIOM registers. */
 270:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         capsense_WriteBitsSafe(capsense_CintB_HSIOM_PTR, capsense_CintB_HSIOM_MASK,
 271:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     (uint32)(capsense_HSIOM_SEL_AMUXA << capsense_CintB_HSIOM_SHIFT));
 272:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         capsense_WriteBitsSafe(capsense_CintB_PC_PTR,
 273:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     (uint32)(capsense_GPIO_PC_MASK << (capsense_CintB__SHIFT * capsense_GPIO_PC_BIT
 274:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         capsense_WriteBitsSafe(capsense_CintB_DR_PTR, (uint32)(0x01uL << capsense_CintB__SHIFT), 0u
 275:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 276:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         /* Connect CintA_tank pin to AMUXBUS-A using HSIOM registers. */
 277:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         capsense_WriteBitsSafe(capsense_CintA_HSIOM_PTR, capsense_CintA_HSIOM_MASK,
 278:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     (uint32)(capsense_HSIOM_SEL_AMUXA << capsense_CintA_HSIOM_SHIFT));
 279:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         capsense_WriteBitsSafe(capsense_CintA_PC_PTR,
 280:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     (uint32)(capsense_GPIO_PC_MASK << (capsense_CintA_SHIFT * capsense_GPIO_PC_BIT_
 281:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         capsense_WriteBitsSafe(capsense_CintA_DR_PTR, (uint32)(0x01uL << capsense_CintA_SHIFT), 0u)
 282:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 283:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         /* Connect CSD comparator to CintB via AMUXBUS-A */
 284:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         trimValue = CY_GET_REG32(capsense_CONFIG_PTR);
 285:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         trimValue |= capsense_CONFIG_SENSE_INSEL_MASK;
 286:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_CONFIG_PTR, trimValue);
 287:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 288:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         /* If common clocks are enabled for Component, set clock
 289:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             divider for sensor and modulator clocks and start/restart them */
 290:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         #if (capsense_CSX_COMMON_TX_CLK_EN == capsense_ENABLE)
 291:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             capsense_SsSetClockDividers((uint32)capsense_dsRam.snsCsxClk, (uint32)capsense_dsRam.mo
 292:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         #endif
 293:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #endif /* (capsense_ENABLE == capsense_CSDV2) */
 294:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 295:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     /* Enable capsense ISR and set ISR for CSX sensing */
 296:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     capsense_SsIsrInitialize(&capsense_CSXScanISR);
 297:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** }
 298:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 299:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 300:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** /*******************************************************************************
 301:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * Function Name: capsense_CSXElectrodeCheck
 302:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** ****************************************************************************//**
 303:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
 304:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \brief
 305:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *   Check if electrodes were previously connected using
 306:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *   the capsense_CSXSetupWidgetExt() API and if yes, disconnect them.
 307:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
 308:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \details
 309:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *   This function checks if capsense_eleCsxDisconnectFlag is set.
 310:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *   If it is set, the function disconnects the previously connected electrode.
 311:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
 312:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *******************************************************************************/
 313:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** void capsense_CSXElectrodeCheck(void)
 314:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** {
 315:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #if (capsense_ENABLE == capsense_CSX_GANGED_SNS_EN)
 316:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         uint32 numElectrodes;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 7


 317:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #endif /* (capsense_ENABLE == capsense_CSX_GANGED_SNS_EN) */
 318:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 319:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     if (0u != capsense_eleCsxDisconnectFlag)
 320:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     {
 321:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****        /* Disconnect if electrodes were previous connected by SetupWidgetExt() API */
 322:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         #if (capsense_ENABLE == capsense_CSX_GANGED_SNS_EN)
 323:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             /* Check ganged sns flag */
 324:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             if (capsense_GANGED_SNS_MASK == (capsense_curFlashWdgtPtr->staticConfig & capsense_GANG
 325:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             {
 326:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 /* 1. Get number of pins in previous connected Tx electrode
 327:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     3. Get Tx pointer
 328:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     4. Disconnect all Tx */
 329:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 numElectrodes = capsense_curGangTxPtr->numPins;
 330:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 capsense_curTxIOPtr = &capsense_ioList[capsense_curGangTxPtr->firstPinId];
 331:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 332:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 do
 333:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 {
 334:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     capsense_CSXDisconnectTx(capsense_curTxIOPtr++);
 335:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     numElectrodes--;
 336:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 } while (0u != numElectrodes);
 337:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 338:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 /* 1. Get number of pins in previous connected Rx electrode
 339:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     3. Get Rx pointer
 340:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     4. Disconnect all Rx */
 341:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 numElectrodes = capsense_curGangRxPtr->numPins;
 342:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 capsense_curRxIOPtr = &capsense_ioList[capsense_curGangRxPtr->firstPinId];
 343:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 344:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 do
 345:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 {
 346:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     capsense_CSXDisconnectRx(capsense_curRxIOPtr++);
 347:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     numElectrodes--;
 348:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 } while (0u != numElectrodes);
 349:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             }
 350:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             else
 351:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             {
 352:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 /* Disconnect if electrodes were previous connected by SetupWidgetExt API */
 353:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 capsense_CSXDisconnectTx(capsense_curTxIOPtr);
 354:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 capsense_CSXDisconnectRx(capsense_curRxIOPtr);
 355:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             }
 356:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         #else
 357:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             /* Disconnect if electrodes were previous connected by SetupWidgetExt API */
 358:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             capsense_CSXDisconnectTx(capsense_curTxIOPtr);
 359:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             capsense_CSXDisconnectRx(capsense_curRxIOPtr);
 360:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         #endif
 361:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         capsense_eleCsxDisconnectFlag = 0u;
 362:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     }
 363:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** }
 364:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 365:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 366:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** /*******************************************************************************
 367:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * Function Name: capsense_CSXSetupWidget
 368:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** ****************************************************************************//**
 369:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
 370:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \brief
 371:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  Performs hardware and firmware initialization required for scanning sensors
 372:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  in a specific widget using the CSX sensing method. This function requires
 373:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  using the capsense_CSXScan() function to start scanning.
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 8


 374:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
 375:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \details
 376:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  Performs hardware and firmware initialization required for scanning sensors
 377:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  in a specific widget using the CSX sensing method. This function requires
 378:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  using the capsense_CSXScan() function to start scanning.
 379:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
 380:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  \note This function is obsolete and kept for backward compatibility only.
 381:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  The capsense_SetupWidget() function should be used instead.
 382:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
 383:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  This function initializes the widgets specific common parameters to perform
 384:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  the CSX scanning. The initialization includes the following:
 385:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *    1. The CSD_CONFIG register.
 386:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *    2. The IDAC register.
 387:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *    3. The Sense clock frequency
 388:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *    4. The phase alignment of the sense and modulator clocks.
 389:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
 390:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  This function does not connect any specific sensors to the scanning hardware
 391:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  and neither does it start a scanning process. The capsense_CSXScan()
 392:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  function must be called after initializing the widget to start scanning.
 393:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
 394:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  This function is called when no scanning is in progress. I.e.
 395:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  capsense_IsBusy() returns a non-busy status.
 396:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
 397:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  This function is called by the capsense_SetupWidget() API if the
 398:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  given widget uses the CSX sensing method.
 399:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
 400:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
 401:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
 402:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
 403:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
 404:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \param widgetId
 405:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  Specifies the ID number of the widget to perform hardware and firmware
 406:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  initialization required for scanning sensors in the specific widget.
 407:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  A macro for the widget ID can be found in the capsense Configuration header
 408:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  file defined as capsense_<WidgetName>_WDGT_ID.
 409:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
 410:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *******************************************************************************/
 411:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** void capsense_CSXSetupWidget(uint32 widgetId)
 412:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** {
 413:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     /* variable to access widget details */
 414:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     capsense_RAM_WD_BASE_STRUCT * curRamWdgtBasePtr;
 415:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 416:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #if (capsense_ENABLE == capsense_CSDV2)
 417:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         uint32 tmpRegVal;
 418:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         uint32 snsClkVal;
 419:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #endif /* (capsense_DISABLE == capsense_CSDV2) */
 420:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 421:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     /* Save the current widget Id */
 422:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     capsense_widgetIndex = (uint8)widgetId;
 423:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 424:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     capsense_SsSwitchSensingMode(capsense_SENSE_METHOD_CSX_E);
 425:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 426:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     /*
 427:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     *  Check if CSX electrodes were previously connected using
 428:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     *  capsense_CSXSetupWidgetExt API and if yes, disconnect them
 429:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     */
 430:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     capsense_CSXElectrodeCheck();
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 9


 431:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 432:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     /* Configure hardware block */
 433:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #if (capsense_ENABLE == capsense_CSDV2)
 434:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         capsense_curFlashWdgtPtr = &capsense_dsFlash.wdgtArray[widgetId];
 435:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 436:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         curRamWdgtBasePtr = (capsense_RAM_WD_BASE_STRUCT *)capsense_curFlashWdgtPtr->ptr2WdgtRam;
 437:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 438:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         #if (capsense_ENABLE == capsense_CSX_COMMON_TX_CLK_EN)
 439:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             snsClkVal = (uint32)capsense_dsRam.snsCsxClk;
 440:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         #else
 441:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             snsClkVal = (uint32)curRamWdgtBasePtr->snsClk;
 442:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         #endif /* (capsense_ENABLE == capsense_CSX_COMMON_TX_CLK_EN) */
 443:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 444:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_SEQ_NORM_CNT_PTR, (uint32)curRamWdgtBasePtr->resolution);
 445:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         capsense_csxScanPeriod  = capsense_SsCalcCsxScanPeriod(curRamWdgtBasePtr);
 446:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 447:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         tmpRegVal = (uint32)curRamWdgtBasePtr->snsClkSource;
 448:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 449:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         snsClkVal = (snsClkVal - 1uL) & capsense_SENSE_PERIOD_SENSE_DIV_MASK;
 450:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         tmpRegVal = (tmpRegVal << capsense_SENSE_PERIOD_LFSR_SIZE_SHIFT) | snsClkVal;
 451:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_SENSE_PERIOD_PTR, tmpRegVal);
 452:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         capsense_SsSetModClkClockDivider((uint32)capsense_dsRam.modCsxClk);
 453:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #else
 454:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         /*
 455:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         * initialize access pointers for current:
 456:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         *    1. Pointer to widget configuration in Flash
 457:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         *    2. Widget configuration in RAM
 458:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         *    3. Make a local copy of widget index
 459:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         */
 460:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         capsense_curFlashWdgtPtr = &capsense_dsFlash.wdgtArray[widgetId];
 461:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         curRamWdgtBasePtr = (capsense_RAM_WD_BASE_STRUCT *)capsense_curFlashWdgtPtr->ptr2WdgtRam;
 462:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 463:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_CONFIG_PTR, capsense_CONFIG_ENABLE_MASK);
 464:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_CONFIG_PTR, (CY_GET_REG32(capsense_CONFIG_PTR) |
 465:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                                 capsense_CONFIG_MUTUALCAP_EN_MASK     |
 466:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                                 capsense_CONFIG_SENSE_COMP_BW_MASK    |
 467:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                                 capsense_CONFIG_SENSE_COMP_EN_MASK    |
 468:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                                 capsense_CONFIG_SENSE_INSEL_MASK      |
 469:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                                 capsense_CONFIG_REFBUF_EN_MASK        |
 470:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                                 capsense_CONFIG_REFBUF_DRV_MASK));
 471:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 472:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         /* If individual clocks are enabled for each widget, set clock
 473:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             divider for sensor and modulator clocks and start/restart them. */
 474:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         #if (capsense_CSX_COMMON_TX_CLK_EN == capsense_DISABLE)
 475:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             capsense_SsSetClockDividers((uint32)curRamWdgtBasePtr->snsClk, (uint32)capsense_dsRam.m
 476:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         #endif
 477:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 478:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         /* Find scan period */
 479:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         capsense_csxScanPeriod = capsense_SsCalcCsxScanPeriod(curRamWdgtBasePtr);
 480:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #endif /* (capsense_ENABLE == capsense_CSDV2) */
 481:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** }
 482:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 483:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** /*******************************************************************************
 484:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * Function Name: capsense_CSXSetupWidgetExt
 485:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** ****************************************************************************//**
 486:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
 487:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \brief
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 10


 488:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  Performs extended initialization for the CSX widget and also performs
 489:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  initialization required for a specific sensor in the widget. This function
 490:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  requires using the capsense_CSXScan() function to initiate a scan.
 491:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
 492:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \details
 493:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  Performs extended initialization for the CSX widget and also performs
 494:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  initialization required for a specific sensor in the widget. This function
 495:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  requires using the capsense_CSXScan() function to initiate a scan.
 496:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
 497:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  \note This function is obsolete and kept for backward compatibility only.
 498:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  The capsense_SetupWidgetExt() function should be used instead.
 499:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
 500:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  This function does the same tasks as capsense_CSXSetupWidget() and
 501:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  also connects a sensor in the widget for scanning. Once this function is
 502:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  called to initialize a widget and a sensor, the capsense_CSXScanExt()
 503:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  function must be called to scan the sensor.
 504:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
 505:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  This function is called when no scanning is in progress. I.e.
 506:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  capsense_IsBusy() returns a non-busy status.
 507:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
 508:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
 509:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
 510:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
 511:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
 512:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \param widgetId
 513:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  Specifies the ID number of the widget to perform hardware and firmware
 514:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  initialization required for scanning a specific sensor in a specific widget.
 515:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  A macro for the widget ID can be found in the capsense
 516:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  Configuration header file defined as capsense_<WidgetName>_WDGT_ID.
 517:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
 518:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \param sensorId
 519:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  Specifies the ID number of the sensor within the widget to perform hardware
 520:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  and firmware initialization required for scanning a specific sensor in a
 521:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  specific widget.
 522:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  A macro for the sensor ID within a specified widget can be found in the
 523:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  capsense Configuration header file defined as
 524:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  capsense_<WidgetName>_SNS<SensorNumber>_ID.
 525:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
 526:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *******************************************************************************/
 527:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 528:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** void capsense_CSXSetupWidgetExt(uint32 widgetId, uint32 sensorId)
 529:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** {
 530:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     uint32 txIndex;
 531:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     uint32 rxIndex;
 532:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 533:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #if (capsense_ENABLE == capsense_CSX_GANGED_SNS_EN)
 534:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         uint16 numElectrodes;
 535:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #endif /* (capsense_ENABLE == capsense_CSX_GANGED_SNS_EN) */
 536:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 537:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     /* Initialize widget */
 538:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     capsense_CSXSetupWidget(widgetId);
 539:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     capsense_sensorIndex = (uint8)sensorId;
 540:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 541:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     /* initialize sensor data structure pointer to appropriate address */
 542:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     capsense_curRamSnsPtr = capsense_curFlashWdgtPtr->ptr2SnsRam;
 543:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     capsense_curRamSnsPtr = &capsense_curRamSnsPtr[sensorId];
 544:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 11


 545:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #if (capsense_ENABLE == capsense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 546:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         if (0u != capsense_curRamSnsPtr->subConvNum)
 547:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         {
 548:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #endif /* (capsense_ENABLE == capsense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
 549:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 550:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     /*
 551:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     *  Find Tx and Rx index for given snsIndex
 552:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     *    rxIndex = sensorId / TxCount
 553:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     *    txIndex = sensorId % TxCount
 554:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     */
 555:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     rxIndex = sensorId /capsense_curFlashWdgtPtr->numRows;
 556:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     txIndex = sensorId % capsense_curFlashWdgtPtr->numRows;
 557:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 558:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     /* If widget is APA, find node (Tx/Rx) to be connected for scanning */
 559:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #if (capsense_ENABLE == capsense_CSX_GANGED_SNS_EN)
 560:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         if (capsense_GANGED_SNS_MASK == (capsense_curFlashWdgtPtr->staticConfig & capsense_GANGED_S
 561:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         {
 562:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             /*
 563:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             *  1. Get access to Rx sensor pointer (Rx = Base + rxIndex).
 564:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             *  2. Get number of Rx electrodes
 565:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             *  3. Get Rx pointer
 566:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             *  4. Connect all Rx
 567:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             */
 568:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             capsense_curGangRxPtr = capsense_curFlashWdgtPtr->ptr2SnsFlash;
 569:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             capsense_curGangRxPtr += rxIndex;
 570:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             numElectrodes = capsense_curGangRxPtr->numPins;
 571:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             capsense_curRxIOPtr = &capsense_ioList[capsense_curGangRxPtr->firstPinId];
 572:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 573:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             do
 574:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             {
 575:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 capsense_CSXConnectRx(capsense_curRxIOPtr++);
 576:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 numElectrodes--;
 577:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             } while (0u != numElectrodes);
 578:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 579:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             /*
 580:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             *  1. Get access to Tx sensor pointer (Tx = Base + NumberRx + TxIndex).
 581:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             *  2. Get number of Tx electrodes
 582:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             *  3. Get Tx pointer
 583:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             *  4. Connect all Tx
 584:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             */
 585:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             capsense_curGangTxPtr = capsense_curFlashWdgtPtr->ptr2SnsFlash;
 586:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             capsense_curGangTxPtr += (capsense_curFlashWdgtPtr->numCols + txIndex);
 587:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 588:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             numElectrodes = capsense_curGangTxPtr->numPins;
 589:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             capsense_curTxIOPtr = &capsense_ioList[capsense_curGangTxPtr->firstPinId];
 590:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 591:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             do
 592:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             {
 593:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 capsense_CSXConnectTx(capsense_curTxIOPtr++);
 594:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 numElectrodes--;
 595:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             }while (0u != numElectrodes);
 596:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 597:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             /* Set callback to scan connected ganged sensor only */
 598:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             capsense_CSXPostScanApiPtr = &capsense_SsCSXPostSingleScan;
 599:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         }
 600:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         else
 601:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #endif  /* (capsense_ENABLE == capsense_CSX_GANGED_SNS_EN) */
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 12


 602:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         {
 603:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             /*
 604:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             *  If no ganged sensor in Component OR current widget no contains ganged sns, then:
 605:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             *    1. Find Rx pointer: Rx = Base address + RxIndex
 606:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             *    2. Find Tx pointer: Tx = Base address + (total Rx + TxIndex)
 607:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             */
 608:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             capsense_curRxIOPtr = (capsense_FLASH_IO_STRUCT const *)capsense_curFlashWdgtPtr->ptr2S
 609:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             capsense_curRxIOPtr = &capsense_curRxIOPtr[rxIndex];
 610:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 611:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             capsense_curTxIOPtr = (capsense_FLASH_IO_STRUCT const *)capsense_curFlashWdgtPtr->ptr2S
 612:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             capsense_curTxIOPtr = &capsense_curTxIOPtr[(capsense_curFlashWdgtPtr->numCols + txIndex
 613:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 614:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             /* Connect Tx and Rx IOs for scan ad set flag to indicate that IOs should be disconnect
 615:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             capsense_CSXConnectTx(capsense_curTxIOPtr);
 616:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             capsense_CSXConnectRx(capsense_curRxIOPtr);
 617:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             capsense_eleCsxDisconnectFlag = capsense_DISCONNECT_IO_FLAG;
 618:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 619:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             /* Set callback to scan all the sensors in widget */
 620:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             capsense_CSXPostScanApiPtr = &capsense_SsCSXPostSingleScan;
 621:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         }
 622:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #if (capsense_ENABLE == capsense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 623:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         }
 624:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #endif
 625:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** }
 626:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 627:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** /*******************************************************************************
 628:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * Function Name: capsense_CSXScan
 629:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** ****************************************************************************//**
 630:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
 631:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \brief
 632:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  This function initiates a scan for the sensors of the widget initialized by
 633:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  the capsense_CSXSetupWidget() function.
 634:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
 635:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \details
 636:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  This function initiates a scan for the sensors of the widget initialized by
 637:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  the capsense_CSXSetupWidget() function.
 638:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
 639:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  \note This function is obsolete and kept for backward compatibility only.
 640:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  The capsense_Scan() function should be used instead.
 641:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
 642:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  This function performs scanning of all the sensors in the widget configured by
 643:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  the capsense_CSXSetupWidget() function. It does the following tasks:
 644:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *    1. Connects the first sensor of the widget.
 645:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *    2. Initializes an interrupt callback function to initialize a scan of the
 646:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *       next sensors in a widget.
 647:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *    3. Starts scanning for the first sensor in the widget.
 648:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
 649:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  This function is called by the capsense_Scan() API if the given
 650:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  widget uses the CSX sensing method.
 651:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
 652:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
 653:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
 654:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
 655:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
 656:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  This function is called when no scanning is in progress. I.e.
 657:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  capsense_IsBusy() returns a non-busy status. The widget must be
 658:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  preconfigured by the capsense_CSXSetupWidget() function if any other
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 13


 659:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  widget was previously scanned or any other type of scan functions were used.
 660:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
 661:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *******************************************************************************/
 662:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 663:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** void capsense_CSXScan(void)
 664:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** {
 665:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #if (capsense_ENABLE == capsense_CSX_GANGED_SNS_EN)
 666:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         uint32 numElectrodes;
 667:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #endif
 668:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #if (capsense_ENABLE == capsense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 669:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         uint32 snsIndex = 0u;
 670:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         uint32 snsNum;
 671:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #endif
 672:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 673:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     /* Set all the sensors to inactive state */
 674:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     if(capsense_dsRam.scanCurrentISC != capsense_dsRam.scanCsxISC)
 675:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     {
 676:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         capsense_SsSetAllIOsState((uint32)capsense_dsRam.scanCsxISC);
 677:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         capsense_dsRam.scanCurrentISC = capsense_dsRam.scanCsxISC;
 678:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     }
 679:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 680:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     capsense_sensorIndex = 0u;
 681:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 682:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     /* initialize pointer to access sensor RAM elements */
 683:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     capsense_curRamSnsPtr = capsense_curFlashWdgtPtr->ptr2SnsRam;
 684:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 685:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #if (capsense_ENABLE == capsense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 686:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         /* Loop through the sensors until non-skipped is found */
 687:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         snsNum = capsense_curFlashWdgtPtr->totalNumSns;
 688:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         while ((snsIndex < snsNum) && (capsense_curRamSnsPtr->subConvNum == 0u))
 689:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         {
 690:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             /* Increment sensor pointers */
 691:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             capsense_curRamSnsPtr++;
 692:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             capsense_sensorIndex++;
 693:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             snsIndex++;
 694:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         }
 695:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         /*
 696:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         *  Calculate total sensor to be scanned. If buttons, one Tx and an Rx for each sensor
 697:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         *  if Matrix button or Touchpad, M x N rule applies
 698:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         */
 699:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         capsense_curWdgtTotalTx = (uint16)(capsense_curFlashWdgtPtr->numRows - (snsIndex % capsense
 700:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         capsense_curWdgtTotalRx  = (uint16)(capsense_curFlashWdgtPtr->numCols - (snsIndex / capsens
 701:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 702:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         /* Scan sensor if it's index within a valid range otherwise do nothing as all the sensors a
 703:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         if (snsIndex < snsNum)
 704:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         {
 705:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             #if (capsense_ENABLE == capsense_CSX_GANGED_SNS_EN)
 706:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 if ((capsense_curFlashWdgtPtr->staticConfig & capsense_GANGED_SNS_MASK) != 0u)
 707:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 {
 708:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     /* Connect all Rx electrodes */
 709:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     capsense_curGangRxPtr = capsense_curFlashWdgtPtr->ptr2SnsFlash;
 710:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     capsense_curGangRxPtr += snsIndex /capsense_curFlashWdgtPtr->numRows;
 711:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     numElectrodes = capsense_curGangRxPtr->numPins;
 712:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     capsense_curRxIOPtr = &capsense_ioList[capsense_curGangRxPtr->firstPinId];
 713:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     do
 714:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     {
 715:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         capsense_CSXConnectRx(capsense_curRxIOPtr++);
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 14


 716:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         numElectrodes--;
 717:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     } while (0u != numElectrodes);
 718:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 719:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     /* Connect all Tx electrodes */
 720:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     capsense_curGangTxPtr = capsense_curFlashWdgtPtr->ptr2SnsFlash;
 721:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     capsense_curGangTxPtr += (capsense_curFlashWdgtPtr->numCols + snsIndex % capsen
 722:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     numElectrodes = capsense_curGangTxPtr->numPins;
 723:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     capsense_curTxIOPtr = &capsense_ioList[capsense_curGangTxPtr->firstPinId];
 724:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     do
 725:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     {
 726:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         capsense_CSXConnectTx(capsense_curTxIOPtr++);
 727:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         numElectrodes--;
 728:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     }while (0u != numElectrodes);
 729:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     /* Assign callback to ISR */
 730:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     capsense_CSXPostScanApiPtr = &capsense_SsCSXPostMultiScanGanged;
 731:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 }
 732:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 else
 733:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             #endif /* (capsense_ENABLE == capsense_CSX_GANGED_SNS_EN) */
 734:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             {
 735:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 /* Find Rx pointer: Rx = Base_address + SnsIndex / total_Tx */
 736:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 capsense_curRxIOPtr = (capsense_FLASH_IO_STRUCT const *)capsense_curFlashWdgtPtr->p
 737:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 capsense_curRxIOPtr += (snsIndex / capsense_curFlashWdgtPtr->numRows);
 738:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 /* Find Tx pointer: Tx = Base_address + total_Rx + SnsIndex % total_Tx */
 739:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 capsense_curTxIOPtr = (capsense_FLASH_IO_STRUCT const *)capsense_curFlashWdgtPtr->p
 740:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 capsense_curTxIOPtr += capsense_curFlashWdgtPtr->numCols;
 741:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 capsense_curTxIOPtr += (snsIndex % capsense_curFlashWdgtPtr->numRows);
 742:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 /* Connect Tx and Rx electrodes for scan */
 743:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 capsense_CSXConnectTx(capsense_curTxIOPtr);
 744:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 capsense_CSXConnectRx(capsense_curRxIOPtr);
 745:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 /* Set callback to scan all the sensors in widget */
 746:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 capsense_CSXPostScanApiPtr = &capsense_SsCSXPostMultiScan;
 747:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             }
 748:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 749:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             /* Reset multi-frequency scan channel if enabled */
 750:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             #if (capsense_MULTI_FREQ_SCAN_EN == capsense_ENABLE)
 751:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 capsense_scanFreqIndex = capsense_FREQ_CHANNEL_0;
 752:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             #endif
 753:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 754:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             /* Set scan status, enter critical section and initiate scan */
 755:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             capsense_dsRam.status |= capsense_SW_STS_BUSY;
 756:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 757:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             #if(capsense_ENABLE == capsense_CSDV2) &&\
 758:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                (capsense_ENABLE != capsense_BLOCK_OFF_AFTER_SCAN_EN) &&\
 759:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                (capsense_CSX_ANALOG_STARTUP_DELAY_US > 0uL)
 760:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 CyDelayUs(capsense_CSX_ANALOG_STARTUP_DELAY_US);
 761:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             #endif
 762:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 763:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             capsense_SsCSXStartSample();
 764:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         }
 765:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 766:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #else /* (capsense_ENABLE == capsense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
 767:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 768:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         /*
 769:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         *  Calculate total sensor to be scanned. If buttons, one Tx and an Rx for each sensor
 770:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         *  if Matrix button or Touchpad, M x N rule applies
 771:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         */
 772:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         capsense_curWdgtTotalTx = capsense_curFlashWdgtPtr->numRows;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 15


 773:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         capsense_curWdgtTotalRx  = capsense_curFlashWdgtPtr->numCols;
 774:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 775:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         /* If Component contains CSX ganged sensor, then check if widget contains ganged sensor */
 776:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         #if (capsense_CSX_GANGED_SNS_EN == 1u)
 777:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             if ((capsense_curFlashWdgtPtr->staticConfig & capsense_GANGED_SNS_MASK) != 0u)
 778:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             {
 779:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 /*
 780:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 *  1. Get sns pointer for first Rx
 781:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 *  2. Get number of Rx pin
 782:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 *  3. Get pointer to the Rx pin
 783:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 *  4. Connect all Rx pins
 784:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 */
 785:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 capsense_curGangRxPtr = capsense_curFlashWdgtPtr->ptr2SnsFlash;
 786:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 numElectrodes = capsense_curGangRxPtr->numPins ;
 787:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 capsense_curRxIOPtr = &capsense_ioList[capsense_curGangRxPtr->firstPinId];
 788:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 do
 789:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 {
 790:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     capsense_CSXConnectRx(capsense_curRxIOPtr++);
 791:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     numElectrodes--;
 792:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 } while (0u != numElectrodes);
 793:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 794:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 /*
 795:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 *  1. Get sns pointer for first Tx (Tx = Base + number of Rx).
 796:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 *  2. Get number of Tx electrodes
 797:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 *  3. Get pointer the Tx electrode
 798:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 *  4. Connect all Tx
 799:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 */
 800:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 capsense_curGangTxPtr = capsense_curFlashWdgtPtr->ptr2SnsFlash;
 801:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 capsense_curGangTxPtr += capsense_curFlashWdgtPtr->numCols;
 802:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 numElectrodes = capsense_curGangTxPtr->numPins ;
 803:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 capsense_curTxIOPtr = &capsense_ioList[capsense_curGangTxPtr->firstPinId];
 804:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 805:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 do
 806:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 {
 807:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     capsense_CSXConnectTx(capsense_curTxIOPtr++);
 808:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     numElectrodes--;
 809:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 }while (0u != numElectrodes);
 810:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 811:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 /* Assign callback to ISR */
 812:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 capsense_CSXPostScanApiPtr = &capsense_SsCSXPostMultiScanGanged;
 813:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 814:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             }
 815:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             else
 816:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         #endif
 817:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             {
 818:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 /*
 819:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 *  If no ganged sensor in the Component OR current widget contains no ganged sns, t
 820:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 *    1. Find Rx pointer: Rx = Base address.
 821:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 *    2. Find Tx pointer: Tx = Base address + total Rx
 822:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 */
 823:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 capsense_curRxIOPtr = (capsense_FLASH_IO_STRUCT const *)capsense_curFlashWdgtPtr->p
 824:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 capsense_curTxIOPtr = capsense_curRxIOPtr;
 825:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 capsense_curTxIOPtr = &capsense_curTxIOPtr[(capsense_curFlashWdgtPtr->numCols)];
 826:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 827:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 /* Connect first Tx and first Rx IOs for scan */
 828:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 capsense_CSXConnectTx(capsense_curTxIOPtr);
 829:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 capsense_CSXConnectRx(capsense_curRxIOPtr);
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 16


 830:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 831:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 /* Set callback to scan all the sensors in widget */
 832:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 capsense_CSXPostScanApiPtr = &capsense_SsCSXPostMultiScan;
 833:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             }
 834:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 835:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             /* Reset multi-frequency scan channel if enabled */
 836:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             #if (capsense_MULTI_FREQ_SCAN_EN == capsense_ENABLE)
 837:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 capsense_scanFreqIndex = capsense_FREQ_CHANNEL_0;
 838:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             #endif
 839:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 840:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         /* Set scan status, enter critical section and initiate scan */
 841:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         capsense_dsRam.status |= capsense_SW_STS_BUSY;
 842:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 843:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         #if(capsense_ENABLE == capsense_CSDV2) &&\
 844:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****            (capsense_ENABLE != capsense_BLOCK_OFF_AFTER_SCAN_EN) &&\
 845:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****            (capsense_CSX_ANALOG_STARTUP_DELAY_US > 0uL)
 846:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             CyDelayUs(capsense_CSX_ANALOG_STARTUP_DELAY_US);
 847:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         #endif
 848:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 849:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         capsense_SsCSXStartSample();
 850:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 851:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #endif /* (capsense_ENABLE == capsense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
 852:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** }
 853:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 854:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** /*******************************************************************************
 855:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * Function Name: capsense_CSXScanExt()
 856:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** ****************************************************************************//**
 857:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
 858:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \brief
 859:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  Starts the CSX conversion on the preconfigured sensor. This function requires
 860:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  using the capsense_CSXSetupWidgetExt() function to set up a
 861:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  widget.
 862:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
 863:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \details
 864:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  Starts the CSX conversion on the preconfigured sensor. This function requires
 865:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  using the capsense_CSXSetupWidgetExt() function to set up a
 866:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  widget.
 867:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
 868:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  \note This function is obsolete and kept for backward compatibility only.
 869:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  The capsense_ScanExt() function should be used instead.
 870:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
 871:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  This function performs single scanning of one sensor in the widget configured
 872:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  by the capsense_CSXSetupWidgetExt() function. It does the following
 873:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  tasks:
 874:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *    1. Sets a busy flag in the capsense_dsRam structure.
 875:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *    2. Configures the Tx clock frequency.
 876:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *    3. Configures the Modulator clock frequency.
 877:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *    4. Configures the IDAC value.
 878:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *    5. Starts single scanning.
 879:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
 880:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
 881:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
 882:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  use cases (for faster execution time or pipeline scanning for example). This
 883:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  function is called when no scanning is in progress. I.e.
 884:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  capsense_IsBusy() returns a non-busy status.
 885:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
 886:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  The sensor must be preconfigured by using the
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 17


 887:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  capsense_CSXSetupWidgetExt() API prior to calling this function.
 888:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  The sensor remains ready for the next scan if a previous scan was triggered
 889:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  by using the capsense_CSXScanExt() function. In this case, calling
 890:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  capsense_CSXSetupWidgetExt() is not required every time before the
 891:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  capsense_CSXScanExt() function. If a previous scan was triggered in
 892:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  any other way - capsense_Scan(), capsense_ScanAllWidgets()
 893:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  or capsense_RunTuner() - (see the capsense_RunTuner() function
 894:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  description for more details), the sensor must be preconfigured again by
 895:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  using the capsense_CSXSetupWidgetExt() API prior to calling the
 896:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  capsense_CSXScanExt() function.
 897:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
 898:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  If disconnection of the sensors is required after calling
 899:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  capsense_CSXScanExt(), the capsense_CSXDisconnectTx() and
 900:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  capsense_CSXDisconnectRx() APIs can be used.
 901:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
 902:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *******************************************************************************/
 903:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 904:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** void capsense_CSXScanExt(void)
 905:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** {
 906:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     /* Reset multi-frequency scan channel if enabled */
 907:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #if (capsense_MULTI_FREQ_SCAN_EN == capsense_ENABLE)
 908:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         capsense_scanFreqIndex = capsense_FREQ_CHANNEL_0;
 909:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #endif
 910:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 911:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #if (capsense_ENABLE == capsense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 912:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         if (0u != capsense_curRamSnsPtr->subConvNum)
 913:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         {
 914:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             /* Set busy flag and start conversion */
 915:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             capsense_dsRam.status |= capsense_SW_STS_BUSY;
 916:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 917:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             #if(capsense_ENABLE == capsense_CSDV2) &&\
 918:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                (capsense_ENABLE != capsense_BLOCK_OFF_AFTER_SCAN_EN) &&\
 919:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                (capsense_CSX_ANALOG_STARTUP_DELAY_US > 0uL)
 920:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         CyDelayUs(capsense_CSX_ANALOG_STARTUP_DELAY_US);
 921:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             #endif
 922:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             capsense_SsCSXStartSample();
 923:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         }
 924:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #else
 925:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         /* Set busy flag and start conversion */
 926:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         capsense_dsRam.status |= capsense_SW_STS_BUSY;
 927:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 928:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         #if(capsense_ENABLE == capsense_CSDV2) &&\
 929:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****            (capsense_ENABLE != capsense_BLOCK_OFF_AFTER_SCAN_EN) &&\
 930:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****            (capsense_CSX_ANALOG_STARTUP_DELAY_US > 0uL)
 931:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             CyDelayUs(capsense_CSX_ANALOG_STARTUP_DELAY_US);
 932:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         #endif
 933:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         capsense_SsCSXStartSample();
 934:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #endif /* (capsense_ENABLE == capsense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
 935:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** }
 936:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 937:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 938:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** /*******************************************************************************
 939:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * Function Name: capsense_SsCSXPostMultiScan
 940:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** ****************************************************************************//**
 941:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
 942:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \brief
 943:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *   ISR function implements the multiple-sensor scanning for un-ganged CSX widgets.
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 18


 944:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *   This function is called by the Component ISR only, it should not be used by
 945:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *   the application layer.
 946:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
 947:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *******************************************************************************/
 948:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 949:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** static void capsense_SsCSXPostMultiScan(void)
 950:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** {
 951:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #ifdef capsense_ENTRY_CALLBACK
 952:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         capsense_EntryCallback();
 953:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #endif /* capsense_ENTRY_CALLBACK */
 954:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 955:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     /* Copy scan result into sensor raw count array */
 956:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     capsense_curRamSnsPtr->raw[capsense_scanFreqIndex] = \
 957:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                              (capsense_csxScanPeriod - capsense_csxRawCount);
 958:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 959:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #if (capsense_ENABLE == capsense_MULTI_FREQ_SCAN_EN)
 960:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         /* Increment multi frequency scan index if all channels are not scanned */
 961:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         if (capsense_FREQ_CHANNEL_2 > capsense_scanFreqIndex)
 962:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         {
 963:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             /* Change multi-frequency channel and start sample */
 964:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             capsense_scanFreqIndex++;
 965:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 966:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             #if (capsense_MFS_IMO == capsense_MFS_METHOD)
 967:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 capsense_SsChangeImoFreq((uint32)capsense_scanFreqIndex);
 968:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             #else
 969:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 capsense_SsChangeClkFreq((uint32)capsense_scanFreqIndex);
 970:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             #endif /* (capsense_MFS_IMO == capsense_MFS_METHOD) */
 971:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 972:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             capsense_SsCSXStartSample();
 973:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         }
 974:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         else
 975:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #endif
 976:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         {
 977:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             #if (capsense_MULTI_FREQ_SCAN_EN == capsense_ENABLE)
 978:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 /* All channels are scanned. Reset the multi frequency scan channel */
 979:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 capsense_scanFreqIndex = capsense_FREQ_CHANNEL_0;
 980:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 981:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 #if (capsense_MFS_IMO == capsense_MFS_METHOD)
 982:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     capsense_SsChangeImoFreq(capsense_FREQ_CHANNEL_0);
 983:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 #else
 984:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     capsense_SsChangeClkFreq(capsense_FREQ_CHANNEL_0);
 985:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 #endif /* (capsense_MFS_IMO == capsense_MFS_METHOD) */
 986:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 987:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             #endif
 988:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 989:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             #if (capsense_ENABLE == capsense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 990:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 /* Disconnect Tx/Rx electrodes of previously scanned sensor as preparation for next
 991:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 capsense_CSXDisconnectTx(capsense_curTxIOPtr);
 992:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 capsense_CSXDisconnectRx(capsense_curRxIOPtr);
 993:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 994:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 /* Increment sensor until non-skipped is found */
 995:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 do
 996:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 {
 997:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     /* Increment sensor index to configure next sensor in widget */
 998:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     capsense_sensorIndex++;
 999:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1000:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     /* Increment sensor pointers */
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 19


1001:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     capsense_curRamSnsPtr++;
1002:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     capsense_curWdgtTotalTx--;
1003:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     if (capsense_curWdgtTotalTx > 0u)
1004:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     {
1005:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         capsense_curTxIOPtr++;
1006:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     }
1007:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     else
1008:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     {
1009:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         capsense_curWdgtTotalRx--;
1010:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         if (capsense_curWdgtTotalRx > 0u)
1011:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         {
1012:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                             capsense_curRxIOPtr++;
1013:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                             capsense_curWdgtTotalTx  = capsense_curFlashWdgtPtr->numRows;
1014:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                             capsense_curTxIOPtr = (capsense_FLASH_IO_STRUCT const *)capsense_curFla
1015:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                             capsense_curTxIOPtr = & capsense_curTxIOPtr[(capsense_curFlashWdgtPtr->
1016:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         }
1017:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     }
1018:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 } while ((capsense_curWdgtTotalRx != 0u) && (capsense_curRamSnsPtr->subConvNum == 0
1019:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1020:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 /* Perform the next scan or switch to the next widget */
1021:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 if(capsense_curWdgtTotalRx != 0u)
1022:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 {
1023:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     /* Connect Tx/Rx electrodes for the next scan */
1024:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     capsense_CSXConnectTx(capsense_curTxIOPtr);
1025:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     capsense_CSXConnectRx(capsense_curRxIOPtr);
1026:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     /* Reset scan result holder, and initiate scan */
1027:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     capsense_SsCSXStartSample();
1028:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 }
1029:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 else
1030:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 {
1031:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     /* Call scan next widget API if requested, if not, complete scan */
1032:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     if (capsense_requestScanAllWidget != 0u)
1033:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     {
1034:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         capsense_SsPostAllWidgetsScan();
1035:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     }
1036:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     else
1037:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     {
1038:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         capsense_dsRam.scanCounter++;
1039:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         capsense_dsRam.status &= ~capsense_SW_STS_BUSY;
1040:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     }
1041:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 }
1042:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             #else /* (capsense_ENABLE == capsense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1043:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1044:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 /*
1045:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 *  Disconnect Tx electrodes of previously scanned sensor as
1046:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 *  preparation for next sensor scan
1047:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 */
1048:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 capsense_CSXDisconnectTx (capsense_curTxIOPtr);
1049:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1050:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 /* Increment sensor index to configure next sensor in widget */
1051:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 capsense_sensorIndex++;
1052:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1053:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 /*
1054:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 *  Initiate scan for next sensor in widget, if all the sensors in
1055:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 *  widget are not scanned
1056:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 */
1057:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 capsense_curWdgtTotalTx--;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 20


1058:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 if (capsense_curWdgtTotalTx > 0u)
1059:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 {
1060:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     /*
1061:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     *  1. Increment pointer to next Tx
1062:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     *  2. Connect next Rx for scan
1063:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     *  3. Increment pointer to sns data
1064:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     */
1065:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     capsense_curTxIOPtr++;
1066:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     capsense_CSXConnectTx (capsense_curTxIOPtr);
1067:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     capsense_curRamSnsPtr++;
1068:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1069:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     /* Reset scan result holder, and initiate scan */
1070:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     capsense_SsCSXStartSample();
1071:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 }
1072:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1073:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 /* Check if all Rx are looped through */
1074:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 else
1075:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 {
1076:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     capsense_curWdgtTotalRx--;
1077:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     if (capsense_curWdgtTotalRx > 0u)
1078:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     {
1079:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         /*
1080:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         *  1. Disconnect current Rx electrode
1081:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         *  2. Connect next Rx electrode
1082:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         *  3. Re-initialize total Tx to be scanned per Rx
1083:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         *  4. Find first Tx electrode again
1084:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         *  5. Connect first Tx electrode
1085:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         */
1086:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         capsense_CSXDisconnectRx(capsense_curRxIOPtr);
1087:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         capsense_curRxIOPtr++;
1088:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         capsense_CSXConnectRx(capsense_curRxIOPtr);
1089:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         capsense_curWdgtTotalTx  = capsense_curFlashWdgtPtr->numRows;
1090:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         capsense_curTxIOPtr = (capsense_FLASH_IO_STRUCT const *)capsense_curFlashWd
1091:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         capsense_curTxIOPtr = & capsense_curTxIOPtr[(capsense_curFlashWdgtPtr->numC
1092:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         capsense_CSXConnectTx(capsense_curTxIOPtr);
1093:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1094:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         /* Increment RAM sensor pointer pointer */
1095:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         capsense_curRamSnsPtr++;
1096:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1097:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         /* Initiate sample */
1098:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         capsense_SsCSXStartSample();
1099:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     }
1100:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     else
1101:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     {
1102:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         /* If all the sensors are scanned, disconnect Tx */
1103:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         capsense_CSXDisconnectRx(capsense_curRxIOPtr);
1104:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1105:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         /* Call scan next widget API if requested, if not, complete scan */
1106:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         if (capsense_requestScanAllWidget != 0u)
1107:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         {
1108:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                             capsense_SsPostAllWidgetsScan();
1109:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         }
1110:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         else
1111:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         {
1112:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                             /*
1113:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                             *  All pending scans completed,
1114:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                             *    1. update the counter to indicat same
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 21


1115:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                             *    2. Clear busy state as scanning is completed
1116:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                             */
1117:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                             capsense_dsRam.scanCounter++;
1118:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                             capsense_dsRam.status &= ~capsense_SW_STS_BUSY;
1119:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         }
1120:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     }
1121:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 }
1122:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             #endif /* (capsense_ENABLE == capsense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1123:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         }
1124:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1125:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #ifdef capsense_EXIT_CALLBACK
1126:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         capsense_ExitCallback();
1127:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #endif /* capsense_EXIT_CALLBACK */
1128:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** }
1129:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1130:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1131:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** /*******************************************************************************
1132:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * Function Name: capsense_SsCSXPostMultiScanGanged
1133:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** ****************************************************************************//**
1134:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
1135:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \brief
1136:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *   The ISR function implements the multiple-sensor scanning for ganged CSX widgets.
1137:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *   This function is called by the Component ISR only, should not be used by
1138:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *   the application layer.
1139:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
1140:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \details
1141:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *   The ISR function implements the multiple-sensor scanning for ganged CSX widgets.
1142:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *   This function is called by the Component ISR only, should not be used by
1143:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *   the application layer.
1144:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
1145:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *******************************************************************************/
1146:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** #if (capsense_CSX_GANGED_SNS_EN == 1u)
1147:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1148:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** static void capsense_SsCSXPostMultiScanGanged(void)
1149:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** {
1150:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     uint32 numElectrodes;
1151:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1152:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #ifdef capsense_ENTRY_CALLBACK
1153:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         capsense_EntryCallback();
1154:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #endif /* capsense_ENTRY_CALLBACK */
1155:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1156:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     /* Copy scan result into sensor raw count array */
1157:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     capsense_curRamSnsPtr->raw[capsense_scanFreqIndex] = \
1158:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     (capsense_csxScanPeriod - capsense_csxRawCount);
1159:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1160:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #if (capsense_ENABLE == capsense_MULTI_FREQ_SCAN_EN)
1161:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         /* Increment multi frequency scan index if all channels are not scanned */
1162:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         if (capsense_FREQ_CHANNEL_2 > capsense_scanFreqIndex)
1163:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         {
1164:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             /* Change multi-frequency channel and start sample */
1165:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             capsense_scanFreqIndex++;
1166:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1167:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             #if (capsense_MFS_IMO == capsense_MFS_METHOD)
1168:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 capsense_SsChangeImoFreq((uint32)capsense_scanFreqIndex);
1169:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             #else
1170:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 capsense_SsChangeClkFreq((uint32)capsense_scanFreqIndex);
1171:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             #endif /* (capsense_MFS_IMO == capsense_MFS_METHOD) */
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 22


1172:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1173:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             capsense_SsCSXStartSample();
1174:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         }
1175:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         else
1176:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #endif
1177:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         {
1178:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             #if (capsense_MULTI_FREQ_SCAN_EN == capsense_ENABLE)
1179:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 /* All channels are scanned. Reset the multi frequency scan channel */
1180:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 capsense_scanFreqIndex = capsense_FREQ_CHANNEL_0;
1181:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1182:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 #if (capsense_MFS_IMO == capsense_MFS_METHOD)
1183:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     capsense_SsChangeImoFreq(capsense_FREQ_CHANNEL_0);
1184:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 #else
1185:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     capsense_SsChangeClkFreq(capsense_FREQ_CHANNEL_0);
1186:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 #endif /* (capsense_MFS_IMO == capsense_MFS_METHOD) */
1187:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1188:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             #endif
1189:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1190:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             #if (capsense_ENABLE == capsense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
1191:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 /* Disconnect Tx electrodes of previously scanned sensor as preparation for next se
1192:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 numElectrodes = capsense_curGangTxPtr->numPins;
1193:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 capsense_curTxIOPtr = &capsense_ioList[capsense_curGangTxPtr->firstPinId];
1194:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 do
1195:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 {
1196:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     capsense_CSXDisconnectTx(capsense_curTxIOPtr++);
1197:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     numElectrodes--;
1198:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 } while (0u != numElectrodes);
1199:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 /* Disconnect Rx electrodes of previously scanned sensor as preparation for next se
1200:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 numElectrodes = capsense_curGangRxPtr->numPins;
1201:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 capsense_curRxIOPtr = &capsense_ioList[capsense_curGangRxPtr->firstPinId];
1202:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 do
1203:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 {
1204:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     capsense_CSXDisconnectRx(capsense_curRxIOPtr++);
1205:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     numElectrodes--;
1206:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 } while (0u != numElectrodes);
1207:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1208:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 /* Increment sensor until non-skipped is found */
1209:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 do
1210:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 {
1211:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     /* Increment sensor index to configure next sensor in widget */
1212:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     capsense_sensorIndex++;
1213:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1214:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     /* Increment RAM sensor pointer */
1215:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     capsense_curRamSnsPtr++;
1216:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     capsense_curWdgtTotalTx--;
1217:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     if (capsense_curWdgtTotalTx > 0u)
1218:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     {
1219:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         capsense_curGangTxPtr++;
1220:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     }
1221:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     else
1222:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     {
1223:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         /* Check if all Rx are scanned, if not, initiate scan for next Rx */
1224:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         capsense_curWdgtTotalRx--;
1225:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         if (capsense_curWdgtTotalRx > 0u)
1226:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         {
1227:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                             capsense_curGangRxPtr++;
1228:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                             capsense_curWdgtTotalTx = capsense_curFlashWdgtPtr->numRows;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 23


1229:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                             capsense_curGangTxPtr = capsense_curFlashWdgtPtr->ptr2SnsFlash;
1230:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                             capsense_curGangTxPtr += capsense_curFlashWdgtPtr->numCols;
1231:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         }
1232:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     }
1233:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 } while ((capsense_curWdgtTotalRx != 0u) && (capsense_curRamSnsPtr->subConvNum == 0
1234:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1235:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 if(capsense_curWdgtTotalRx != 0u)
1236:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 {
1237:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     /* Connect Tx electrodes for the next scan */
1238:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     numElectrodes = capsense_curGangTxPtr->numPins;
1239:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     capsense_curTxIOPtr = &capsense_ioList[capsense_curGangTxPtr->firstPinId];
1240:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     do
1241:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     {
1242:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         capsense_CSXConnectTx(capsense_curTxIOPtr++);
1243:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         numElectrodes--;
1244:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     } while (0u != numElectrodes);
1245:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     /* Connect Tx electrodes for the next scan */
1246:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     numElectrodes = capsense_curGangRxPtr->numPins ;
1247:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     capsense_curRxIOPtr = &capsense_ioList[capsense_curGangRxPtr->firstPinId];
1248:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     do
1249:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     {
1250:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         capsense_CSXConnectRx(capsense_curRxIOPtr++);
1251:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         numElectrodes--;
1252:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     } while (0u != numElectrodes);
1253:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     /* Reset scan result holder, and initiate scan */
1254:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     capsense_SsCSXStartSample();
1255:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 }
1256:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 else
1257:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 {
1258:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     /* Call scan next widget API if requested, if not, complete scan */
1259:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     if (capsense_requestScanAllWidget != 0u)
1260:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     {
1261:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         capsense_SsPostAllWidgetsScan();
1262:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     }
1263:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     else
1264:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     {
1265:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         capsense_dsRam.scanCounter++;
1266:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         capsense_dsRam.status &= ~capsense_SW_STS_BUSY;
1267:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     }
1268:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 }
1269:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             #else /* (capsense_ENABLE == capsense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1270:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1271:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 /* Disconnect ALL pins of previously scanned Tx */
1272:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 numElectrodes = capsense_curGangTxPtr->numPins ;
1273:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 capsense_curTxIOPtr = &capsense_ioList[capsense_curGangTxPtr->firstPinId];
1274:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 do
1275:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 {
1276:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     capsense_CSXDisconnectTx (capsense_curTxIOPtr++);
1277:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     numElectrodes--;
1278:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 } while (0u != numElectrodes);
1279:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1280:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 /* Increment sensor index to configure next sensor in widget */
1281:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 capsense_sensorIndex++;
1282:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1283:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 /* Check if all Tx are scanned, if not, initiate scan for next Tx */
1284:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 capsense_curWdgtTotalTx--;
1285:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 if (capsense_curWdgtTotalTx > 0u)
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 24


1286:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 {
1287:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     /*
1288:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     *  1. Find pointer of next Tx (ganged)
1289:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     *  2. Connect all Tx pins
1290:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     */
1291:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     capsense_curGangTxPtr++;
1292:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     numElectrodes = capsense_curGangTxPtr->numPins ;
1293:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     capsense_curTxIOPtr = &capsense_ioList[capsense_curGangTxPtr->firstPinId];
1294:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     do
1295:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     {
1296:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         capsense_CSXConnectTx(capsense_curTxIOPtr++);
1297:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         numElectrodes--;
1298:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     } while (0u != numElectrodes);
1299:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1300:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     /* Increment RAM pointer to next sensor */
1301:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     capsense_curRamSnsPtr++;
1302:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1303:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     /* Reset scan result holder and initiate scan */
1304:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     capsense_SsCSXStartSample();
1305:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 }
1306:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 else
1307:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 {
1308:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     /* Check if all Rx are scanned, if not, initiate scan for next Rx */
1309:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     capsense_curWdgtTotalRx--;
1310:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     if (capsense_curWdgtTotalRx > 0u)
1311:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     {
1312:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         /* 1. Disconnect current Rx ALL pins */
1313:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         numElectrodes = capsense_curGangRxPtr->numPins ;
1314:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         capsense_curRxIOPtr = &capsense_ioList[capsense_curGangRxPtr->firstPinId];
1315:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         do
1316:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         {
1317:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                             capsense_CSXDisconnectRx(capsense_curRxIOPtr++);
1318:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                             numElectrodes--;
1319:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         } while (0u != numElectrodes);
1320:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1321:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         /* 2. Connect next Rx ALL pins */
1322:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         capsense_curGangRxPtr++;
1323:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         numElectrodes = capsense_curGangRxPtr->numPins ;
1324:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         capsense_curRxIOPtr = &capsense_ioList[capsense_curGangRxPtr->firstPinId];
1325:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         do
1326:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         {
1327:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                             capsense_CSXConnectRx(capsense_curRxIOPtr++);
1328:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                             numElectrodes--;
1329:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         } while (0u != numElectrodes);
1330:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1331:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         /*
1332:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         *  3. Re-initialize total Tx to be scanned per Rx
1333:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         *  4. Find first Tx  again
1334:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         *  5. Connect first Tx ALL pins
1335:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         */
1336:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         capsense_curWdgtTotalTx = capsense_curFlashWdgtPtr->numRows;
1337:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         capsense_curGangTxPtr = capsense_curFlashWdgtPtr->ptr2SnsFlash;
1338:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         capsense_curGangTxPtr += capsense_curFlashWdgtPtr->numCols;
1339:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1340:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         /* 6. Connect Tx ALL pins */
1341:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         numElectrodes = capsense_curGangTxPtr->numPins ;
1342:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         capsense_curTxIOPtr = &capsense_ioList[capsense_curGangTxPtr->firstPinId];
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 25


1343:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         do
1344:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         {
1345:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                             capsense_CSXConnectTx(capsense_curTxIOPtr++);
1346:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                             numElectrodes--;
1347:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         } while (0u != numElectrodes);
1348:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1349:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         /* Increment RAM pointer to next sensor */
1350:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         capsense_curRamSnsPtr++;
1351:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1352:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         /* Reset scan result holder and initiate scan */
1353:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         capsense_SsCSXStartSample();
1354:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     }
1355:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     else
1356:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     {
1357:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         /* Disconnect ALL electrodes of previously scanned Rx */
1358:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         numElectrodes = capsense_curGangRxPtr->numPins ;
1359:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         capsense_curRxIOPtr = &capsense_ioList[capsense_curGangRxPtr->firstPinId];
1360:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         do
1361:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         {
1362:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                             capsense_CSXDisconnectRx(capsense_curRxIOPtr++);
1363:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                             numElectrodes--;
1364:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         } while (0u != numElectrodes);
1365:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1366:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         /* Call scan next widget API if requested, if not, complete scan */
1367:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         if (capsense_requestScanAllWidget != 0u)
1368:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         {
1369:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                             capsense_SsPostAllWidgetsScan();
1370:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         }
1371:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         else
1372:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         {
1373:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                             /*
1374:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                             *  All pending scans completed,
1375:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                             *    1. update the counter to indicate same
1376:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                             *    2. Clear busy state as scanning is completed
1377:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                             */
1378:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                             capsense_dsRam.scanCounter++;
1379:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                             capsense_dsRam.status &= ~capsense_SW_STS_BUSY;
1380:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         }
1381:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     }
1382:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 }
1383:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             #endif /* (capsense_ENABLE == capsense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1384:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         }
1385:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1386:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #ifdef capsense_EXIT_CALLBACK
1387:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         capsense_ExitCallback();
1388:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #endif /* capsense_EXIT_CALLBACK */
1389:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** }
1390:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1391:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** #endif  /* (capsense_CSX_GANGED_SNS_EN == 1u) */
1392:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1393:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** /*******************************************************************************
1394:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * Function Name: capsense_SsCSXPostSingleScan
1395:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** ****************************************************************************//**
1396:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
1397:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \brief
1398:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *   The ISR function for single-sensor scanning implementation.
1399:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 26


1400:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \details
1401:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *   This function is used by capsense ISR in the CSX scanning mode to implement
1402:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *   the single-sensor scanning.
1403:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *   This function should not be used by the application layer.
1404:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
1405:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *******************************************************************************/
1406:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1407:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** static void capsense_SsCSXPostSingleScan(void)
1408:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** {
  27              		.loc 1 1408 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
1409:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #ifdef capsense_ENTRY_CALLBACK
1410:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         capsense_EntryCallback();
1411:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #endif /* capsense_ENTRY_CALLBACK */
1412:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1413:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     /*
1414:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     * Copy scan result into sensor raw count array and clear busy flag
1415:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     *    No sensor is connected or disconnected in this function
1416:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     *    Calling capsense_ScanExt from application would perform
1417:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     *    one more scan of same sensor. Specifically for low-power mode.
1418:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     */
1419:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     capsense_curRamSnsPtr->raw[capsense_scanFreqIndex] =
  32              		.loc 1 1419 0
  33 0000 094B     		ldr	r3, .L2
  34 0002 1868     		ldr	r0, [r3]
  35 0004 094B     		ldr	r3, .L2+4
  36 0006 1B78     		ldrb	r3, [r3]
  37 0008 0949     		ldr	r1, .L2+8
  38 000a 0A88     		ldrh	r2, [r1]
  39 000c 4988     		ldrh	r1, [r1, #2]
  40 000e 5B00     		lsls	r3, r3, #1
  41 0010 521A     		subs	r2, r2, r1
  42 0012 1A52     		strh	r2, [r3, r0]
1420:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         (capsense_csxScanPeriod - capsense_csxRawCount);
1421:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1422:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #if (capsense_ENABLE == capsense_MULTI_FREQ_SCAN_EN)
1423:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         /* Increment multi frequency scan index if all channels are not scanned */
1424:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         if (capsense_FREQ_CHANNEL_2 > capsense_scanFreqIndex)
1425:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         {
1426:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             /* Change multi-frequency channel and start sample */
1427:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             capsense_scanFreqIndex++;
1428:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1429:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             #if (capsense_MFS_IMO == capsense_MFS_METHOD)
1430:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 capsense_SsChangeImoFreq((uint32)capsense_scanFreqIndex);
1431:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             #else
1432:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 capsense_SsChangeClkFreq((uint32)capsense_scanFreqIndex);
1433:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             #endif /* (capsense_MFS_IMO == capsense_MFS_METHOD) */
1434:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1435:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             capsense_SsCSXStartSample();
1436:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         }
1437:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         else
1438:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #endif
1439:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         {
1440:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             #if (capsense_MULTI_FREQ_SCAN_EN == capsense_ENABLE)
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 27


1441:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 /* All channels are scanned. Reset the multi frequency scan channel */
1442:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 capsense_scanFreqIndex = capsense_FREQ_CHANNEL_0;
1443:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1444:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 #if (capsense_MFS_IMO == capsense_MFS_METHOD)
1445:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     capsense_SsChangeImoFreq(capsense_FREQ_CHANNEL_0);
1446:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 #else
1447:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     capsense_SsChangeClkFreq(capsense_FREQ_CHANNEL_0);
1448:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 #endif /* (capsense_MFS_IMO == capsense_MFS_METHOD) */
1449:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1450:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             #endif
1451:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             /*
1452:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             * All pending scans completed,
1453:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             *   1. Update the counter to indicate same
1454:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             *   2. Clear busy state as scanning is completed
1455:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             */
1456:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             capsense_dsRam.scanCounter++;
  43              		.loc 1 1456 0
  44 0014 074B     		ldr	r3, .L2+12
  45 0016 1A89     		ldrh	r2, [r3, #8]
  46 0018 0132     		adds	r2, r2, #1
  47 001a 1A81     		strh	r2, [r3, #8]
1457:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             capsense_dsRam.status &= ~capsense_SW_STS_BUSY;
  48              		.loc 1 1457 0
  49 001c DA68     		ldr	r2, [r3, #12]
  50 001e 8021     		movs	r1, #128
  51 0020 8A43     		bics	r2, r1
  52 0022 DA60     		str	r2, [r3, #12]
1458:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         }
1459:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1460:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #ifdef capsense_EXIT_CALLBACK
1461:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         capsense_ExitCallback();
1462:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #endif /* capsense_EXIT_CALLBACK */
1463:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** }
  53              		.loc 1 1463 0
  54              		@ sp needed
  55 0024 7047     		bx	lr
  56              	.L3:
  57 0026 C046     		.align	2
  58              	.L2:
  59 0028 00000000 		.word	capsense_curRamSnsPtr
  60 002c 00000000 		.word	capsense_scanFreqIndex
  61 0030 00000000 		.word	.LANCHOR0
  62 0034 00000000 		.word	capsense_dsRam
  63              		.cfi_endproc
  64              	.LFE8:
  65              		.size	capsense_SsCSXPostSingleScan, .-capsense_SsCSXPostSingleScan
  66              		.global	__aeabi_uidiv
  67              		.section	.text.capsense_SsCSXCalibrateCheck,"ax",%progbits
  68              		.align	2
  69              		.code	16
  70              		.thumb_func
  71              		.type	capsense_SsCSXCalibrateCheck, %function
  72              	capsense_SsCSXCalibrateCheck:
  73              	.LFB10:
1464:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1465:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** /*******************************************************************************
1466:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * Function Name: capsense_CSXCalibrateWidget
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 28


1467:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** ****************************************************************************//**
1468:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
1469:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \brief
1470:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  Calibrates the raw count values of all the sensors/nodes in a CSX widget.
1471:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
1472:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \details
1473:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  Calibrates the raw count values of all the sensors/nodes in a CSX widget.
1474:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
1475:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  \note This function is obsolete and kept for backward compatibility only.
1476:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  The capsense_CalibrateWidget() function should be used instead.
1477:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
1478:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  Performs a successive approximation search algorithm to find appropriate
1479:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  IDAC values for sensors in the specified widget that provides a raw count
1480:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  to the level specified by the target parameter.
1481:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
1482:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  This function is available when the CSX Enable IDAC auto-calibration
1483:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  parameter is enabled.
1484:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
1485:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \param widgetId
1486:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  Specifies the ID number of the CSX widget to calibrate its raw count.
1487:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  A macro for the widget ID can be found in the
1488:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  capsense Configuration header file defined as
1489:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  capsense_<WidgetName>_WDGT_ID.
1490:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
1491:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \param target
1492:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  Specifies the calibration target in percentages of the maximum raw count.
1493:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
1494:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \return Returns the status of the operation:
1495:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *   - Zero     - All the sensors in the widget are calibrated successfully.
1496:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *   - Non-Zero - Calibration failed for any sensor in the widget.
1497:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
1498:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *******************************************************************************/
1499:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** #if (capsense_ENABLE == capsense_CSX_IDAC_AUTOCAL_EN)
1500:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1501:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** cystatus capsense_CSXCalibrateWidget(uint32 widgetId, uint16 target)
1502:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** {
1503:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     /* Variable to calculate raw count target */
1504:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     uint32 rawTarget;
1505:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     /* Counter for loop execution */
1506:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     uint32 totalSns;
1507:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     /* Counter for loop execution */
1508:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     uint32 calibrationIndex;
1509:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1510:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     uint32 watchdogCounter;
1511:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1512:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     cystatus calibrateStatus = CYRET_SUCCESS;
1513:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1514:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     /* Currently used IDAC-bit */
1515:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     uint8 curIdacMask = (1u << (capsense_CSX_IDAC_BITS_USED - 1u));
1516:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     /* Next used IDAC-bit */
1517:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     uint8 nextIdacMask = (curIdacMask >> 1u);
1518:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1519:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     /* initialize ptr to sensor structures */
1520:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     capsense_curRamSnsPtr = (capsense_RAM_SNS_STRUCT *)capsense_dsFlash.wdgtArray[widgetId].ptr2Sns
1521:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1522:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #if (capsense_DISABLE == capsense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
1523:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         /* Calculate target raw count */
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 29


1524:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         capsense_csxScanPeriod  = capsense_SsCalcCsxScanPeriod(
1525:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             (capsense_RAM_WD_BASE_STRUCT *)capsense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam);
1526:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         rawTarget = capsense_csxScanPeriod;
1527:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         rawTarget = (rawTarget * target) / capsense_PERCENTAGE_100;
1528:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #endif /* (capsense_DISABLE == capsense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1529:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1530:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1531:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     /* Find out total sensors/nodes in widget */
1532:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     totalSns = ((uint32)capsense_dsFlash.wdgtArray[widgetId].numCols *
1533:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 (uint32)capsense_dsFlash.wdgtArray[widgetId].numRows);
1534:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1535:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     /* Clear raw count registers and IDAC registers of all the sensors/nodes */
1536:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     for (calibrationIndex = 0u; calibrationIndex < totalSns; calibrationIndex++)
1537:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     {
1538:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         capsense_curRamSnsPtr->raw[capsense_FREQ_CHANNEL_0] = 0u;
1539:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         capsense_curRamSnsPtr->idacComp[capsense_FREQ_CHANNEL_0] = curIdacMask;
1540:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         #if (capsense_ENABLE == capsense_MULTI_FREQ_SCAN_EN)
1541:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             capsense_curRamSnsPtr->raw[capsense_FREQ_CHANNEL_1] = 0u;
1542:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             capsense_curRamSnsPtr->raw[capsense_FREQ_CHANNEL_2] = 0u;
1543:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             capsense_curRamSnsPtr->idacComp[capsense_FREQ_CHANNEL_1] = curIdacMask;
1544:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             capsense_curRamSnsPtr->idacComp[capsense_FREQ_CHANNEL_2] = curIdacMask;
1545:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         #endif
1546:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         capsense_curRamSnsPtr++;
1547:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     }
1548:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1549:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     /* Perform binary search for accurate IDAC value for each sensor/node */
1550:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     do
1551:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     {
1552:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         /* Scan all the sensors/nodes in widget */
1553:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         (void)capsense_SetupWidget(widgetId);
1554:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         (void)capsense_Scan();
1555:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1556:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         watchdogCounter = capsense_CSX_MEASURE_WATCHDOG_CYCLES_NUM;
1557:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         while ((capsense_dsRam.status & capsense_SW_STS_BUSY) != 0u)
1558:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         {
1559:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             if(0uL == watchdogCounter)
1560:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             {
1561:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 calibrateStatus = CYRET_TIMEOUT;
1562:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 break;
1563:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             }
1564:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             watchdogCounter--;
1565:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         }
1566:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1567:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         /* Get access to sensor data */
1568:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         capsense_curRamSnsPtr = (capsense_RAM_SNS_STRUCT *)capsense_dsFlash.wdgtArray[widgetId].ptr
1569:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1570:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         /* Check raw count and adjust IDAC, loop through all the sensors/nodes */
1571:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         for (calibrationIndex = 0u; calibrationIndex < totalSns; calibrationIndex++)
1572:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         {
1573:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             /* Calculate raw count target for specified node */
1574:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             #if (capsense_ENABLE == capsense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
1575:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 rawTarget = (capsense_SsCSXOversample() * target) / capsense_PERCENTAGE_100;
1576:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             #endif
1577:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1578:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             /* Check if current raw count is above target,
1579:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             *   if yes, clear the MS bit of bit
1580:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             *   if no, keep the MS bit and set next bit
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 30


1581:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             */
1582:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             if (capsense_curRamSnsPtr->raw[capsense_FREQ_CHANNEL_0] > rawTarget)
1583:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             {
1584:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 capsense_curRamSnsPtr->idacComp[capsense_FREQ_CHANNEL_0] &= (uint8)(~curIdacMask);
1585:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             }
1586:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             capsense_curRamSnsPtr->idacComp[capsense_FREQ_CHANNEL_0] |= nextIdacMask;
1587:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1588:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             #if (capsense_ENABLE == capsense_MULTI_FREQ_SCAN_EN)
1589:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 if (capsense_curRamSnsPtr->raw[capsense_FREQ_CHANNEL_1] > rawTarget)
1590:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 {
1591:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     capsense_curRamSnsPtr->idacComp[capsense_FREQ_CHANNEL_1] &= (uint8)(~curIdacMas
1592:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 }
1593:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1594:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 if (capsense_curRamSnsPtr->raw[capsense_FREQ_CHANNEL_2] > rawTarget)
1595:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 {
1596:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     capsense_curRamSnsPtr->idacComp[capsense_FREQ_CHANNEL_2] &= (uint8)(~curIdacMas
1597:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 }
1598:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1599:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 capsense_curRamSnsPtr->idacComp[capsense_FREQ_CHANNEL_1] |= nextIdacMask;
1600:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 capsense_curRamSnsPtr->idacComp[capsense_FREQ_CHANNEL_2] |= nextIdacMask;
1601:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             #endif
1602:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             capsense_curRamSnsPtr++;
1603:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         }
1604:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1605:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         /* Shift both current idac and pre Idac values to right by 1 */
1606:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         curIdacMask = nextIdacMask;
1607:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         nextIdacMask = nextIdacMask >> 1u;
1608:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     }
1609:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     while ((curIdacMask != 0u) && (calibrateStatus == CYRET_SUCCESS));
1610:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1611:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     /* Perform specified widget scan to check calibration result */
1612:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     (void)capsense_SetupWidget(widgetId);
1613:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     (void)capsense_Scan();
1614:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1615:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     if (calibrateStatus == CYRET_SUCCESS)
1616:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     {
1617:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         watchdogCounter = capsense_CSX_MEASURE_WATCHDOG_CYCLES_NUM;
1618:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         while ((capsense_dsRam.status & capsense_SW_STS_BUSY) != 0u)
1619:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         {
1620:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             if(0uL == watchdogCounter)
1621:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             {
1622:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 calibrateStatus = CYRET_TIMEOUT;
1623:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 break;
1624:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             }
1625:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1626:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             watchdogCounter--;
1627:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         }
1628:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1629:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         if (calibrateStatus == CYRET_SUCCESS)
1630:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         {
1631:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             calibrateStatus = capsense_SsCSXCalibrateCheck(widgetId, (uint32)capsense_csxScanPeriod
1632:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         }
1633:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     }
1634:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1635:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****      /* Update CRC */
1636:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #if (capsense_ENABLE ==capsense_TST_WDGT_CRC_EN)
1637:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         capsense_DsUpdateWidgetCrc(widgetId);
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 31


1638:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #endif
1639:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1640:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     return(calibrateStatus);
1641:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** }
1642:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1643:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1644:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** /*******************************************************************************
1645:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * Function Name: capsense_SsCSXCalibrateCheck
1646:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** ****************************************************************************//**
1647:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
1648:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \brief
1649:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  This internal function checks if the calibration is performed successfully.
1650:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
1651:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \details
1652:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  The function verifies that raw counts are within acceptable range
1653:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  defined by target and calibration error parameters.
1654:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
1655:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \param widgetId
1656:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  The desired widget ID.
1657:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
1658:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \param scanPeriod
1659:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  CSX scan period for the specified widget.
1660:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
1661:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \param target
1662:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  Raw count target in percentage.
1663:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
1664:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \return Returns the status of the operation:
1665:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *   - Zero     - All the sensors in the widget are calibrated successfully.
1666:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *   - Non-Zero - Calibration failed for any sensor in the widget.
1667:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
1668:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *******************************************************************************/
1669:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** static cystatus capsense_SsCSXCalibrateCheck(uint32 widgetId, uint32 scanPeriod, uint32 target)
1670:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** {
  74              		.loc 1 1670 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 8
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              	.LVL0:
  79 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  80              		.cfi_def_cfa_offset 20
  81              		.cfi_offset 4, -20
  82              		.cfi_offset 5, -16
  83              		.cfi_offset 6, -12
  84              		.cfi_offset 7, -8
  85              		.cfi_offset 14, -4
  86 0002 4746     		mov	r7, r8
  87 0004 80B4     		push	{r7}
  88              		.cfi_def_cfa_offset 24
  89              		.cfi_offset 8, -24
  90 0006 82B0     		sub	sp, sp, #8
  91              		.cfi_def_cfa_offset 32
  92 0008 0500     		movs	r5, r0
  93 000a 8846     		mov	r8, r1
  94              	.LVL1:
1671:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     uint32 rawcount;
1672:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     uint32 snsIndex;
1673:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     uint32 freqChannel;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 32


1674:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     uint32 upperLimit;
1675:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     uint32 lowerLimit;
1676:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     cystatus calibrateStatus = CYRET_SUCCESS;
1677:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1678:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     capsense_FLASH_WD_STRUCT const *ptrFlashWidget = &capsense_dsFlash.wdgtArray[widgetId];
1679:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     capsense_RAM_SNS_STRUCT *ptrRamSensor = ptrFlashWidget->ptr2SnsRam;
  95              		.loc 1 1679 0
  96 000c 8100     		lsls	r1, r0, #2
  97              	.LVL2:
  98 000e 0918     		adds	r1, r1, r0
  99 0010 CB00     		lsls	r3, r1, #3
 100 0012 1F49     		ldr	r1, .L16
 101 0014 CB18     		adds	r3, r1, r3
 102 0016 9C68     		ldr	r4, [r3, #8]
 103              	.LVL3:
1680:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1681:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     lowerLimit = 0u;
1682:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     if (target > capsense_CSX_CALIBRATION_ERROR)
 104              		.loc 1 1682 0
 105 0018 142A     		cmp	r2, #20
 106 001a 02D9     		bls	.L11
1683:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     {
1684:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         lowerLimit = target - capsense_CSX_CALIBRATION_ERROR;
 107              		.loc 1 1684 0
 108 001c 1000     		movs	r0, r2
 109              	.LVL4:
 110 001e 1438     		subs	r0, r0, #20
 111              	.LVL5:
 112 0020 00E0     		b	.L5
 113              	.LVL6:
 114              	.L11:
1681:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     if (target > capsense_CSX_CALIBRATION_ERROR)
 115              		.loc 1 1681 0
 116 0022 0020     		movs	r0, #0
 117              	.LVL7:
 118              	.L5:
1685:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     }
1686:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     upperLimit = target + capsense_CSX_CALIBRATION_ERROR;
 119              		.loc 1 1686 0
 120 0024 1432     		adds	r2, r2, #20
 121              	.LVL8:
 122 0026 1700     		movs	r7, r2
 123              	.LVL9:
1687:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     if (upperLimit > capsense_PERCENTAGE_100)
 124              		.loc 1 1687 0
 125 0028 642A     		cmp	r2, #100
 126 002a 00D9     		bls	.L6
1688:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     {
1689:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         upperLimit = capsense_PERCENTAGE_100;
 127              		.loc 1 1689 0
 128 002c 6427     		movs	r7, #100
 129              	.L6:
 130              	.LVL10:
1690:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     }
1691:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     lowerLimit = (scanPeriod * lowerLimit) / capsense_PERCENTAGE_100;
 131              		.loc 1 1691 0
 132 002e 4346     		mov	r3, r8
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 33


 133 0030 5843     		muls	r0, r3
 134              	.LVL11:
 135 0032 6421     		movs	r1, #100
 136 0034 FFF7FEFF 		bl	__aeabi_uidiv
 137              	.LVL12:
 138 0038 0600     		movs	r6, r0
 139              	.LVL13:
1692:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     upperLimit = (scanPeriod * upperLimit) / capsense_PERCENTAGE_100;
 140              		.loc 1 1692 0
 141 003a 4046     		mov	r0, r8
 142              	.LVL14:
 143 003c 7843     		muls	r0, r7
 144 003e 6421     		movs	r1, #100
 145 0040 FFF7FEFF 		bl	__aeabi_uidiv
 146              	.LVL15:
 147 0044 0100     		movs	r1, r0
 148              	.LVL16:
1676:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 149              		.loc 1 1676 0
 150 0046 0023     		movs	r3, #0
 151 0048 0193     		str	r3, [sp, #4]
1693:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1694:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     /* Check if raw count is in the defined range */
1695:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     for(snsIndex = 0u; snsIndex < ptrFlashWidget->totalNumSns; snsIndex++)
 152              		.loc 1 1695 0
 153 004a 0027     		movs	r7, #0
 154 004c 13E0     		b	.L7
 155              	.LVL17:
 156              	.L9:
1696:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     {
1697:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         for(freqChannel = capsense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
1698:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         {
1699:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             rawcount = ptrRamSensor->raw[freqChannel];
 157              		.loc 1 1699 0
 158 004e 5300     		lsls	r3, r2, #1
 159 0050 185B     		ldrh	r0, [r3, r4]
 160              	.LVL18:
1700:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             if ((rawcount < lowerLimit) || (rawcount > upperLimit))
 161              		.loc 1 1700 0
 162 0052 8642     		cmp	r6, r0
 163 0054 08D8     		bhi	.L13
1697:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         {
 164              		.loc 1 1697 0 discriminator 1
 165 0056 1300     		movs	r3, r2
 166              		.loc 1 1700 0 discriminator 1
 167 0058 8142     		cmp	r1, r0
 168 005a 01D2     		bcs	.L10
 169 005c 07E0     		b	.L14
 170              	.LVL19:
 171              	.L15:
 172 005e 0123     		movs	r3, #1
 173              	.L10:
 174              	.LVL20:
1697:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         {
 175              		.loc 1 1697 0 discriminator 1
 176 0060 5A1E     		subs	r2, r3, #1
 177              	.LVL21:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 34


 178 0062 002B     		cmp	r3, #0
 179 0064 F3D1     		bne	.L9
 180 0066 04E0     		b	.L8
 181              	.LVL22:
 182              	.L13:
1701:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             {
1702:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 calibrateStatus = CYRET_BAD_DATA;
 183              		.loc 1 1702 0
 184 0068 0623     		movs	r3, #6
 185 006a 0193     		str	r3, [sp, #4]
 186              	.LVL23:
 187 006c 01E0     		b	.L8
 188              	.LVL24:
 189              	.L14:
 190 006e 0623     		movs	r3, #6
 191 0070 0193     		str	r3, [sp, #4]
 192              	.LVL25:
 193              	.L8:
1703:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 break;
1704:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             }
1705:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         }
1706:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         ptrRamSensor++;
 194              		.loc 1 1706 0 discriminator 2
 195 0072 0A34     		adds	r4, r4, #10
 196              	.LVL26:
1695:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     {
 197              		.loc 1 1695 0 discriminator 2
 198 0074 0137     		adds	r7, r7, #1
 199              	.LVL27:
 200              	.L7:
1695:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     {
 201              		.loc 1 1695 0 is_stmt 0 discriminator 1
 202 0076 AA00     		lsls	r2, r5, #2
 203 0078 5219     		adds	r2, r2, r5
 204 007a D300     		lsls	r3, r2, #3
 205 007c 044A     		ldr	r2, .L16
 206 007e D318     		adds	r3, r2, r3
 207 0080 1B8B     		ldrh	r3, [r3, #24]
 208 0082 9F42     		cmp	r7, r3
 209 0084 EBD3     		bcc	.L15
1707:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     }
1708:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     return (calibrateStatus);
1709:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** }
 210              		.loc 1 1709 0 is_stmt 1
 211 0086 0198     		ldr	r0, [sp, #4]
 212 0088 02B0     		add	sp, sp, #8
 213              		@ sp needed
 214              	.LVL28:
 215              	.LVL29:
 216              	.LVL30:
 217              	.LVL31:
 218              	.LVL32:
 219 008a 04BC     		pop	{r2}
 220 008c 9046     		mov	r8, r2
 221 008e F0BD     		pop	{r4, r5, r6, r7, pc}
 222              	.L17:
 223              		.align	2
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 35


 224              	.L16:
 225 0090 00000000 		.word	capsense_dsFlash
 226              		.cfi_endproc
 227              	.LFE10:
 228              		.size	capsense_SsCSXCalibrateCheck, .-capsense_SsCSXCalibrateCheck
 229              		.section	.text.capsense_SsCalcCsxScanPeriod,"ax",%progbits
 230              		.align	2
 231              		.code	16
 232              		.thumb_func
 233              		.type	capsense_SsCalcCsxScanPeriod, %function
 234              	capsense_SsCalcCsxScanPeriod:
 235              	.LFB17:
1710:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1711:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** #endif /* (capsense_CSX_IDAC_AUTOCAL_EN == capsense_ENABLE) */
1712:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1713:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** #if(capsense_ENABLE == capsense_CSDV2)
1714:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** /*******************************************************************************
1715:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * Function Name: capsense_SsCSXStartSample
1716:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** ****************************************************************************//**
1717:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
1718:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \brief
1719:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *   Starts scanning for the CSX widget.
1720:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
1721:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \details
1722:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *   Starts scanning for the CSX widget.
1723:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
1724:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *******************************************************************************/
1725:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** static void capsense_SsCSXStartSample(void)
1726:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** {
1727:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     uint32 tmpRegVal;
1728:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     uint32 idacGainIndex;
1729:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1730:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     /* Configuring IDAC register */
1731:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     idacGainIndex = ((capsense_RAM_WD_BASE_STRUCT *)capsense_curFlashWdgtPtr->ptr2WdgtRam)->idacGai
1732:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     tmpRegVal = capsense_DEFAULT_CSD_IDACA_CFG & ~capsense_IDAC_GAIN_MASK;
1733:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     tmpRegVal |= ((uint32)capsense_curRamSnsPtr->idacComp[capsense_scanFreqIndex] & capsense_IDAC_M
1734:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     tmpRegVal |= capsense_idacGainTable[idacGainIndex].gainReg;
1735:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     CY_SET_REG32(capsense_CSD_IDACA_PTR, tmpRegVal);
1736:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1737:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #if (capsense_ENABLE == capsense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
1738:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         /* Configure node-specific number of sub-conversion */
1739:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         capsense_csxScanPeriod = (uint16)capsense_SsCSXOversample();
1740:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_SEQ_NORM_CNT_PTR, (uint32)capsense_curRamSnsPtr->subConvNum);
1741:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #endif /* (capsense_ENABLE == capsense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1742:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1743:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     /* Clear scan result holder */
1744:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     capsense_csxRawCount = 0u;
1745:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1746:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #ifdef capsense_START_SAMPLE_CALLBACK
1747:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         capsense_StartSampleCallback(capsense_widgetIndex, capsense_sensorIndex);
1748:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #endif /* capsense_START_SAMPLE_CALLBACK */
1749:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1750:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     capsense_SsCSXStartSampleExt();
1751:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** }
1752:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** #else
1753:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1754:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** /*******************************************************************************
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 36


1755:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * Function Name: capsense_SsCSXStartSample
1756:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** ****************************************************************************//**
1757:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
1758:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \brief
1759:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *   Starts scanning for the CSX widget.
1760:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
1761:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \param widgetIndex The ID of the widget to be calibrated.
1762:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
1763:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \details
1764:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
1765:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *******************************************************************************/
1766:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** static void capsense_SsCSXStartSample(void)
1767:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** {
1768:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     uint8 critSect;
1769:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     uint32 tmpRegVal;
1770:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     uint32 idacGainIndex;
1771:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1772:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     idacGainIndex = ((capsense_RAM_WD_BASE_STRUCT *)capsense_curFlashWdgtPtr->ptr2WdgtRam)->idacGai
1773:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     critSect = CyEnterCriticalSection();
1774:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     tmpRegVal = CY_GET_REG32(capsense_IDAC_PTR);
1775:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     tmpRegVal &= ~capsense_IDAC_MOD_MASK;
1776:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     tmpRegVal &= ~capsense_IDAC_GAIN_MASK;
1777:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     tmpRegVal |= capsense_IDAC_MOD_MODE_VARIABLE | (uint32)capsense_curRamSnsPtr->idacComp[capsense
1778:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     tmpRegVal |= capsense_idacGainTable[idacGainIndex].gainReg;
1779:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1780:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     CY_SET_REG32(capsense_IDAC_PTR, tmpRegVal);
1781:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     CyExitCriticalSection(critSect);
1782:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1783:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     /* Clear scan result holder */
1784:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     capsense_csxRawCount = 0u;
1785:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1786:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #ifdef capsense_START_SAMPLE_CALLBACK
1787:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         capsense_StartSampleCallback(capsense_widgetIndex, capsense_sensorIndex);
1788:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #endif /* capsense_START_SAMPLE_CALLBACK */
1789:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1790:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #if (capsense_ENABLE == capsense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
1791:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         /* Configure node-specific number of sub-conversion */
1792:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         capsense_csxScanPeriod = (uint16)capsense_SsCSXOversample();
1793:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #endif /* (capsense_ENABLE == capsense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1794:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1795:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     /* Disable interrupts and initiate scan */
1796:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     critSect = CyEnterCriticalSection();
1797:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     capsense_SsCSXStartSampleExt();
1798:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     CyExitCriticalSection(critSect);
1799:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** }
1800:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** #endif /* (capsense_ENABLE == capsense_CSDV2) */
1801:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1802:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** /*******************************************************************************
1803:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * Function Name: capsense_CSXConnectTx
1804:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** ****************************************************************************//**
1805:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
1806:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \brief
1807:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  Connects a Tx electrode to the CSX scanning hardware.
1808:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
1809:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \details
1810:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  This function connects a port pin (Tx electrode) to the CSD_SENSE signal.
1811:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  It is assumed that drive mode of the port pin is already set to STRONG
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 37


1812:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  in the HSIOM_PORT_SELx register.
1813:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
1814:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
1815:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
1816:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  use cases (for faster execution time when there is only one port pin for an
1817:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  electrode for example).
1818:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
1819:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \param txPtr
1820:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  Specifies the pointer to the FLASH_IO_STRUCT object belonging to a sensor
1821:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  to be connected to the sensing HW block as a Tx pin.
1822:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
1823:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *******************************************************************************/
1824:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** void capsense_CSXConnectTx(capsense_FLASH_IO_STRUCT const *txPtr)
1825:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** {
1826:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     capsense_WriteBitsSafe(txPtr->pcPtr, (uint32)(capsense_GPIO_PC_MASK << txPtr->shift),
1827:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             (uint32)(capsense_GPIO_STRGDRV << txPtr->shift));
1828:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     capsense_WriteBitsSafe(txPtr->hsiomPtr, (capsense_HSIOM_SEL_MASK << txPtr->hsiomShift),
1829:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             (uint32)(capsense_HSIOM_SEL_CSD_SENSE << txPtr->hsiomShift));
1830:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** }
1831:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1832:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** /*******************************************************************************
1833:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * Function Name: capsense_CSXConnectRx
1834:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** ****************************************************************************//**
1835:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
1836:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \brief
1837:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  Connects an Rx electrode to the CSX scanning hardware.
1838:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
1839:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \details
1840:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  This function connects a port pin (Rx electrode) to AMUXBUS-A and sets
1841:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  drive mode of the port pin to High-Z in the GPIO_PRT_PCx register.
1842:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
1843:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
1844:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
1845:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  use cases (for faster execution time when there is only one port pin for an
1846:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  electrode for example).
1847:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
1848:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \param rxPtr
1849:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  Specifies the pointer to the FLASH_IO_STRUCT object belonging to a sensor
1850:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  to be connected to the sensing HW block as an Rx pin.
1851:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
1852:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *******************************************************************************/
1853:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** void capsense_CSXConnectRx(capsense_FLASH_IO_STRUCT const *rxPtr)
1854:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** {
1855:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     capsense_WriteBitsSafe(rxPtr->pcPtr, (uint32)(capsense_GPIO_PC_MASK << rxPtr->shift), 0u);
1856:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     capsense_WriteBitsSafe(rxPtr->hsiomPtr, (capsense_HSIOM_SEL_MASK << rxPtr->hsiomShift), (uint32
1857:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** }
1858:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1859:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** /*******************************************************************************
1860:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * Function Name: capsense_CSXDisconnectTx
1861:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** ****************************************************************************//**
1862:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
1863:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \brief
1864:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  Disconnects a Tx electrode from the CSX scanning hardware.
1865:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
1866:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \details
1867:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  This function disconnects a port pin (Tx electrode) from the CSD_SENSE
1868:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  signal and configures the port pin to the strong drive mode. It is assumed
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 38


1869:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  that the data register (GPIO_PRTx_DR) of the port pin is already 0.
1870:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
1871:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
1872:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
1873:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  use cases (for faster execution time when there is only one port pin for an
1874:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  electrode for example).
1875:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
1876:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \param txPtr
1877:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  Specifies the pointer to the FLASH_IO_STRUCT object belonging to a Tx pin
1878:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  sensor to be disconnected from the sensing HW block.
1879:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
1880:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *******************************************************************************/
1881:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** void capsense_CSXDisconnectTx(capsense_FLASH_IO_STRUCT const *txPtr)
1882:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** {
1883:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     uint32 regValue;
1884:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     uint8  interruptState;
1885:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1886:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     interruptState = CyEnterCriticalSection();
1887:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (txPtr->hsiomPtr);
1888:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     regValue &= ~(txPtr->hsiomMask);
1889:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     CY_SET_REG32 (txPtr->hsiomPtr, regValue);
1890:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     CyExitCriticalSection(interruptState);
1891:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1892:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     interruptState = CyEnterCriticalSection();
1893:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     /* Update port configuration register (drive mode) for sensor */
1894:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     regValue = CY_GET_REG32(txPtr->pcPtr);
1895:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     regValue &= ~(capsense_GPIO_PC_MASK << txPtr->shift);
1896:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1897:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     if(capsense_SNS_CONNECTION_GROUND == capsense_dsRam.scanCurrentISC)
1898:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     {
1899:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         regValue |= (CY_SYS_PINS_DM_STRONG << txPtr->shift);
1900:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     }
1901:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     else
1902:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     {
1903:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         regValue |= (CY_SYS_PINS_DM_ALG_HIZ << txPtr->shift);
1904:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     }
1905:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1906:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     CY_SET_REG32(txPtr->pcPtr, regValue);
1907:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     CyExitCriticalSection(interruptState);
1908:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** }
1909:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1910:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** /*******************************************************************************
1911:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * Function Name: capsense_CSXDisconnectRx
1912:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** ****************************************************************************//**
1913:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
1914:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \brief
1915:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  Disconnects an Rx electrode from the CSX scanning hardware.
1916:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
1917:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \details
1918:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  This function disconnects a port pin (Rx electrode) from AMUXBUS_A and
1919:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  configures the port pin to the strong drive mode. It is assumed that the
1920:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  data register (GPIO_PRTx_DR) of the port pin is already 0.
1921:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
1922:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
1923:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
1924:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  use cases (for faster execution time when there is only one port pin for
1925:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  an electrode for example).
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 39


1926:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
1927:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \param rxPtr
1928:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  Specifies the pointer to the FLASH_IO_STRUCT object belonging to an Rx pin
1929:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  sensor to be disconnected from the sensing HW block.
1930:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
1931:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *******************************************************************************/
1932:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** void capsense_CSXDisconnectRx(capsense_FLASH_IO_STRUCT const *rxPtr)
1933:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** {
1934:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     uint32 regValue;
1935:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     uint8  interruptState;
1936:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1937:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     interruptState = CyEnterCriticalSection();
1938:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (rxPtr->hsiomPtr);
1939:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     regValue &= ~(rxPtr->hsiomMask);
1940:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->hsiomPtr, regValue);
1941:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     CyExitCriticalSection(interruptState);
1942:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1943:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     interruptState = CyEnterCriticalSection();
1944:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     /* Update port configuration register (drive mode) for sensor */
1945:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     regValue = CY_GET_REG32(rxPtr->pcPtr);
1946:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     regValue &= ~(capsense_GPIO_PC_MASK << rxPtr->shift);
1947:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1948:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     if(capsense_SNS_CONNECTION_GROUND == capsense_dsRam.scanCurrentISC)
1949:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     {
1950:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         regValue |= (CY_SYS_PINS_DM_STRONG << rxPtr->shift);
1951:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     }
1952:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     else
1953:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     {
1954:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         regValue |= (CY_SYS_PINS_DM_ALG_HIZ << rxPtr->shift);
1955:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     }
1956:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1957:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     CY_SET_REG32(rxPtr->pcPtr, regValue);
1958:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     regValue = CY_GET_REG32(rxPtr->drPtr);
1959:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     regValue &=  ~(rxPtr->mask);
1960:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->drPtr, regValue);
1961:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     CyExitCriticalSection(interruptState);
1962:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** }
1963:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1964:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1965:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** /*******************************************************************************
1966:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * Function Name: capsense_SsCSXGetTxClkDivider
1967:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** ****************************************************************************//**
1968:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
1969:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \brief
1970:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  This function gets the Sense Clock Divider value for one-dimension widgets
1971:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  and the Column Sense Clock divider value for two-dimension widgets.
1972:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
1973:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \details
1974:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  This function gets the Sense Clock Divider value based on the Component
1975:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  configuration. The function is applicable for one-dimension widgets and for
1976:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  two-dimension widgets.
1977:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
1978:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \param
1979:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  widgetId Specifies the ID of the widget.
1980:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
1981:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \return The Sense Clock Divider value for one-dimension widgets
1982:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *         and the Column Sense Clock divider value for two-dimension widgets.
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 40


1983:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
1984:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *******************************************************************************/
1985:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** uint32 capsense_SsCSXGetTxClkDivider(uint32 widgetId)
1986:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** {
1987:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     uint32 retVal;
1988:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1989:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     /* Get sense divider based on configuration */
1990:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #if (capsense_DISABLE == capsense_CSX_COMMON_TX_CLK_EN)
1991:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         capsense_RAM_WD_BASE_STRUCT *ptrWdgt;
1992:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1993:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         ptrWdgt = (capsense_RAM_WD_BASE_STRUCT *)
1994:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         capsense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
1995:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
1996:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         retVal = (uint32)(ptrWdgt->snsClk);
1997:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #else
1998:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         retVal = (uint32)capsense_dsRam.snsCsxClk;
1999:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #endif /* (capsense_DISABLE == capsense_CSX_COMMON_TX_CLK_EN) */
2000:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
2001:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     if(widgetId == 0uL)
2002:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     {
2003:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         ;
2004:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     }
2005:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
2006:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     return (retVal);
2007:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** }
2008:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
2009:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
2010:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** /*******************************************************************************
2011:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * Function Name: capsense_SsCalcCsxScanPeriod
2012:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** ****************************************************************************//**
2013:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
2014:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \brief
2015:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  Calculates scan period for a desired CSX widget.
2016:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
2017:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \details
2018:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  This function calculates a scan period for a desired CSX widget considering
2019:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  common Tx clock option.
2020:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
2021:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \param wdgtPtr
2022:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  The pointer to a register map object that contains widget information.
2023:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
2024:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \return
2025:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  Returns the CSX scan period for the widget.
2026:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
2027:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *******************************************************************************/
2028:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** static uint16 capsense_SsCalcCsxScanPeriod(capsense_RAM_WD_BASE_STRUCT const *wdgtPtr)
2029:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** {
 236              		.loc 1 2029 0
 237              		.cfi_startproc
 238              		@ args = 0, pretend = 0, frame = 0
 239              		@ frame_needed = 0, uses_anonymous_args = 0
 240              		@ link register save eliminated.
 241              	.LVL33:
2030:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     uint32 temp;
2031:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
2032:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #if(capsense_DISABLE == capsense_CSX_COMMON_TX_CLK_EN)
2033:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         temp = (uint32)(wdgtPtr->snsClk);
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 41


 242              		.loc 1 2033 0
 243 0000 8389     		ldrh	r3, [r0, #12]
 244              	.LVL34:
2034:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #else
2035:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         temp = (uint32)(capsense_dsRam.snsCsxClk);
2036:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #endif /* (capsense_DISABLE == capsense_CSX_COMMON_TX_CLK_EN) */
2037:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
2038:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #if(capsense_ENABLE == capsense_CSDV2)
2039:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         temp  = LO16((uint32)wdgtPtr->resolution * (temp - capsense_CSX_DEADBAND_CYCLES_NUMBER));
 245              		.loc 1 2039 0
 246 0002 0288     		ldrh	r2, [r0]
 247 0004 981E     		subs	r0, r3, #2
 248              	.LVL35:
 249 0006 5043     		muls	r0, r2
 250 0008 80B2     		uxth	r0, r0
 251              	.LVL36:
2040:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #else
2041:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         #if(capsense_ENABLE == capsense_IS_M0S8PERI_BLOCK)
2042:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             temp = (temp / (uint32)capsense_dsRam.modCsxClk);
2043:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         #endif /* (capsense_ENABLE == capsense_IS_M0S8PERI_BLOCK) */
2044:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
2045:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         temp = ((uint32)wdgtPtr->resolution * capsense_NUM_HALF_CYCLES * temp);
2046:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #endif /* (capsense_ENABLE == capsense_CSDV2) */
2047:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
2048:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     /* return the scan period */
2049:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     return ((uint16)temp);
2050:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** }
 252              		.loc 1 2050 0
 253              		@ sp needed
 254 000a 7047     		bx	lr
 255              		.cfi_endproc
 256              	.LFE17:
 257              		.size	capsense_SsCalcCsxScanPeriod, .-capsense_SsCalcCsxScanPeriod
 258              		.section	.text.capsense_SsCSXStartSample,"ax",%progbits
 259              		.align	2
 260              		.code	16
 261              		.thumb_func
 262              		.type	capsense_SsCSXStartSample, %function
 263              	capsense_SsCSXStartSample:
 264              	.LFB11:
1726:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     uint32 tmpRegVal;
 265              		.loc 1 1726 0
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 0
 268              		@ frame_needed = 0, uses_anonymous_args = 0
 269 0000 10B5     		push	{r4, lr}
 270              		.cfi_def_cfa_offset 8
 271              		.cfi_offset 4, -8
 272              		.cfi_offset 14, -4
1731:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     tmpRegVal = capsense_DEFAULT_CSD_IDACA_CFG & ~capsense_IDAC_GAIN_MASK;
 273              		.loc 1 1731 0
 274 0002 384B     		ldr	r3, .L27
 275 0004 1B68     		ldr	r3, [r3]
 276 0006 5B68     		ldr	r3, [r3, #4]
 277 0008 9A7A     		ldrb	r2, [r3, #10]
 278              	.LVL37:
1733:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     tmpRegVal |= capsense_idacGainTable[idacGainIndex].gainReg;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 42


 279              		.loc 1 1733 0
 280 000a 374B     		ldr	r3, .L27+4
 281 000c 1968     		ldr	r1, [r3]
 282 000e 374B     		ldr	r3, .L27+8
 283 0010 1B78     		ldrb	r3, [r3]
 284 0012 CB18     		adds	r3, r1, r3
 285 0014 5B7A     		ldrb	r3, [r3, #9]
 286 0016 7F21     		movs	r1, #127
 287 0018 0B40     		ands	r3, r1
 288 001a 3549     		ldr	r1, .L27+12
 289 001c 0B43     		orrs	r3, r1
 290              	.LVL38:
1734:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     CY_SET_REG32(capsense_CSD_IDACA_PTR, tmpRegVal);
 291              		.loc 1 1734 0
 292 001e D200     		lsls	r2, r2, #3
 293              	.LVL39:
 294 0020 3449     		ldr	r1, .L27+16
 295 0022 5258     		ldr	r2, [r2, r1]
 296 0024 1343     		orrs	r3, r2
 297              	.LVL40:
1735:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 298              		.loc 1 1735 0
 299 0026 344A     		ldr	r2, .L27+20
 300 0028 1360     		str	r3, [r2]
 301              	.LVL41:
1744:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 302              		.loc 1 1744 0
 303 002a 0022     		movs	r2, #0
 304 002c 334B     		ldr	r3, .L27+24
 305              	.LVL42:
 306 002e 5A80     		strh	r2, [r3, #2]
 307              	.LVL43:
 308              	.LBB4:
 309              	.LBB5:
2051:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
2052:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
2053:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** #if (capsense_ENABLE == capsense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
2054:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** /*******************************************************************************
2055:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * Function Name: capsense_SsCSXOversample
2056:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** ****************************************************************************//**
2057:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
2058:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \brief
2059:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *   Calculates the scan period of specific node.
2060:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
2061:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \details
2062:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *   Calculates the scan period of specific node that is used as maximum
2063:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *   raw count at raw count inversion (capsense_csxScanPeriod variable).
2064:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *   The capsense_curFlashWdgtPtr and capsense_curRamSnsPtr
2065:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *   must be configured to proper widget/sensor before calling this function.
2066:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
2067:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \return
2068:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *   Returns the scan period of specific node (used as maximum raw count)
2069:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
2070:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *******************************************************************************/
2071:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** static uint32 capsense_SsCSXOversample(void)
2072:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** {
2073:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     uint32 temp;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 43


2074:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
2075:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #if(capsense_DISABLE == capsense_CSX_COMMON_TX_CLK_EN)
2076:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         capsense_RAM_WD_BASE_STRUCT * curRamWdgtBasePtr;
2077:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         curRamWdgtBasePtr = (capsense_RAM_WD_BASE_STRUCT *)capsense_curFlashWdgtPtr->ptr2WdgtRam;
2078:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         temp = (uint32)(curRamWdgtBasePtr->snsClk);
2079:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #else
2080:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         temp = (uint32)(capsense_dsRam.snsCsxClk);
2081:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #endif /* (capsense_DISABLE == capsense_CSX_COMMON_TX_CLK_EN) */
2082:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
2083:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #if(capsense_ENABLE == capsense_CSDV2)
2084:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         temp  = LO16((uint32)capsense_curRamSnsPtr->subConvNum * (temp - capsense_CSX_DEADBAND_CYCL
2085:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #else
2086:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         #if(capsense_ENABLE == capsense_IS_M0S8PERI_BLOCK)
2087:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             temp = (temp / (uint32)capsense_dsRam.modCsxClk);
2088:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         #endif /* (capsense_ENABLE == capsense_IS_M0S8PERI_BLOCK) */
2089:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
2090:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         temp = ((uint32)capsense_curRamSnsPtr->subConvNum * capsense_NUM_HALF_CYCLES * temp);
2091:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #endif /* (capsense_ENABLE == capsense_CSDV2) */
2092:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
2093:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     /* return the scan period */
2094:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     return (temp);
2095:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** }
2096:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** #endif /* (capsense_ENABLE == capsense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
2097:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
2098:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
2099:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** #if(capsense_ENABLE == capsense_CSDV2)
2100:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** /**
2101:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \cond SECTION_C_INTERRUPT
2102:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \addtogroup group_c_interrupt
2103:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \{
2104:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** */
2105:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** /*******************************************************************************
2106:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * Function Name: capsense_CSXScanISR
2107:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** ****************************************************************************//**
2108:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
2109:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \brief
2110:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  This is an internal ISR function to handle the CSX sensing method operation.
2111:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
2112:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \details
2113:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *  This handler covers the following functionality:
2114:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *   - Read the result of the measurement and store it into the corresponding register of
2115:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *     the data structure.
2116:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *   - If the Noise Metric functionality is enabled, then check the number of bad
2117:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *     conversions and repeat the scan of the current sensor of the number of bad
2118:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *     conversions is greater than the Noise Metric Threshold.
2119:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *   - Initiate the scan of the next sensor for multiple sensor scanning mode.
2120:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *   - Update the Status register in the data structure.
2121:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *   - Switch the HW block to the default state if scanning of all the sensors is
2122:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *     completed.
2123:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
2124:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *******************************************************************************/
2125:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** CY_ISR(capsense_CSXScanISR)
2126:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** {
2127:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** #if(0u != capsense_CSX_NOISE_METRIC_EN)
2128:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     uint32 tmpRegVal;
2129:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** #endif /* (0u != capsense_CSX_NOISE_METRIC_EN) */
2130:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** #if(0u != capsense_CSX_NOISE_METRIC_EN)
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 44


2131:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     static uint32 capsense_resamplingCyclesCnt = capsense_RESAMPLING_CYCLES_MAX_NUMBER;
2132:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** #endif /* (0u != capsense_CSX_NOISE_METRIC_EN) */
2133:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
2134:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     CyIntDisable(capsense_ISR_NUMBER);
2135:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
2136:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     CY_SET_REG32(capsense_INTR_PTR, capsense_DEFAULT_CSD_INTR_CFG);
2137:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
2138:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     capsense_csxRawCount  = (uint16)(CY_GET_REG32(capsense_RESULT_VAL1_PTR) &\
2139:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                                                          capsense_RESULT_VAL1_VALUE_MASK);
2140:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
2141:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     capsense_csxRawCount += (uint16)(CY_GET_REG32(capsense_RESULT_VAL2_PTR) &\
2142:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                                                          capsense_RESULT_VAL2_VALUE_MASK);
2143:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
2144:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     /* This workaround neded to prevent overflow in the SW register map. Cypress ID #234358 */
2145:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     if(capsense_csxRawCount > capsense_csxScanPeriod)
2146:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     {
2147:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         capsense_csxRawCount = capsense_csxScanPeriod;
2148:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     }
2149:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
2150:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** #if(0u != capsense_CSX_NOISE_METRIC_EN)
2151:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     tmpRegVal = CY_GET_REG32(capsense_RESULT_VAL1_PTR) >> capsense_RESULT_VAL1_BAD_CONVS_SHIFT;
2152:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
2153:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     if((tmpRegVal > capsense_CSX_NOISE_METRIC_TH) && (capsense_resamplingCyclesCnt > 0uL))
2154:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     {
2155:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_SEQ_START_PTR, capsense_SCAN_CSD_SEQ_START_CFG);
2156:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         capsense_resamplingCyclesCnt--;
2157:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     }
2158:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     else
2159:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     {
2160:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         capsense_CSXPostScanApiPtr();
2161:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         capsense_resamplingCyclesCnt = capsense_RESAMPLING_CYCLES_MAX_NUMBER;
2162:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     }
2163:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** #else
2164:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     capsense_CSXPostScanApiPtr();
2165:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** #endif /* (0u != capsense_CSX_NOISE_METRIC_EN) */
2166:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
2167:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     if(capsense_NOT_BUSY == (capsense_dsRam.status & capsense_SW_STS_BUSY))
2168:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     {
2169:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_CONFIG_PTR, capsense_DEFAULT_CSD_CONFIG_CFG);
2170:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_CSDCMP_PTR, capsense_DEFAULT_CSD_CSDCMP_CFG);
2171:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_CSD_IDACA_PTR, capsense_DEFAULT_CSD_IDACA_CFG);
2172:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     }
2173:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
2174:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     CyIntEnable(capsense_ISR_NUMBER);
2175:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** }
2176:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
2177:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** /** \}
2178:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \endcond */
2179:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
2180:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** /*******************************************************************************
2181:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * Function Name: capsense_SsCSXStartSampleExt
2182:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** ****************************************************************************//**
2183:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
2184:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \brief
2185:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *   Starts the HW sequencer to perform the CSX conversion.
2186:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *   specific widget.
2187:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 45


2188:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** * \details
2189:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *   This function covers the following functionality:
2190:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *      1. Configures the HW sequencer to perform the coarse initialization.
2191:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *      2. Waiting for completion of the coarse initialization.
2192:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *      3. Configures the HW sequencer to perform the normal conversion.
2193:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *      4. Starts the normal conversion
2194:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *
2195:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** *******************************************************************************/
2196:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** static CY_INLINE void capsense_SsCSXStartSampleExt(void)
2197:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** {
2198:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     uint32 filterDelay;
2199:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     uint32 watchdogCounter;
2200:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #if (capsense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ)
2201:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         uint32 sampleClkFreqHz;
2202:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #endif /* (capsense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) */
2203:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
2204:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** /* Configure the HW sequencer to perform the coarse initialization. */
2205:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     CY_SET_REG32(capsense_CONFIG_PTR,           capsense_DEFAULT_CSD_CONFIG_CFG);
 310              		.loc 1 2205 0
 311 0030 334A     		ldr	r2, .L27+28
 312 0032 344B     		ldr	r3, .L27+32
 313 0034 1A60     		str	r2, [r3]
2206:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     CY_SET_REG32(capsense_HSCMP_PTR,            capsense_PRECHARGE_CSD_HSCMP_CFG);
 314              		.loc 1 2206 0
 315 0036 0122     		movs	r2, #1
 316 0038 334B     		ldr	r3, .L27+36
 317 003a 1A60     		str	r2, [r3]
2207:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     CY_SET_REG32(capsense_SW_HS_P_SEL_PTR,      capsense_PRECHARGE_CSD_SW_HS_P_SEL_CFG);
 318              		.loc 1 2207 0
 319 003c 1123     		movs	r3, #17
 320 003e 334A     		ldr	r2, .L27+40
 321 0040 1360     		str	r3, [r2]
2208:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     CY_SET_REG32(capsense_SW_HS_N_SEL_PTR,      capsense_PRECHARGE_CSD_SW_HS_N_SEL_CFG);
 322              		.loc 1 2208 0
 323 0042 8021     		movs	r1, #128
 324 0044 4904     		lsls	r1, r1, #17
 325 0046 324A     		ldr	r2, .L27+44
 326 0048 1160     		str	r1, [r2]
2209:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     CY_SET_REG32(capsense_SW_DSI_SEL_PTR,       capsense_PRECHARGE_CSD_SW_DSI_SEL_CFG);
 327              		.loc 1 2209 0
 328 004a 324A     		ldr	r2, .L27+48
 329 004c 1360     		str	r3, [r2]
2210:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     CY_SET_REG32(capsense_SW_SHIELD_SEL_PTR,    capsense_PRECHARGE_CSD_SW_SHIELD_SEL_CFG);
 330              		.loc 1 2210 0
 331 004e 0622     		movs	r2, #6
 332 0050 314B     		ldr	r3, .L27+52
 333 0052 1A60     		str	r2, [r3]
2211:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     CY_SET_REG32(capsense_SW_FW_MOD_SEL_PTR,    capsense_PRECHARGE_CSD_SW_FW_MOD_SEL_CFG);
 334              		.loc 1 2211 0
 335 0054 314A     		ldr	r2, .L27+56
 336 0056 324B     		ldr	r3, .L27+60
 337 0058 1A60     		str	r2, [r3]
2212:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     CY_SET_REG32(capsense_SW_FW_TANK_SEL_PTR,   capsense_PRECHARGE_CSD_SW_FW_TANK_SEL_CFG);
 338              		.loc 1 2212 0
 339 005a 324A     		ldr	r2, .L27+64
 340 005c 324B     		ldr	r3, .L27+68
 341 005e 1A60     		str	r2, [r3]
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 46


2213:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
2214:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #if(capsense_ENABLE == capsense_CSDV2) &&\
2215:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****        (capsense_ENABLE == capsense_BLOCK_OFF_AFTER_SCAN_EN) &&\
2216:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****        (capsense_CSX_ANALOG_STARTUP_DELAY_US > 0uL)
2217:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 CyDelayUs(capsense_CSX_ANALOG_STARTUP_DELAY_US);
2218:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #endif
2219:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
2220:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     CY_SET_REG32(capsense_SEQ_START_PTR,        capsense_PRECHARGE_CSD_SEQ_START_CFG);
 342              		.loc 1 2220 0
 343 0060 324A     		ldr	r2, .L27+72
 344 0062 334B     		ldr	r3, .L27+76
 345 0064 1A60     		str	r2, [r3]
 346              	.LVL44:
2221:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
2222:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     /* Wait for the HSCMP trigger and retutn the sequencer to the IDLE state. */
2223:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     watchdogCounter = capsense_CSX_PRECHARGE_WATCHDOG_CYCLES_NUM;
 347              		.loc 1 2223 0
 348 0066 F023     		movs	r3, #240
 349 0068 00E0     		b	.L20
 350              	.LVL45:
 351              	.L22:
2224:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     while((0u != (capsense_SEQ_START_START_MASK & CY_GET_REG32(capsense_SEQ_START_PTR))) && (0u != 
2225:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     {
2226:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         watchdogCounter--;
 352              		.loc 1 2226 0
 353 006a 013B     		subs	r3, r3, #1
 354              	.LVL46:
 355              	.L20:
2224:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     while((0u != (capsense_SEQ_START_START_MASK & CY_GET_REG32(capsense_SEQ_START_PTR))) && (0u != 
 356              		.loc 1 2224 0
 357 006c 304A     		ldr	r2, .L27+76
 358 006e 1268     		ldr	r2, [r2]
 359 0070 D207     		lsls	r2, r2, #31
 360 0072 01D5     		bpl	.L21
 361 0074 002B     		cmp	r3, #0
 362 0076 F8D1     		bne	.L22
 363              	.L21:
2227:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     }
2228:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
2229:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     /* Reset the sequencer to the IDLE state if HSCMP not triggered till watchdog period is out. */
2230:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     if(0u != (capsense_SEQ_START_START_MASK & CY_GET_REG32(capsense_SEQ_START_PTR)))
 364              		.loc 1 2230 0
 365 0078 2D4B     		ldr	r3, .L27+76
 366              	.LVL47:
 367 007a 1B68     		ldr	r3, [r3]
 368 007c DB07     		lsls	r3, r3, #31
 369 007e 03D5     		bpl	.L23
2231:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     {
2232:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_SEQ_START_PTR,  capsense_DEFAULT_CSD_SEQ_START_CFG);
 370              		.loc 1 2232 0
 371 0080 C222     		movs	r2, #194
 372 0082 9200     		lsls	r2, r2, #2
 373 0084 2A4B     		ldr	r3, .L27+76
 374 0086 1A60     		str	r2, [r3]
 375              	.L23:
2233:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     }
2234:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 47


2235:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #if (capsense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ)
2236:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         sampleClkFreqHz = CYDEV_BCLK__HFCLK__HZ / (uint32)capsense_dsRam.modCsxClk;
 376              		.loc 1 2236 0
 377 0088 2A4B     		ldr	r3, .L27+80
 378 008a D97F     		ldrb	r1, [r3, #31]
 379 008c 2A48     		ldr	r0, .L27+84
 380 008e FFF7FEFF 		bl	__aeabi_uidiv
 381              	.LVL48:
2237:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         if(sampleClkFreqHz <= capsense_MOD_CSD_CLK_12MHZ)
 382              		.loc 1 2237 0
 383 0092 2A4B     		ldr	r3, .L27+88
 384 0094 9842     		cmp	r0, r3
 385 0096 04D9     		bls	.L25
2238:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         {
2239:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             filterDelay = capsense_CONFIG_FILTER_DELAY_12MHZ;
2240:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         }
2241:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         else if(sampleClkFreqHz <= capsense_MOD_CSD_CLK_24MHZ)
 386              		.loc 1 2241 0
 387 0098 274B     		ldr	r3, .L27+84
 388 009a 9842     		cmp	r0, r3
 389 009c 03D8     		bhi	.L26
2242:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         {
2243:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             filterDelay = capsense_CONFIG_FILTER_DELAY_24MHZ;
 390              		.loc 1 2243 0
 391 009e 3023     		movs	r3, #48
 392 00a0 02E0     		b	.L24
 393              	.L25:
2239:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         }
 394              		.loc 1 2239 0
 395 00a2 2023     		movs	r3, #32
 396 00a4 00E0     		b	.L24
 397              	.L26:
2244:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         }
2245:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         else
2246:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         {
2247:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             filterDelay = capsense_CONFIG_FILTER_DELAY_48MHZ;
 398              		.loc 1 2247 0
 399 00a6 4023     		movs	r3, #64
 400              	.L24:
 401              	.LVL49:
2248:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         }
2249:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #else
2250:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         filterDelay = capsense_CONFIG_FILTER_DELAY_12MHZ;
2251:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #endif /* (capsense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) */
2252:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
2253:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     /* Configure the HW sequencer to perform the normal conversion. */
2254:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     CY_SET_REG32(capsense_CONFIG_PTR, capsense_PRESCAN_CSD_CONFIG_CFG | filterDelay);
 402              		.loc 1 2254 0
 403 00a8 254A     		ldr	r2, .L27+92
 404 00aa 1343     		orrs	r3, r2
 405              	.LVL50:
 406 00ac 154A     		ldr	r2, .L27+32
 407 00ae 1360     		str	r3, [r2]
2255:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     CY_SET_REG32(capsense_CSDCMP_PTR, capsense_PRESCAN_CSD_CSDCMP_CFG);
 408              		.loc 1 2255 0
 409 00b0 244A     		ldr	r2, .L27+96
 410 00b2 254B     		ldr	r3, .L27+100
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 48


 411 00b4 1A60     		str	r2, [r3]
2256:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     CY_SET_REG32(capsense_HSCMP_PTR, capsense_DEFAULT_CSD_HSCMP_CFG);
 412              		.loc 1 2256 0
 413 00b6 0023     		movs	r3, #0
 414 00b8 1349     		ldr	r1, .L27+36
 415 00ba 0B60     		str	r3, [r1]
2257:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     CY_SET_REG32(capsense_SW_HS_P_SEL_PTR, capsense_DEFAULT_CSD_SW_HS_P_SEL_CFG);
 416              		.loc 1 2257 0
 417 00bc 1349     		ldr	r1, .L27+40
 418 00be 0B60     		str	r3, [r1]
2258:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     CY_SET_REG32(capsense_SW_HS_N_SEL_PTR, capsense_DEFAULT_CSD_SW_HS_N_SEL_CFG);
 419              		.loc 1 2258 0
 420 00c0 1349     		ldr	r1, .L27+44
 421 00c2 0B60     		str	r3, [r1]
2259:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     CY_SET_REG32(capsense_SW_DSI_SEL_PTR, capsense_DEFAULT_CSD_SW_DSI_SEL_CFG);
 422              		.loc 1 2259 0
 423 00c4 2320     		movs	r0, #35
 424              	.LVL51:
 425 00c6 1349     		ldr	r1, .L27+48
 426 00c8 0860     		str	r0, [r1]
2260:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     CY_SET_REG32(capsense_SW_SHIELD_SEL_PTR, capsense_DEFAULT_CSD_SW_SHIELD_SEL_CFG);
 427              		.loc 1 2260 0
 428 00ca 1349     		ldr	r1, .L27+52
 429 00cc 0B60     		str	r3, [r1]
2261:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     CY_SET_REG32(capsense_SW_FW_MOD_SEL_PTR, capsense_DEFAULT_CSD_SW_FW_MOD_SEL_CFG);
 430              		.loc 1 2261 0
 431 00ce 1449     		ldr	r1, .L27+60
 432 00d0 0B60     		str	r3, [r1]
2262:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     CY_SET_REG32(capsense_SW_FW_TANK_SEL_PTR, capsense_DEFAULT_CSD_SW_FW_TANK_SEL_CFG);
 433              		.loc 1 2262 0
 434 00d2 1549     		ldr	r1, .L27+68
 435 00d4 0B60     		str	r3, [r1]
2263:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
2264:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     /* Clear all pending interrupts of CSD block */
2265:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     CY_SET_REG32(capsense_INTR_PTR, capsense_DEFAULT_CSD_INTR_CFG);
 436              		.loc 1 2265 0
 437 00d6 8321     		movs	r1, #131
 438 00d8 4900     		lsls	r1, r1, #1
 439 00da 1C4B     		ldr	r3, .L27+104
 440 00dc 1960     		str	r1, [r3]
2266:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
2267:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     /* Start the normal conversion. */
2268:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     CY_SET_REG32(capsense_SEQ_START_PTR, capsense_SCAN_CSD_SEQ_START_CFG);
 441              		.loc 1 2268 0
 442 00de 144B     		ldr	r3, .L27+76
 443 00e0 1A60     		str	r2, [r3]
 444              	.LBE5:
 445              	.LBE4:
1751:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** #else
 446              		.loc 1 1751 0
 447              		@ sp needed
 448 00e2 10BD     		pop	{r4, pc}
 449              	.L28:
 450              		.align	2
 451              	.L27:
 452 00e4 00000000 		.word	capsense_curFlashWdgtPtr
 453 00e8 00000000 		.word	capsense_curRamSnsPtr
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 49


 454 00ec 00000000 		.word	capsense_scanFreqIndex
 455 00f0 800E0F00 		.word	986752
 456 00f4 00000000 		.word	capsense_idacGainTable
 457 00f8 C0010B40 		.word	1074463168
 458 00fc 00000000 		.word	.LANCHOR0
 459 0100 20100480 		.word	-2147217376
 460 0104 00000B40 		.word	1074462720
 461 0108 80010B40 		.word	1074463104
 462 010c 80020B40 		.word	1074463360
 463 0110 84020B40 		.word	1074463364
 464 0114 C0020B40 		.word	1074463424
 465 0118 88020B40 		.word	1074463368
 466 011c 01010100 		.word	65793
 467 0120 B0020B40 		.word	1074463408
 468 0124 10100000 		.word	4112
 469 0128 B4020B40 		.word	1074463412
 470 012c 03030000 		.word	771
 471 0130 40030B40 		.word	1074463552
 472 0134 00000000 		.word	capsense_dsRam
 473 0138 00366E01 		.word	24000000
 474 013c 001BB700 		.word	12000000
 475 0140 00100C80 		.word	-2146693120
 476 0144 01030000 		.word	769
 477 0148 8C010B40 		.word	1074463116
 478 014c F0000B40 		.word	1074462960
 479              		.cfi_endproc
 480              	.LFE11:
 481              		.size	capsense_SsCSXStartSample, .-capsense_SsCSXStartSample
 482              		.section	.text.capsense_CSXScanISR,"ax",%progbits
 483              		.align	2
 484              		.global	capsense_CSXScanISR
 485              		.code	16
 486              		.thumb_func
 487              		.type	capsense_CSXScanISR, %function
 488              	capsense_CSXScanISR:
 489              	.LFB18:
2126:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** #if(0u != capsense_CSX_NOISE_METRIC_EN)
 490              		.loc 1 2126 0
 491              		.cfi_startproc
 492              		@ args = 0, pretend = 0, frame = 0
 493              		@ frame_needed = 0, uses_anonymous_args = 0
 494 0000 10B5     		push	{r4, lr}
 495              		.cfi_def_cfa_offset 8
 496              		.cfi_offset 4, -8
 497              		.cfi_offset 14, -4
2134:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 498              		.loc 1 2134 0
 499 0002 0A20     		movs	r0, #10
 500 0004 FFF7FEFF 		bl	CyIntDisable
 501              	.LVL52:
2136:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 502              		.loc 1 2136 0
 503 0008 8322     		movs	r2, #131
 504 000a 5200     		lsls	r2, r2, #1
 505 000c 154B     		ldr	r3, .L32
 506 000e 1A60     		str	r2, [r3]
2138:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                                                          capsense_RESULT_VAL1_VALUE_MASK);
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 50


 507              		.loc 1 2138 0
 508 0010 154B     		ldr	r3, .L32+4
 509 0012 1B68     		ldr	r3, [r3]
 510 0014 9BB2     		uxth	r3, r3
 511 0016 154A     		ldr	r2, .L32+8
 512 0018 5380     		strh	r3, [r2, #2]
2141:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                                                          capsense_RESULT_VAL2_VALUE_MASK);
 513              		.loc 1 2141 0
 514 001a 154B     		ldr	r3, .L32+12
 515 001c 1B68     		ldr	r3, [r3]
 516 001e 9BB2     		uxth	r3, r3
 517 0020 5188     		ldrh	r1, [r2, #2]
 518 0022 CB18     		adds	r3, r1, r3
 519 0024 9BB2     		uxth	r3, r3
 520 0026 5380     		strh	r3, [r2, #2]
2145:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     {
 521              		.loc 1 2145 0
 522 0028 5188     		ldrh	r1, [r2, #2]
 523 002a 89B2     		uxth	r1, r1
 524 002c 1388     		ldrh	r3, [r2]
 525 002e 9BB2     		uxth	r3, r3
 526 0030 9942     		cmp	r1, r3
 527 0032 02D9     		bls	.L30
2147:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     }
 528              		.loc 1 2147 0
 529 0034 1388     		ldrh	r3, [r2]
 530 0036 9BB2     		uxth	r3, r3
 531 0038 5380     		strh	r3, [r2, #2]
 532              	.L30:
2164:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** #endif /* (0u != capsense_CSX_NOISE_METRIC_EN) */
 533              		.loc 1 2164 0
 534 003a 0E4B     		ldr	r3, .L32+16
 535 003c 1B68     		ldr	r3, [r3]
 536 003e 9847     		blx	r3
 537              	.LVL53:
2167:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     {
 538              		.loc 1 2167 0
 539 0040 0D4B     		ldr	r3, .L32+20
 540 0042 DB68     		ldr	r3, [r3, #12]
 541 0044 1B06     		lsls	r3, r3, #24
 542 0046 09D4     		bmi	.L31
2169:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_CSDCMP_PTR, capsense_DEFAULT_CSD_CSDCMP_CFG);
 543              		.loc 1 2169 0
 544 0048 0C4A     		ldr	r2, .L32+24
 545 004a 0D4B     		ldr	r3, .L32+28
 546 004c 1A60     		str	r2, [r3]
2170:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_CSD_IDACA_PTR, capsense_DEFAULT_CSD_IDACA_CFG);
 547              		.loc 1 2170 0
 548 004e C022     		movs	r2, #192
 549 0050 9200     		lsls	r2, r2, #2
 550 0052 0C4B     		ldr	r3, .L32+32
 551 0054 1A60     		str	r2, [r3]
2171:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     }
 552              		.loc 1 2171 0
 553 0056 0C4A     		ldr	r2, .L32+36
 554 0058 0C4B     		ldr	r3, .L32+40
 555 005a 1A60     		str	r2, [r3]
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 51


 556              	.L31:
2174:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** }
 557              		.loc 1 2174 0
 558 005c 0A20     		movs	r0, #10
 559 005e FFF7FEFF 		bl	CyIntEnable
 560              	.LVL54:
2175:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 561              		.loc 1 2175 0
 562              		@ sp needed
 563 0062 10BD     		pop	{r4, pc}
 564              	.L33:
 565              		.align	2
 566              	.L32:
 567 0064 F0000B40 		.word	1074462960
 568 0068 D0000B40 		.word	1074462928
 569 006c 00000000 		.word	.LANCHOR0
 570 0070 D4000B40 		.word	1074462932
 571 0074 00000000 		.word	.LANCHOR1
 572 0078 00000000 		.word	capsense_dsRam
 573 007c 20100480 		.word	-2147217376
 574 0080 00000B40 		.word	1074462720
 575 0084 8C010B40 		.word	1074463116
 576 0088 800E4F01 		.word	21958272
 577 008c C0010B40 		.word	1074463168
 578              		.cfi_endproc
 579              	.LFE18:
 580              		.size	capsense_CSXScanISR, .-capsense_CSXScanISR
 581              		.section	.text.capsense_CSXInitialize,"ax",%progbits
 582              		.align	2
 583              		.global	capsense_CSXInitialize
 584              		.code	16
 585              		.thumb_func
 586              		.type	capsense_CSXInitialize, %function
 587              	capsense_CSXInitialize:
 588              	.LFB1:
 157:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #if(capsense_ENABLE == capsense_CSDV2)
 589              		.loc 1 157 0
 590              		.cfi_startproc
 591              		@ args = 0, pretend = 0, frame = 0
 592              		@ frame_needed = 0, uses_anonymous_args = 0
 593 0000 10B5     		push	{r4, lr}
 594              		.cfi_def_cfa_offset 8
 595              		.cfi_offset 4, -8
 596              		.cfi_offset 14, -4
 163:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         {
 597              		.loc 1 163 0
 598 0002 514B     		ldr	r3, .L36
 599 0004 BA22     		movs	r2, #186
 600 0006 9A5C     		ldrb	r2, [r3, r2]
 601 0008 B921     		movs	r1, #185
 602 000a 585C     		ldrb	r0, [r3, r1]
 603 000c 8242     		cmp	r2, r0
 604 000e 06D0     		beq	.L35
 165:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             capsense_dsRam.scanCurrentISC = capsense_dsRam.scanCsxISC;
 605              		.loc 1 165 0
 606 0010 FFF7FEFF 		bl	capsense_SsSetAllIOsState
 607              	.LVL55:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 52


 166:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         }
 608              		.loc 1 166 0
 609 0014 4C4B     		ldr	r3, .L36
 610 0016 B922     		movs	r2, #185
 611 0018 995C     		ldrb	r1, [r3, r2]
 612 001a 0132     		adds	r2, r2, #1
 613 001c 9954     		strb	r1, [r3, r2]
 614              	.L35:
 169:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_INTR_SET_PTR,         capsense_DEFAULT_CSD_INTR_SET_CFG);
 615              		.loc 1 169 0
 616 001e 8322     		movs	r2, #131
 617 0020 5200     		lsls	r2, r2, #1
 618 0022 4A4B     		ldr	r3, .L36+4
 619 0024 1A60     		str	r2, [r3]
 170:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_INTR_MASK_PTR,        capsense_DEFAULT_CSD_INTR_MASK_CFG);
 620              		.loc 1 170 0
 621 0026 0024     		movs	r4, #0
 622 0028 494B     		ldr	r3, .L36+8
 623 002a 1C60     		str	r4, [r3]
 171:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_HSCMP_PTR,            capsense_DEFAULT_CSD_HSCMP_CFG);
 624              		.loc 1 171 0
 625 002c 053A     		subs	r2, r2, #5
 626 002e FF3A     		subs	r2, r2, #255
 627 0030 484B     		ldr	r3, .L36+12
 628 0032 1A60     		str	r2, [r3]
 172:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_AMBUF_PTR,            capsense_DEFAULT_CSD_AMBUF_CFG);
 629              		.loc 1 172 0
 630 0034 484B     		ldr	r3, .L36+16
 631 0036 1C60     		str	r4, [r3]
 173:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_REFGEN_PTR,           capsense_DEFAULT_CSD_REFGEN_CFG);
 632              		.loc 1 173 0
 633 0038 484B     		ldr	r3, .L36+20
 634 003a 1C60     		str	r4, [r3]
 174:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_CSDCMP_PTR,           capsense_DEFAULT_CSD_CSDCMP_CFG);
 635              		.loc 1 174 0
 636 003c 484A     		ldr	r2, .L36+24
 637 003e 494B     		ldr	r3, .L36+28
 638 0040 1A60     		str	r2, [r3]
 175:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_CSD_IDACA_PTR,         capsense_DEFAULT_CSD_IDACA_CFG);
 639              		.loc 1 175 0
 640 0042 C022     		movs	r2, #192
 641 0044 9200     		lsls	r2, r2, #2
 642 0046 484B     		ldr	r3, .L36+32
 643 0048 1A60     		str	r2, [r3]
 176:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 644              		.loc 1 176 0
 645 004a 484A     		ldr	r2, .L36+36
 646 004c 484B     		ldr	r3, .L36+40
 647 004e 1A60     		str	r2, [r3]
 179:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         #endif /* (0u != capsense_ADC_EN) || (0u != capsense_CSD_IDAC_COMP_EN) */
 648              		.loc 1 179 0
 649 0050 484B     		ldr	r3, .L36+44
 650 0052 1C60     		str	r4, [r3]
 182:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_SENSE_PERIOD_PTR,     capsense_DEFAULT_CSD_SENSE_PERIOD_CFG);
 651              		.loc 1 182 0
 652 0054 484A     		ldr	r2, .L36+48
 653 0056 494B     		ldr	r3, .L36+52
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 53


 654 0058 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_SENSE_DUTY_PTR,       capsense_DEFAULT_CSD_SENSE_DUTY_CFG);
 655              		.loc 1 183 0
 656 005a 5022     		movs	r2, #80
 657 005c 484B     		ldr	r3, .L36+56
 658 005e 1A60     		str	r2, [r3]
 184:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_SW_HS_P_SEL_PTR,      capsense_DEFAULT_CSD_SW_HS_P_SEL_CFG);
 659              		.loc 1 184 0
 660 0060 484B     		ldr	r3, .L36+60
 661 0062 1C60     		str	r4, [r3]
 185:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_SW_HS_N_SEL_PTR,      capsense_DEFAULT_CSD_SW_HS_N_SEL_CFG);
 662              		.loc 1 185 0
 663 0064 484B     		ldr	r3, .L36+64
 664 0066 1C60     		str	r4, [r3]
 186:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_SW_SHIELD_SEL_PTR,    capsense_DEFAULT_CSD_SW_SHIELD_SEL_CFG);
 665              		.loc 1 186 0
 666 0068 484B     		ldr	r3, .L36+68
 667 006a 1C60     		str	r4, [r3]
 187:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_SW_AMUXBUF_SEL_PTR,   capsense_DEFAULT_CSD_SW_AMUXBUF_SEL_CFG);
 668              		.loc 1 187 0
 669 006c 484B     		ldr	r3, .L36+72
 670 006e 1C60     		str	r4, [r3]
 188:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 671              		.loc 1 188 0
 672 0070 484B     		ldr	r3, .L36+76
 673 0072 1C60     		str	r4, [r3]
 190:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(capsense_SW_BYP_SEL_PTR);
 674              		.loc 1 190 0
 675 0074 FFF7FEFF 		bl	CyEnterCriticalSection
 676              	.LVL56:
 191:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         tmpRegVal &= ~(capsense_SW_BYP_SEL_SW_BYA_MASK);
 677              		.loc 1 191 0
 678 0078 474A     		ldr	r2, .L36+80
 679 007a 1168     		ldr	r1, [r2]
 680              	.LVL57:
 192:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         tmpRegVal |= capsense_DEFAULT_CSD_SW_BYP_SEL_CFG;
 681              		.loc 1 192 0
 682 007c 474B     		ldr	r3, .L36+84
 683 007e 0B40     		ands	r3, r1
 684              	.LVL58:
 193:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_SW_BYP_SEL_PTR,       tmpRegVal);
 685              		.loc 1 193 0
 686 0080 8021     		movs	r1, #128
 687 0082 4901     		lsls	r1, r1, #5
 688 0084 0B43     		orrs	r3, r1
 689              	.LVL59:
 194:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 690              		.loc 1 194 0
 691 0086 1360     		str	r3, [r2]
 195:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 692              		.loc 1 195 0
 693 0088 FFF7FEFF 		bl	CyExitCriticalSection
 694              	.LVL60:
 197:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_SW_CMP_N_SEL_PTR,     capsense_DEFAULT_CSD_SW_CMP_N_SEL_CFG);
 695              		.loc 1 197 0
 696 008c 3222     		movs	r2, #50
 697 008e 444B     		ldr	r3, .L36+88
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 54


 698 0090 1A60     		str	r2, [r3]
 198:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 699              		.loc 1 198 0
 700 0092 8022     		movs	r2, #128
 701 0094 5204     		lsls	r2, r2, #17
 702 0096 434B     		ldr	r3, .L36+92
 703 0098 1A60     		str	r2, [r3]
 200:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(capsense_SW_REFGEN_SEL_PTR);
 704              		.loc 1 200 0
 705 009a FFF7FEFF 		bl	CyEnterCriticalSection
 706              	.LVL61:
 201:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         tmpRegVal &= ~capsense_SW_REFGEN_SEL_SW_MASK;
 707              		.loc 1 201 0
 708 009e 424A     		ldr	r2, .L36+96
 709 00a0 1168     		ldr	r1, [r2]
 710              	.LVL62:
 202:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         tmpRegVal |= capsense_DEFAULT_CSD_SW_REFGEN_SEL_CFG;
 711              		.loc 1 202 0
 712 00a2 424B     		ldr	r3, .L36+100
 713 00a4 0B40     		ands	r3, r1
 714              	.LVL63:
 203:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_SW_REFGEN_SEL_PTR,    tmpRegVal);
 715              		.loc 1 203 0
 716 00a6 8021     		movs	r1, #128
 717 00a8 4905     		lsls	r1, r1, #21
 718 00aa 0B43     		orrs	r3, r1
 719              	.LVL64:
 204:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 720              		.loc 1 204 0
 721 00ac 1360     		str	r3, [r2]
 205:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 722              		.loc 1 205 0
 723 00ae FFF7FEFF 		bl	CyExitCriticalSection
 724              	.LVL65:
 207:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_SW_FW_TANK_SEL_PTR,   capsense_DEFAULT_CSD_SW_FW_TANK_SEL_CFG);
 725              		.loc 1 207 0
 726 00b2 3F4B     		ldr	r3, .L36+104
 727 00b4 1C60     		str	r4, [r3]
 208:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_SW_DSI_SEL_PTR,       capsense_DEFAULT_CSD_SW_DSI_SEL_CFG);
 728              		.loc 1 208 0
 729 00b6 3F4B     		ldr	r3, .L36+108
 730 00b8 1C60     		str	r4, [r3]
 209:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_SEQ_TIME_PTR,         capsense_DEFAULT_CSD_SEQ_TIME_CFG);
 731              		.loc 1 209 0
 732 00ba 2322     		movs	r2, #35
 733 00bc 3E4B     		ldr	r3, .L36+112
 734 00be 1A60     		str	r2, [r3]
 210:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_SEQ_INIT_CNT_PTR,     capsense_DEFAULT_CSD_SEQ_INIT_CNT_CFG);
 735              		.loc 1 210 0
 736 00c0 143A     		subs	r2, r2, #20
 737 00c2 3E4B     		ldr	r3, .L36+116
 738 00c4 1A60     		str	r2, [r3]
 211:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_SEQ_NORM_CNT_PTR,     capsense_DEFAULT_CSD_SEQ_NORM_CNT_CFG);
 739              		.loc 1 211 0
 740 00c6 0B3A     		subs	r2, r2, #11
 741 00c8 3D4B     		ldr	r3, .L36+120
 742 00ca 1A60     		str	r2, [r3]
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 55


 212:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_CTL_PTR,          capsense_DEFAULT_CSD_ADC_CTL_CFG);
 743              		.loc 1 212 0
 744 00cc 3D4B     		ldr	r3, .L36+124
 745 00ce 1C60     		str	r4, [r3]
 213:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_SEQ_START_PTR,        capsense_DEFAULT_CSD_SEQ_START_CFG);
 746              		.loc 1 213 0
 747 00d0 3D4B     		ldr	r3, .L36+128
 748 00d2 1C60     		str	r4, [r3]
 214:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_CONFIG_PTR,           capsense_DEFAULT_CSD_CONFIG_CFG);
 749              		.loc 1 214 0
 750 00d4 C222     		movs	r2, #194
 751 00d6 9200     		lsls	r2, r2, #2
 752 00d8 3C4B     		ldr	r3, .L36+132
 753 00da 1A60     		str	r2, [r3]
 215:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 754              		.loc 1 215 0
 755 00dc 3C4A     		ldr	r2, .L36+136
 756 00de 3D4B     		ldr	r3, .L36+140
 757 00e0 1A60     		str	r2, [r3]
 217:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 758              		.loc 1 217 0
 759 00e2 0120     		movs	r0, #1
 760 00e4 FFF7FEFF 		bl	capsense_DischargeExtCapacitors
 761              	.LVL66:
 219:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(capsense_CintA_PC_PTR);
 762              		.loc 1 219 0
 763 00e8 FFF7FEFF 		bl	CyEnterCriticalSection
 764              	.LVL67:
 220:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         tmpRegVal &= (~(capsense_GPIO_PC_MASK << (capsense_CintA_SHIFT * capsense_GPIO_PC_BIT_SIZE)
 765              		.loc 1 220 0
 766 00ec 3A4C     		ldr	r4, .L36+144
 767 00ee 2268     		ldr	r2, [r4]
 768              	.LVL68:
 221:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_CintA_PC_PTR, tmpRegVal);
 769              		.loc 1 221 0
 770 00f0 3A4B     		ldr	r3, .L36+148
 771 00f2 1340     		ands	r3, r2
 772              	.LVL69:
 222:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 773              		.loc 1 222 0
 774 00f4 2360     		str	r3, [r4]
 223:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 775              		.loc 1 223 0
 776 00f6 FFF7FEFF 		bl	CyExitCriticalSection
 777              	.LVL70:
 225:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(capsense_CintB_PC_PTR);
 778              		.loc 1 225 0
 779 00fa FFF7FEFF 		bl	CyEnterCriticalSection
 780              	.LVL71:
 226:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         tmpRegVal &= (~(capsense_GPIO_PC_MASK << (capsense_CintB__SHIFT * capsense_GPIO_PC_BIT_SIZE
 781              		.loc 1 226 0
 782 00fe 2268     		ldr	r2, [r4]
 783              	.LVL72:
 227:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_CintB_PC_PTR, tmpRegVal);
 784              		.loc 1 227 0
 785 0100 374B     		ldr	r3, .L36+152
 786 0102 1340     		ands	r3, r2
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 56


 787              	.LVL73:
 228:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 788              		.loc 1 228 0
 789 0104 2360     		str	r3, [r4]
 229:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 790              		.loc 1 229 0
 791 0106 FFF7FEFF 		bl	CyExitCriticalSection
 792              	.LVL74:
 232:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(capsense_CintA_HSIOM_PTR);
 793              		.loc 1 232 0
 794 010a FFF7FEFF 		bl	CyEnterCriticalSection
 795              	.LVL75:
 233:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         tmpRegVal &= ~capsense_CintA_HSIOM_MASK;
 796              		.loc 1 233 0
 797 010e 354C     		ldr	r4, .L36+156
 798 0110 2268     		ldr	r2, [r4]
 799              	.LVL76:
 234:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         tmpRegVal |= (capsense_HSIOM_SEL_AMUXA << capsense_CintA_HSIOM_SHIFT);
 800              		.loc 1 234 0
 801 0112 354B     		ldr	r3, .L36+160
 802 0114 1340     		ands	r3, r2
 803              	.LVL77:
 235:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_CintA_HSIOM_PTR, tmpRegVal);
 804              		.loc 1 235 0
 805 0116 C022     		movs	r2, #192
 806 0118 D200     		lsls	r2, r2, #3
 807 011a 1343     		orrs	r3, r2
 808              	.LVL78:
 236:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 809              		.loc 1 236 0
 810 011c 2360     		str	r3, [r4]
 237:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 811              		.loc 1 237 0
 812 011e FFF7FEFF 		bl	CyExitCriticalSection
 813              	.LVL79:
 240:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(capsense_CintB_HSIOM_PTR);
 814              		.loc 1 240 0
 815 0122 FFF7FEFF 		bl	CyEnterCriticalSection
 816              	.LVL80:
 241:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         tmpRegVal &= ~capsense_CintB_HSIOM_MASK;
 817              		.loc 1 241 0
 818 0126 2268     		ldr	r2, [r4]
 819              	.LVL81:
 242:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         tmpRegVal |= (capsense_HSIOM_SEL_AMUXA << capsense_CintB_HSIOM_SHIFT);
 820              		.loc 1 242 0
 821 0128 304B     		ldr	r3, .L36+164
 822 012a 1340     		ands	r3, r2
 823              	.LVL82:
 243:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_CintB_HSIOM_PTR, tmpRegVal);
 824              		.loc 1 243 0
 825 012c C022     		movs	r2, #192
 826 012e D201     		lsls	r2, r2, #7
 827 0130 1343     		orrs	r3, r2
 828              	.LVL83:
 244:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 829              		.loc 1 244 0
 830 0132 2360     		str	r3, [r4]
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 57


 245:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 831              		.loc 1 245 0
 832 0134 FFF7FEFF 		bl	CyExitCriticalSection
 833              	.LVL84:
 247:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 834              		.loc 1 247 0
 835 0138 034B     		ldr	r3, .L36
 836 013a D87F     		ldrb	r0, [r3, #31]
 837 013c FFF7FEFF 		bl	capsense_SsSetModClkClockDivider
 838              	.LVL85:
 296:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** }
 839              		.loc 1 296 0
 840 0140 2B48     		ldr	r0, .L36+168
 841 0142 FFF7FEFF 		bl	capsense_SsIsrInitialize
 842              	.LVL86:
 297:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 843              		.loc 1 297 0
 844              		@ sp needed
 845 0146 10BD     		pop	{r4, pc}
 846              	.L37:
 847              		.align	2
 848              	.L36:
 849 0148 00000000 		.word	capsense_dsRam
 850 014c F0000B40 		.word	1074462960
 851 0150 F4000B40 		.word	1074462964
 852 0154 F8000B40 		.word	1074462968
 853 0158 80010B40 		.word	1074463104
 854 015c 84010B40 		.word	1074463108
 855 0160 411F0000 		.word	8001
 856 0164 88010B40 		.word	1074463112
 857 0168 8C010B40 		.word	1074463116
 858 016c 800E4F01 		.word	21958272
 859 0170 C0010B40 		.word	1074463168
 860 0174 C4010B40 		.word	1074463172
 861 0178 AA000500 		.word	327850
 862 017c F0010B40 		.word	1074463216
 863 0180 00020B40 		.word	1074463232
 864 0184 04020B40 		.word	1074463236
 865 0188 80020B40 		.word	1074463360
 866 018c 84020B40 		.word	1074463364
 867 0190 88020B40 		.word	1074463368
 868 0194 90020B40 		.word	1074463376
 869 0198 94020B40 		.word	1074463380
 870 019c FFEFFFFF 		.word	-4097
 871 01a0 A0020B40 		.word	1074463392
 872 01a4 A4020B40 		.word	1074463396
 873 01a8 A8020B40 		.word	1074463400
 874 01ac EEFFFEEE 		.word	-285278226
 875 01b0 B0020B40 		.word	1074463408
 876 01b4 B4020B40 		.word	1074463412
 877 01b8 C0020B40 		.word	1074463424
 878 01bc 00030B40 		.word	1074463488
 879 01c0 10030B40 		.word	1074463504
 880 01c4 14030B40 		.word	1074463508
 881 01c8 20030B40 		.word	1074463520
 882 01cc 40030B40 		.word	1074463552
 883 01d0 20100480 		.word	-2147217376
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 58


 884 01d4 00000B40 		.word	1074462720
 885 01d8 08040440 		.word	1074005000
 886 01dc 3FFEFFFF 		.word	-449
 887 01e0 FFF1FFFF 		.word	-3585
 888 01e4 00040240 		.word	1073873920
 889 01e8 FFF0FFFF 		.word	-3841
 890 01ec FF0FFFFF 		.word	-61441
 891 01f0 00000000 		.word	capsense_CSXScanISR
 892              		.cfi_endproc
 893              	.LFE1:
 894              		.size	capsense_CSXInitialize, .-capsense_CSXInitialize
 895              		.section	.text.capsense_CSXScanExt,"ax",%progbits
 896              		.align	2
 897              		.global	capsense_CSXScanExt
 898              		.code	16
 899              		.thumb_func
 900              		.type	capsense_CSXScanExt, %function
 901              	capsense_CSXScanExt:
 902              	.LFB6:
 905:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     /* Reset multi-frequency scan channel if enabled */
 903              		.loc 1 905 0
 904              		.cfi_startproc
 905              		@ args = 0, pretend = 0, frame = 0
 906              		@ frame_needed = 0, uses_anonymous_args = 0
 907 0000 10B5     		push	{r4, lr}
 908              		.cfi_def_cfa_offset 8
 909              		.cfi_offset 4, -8
 910              		.cfi_offset 14, -4
 926:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 911              		.loc 1 926 0
 912 0002 054A     		ldr	r2, .L39
 913 0004 D168     		ldr	r1, [r2, #12]
 914 0006 8023     		movs	r3, #128
 915 0008 0B43     		orrs	r3, r1
 916 000a D360     		str	r3, [r2, #12]
 931:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         #endif
 917              		.loc 1 931 0
 918 000c 0A20     		movs	r0, #10
 919 000e FFF7FEFF 		bl	CyDelayUs
 920              	.LVL87:
 933:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #endif /* (capsense_ENABLE == capsense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
 921              		.loc 1 933 0
 922 0012 FFF7FEFF 		bl	capsense_SsCSXStartSample
 923              	.LVL88:
 935:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 924              		.loc 1 935 0
 925              		@ sp needed
 926 0016 10BD     		pop	{r4, pc}
 927              	.L40:
 928              		.align	2
 929              	.L39:
 930 0018 00000000 		.word	capsense_dsRam
 931              		.cfi_endproc
 932              	.LFE6:
 933              		.size	capsense_CSXScanExt, .-capsense_CSXScanExt
 934              		.section	.text.capsense_CSXCalibrateWidget,"ax",%progbits
 935              		.align	2
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 59


 936              		.global	capsense_CSXCalibrateWidget
 937              		.code	16
 938              		.thumb_func
 939              		.type	capsense_CSXCalibrateWidget, %function
 940              	capsense_CSXCalibrateWidget:
 941              	.LFB9:
1502:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     /* Variable to calculate raw count target */
 942              		.loc 1 1502 0
 943              		.cfi_startproc
 944              		@ args = 0, pretend = 0, frame = 8
 945              		@ frame_needed = 0, uses_anonymous_args = 0
 946              	.LVL89:
 947 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 948              		.cfi_def_cfa_offset 20
 949              		.cfi_offset 4, -20
 950              		.cfi_offset 5, -16
 951              		.cfi_offset 6, -12
 952              		.cfi_offset 7, -8
 953              		.cfi_offset 14, -4
 954 0002 5F46     		mov	r7, fp
 955 0004 5646     		mov	r6, r10
 956 0006 4546     		mov	r5, r8
 957 0008 E0B4     		push	{r5, r6, r7}
 958              		.cfi_def_cfa_offset 32
 959              		.cfi_offset 8, -32
 960              		.cfi_offset 10, -28
 961              		.cfi_offset 11, -24
 962 000a 82B0     		sub	sp, sp, #8
 963              		.cfi_def_cfa_offset 40
 964 000c 0190     		str	r0, [sp, #4]
 965 000e 8B46     		mov	fp, r1
 966              	.LVL90:
1520:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 967              		.loc 1 1520 0
 968 0010 8300     		lsls	r3, r0, #2
 969 0012 8446     		mov	ip, r0
 970 0014 6344     		add	r3, r3, ip
 971 0016 DA00     		lsls	r2, r3, #3
 972 0018 3F4C     		ldr	r4, .L60
 973 001a A418     		adds	r4, r4, r2
 974 001c A368     		ldr	r3, [r4, #8]
 975 001e 9A46     		mov	r10, r3
 976 0020 3E4B     		ldr	r3, .L60+4
 977 0022 5246     		mov	r2, r10
 978 0024 1A60     		str	r2, [r3]
1524:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             (capsense_RAM_WD_BASE_STRUCT *)capsense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam);
 979              		.loc 1 1524 0
 980 0026 6068     		ldr	r0, [r4, #4]
 981              	.LVL91:
 982 0028 FFF7FEFF 		bl	capsense_SsCalcCsxScanPeriod
 983              	.LVL92:
 984 002c 3C4B     		ldr	r3, .L60+8
 985 002e 1880     		strh	r0, [r3]
1526:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         rawTarget = (rawTarget * target) / capsense_PERCENTAGE_100;
 986              		.loc 1 1526 0
 987 0030 1888     		ldrh	r0, [r3]
 988              	.LVL93:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 60


1527:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #endif /* (capsense_DISABLE == capsense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
 989              		.loc 1 1527 0
 990 0032 5B46     		mov	r3, fp
 991 0034 5843     		muls	r0, r3
 992              	.LVL94:
 993 0036 6421     		movs	r1, #100
 994 0038 FFF7FEFF 		bl	__aeabi_uidiv
 995              	.LVL95:
 996 003c 0600     		movs	r6, r0
 997              	.LVL96:
1532:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 (uint32)capsense_dsFlash.wdgtArray[widgetId].numRows);
 998              		.loc 1 1532 0
 999 003e 237F     		ldrb	r3, [r4, #28]
1533:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 1000              		.loc 1 1533 0
 1001 0040 657F     		ldrb	r5, [r4, #29]
1532:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 (uint32)capsense_dsFlash.wdgtArray[widgetId].numRows);
 1002              		.loc 1 1532 0
 1003 0042 5D43     		muls	r5, r3
 1004              	.LVL97:
1536:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     {
 1005              		.loc 1 1536 0
 1006 0044 0021     		movs	r1, #0
 1007 0046 09E0     		b	.L42
 1008              	.LVL98:
 1009              	.L43:
1538:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         capsense_curRamSnsPtr->idacComp[capsense_FREQ_CHANNEL_0] = curIdacMask;
 1010              		.loc 1 1538 0 discriminator 3
 1011 0048 344A     		ldr	r2, .L60+4
 1012 004a 0023     		movs	r3, #0
 1013 004c 1068     		ldr	r0, [r2]
 1014 004e 0380     		strh	r3, [r0]
1539:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         #if (capsense_ENABLE == capsense_MULTI_FREQ_SCAN_EN)
 1015              		.loc 1 1539 0 discriminator 3
 1016 0050 1368     		ldr	r3, [r2]
 1017 0052 4020     		movs	r0, #64
 1018 0054 5872     		strb	r0, [r3, #9]
1546:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     }
 1019              		.loc 1 1546 0 discriminator 3
 1020 0056 0A33     		adds	r3, r3, #10
 1021 0058 1360     		str	r3, [r2]
1536:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     {
 1022              		.loc 1 1536 0 discriminator 3
 1023 005a 0131     		adds	r1, r1, #1
 1024              	.LVL99:
 1025              	.L42:
1536:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     {
 1026              		.loc 1 1536 0 is_stmt 0 discriminator 1
 1027 005c A942     		cmp	r1, r5
 1028 005e F3D3     		bcc	.L43
 1029 0060 2024     		movs	r4, #32
 1030 0062 4027     		movs	r7, #64
 1031 0064 0023     		movs	r3, #0
 1032 0066 9846     		mov	r8, r3
 1033 0068 00E0     		b	.L51
 1034              	.LVL100:
 1035              	.L57:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 61


1607:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     }
 1036              		.loc 1 1607 0 is_stmt 1
 1037 006a 1C00     		movs	r4, r3
 1038              	.LVL101:
 1039              	.L51:
1553:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         (void)capsense_Scan();
 1040              		.loc 1 1553 0
 1041 006c 0198     		ldr	r0, [sp, #4]
 1042 006e FFF7FEFF 		bl	capsense_SetupWidget
 1043              	.LVL102:
1554:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 1044              		.loc 1 1554 0
 1045 0072 FFF7FEFF 		bl	capsense_Scan
 1046              	.LVL103:
1556:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         while ((capsense_dsRam.status & capsense_SW_STS_BUSY) != 0u)
 1047              		.loc 1 1556 0
 1048 0076 2B4B     		ldr	r3, .L60+12
1557:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         {
 1049              		.loc 1 1557 0
 1050 0078 02E0     		b	.L44
 1051              	.LVL104:
 1052              	.L46:
1559:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             {
 1053              		.loc 1 1559 0
 1054 007a 002B     		cmp	r3, #0
 1055 007c 05D0     		beq	.L56
1564:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         }
 1056              		.loc 1 1564 0
 1057 007e 013B     		subs	r3, r3, #1
 1058              	.LVL105:
 1059              	.L44:
1557:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         {
 1060              		.loc 1 1557 0
 1061 0080 294A     		ldr	r2, .L60+16
 1062 0082 D268     		ldr	r2, [r2, #12]
 1063 0084 1206     		lsls	r2, r2, #24
 1064 0086 F8D4     		bmi	.L46
 1065 0088 01E0     		b	.L45
 1066              	.L56:
1561:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 break;
 1067              		.loc 1 1561 0
 1068 008a 1023     		movs	r3, #16
 1069              	.LVL106:
 1070 008c 9846     		mov	r8, r3
 1071              	.LVL107:
 1072              	.L45:
1568:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 1073              		.loc 1 1568 0
 1074 008e 234B     		ldr	r3, .L60+4
 1075 0090 5246     		mov	r2, r10
 1076 0092 1A60     		str	r2, [r3]
 1077              	.LVL108:
1571:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         {
 1078              		.loc 1 1571 0
 1079 0094 0021     		movs	r1, #0
 1080 0096 0EE0     		b	.L47
 1081              	.LVL109:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 62


 1082              	.L49:
1582:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             {
 1083              		.loc 1 1582 0
 1084 0098 204B     		ldr	r3, .L60+4
 1085 009a 1B68     		ldr	r3, [r3]
 1086 009c 1A88     		ldrh	r2, [r3]
 1087 009e 9642     		cmp	r6, r2
 1088 00a0 02D2     		bcs	.L48
1584:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             }
 1089              		.loc 1 1584 0
 1090 00a2 5A7A     		ldrb	r2, [r3, #9]
 1091 00a4 BA43     		bics	r2, r7
 1092 00a6 5A72     		strb	r2, [r3, #9]
 1093              	.L48:
1586:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 1094              		.loc 1 1586 0 discriminator 2
 1095 00a8 5A7A     		ldrb	r2, [r3, #9]
 1096 00aa 2243     		orrs	r2, r4
 1097 00ac 5A72     		strb	r2, [r3, #9]
1602:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         }
 1098              		.loc 1 1602 0 discriminator 2
 1099 00ae 0A33     		adds	r3, r3, #10
 1100 00b0 1A4A     		ldr	r2, .L60+4
 1101 00b2 1360     		str	r3, [r2]
1571:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         {
 1102              		.loc 1 1571 0 discriminator 2
 1103 00b4 0131     		adds	r1, r1, #1
 1104              	.LVL110:
 1105              	.L47:
1571:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         {
 1106              		.loc 1 1571 0 is_stmt 0 discriminator 1
 1107 00b6 A942     		cmp	r1, r5
 1108 00b8 EED3     		bcc	.L49
 1109              	.LVL111:
1607:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     }
 1110              		.loc 1 1607 0 is_stmt 1
 1111 00ba 6308     		lsrs	r3, r4, #1
 1112 00bc DBB2     		uxtb	r3, r3
 1113              	.LVL112:
1609:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 1114              		.loc 1 1609 0
 1115 00be 002C     		cmp	r4, #0
 1116 00c0 03D0     		beq	.L50
1606:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         nextIdacMask = nextIdacMask >> 1u;
 1117              		.loc 1 1606 0 discriminator 1
 1118 00c2 2700     		movs	r7, r4
1609:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 1119              		.loc 1 1609 0 discriminator 1
 1120 00c4 4246     		mov	r2, r8
 1121 00c6 002A     		cmp	r2, #0
 1122 00c8 CFD0     		beq	.L57
 1123              	.L50:
1612:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     (void)capsense_Scan();
 1124              		.loc 1 1612 0
 1125 00ca 0198     		ldr	r0, [sp, #4]
 1126 00cc FFF7FEFF 		bl	capsense_SetupWidget
 1127              	.LVL113:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 63


1613:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 1128              		.loc 1 1613 0
 1129 00d0 FFF7FEFF 		bl	capsense_Scan
 1130              	.LVL114:
1615:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     {
 1131              		.loc 1 1615 0
 1132 00d4 4346     		mov	r3, r8
 1133 00d6 002B     		cmp	r3, #0
 1134 00d8 04D0     		beq	.L58
 1135              	.LVL115:
 1136 00da 16E0     		b	.L53
 1137              	.LVL116:
 1138              	.L55:
1620:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             {
 1139              		.loc 1 1620 0
 1140 00dc 002B     		cmp	r3, #0
 1141 00de 07D0     		beq	.L59
1626:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         }
 1142              		.loc 1 1626 0
 1143 00e0 013B     		subs	r3, r3, #1
 1144              	.LVL117:
 1145 00e2 00E0     		b	.L52
 1146              	.LVL118:
 1147              	.L58:
 1148 00e4 0F4B     		ldr	r3, .L60+12
 1149              	.LVL119:
 1150              	.L52:
1618:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         {
 1151              		.loc 1 1618 0
 1152 00e6 104A     		ldr	r2, .L60+16
 1153 00e8 D268     		ldr	r2, [r2, #12]
 1154 00ea 1206     		lsls	r2, r2, #24
 1155 00ec F6D4     		bmi	.L55
 1156 00ee 01E0     		b	.L54
 1157              	.L59:
1622:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 break;
 1158              		.loc 1 1622 0
 1159 00f0 1023     		movs	r3, #16
 1160              	.LVL120:
 1161 00f2 9846     		mov	r8, r3
 1162              	.LVL121:
 1163              	.L54:
1629:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         {
 1164              		.loc 1 1629 0
 1165 00f4 4346     		mov	r3, r8
 1166 00f6 002B     		cmp	r3, #0
 1167 00f8 07D1     		bne	.L53
1631:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         }
 1168              		.loc 1 1631 0
 1169 00fa 094B     		ldr	r3, .L60+8
 1170 00fc 1988     		ldrh	r1, [r3]
 1171 00fe 89B2     		uxth	r1, r1
 1172 0100 5A46     		mov	r2, fp
 1173 0102 0198     		ldr	r0, [sp, #4]
 1174 0104 FFF7FEFF 		bl	capsense_SsCSXCalibrateCheck
 1175              	.LVL122:
 1176 0108 8046     		mov	r8, r0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 64


 1177              	.LVL123:
 1178              	.L53:
1641:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 1179              		.loc 1 1641 0
 1180 010a 4046     		mov	r0, r8
 1181 010c 02B0     		add	sp, sp, #8
 1182              		@ sp needed
 1183              	.LVL124:
 1184              	.LVL125:
 1185              	.LVL126:
 1186              	.LVL127:
 1187 010e 1CBC     		pop	{r2, r3, r4}
 1188 0110 9046     		mov	r8, r2
 1189 0112 9A46     		mov	r10, r3
 1190 0114 A346     		mov	fp, r4
 1191 0116 F0BD     		pop	{r4, r5, r6, r7, pc}
 1192              	.L61:
 1193              		.align	2
 1194              	.L60:
 1195 0118 00000000 		.word	capsense_dsFlash
 1196 011c 00000000 		.word	capsense_curRamSnsPtr
 1197 0120 00000000 		.word	.LANCHOR0
 1198 0124 00A60E00 		.word	960000
 1199 0128 00000000 		.word	capsense_dsRam
 1200              		.cfi_endproc
 1201              	.LFE9:
 1202              		.size	capsense_CSXCalibrateWidget, .-capsense_CSXCalibrateWidget
 1203              		.section	.text.capsense_CSXConnectTx,"ax",%progbits
 1204              		.align	2
 1205              		.global	capsense_CSXConnectTx
 1206              		.code	16
 1207              		.thumb_func
 1208              		.type	capsense_CSXConnectTx, %function
 1209              	capsense_CSXConnectTx:
 1210              	.LFB12:
1825:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     capsense_WriteBitsSafe(txPtr->pcPtr, (uint32)(capsense_GPIO_PC_MASK << txPtr->shift),
 1211              		.loc 1 1825 0
 1212              		.cfi_startproc
 1213              		@ args = 0, pretend = 0, frame = 0
 1214              		@ frame_needed = 0, uses_anonymous_args = 0
 1215              	.LVL128:
 1216 0000 10B5     		push	{r4, lr}
 1217              		.cfi_def_cfa_offset 8
 1218              		.cfi_offset 4, -8
 1219              		.cfi_offset 14, -4
 1220 0002 0400     		movs	r4, r0
1826:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             (uint32)(capsense_GPIO_STRGDRV << txPtr->shift));
 1221              		.loc 1 1826 0
 1222 0004 837E     		ldrb	r3, [r0, #26]
 1223 0006 0622     		movs	r2, #6
 1224 0008 9A40     		lsls	r2, r2, r3
 1225 000a 0721     		movs	r1, #7
 1226 000c 9940     		lsls	r1, r1, r3
 1227 000e 4068     		ldr	r0, [r0, #4]
 1228              	.LVL129:
 1229 0010 FFF7FEFF 		bl	capsense_WriteBitsSafe
 1230              	.LVL130:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 65


1828:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             (uint32)(capsense_HSIOM_SEL_CSD_SENSE << txPtr->hsiomShift));
 1231              		.loc 1 1828 0
 1232 0014 237E     		ldrb	r3, [r4, #24]
 1233 0016 0422     		movs	r2, #4
 1234 0018 9A40     		lsls	r2, r2, r3
 1235 001a 0F21     		movs	r1, #15
 1236 001c 9940     		lsls	r1, r1, r3
 1237 001e 2068     		ldr	r0, [r4]
 1238 0020 FFF7FEFF 		bl	capsense_WriteBitsSafe
 1239              	.LVL131:
1830:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 1240              		.loc 1 1830 0
 1241              		@ sp needed
 1242              	.LVL132:
 1243 0024 10BD     		pop	{r4, pc}
 1244              		.cfi_endproc
 1245              	.LFE12:
 1246              		.size	capsense_CSXConnectTx, .-capsense_CSXConnectTx
 1247 0026 C046     		.section	.text.capsense_CSXConnectRx,"ax",%progbits
 1248              		.align	2
 1249              		.global	capsense_CSXConnectRx
 1250              		.code	16
 1251              		.thumb_func
 1252              		.type	capsense_CSXConnectRx, %function
 1253              	capsense_CSXConnectRx:
 1254              	.LFB13:
1854:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     capsense_WriteBitsSafe(rxPtr->pcPtr, (uint32)(capsense_GPIO_PC_MASK << rxPtr->shift), 0u);
 1255              		.loc 1 1854 0
 1256              		.cfi_startproc
 1257              		@ args = 0, pretend = 0, frame = 0
 1258              		@ frame_needed = 0, uses_anonymous_args = 0
 1259              	.LVL133:
 1260 0000 10B5     		push	{r4, lr}
 1261              		.cfi_def_cfa_offset 8
 1262              		.cfi_offset 4, -8
 1263              		.cfi_offset 14, -4
 1264 0002 0400     		movs	r4, r0
1855:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     capsense_WriteBitsSafe(rxPtr->hsiomPtr, (capsense_HSIOM_SEL_MASK << rxPtr->hsiomShift), (uint32
 1265              		.loc 1 1855 0
 1266 0004 837E     		ldrb	r3, [r0, #26]
 1267 0006 0721     		movs	r1, #7
 1268 0008 9940     		lsls	r1, r1, r3
 1269 000a 0022     		movs	r2, #0
 1270 000c 4068     		ldr	r0, [r0, #4]
 1271              	.LVL134:
 1272 000e FFF7FEFF 		bl	capsense_WriteBitsSafe
 1273              	.LVL135:
1856:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** }
 1274              		.loc 1 1856 0
 1275 0012 237E     		ldrb	r3, [r4, #24]
 1276 0014 0622     		movs	r2, #6
 1277 0016 9A40     		lsls	r2, r2, r3
 1278 0018 0F21     		movs	r1, #15
 1279 001a 9940     		lsls	r1, r1, r3
 1280 001c 2068     		ldr	r0, [r4]
 1281 001e FFF7FEFF 		bl	capsense_WriteBitsSafe
 1282              	.LVL136:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 66


1857:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 1283              		.loc 1 1857 0
 1284              		@ sp needed
 1285              	.LVL137:
 1286 0022 10BD     		pop	{r4, pc}
 1287              		.cfi_endproc
 1288              	.LFE13:
 1289              		.size	capsense_CSXConnectRx, .-capsense_CSXConnectRx
 1290              		.section	.text.capsense_CSXScan,"ax",%progbits
 1291              		.align	2
 1292              		.global	capsense_CSXScan
 1293              		.code	16
 1294              		.thumb_func
 1295              		.type	capsense_CSXScan, %function
 1296              	capsense_CSXScan:
 1297              	.LFB5:
 664:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #if (capsense_ENABLE == capsense_CSX_GANGED_SNS_EN)
 1298              		.loc 1 664 0
 1299              		.cfi_startproc
 1300              		@ args = 0, pretend = 0, frame = 0
 1301              		@ frame_needed = 0, uses_anonymous_args = 0
 1302 0000 10B5     		push	{r4, lr}
 1303              		.cfi_def_cfa_offset 8
 1304              		.cfi_offset 4, -8
 1305              		.cfi_offset 14, -4
 674:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     {
 1306              		.loc 1 674 0
 1307 0002 1A4B     		ldr	r3, .L66
 1308 0004 BA22     		movs	r2, #186
 1309 0006 9A5C     		ldrb	r2, [r3, r2]
 1310 0008 B921     		movs	r1, #185
 1311 000a 585C     		ldrb	r0, [r3, r1]
 1312 000c 8242     		cmp	r2, r0
 1313 000e 06D0     		beq	.L65
 676:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         capsense_dsRam.scanCurrentISC = capsense_dsRam.scanCsxISC;
 1314              		.loc 1 676 0
 1315 0010 FFF7FEFF 		bl	capsense_SsSetAllIOsState
 1316              	.LVL138:
 677:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     }
 1317              		.loc 1 677 0
 1318 0014 154B     		ldr	r3, .L66
 1319 0016 B922     		movs	r2, #185
 1320 0018 995C     		ldrb	r1, [r3, r2]
 1321 001a 0132     		adds	r2, r2, #1
 1322 001c 9954     		strb	r1, [r3, r2]
 1323              	.L65:
 680:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 1324              		.loc 1 680 0
 1325 001e 0022     		movs	r2, #0
 1326 0020 134B     		ldr	r3, .L66+4
 1327 0022 1A70     		strb	r2, [r3]
 683:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 1328              		.loc 1 683 0
 1329 0024 134B     		ldr	r3, .L66+8
 1330 0026 1B68     		ldr	r3, [r3]
 1331 0028 134A     		ldr	r2, .L66+12
 1332 002a 9968     		ldr	r1, [r3, #8]
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 67


 1333 002c 1160     		str	r1, [r2]
 772:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         capsense_curWdgtTotalRx  = capsense_curFlashWdgtPtr->numCols;
 1334              		.loc 1 772 0
 1335 002e 5A7F     		ldrb	r2, [r3, #29]
 1336 0030 124C     		ldr	r4, .L66+16
 1337 0032 A280     		strh	r2, [r4, #4]
 773:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 1338              		.loc 1 773 0
 1339 0034 1A7F     		ldrb	r2, [r3, #28]
 1340 0036 E280     		strh	r2, [r4, #6]
 823:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 capsense_curTxIOPtr = capsense_curRxIOPtr;
 1341              		.loc 1 823 0
 1342 0038 1968     		ldr	r1, [r3]
 1343 003a A160     		str	r1, [r4, #8]
 825:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 1344              		.loc 1 825 0
 1345 003c D300     		lsls	r3, r2, #3
 1346 003e 981A     		subs	r0, r3, r2
 1347 0040 8000     		lsls	r0, r0, #2
 1348 0042 0818     		adds	r0, r1, r0
 1349 0044 E060     		str	r0, [r4, #12]
 828:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 capsense_CSXConnectRx(capsense_curRxIOPtr);
 1350              		.loc 1 828 0
 1351 0046 FFF7FEFF 		bl	capsense_CSXConnectTx
 1352              	.LVL139:
 829:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 1353              		.loc 1 829 0
 1354 004a A068     		ldr	r0, [r4, #8]
 1355 004c FFF7FEFF 		bl	capsense_CSXConnectRx
 1356              	.LVL140:
 832:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             }
 1357              		.loc 1 832 0
 1358 0050 0B4A     		ldr	r2, .L66+20
 1359 0052 0C4B     		ldr	r3, .L66+24
 1360 0054 1A60     		str	r2, [r3]
 841:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 1361              		.loc 1 841 0
 1362 0056 054A     		ldr	r2, .L66
 1363 0058 D168     		ldr	r1, [r2, #12]
 1364 005a 8023     		movs	r3, #128
 1365 005c 0B43     		orrs	r3, r1
 1366 005e D360     		str	r3, [r2, #12]
 846:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         #endif
 1367              		.loc 1 846 0
 1368 0060 0A20     		movs	r0, #10
 1369 0062 FFF7FEFF 		bl	CyDelayUs
 1370              	.LVL141:
 849:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 1371              		.loc 1 849 0
 1372 0066 FFF7FEFF 		bl	capsense_SsCSXStartSample
 1373              	.LVL142:
 852:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 1374              		.loc 1 852 0
 1375              		@ sp needed
 1376 006a 10BD     		pop	{r4, pc}
 1377              	.L67:
 1378              		.align	2
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 68


 1379              	.L66:
 1380 006c 00000000 		.word	capsense_dsRam
 1381 0070 00000000 		.word	capsense_sensorIndex
 1382 0074 00000000 		.word	capsense_curFlashWdgtPtr
 1383 0078 00000000 		.word	capsense_curRamSnsPtr
 1384 007c 00000000 		.word	.LANCHOR0
 1385 0080 00000000 		.word	capsense_SsCSXPostMultiScan
 1386 0084 00000000 		.word	.LANCHOR1
 1387              		.cfi_endproc
 1388              	.LFE5:
 1389              		.size	capsense_CSXScan, .-capsense_CSXScan
 1390              		.section	.text.capsense_CSXDisconnectTx,"ax",%progbits
 1391              		.align	2
 1392              		.global	capsense_CSXDisconnectTx
 1393              		.code	16
 1394              		.thumb_func
 1395              		.type	capsense_CSXDisconnectTx, %function
 1396              	capsense_CSXDisconnectTx:
 1397              	.LFB14:
1882:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     uint32 regValue;
 1398              		.loc 1 1882 0
 1399              		.cfi_startproc
 1400              		@ args = 0, pretend = 0, frame = 0
 1401              		@ frame_needed = 0, uses_anonymous_args = 0
 1402              	.LVL143:
 1403 0000 70B5     		push	{r4, r5, r6, lr}
 1404              		.cfi_def_cfa_offset 16
 1405              		.cfi_offset 4, -16
 1406              		.cfi_offset 5, -12
 1407              		.cfi_offset 6, -8
 1408              		.cfi_offset 14, -4
 1409 0002 0400     		movs	r4, r0
1886:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (txPtr->hsiomPtr);
 1410              		.loc 1 1886 0
 1411 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1412              	.LVL144:
1887:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     regValue &= ~(txPtr->hsiomMask);
 1413              		.loc 1 1887 0
 1414 0008 2268     		ldr	r2, [r4]
 1415 000a 1368     		ldr	r3, [r2]
 1416              	.LVL145:
1888:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     CY_SET_REG32 (txPtr->hsiomPtr, regValue);
 1417              		.loc 1 1888 0
 1418 000c 2169     		ldr	r1, [r4, #16]
 1419 000e 8B43     		bics	r3, r1
 1420              	.LVL146:
1889:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     CyExitCriticalSection(interruptState);
 1421              		.loc 1 1889 0
 1422 0010 1360     		str	r3, [r2]
1890:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 1423              		.loc 1 1890 0
 1424 0012 FFF7FEFF 		bl	CyExitCriticalSection
 1425              	.LVL147:
1892:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     /* Update port configuration register (drive mode) for sensor */
 1426              		.loc 1 1892 0
 1427 0016 FFF7FEFF 		bl	CyEnterCriticalSection
 1428              	.LVL148:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 69


1894:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     regValue &= ~(capsense_GPIO_PC_MASK << txPtr->shift);
 1429              		.loc 1 1894 0
 1430 001a 6168     		ldr	r1, [r4, #4]
 1431 001c 0B68     		ldr	r3, [r1]
 1432              	.LVL149:
1895:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 1433              		.loc 1 1895 0
 1434 001e A47E     		ldrb	r4, [r4, #26]
 1435              	.LVL150:
 1436 0020 0722     		movs	r2, #7
 1437 0022 A240     		lsls	r2, r2, r4
 1438 0024 9343     		bics	r3, r2
 1439              	.LVL151:
1897:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     {
 1440              		.loc 1 1897 0
 1441 0026 BA22     		movs	r2, #186
 1442 0028 054D     		ldr	r5, .L70
 1443 002a AA5C     		ldrb	r2, [r5, r2]
 1444 002c 002A     		cmp	r2, #0
 1445 002e 02D1     		bne	.L69
1899:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     }
 1446              		.loc 1 1899 0
 1447 0030 0632     		adds	r2, r2, #6
 1448 0032 A240     		lsls	r2, r2, r4
 1449 0034 1343     		orrs	r3, r2
 1450              	.LVL152:
 1451              	.L69:
1906:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     CyExitCriticalSection(interruptState);
 1452              		.loc 1 1906 0
 1453 0036 0B60     		str	r3, [r1]
1907:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** }
 1454              		.loc 1 1907 0
 1455 0038 FFF7FEFF 		bl	CyExitCriticalSection
 1456              	.LVL153:
1908:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 1457              		.loc 1 1908 0
 1458              		@ sp needed
 1459 003c 70BD     		pop	{r4, r5, r6, pc}
 1460              	.L71:
 1461 003e C046     		.align	2
 1462              	.L70:
 1463 0040 00000000 		.word	capsense_dsRam
 1464              		.cfi_endproc
 1465              	.LFE14:
 1466              		.size	capsense_CSXDisconnectTx, .-capsense_CSXDisconnectTx
 1467              		.section	.text.capsense_CSXDisconnectRx,"ax",%progbits
 1468              		.align	2
 1469              		.global	capsense_CSXDisconnectRx
 1470              		.code	16
 1471              		.thumb_func
 1472              		.type	capsense_CSXDisconnectRx, %function
 1473              	capsense_CSXDisconnectRx:
 1474              	.LFB15:
1933:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     uint32 regValue;
 1475              		.loc 1 1933 0
 1476              		.cfi_startproc
 1477              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 70


 1478              		@ frame_needed = 0, uses_anonymous_args = 0
 1479              	.LVL154:
 1480 0000 70B5     		push	{r4, r5, r6, lr}
 1481              		.cfi_def_cfa_offset 16
 1482              		.cfi_offset 4, -16
 1483              		.cfi_offset 5, -12
 1484              		.cfi_offset 6, -8
 1485              		.cfi_offset 14, -4
 1486 0002 0400     		movs	r4, r0
1937:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (rxPtr->hsiomPtr);
 1487              		.loc 1 1937 0
 1488 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1489              	.LVL155:
1938:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     regValue &= ~(rxPtr->hsiomMask);
 1490              		.loc 1 1938 0
 1491 0008 2268     		ldr	r2, [r4]
 1492 000a 1368     		ldr	r3, [r2]
 1493              	.LVL156:
1939:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->hsiomPtr, regValue);
 1494              		.loc 1 1939 0
 1495 000c 2169     		ldr	r1, [r4, #16]
 1496 000e 8B43     		bics	r3, r1
 1497              	.LVL157:
1940:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     CyExitCriticalSection(interruptState);
 1498              		.loc 1 1940 0
 1499 0010 1360     		str	r3, [r2]
1941:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 1500              		.loc 1 1941 0
 1501 0012 FFF7FEFF 		bl	CyExitCriticalSection
 1502              	.LVL158:
1943:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     /* Update port configuration register (drive mode) for sensor */
 1503              		.loc 1 1943 0
 1504 0016 FFF7FEFF 		bl	CyEnterCriticalSection
 1505              	.LVL159:
1945:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     regValue &= ~(capsense_GPIO_PC_MASK << rxPtr->shift);
 1506              		.loc 1 1945 0
 1507 001a 6168     		ldr	r1, [r4, #4]
 1508 001c 0B68     		ldr	r3, [r1]
 1509              	.LVL160:
1946:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 1510              		.loc 1 1946 0
 1511 001e A57E     		ldrb	r5, [r4, #26]
 1512 0020 0722     		movs	r2, #7
 1513 0022 AA40     		lsls	r2, r2, r5
 1514 0024 9343     		bics	r3, r2
 1515              	.LVL161:
1948:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     {
 1516              		.loc 1 1948 0
 1517 0026 BA22     		movs	r2, #186
 1518 0028 074E     		ldr	r6, .L74
 1519 002a B25C     		ldrb	r2, [r6, r2]
 1520 002c 002A     		cmp	r2, #0
 1521 002e 02D1     		bne	.L73
1950:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     }
 1522              		.loc 1 1950 0
 1523 0030 0632     		adds	r2, r2, #6
 1524 0032 AA40     		lsls	r2, r2, r5
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 71


 1525 0034 1343     		orrs	r3, r2
 1526              	.LVL162:
 1527              	.L73:
1957:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     regValue = CY_GET_REG32(rxPtr->drPtr);
 1528              		.loc 1 1957 0
 1529 0036 0B60     		str	r3, [r1]
1958:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     regValue &=  ~(rxPtr->mask);
 1530              		.loc 1 1958 0
 1531 0038 A268     		ldr	r2, [r4, #8]
 1532 003a 1368     		ldr	r3, [r2]
 1533              	.LVL163:
1959:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->drPtr, regValue);
 1534              		.loc 1 1959 0
 1535 003c 6169     		ldr	r1, [r4, #20]
 1536 003e 8B43     		bics	r3, r1
 1537              	.LVL164:
1960:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     CyExitCriticalSection(interruptState);
 1538              		.loc 1 1960 0
 1539 0040 1360     		str	r3, [r2]
1961:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** }
 1540              		.loc 1 1961 0
 1541 0042 FFF7FEFF 		bl	CyExitCriticalSection
 1542              	.LVL165:
1962:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 1543              		.loc 1 1962 0
 1544              		@ sp needed
 1545              	.LVL166:
 1546 0046 70BD     		pop	{r4, r5, r6, pc}
 1547              	.L75:
 1548              		.align	2
 1549              	.L74:
 1550 0048 00000000 		.word	capsense_dsRam
 1551              		.cfi_endproc
 1552              	.LFE15:
 1553              		.size	capsense_CSXDisconnectRx, .-capsense_CSXDisconnectRx
 1554              		.section	.text.capsense_SsCSXPostMultiScan,"ax",%progbits
 1555              		.align	2
 1556              		.code	16
 1557              		.thumb_func
 1558              		.type	capsense_SsCSXPostMultiScan, %function
 1559              	capsense_SsCSXPostMultiScan:
 1560              	.LFB7:
 950:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #ifdef capsense_ENTRY_CALLBACK
 1561              		.loc 1 950 0
 1562              		.cfi_startproc
 1563              		@ args = 0, pretend = 0, frame = 0
 1564              		@ frame_needed = 0, uses_anonymous_args = 0
 1565 0000 10B5     		push	{r4, lr}
 1566              		.cfi_def_cfa_offset 8
 1567              		.cfi_offset 4, -8
 1568              		.cfi_offset 14, -4
 956:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                              (capsense_csxScanPeriod - capsense_csxRawCount);
 1569              		.loc 1 956 0
 1570 0002 2F4B     		ldr	r3, .L81
 1571 0004 1968     		ldr	r1, [r3]
 1572 0006 2F4B     		ldr	r3, .L81+4
 1573 0008 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 72


 1574 000a 2F4C     		ldr	r4, .L81+8
 1575 000c 2288     		ldrh	r2, [r4]
 1576 000e 6088     		ldrh	r0, [r4, #2]
 1577 0010 5B00     		lsls	r3, r3, #1
 1578 0012 121A     		subs	r2, r2, r0
 1579 0014 5A52     		strh	r2, [r3, r1]
1048:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 1580              		.loc 1 1048 0
 1581 0016 E068     		ldr	r0, [r4, #12]
 1582 0018 FFF7FEFF 		bl	capsense_CSXDisconnectTx
 1583              	.LVL167:
1051:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 1584              		.loc 1 1051 0
 1585 001c 2B4A     		ldr	r2, .L81+12
 1586 001e 1378     		ldrb	r3, [r2]
 1587 0020 0133     		adds	r3, r3, #1
 1588 0022 DBB2     		uxtb	r3, r3
 1589 0024 1370     		strb	r3, [r2]
1057:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 if (capsense_curWdgtTotalTx > 0u)
 1590              		.loc 1 1057 0
 1591 0026 A388     		ldrh	r3, [r4, #4]
 1592 0028 013B     		subs	r3, r3, #1
 1593 002a 9BB2     		uxth	r3, r3
 1594 002c A380     		strh	r3, [r4, #4]
1058:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 {
 1595              		.loc 1 1058 0
 1596 002e 002B     		cmp	r3, #0
 1597 0030 0CD0     		beq	.L77
1065:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     capsense_CSXConnectTx (capsense_curTxIOPtr);
 1598              		.loc 1 1065 0
 1599 0032 254B     		ldr	r3, .L81+8
 1600 0034 D868     		ldr	r0, [r3, #12]
 1601 0036 1C30     		adds	r0, r0, #28
 1602 0038 D860     		str	r0, [r3, #12]
1066:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     capsense_curRamSnsPtr++;
 1603              		.loc 1 1066 0
 1604 003a FFF7FEFF 		bl	capsense_CSXConnectTx
 1605              	.LVL168:
1067:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 1606              		.loc 1 1067 0
 1607 003e 204A     		ldr	r2, .L81
 1608 0040 1368     		ldr	r3, [r2]
 1609 0042 0A33     		adds	r3, r3, #10
 1610 0044 1360     		str	r3, [r2]
1070:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                 }
 1611              		.loc 1 1070 0
 1612 0046 FFF7FEFF 		bl	capsense_SsCSXStartSample
 1613              	.LVL169:
 1614 004a 37E0     		b	.L76
 1615              	.L77:
1076:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     if (capsense_curWdgtTotalRx > 0u)
 1616              		.loc 1 1076 0
 1617 004c 1E4A     		ldr	r2, .L81+8
 1618 004e D388     		ldrh	r3, [r2, #6]
 1619 0050 013B     		subs	r3, r3, #1
 1620 0052 9BB2     		uxth	r3, r3
 1621 0054 D380     		strh	r3, [r2, #6]
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 73


1077:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     {
 1622              		.loc 1 1077 0
 1623 0056 002B     		cmp	r3, #0
 1624 0058 1DD0     		beq	.L79
1086:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         capsense_curRxIOPtr++;
 1625              		.loc 1 1086 0
 1626 005a 1400     		movs	r4, r2
 1627 005c 9068     		ldr	r0, [r2, #8]
 1628 005e FFF7FEFF 		bl	capsense_CSXDisconnectRx
 1629              	.LVL170:
1087:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         capsense_CSXConnectRx(capsense_curRxIOPtr);
 1630              		.loc 1 1087 0
 1631 0062 A068     		ldr	r0, [r4, #8]
 1632 0064 1C30     		adds	r0, r0, #28
 1633 0066 A060     		str	r0, [r4, #8]
1088:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         capsense_curWdgtTotalTx  = capsense_curFlashWdgtPtr->numRows;
 1634              		.loc 1 1088 0
 1635 0068 FFF7FEFF 		bl	capsense_CSXConnectRx
 1636              	.LVL171:
1089:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         capsense_curTxIOPtr = (capsense_FLASH_IO_STRUCT const *)capsense_curFlashWd
 1637              		.loc 1 1089 0
 1638 006c 184B     		ldr	r3, .L81+16
 1639 006e 1B68     		ldr	r3, [r3]
 1640 0070 5A7F     		ldrb	r2, [r3, #29]
 1641 0072 A280     		strh	r2, [r4, #4]
1090:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         capsense_curTxIOPtr = & capsense_curTxIOPtr[(capsense_curFlashWdgtPtr->numC
 1642              		.loc 1 1090 0
 1643 0074 1868     		ldr	r0, [r3]
 1644 0076 E060     		str	r0, [r4, #12]
1091:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         capsense_CSXConnectTx(capsense_curTxIOPtr);
 1645              		.loc 1 1091 0
 1646 0078 1A7F     		ldrb	r2, [r3, #28]
 1647 007a D300     		lsls	r3, r2, #3
 1648 007c 9A1A     		subs	r2, r3, r2
 1649 007e 9300     		lsls	r3, r2, #2
 1650 0080 C018     		adds	r0, r0, r3
 1651 0082 E060     		str	r0, [r4, #12]
1092:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 1652              		.loc 1 1092 0
 1653 0084 FFF7FEFF 		bl	capsense_CSXConnectTx
 1654              	.LVL172:
1095:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 1655              		.loc 1 1095 0
 1656 0088 0D4A     		ldr	r2, .L81
 1657 008a 1368     		ldr	r3, [r2]
 1658 008c 0A33     		adds	r3, r3, #10
 1659 008e 1360     		str	r3, [r2]
1098:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                     }
 1660              		.loc 1 1098 0
 1661 0090 FFF7FEFF 		bl	capsense_SsCSXStartSample
 1662              	.LVL173:
 1663 0094 12E0     		b	.L76
 1664              	.L79:
1103:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 1665              		.loc 1 1103 0
 1666 0096 0C4B     		ldr	r3, .L81+8
 1667 0098 9868     		ldr	r0, [r3, #8]
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 74


 1668 009a FFF7FEFF 		bl	capsense_CSXDisconnectRx
 1669              	.LVL174:
1106:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         {
 1670              		.loc 1 1106 0
 1671 009e 0D4B     		ldr	r3, .L81+20
 1672 00a0 1B78     		ldrb	r3, [r3]
 1673 00a2 002B     		cmp	r3, #0
 1674 00a4 02D0     		beq	.L80
1108:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         }
 1675              		.loc 1 1108 0
 1676 00a6 FFF7FEFF 		bl	capsense_SsPostAllWidgetsScan
 1677              	.LVL175:
 1678 00aa 07E0     		b	.L76
 1679              	.L80:
1117:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                             capsense_dsRam.status &= ~capsense_SW_STS_BUSY;
 1680              		.loc 1 1117 0
 1681 00ac 0A4B     		ldr	r3, .L81+24
 1682 00ae 1A89     		ldrh	r2, [r3, #8]
 1683 00b0 0132     		adds	r2, r2, #1
 1684 00b2 1A81     		strh	r2, [r3, #8]
1118:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****                         }
 1685              		.loc 1 1118 0
 1686 00b4 DA68     		ldr	r2, [r3, #12]
 1687 00b6 8021     		movs	r1, #128
 1688 00b8 8A43     		bics	r2, r1
 1689 00ba DA60     		str	r2, [r3, #12]
 1690              	.L76:
1128:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 1691              		.loc 1 1128 0
 1692              		@ sp needed
 1693 00bc 10BD     		pop	{r4, pc}
 1694              	.L82:
 1695 00be C046     		.align	2
 1696              	.L81:
 1697 00c0 00000000 		.word	capsense_curRamSnsPtr
 1698 00c4 00000000 		.word	capsense_scanFreqIndex
 1699 00c8 00000000 		.word	.LANCHOR0
 1700 00cc 00000000 		.word	capsense_sensorIndex
 1701 00d0 00000000 		.word	capsense_curFlashWdgtPtr
 1702 00d4 00000000 		.word	capsense_requestScanAllWidget
 1703 00d8 00000000 		.word	capsense_dsRam
 1704              		.cfi_endproc
 1705              	.LFE7:
 1706              		.size	capsense_SsCSXPostMultiScan, .-capsense_SsCSXPostMultiScan
 1707              		.section	.text.capsense_CSXElectrodeCheck,"ax",%progbits
 1708              		.align	2
 1709              		.global	capsense_CSXElectrodeCheck
 1710              		.code	16
 1711              		.thumb_func
 1712              		.type	capsense_CSXElectrodeCheck, %function
 1713              	capsense_CSXElectrodeCheck:
 1714              	.LFB2:
 314:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #if (capsense_ENABLE == capsense_CSX_GANGED_SNS_EN)
 1715              		.loc 1 314 0
 1716              		.cfi_startproc
 1717              		@ args = 0, pretend = 0, frame = 0
 1718              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 75


 1719 0000 10B5     		push	{r4, lr}
 1720              		.cfi_def_cfa_offset 8
 1721              		.cfi_offset 4, -8
 1722              		.cfi_offset 14, -4
 319:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     {
 1723              		.loc 1 319 0
 1724 0002 074B     		ldr	r3, .L85
 1725 0004 1B8A     		ldrh	r3, [r3, #16]
 1726 0006 002B     		cmp	r3, #0
 1727 0008 08D0     		beq	.L83
 358:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             capsense_CSXDisconnectRx(capsense_curRxIOPtr);
 1728              		.loc 1 358 0
 1729 000a 054C     		ldr	r4, .L85
 1730 000c E068     		ldr	r0, [r4, #12]
 1731 000e FFF7FEFF 		bl	capsense_CSXDisconnectTx
 1732              	.LVL176:
 359:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         #endif
 1733              		.loc 1 359 0
 1734 0012 A068     		ldr	r0, [r4, #8]
 1735 0014 FFF7FEFF 		bl	capsense_CSXDisconnectRx
 1736              	.LVL177:
 361:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     }
 1737              		.loc 1 361 0
 1738 0018 0023     		movs	r3, #0
 1739 001a 2382     		strh	r3, [r4, #16]
 1740              	.L83:
 363:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 1741              		.loc 1 363 0
 1742              		@ sp needed
 1743 001c 10BD     		pop	{r4, pc}
 1744              	.L86:
 1745 001e C046     		.align	2
 1746              	.L85:
 1747 0020 00000000 		.word	.LANCHOR0
 1748              		.cfi_endproc
 1749              	.LFE2:
 1750              		.size	capsense_CSXElectrodeCheck, .-capsense_CSXElectrodeCheck
 1751              		.section	.text.capsense_CSXSetupWidget,"ax",%progbits
 1752              		.align	2
 1753              		.global	capsense_CSXSetupWidget
 1754              		.code	16
 1755              		.thumb_func
 1756              		.type	capsense_CSXSetupWidget, %function
 1757              	capsense_CSXSetupWidget:
 1758              	.LFB3:
 412:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     /* variable to access widget details */
 1759              		.loc 1 412 0
 1760              		.cfi_startproc
 1761              		@ args = 0, pretend = 0, frame = 0
 1762              		@ frame_needed = 0, uses_anonymous_args = 0
 1763              	.LVL178:
 1764 0000 70B5     		push	{r4, r5, r6, lr}
 1765              		.cfi_def_cfa_offset 16
 1766              		.cfi_offset 4, -16
 1767              		.cfi_offset 5, -12
 1768              		.cfi_offset 6, -8
 1769              		.cfi_offset 14, -4
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 76


 1770 0002 0400     		movs	r4, r0
 422:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 1771              		.loc 1 422 0
 1772 0004 C2B2     		uxtb	r2, r0
 1773 0006 124B     		ldr	r3, .L88
 1774 0008 1A70     		strb	r2, [r3]
 424:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 1775              		.loc 1 424 0
 1776 000a 0220     		movs	r0, #2
 1777              	.LVL179:
 1778 000c FFF7FEFF 		bl	capsense_SsSwitchSensingMode
 1779              	.LVL180:
 430:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 1780              		.loc 1 430 0
 1781 0010 FFF7FEFF 		bl	capsense_CSXElectrodeCheck
 1782              	.LVL181:
 434:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 1783              		.loc 1 434 0
 1784 0014 A300     		lsls	r3, r4, #2
 1785 0016 1C19     		adds	r4, r3, r4
 1786              	.LVL182:
 1787 0018 E200     		lsls	r2, r4, #3
 1788 001a 0E4B     		ldr	r3, .L88+4
 1789 001c D318     		adds	r3, r2, r3
 1790 001e 0E4A     		ldr	r2, .L88+8
 1791 0020 1360     		str	r3, [r2]
 436:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 1792              		.loc 1 436 0
 1793 0022 5D68     		ldr	r5, [r3, #4]
 1794              	.LVL183:
 441:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         #endif /* (capsense_ENABLE == capsense_CSX_COMMON_TX_CLK_EN) */
 1795              		.loc 1 441 0
 1796 0024 AC89     		ldrh	r4, [r5, #12]
 1797              	.LVL184:
 444:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         capsense_csxScanPeriod  = capsense_SsCalcCsxScanPeriod(curRamWdgtBasePtr);
 1798              		.loc 1 444 0
 1799 0026 2A88     		ldrh	r2, [r5]
 1800 0028 0C4B     		ldr	r3, .L88+12
 1801 002a 1A60     		str	r2, [r3]
 445:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 1802              		.loc 1 445 0
 1803 002c 2800     		movs	r0, r5
 1804 002e FFF7FEFF 		bl	capsense_SsCalcCsxScanPeriod
 1805              	.LVL185:
 1806 0032 0B4B     		ldr	r3, .L88+16
 1807 0034 1880     		strh	r0, [r3]
 447:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 1808              		.loc 1 447 0
 1809 0036 AB7B     		ldrb	r3, [r5, #14]
 1810              	.LVL186:
 449:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         tmpRegVal = (tmpRegVal << capsense_SENSE_PERIOD_LFSR_SIZE_SHIFT) | snsClkVal;
 1811              		.loc 1 449 0
 1812 0038 013C     		subs	r4, r4, #1
 1813              	.LVL187:
 1814 003a 2405     		lsls	r4, r4, #20
 1815              	.LVL188:
 1816 003c 240D     		lsrs	r4, r4, #20
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 77


 1817              	.LVL189:
 450:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         CY_SET_REG32(capsense_SENSE_PERIOD_PTR, tmpRegVal);
 1818              		.loc 1 450 0
 1819 003e 1B04     		lsls	r3, r3, #16
 1820              	.LVL190:
 1821 0040 1C43     		orrs	r4, r3
 1822              	.LVL191:
 451:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         capsense_SsSetModClkClockDivider((uint32)capsense_dsRam.modCsxClk);
 1823              		.loc 1 451 0
 1824 0042 084B     		ldr	r3, .L88+20
 1825 0044 1C60     		str	r4, [r3]
 452:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #else
 1826              		.loc 1 452 0
 1827 0046 084B     		ldr	r3, .L88+24
 1828 0048 D87F     		ldrb	r0, [r3, #31]
 1829 004a FFF7FEFF 		bl	capsense_SsSetModClkClockDivider
 1830              	.LVL192:
 481:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 1831              		.loc 1 481 0
 1832              		@ sp needed
 1833              	.LVL193:
 1834              	.LVL194:
 1835 004e 70BD     		pop	{r4, r5, r6, pc}
 1836              	.L89:
 1837              		.align	2
 1838              	.L88:
 1839 0050 00000000 		.word	capsense_widgetIndex
 1840 0054 00000000 		.word	capsense_dsFlash
 1841 0058 00000000 		.word	capsense_curFlashWdgtPtr
 1842 005c 14030B40 		.word	1074463508
 1843 0060 00000000 		.word	.LANCHOR0
 1844 0064 00020B40 		.word	1074463232
 1845 0068 00000000 		.word	capsense_dsRam
 1846              		.cfi_endproc
 1847              	.LFE3:
 1848              		.size	capsense_CSXSetupWidget, .-capsense_CSXSetupWidget
 1849              		.global	__aeabi_uidivmod
 1850              		.section	.text.capsense_CSXSetupWidgetExt,"ax",%progbits
 1851              		.align	2
 1852              		.global	capsense_CSXSetupWidgetExt
 1853              		.code	16
 1854              		.thumb_func
 1855              		.type	capsense_CSXSetupWidgetExt, %function
 1856              	capsense_CSXSetupWidgetExt:
 1857              	.LFB4:
 529:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     uint32 txIndex;
 1858              		.loc 1 529 0
 1859              		.cfi_startproc
 1860              		@ args = 0, pretend = 0, frame = 0
 1861              		@ frame_needed = 0, uses_anonymous_args = 0
 1862              	.LVL195:
 1863 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1864              		.cfi_def_cfa_offset 24
 1865              		.cfi_offset 3, -24
 1866              		.cfi_offset 4, -20
 1867              		.cfi_offset 5, -16
 1868              		.cfi_offset 6, -12
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 78


 1869              		.cfi_offset 7, -8
 1870              		.cfi_offset 14, -4
 1871 0002 0C00     		movs	r4, r1
 538:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     capsense_sensorIndex = (uint8)sensorId;
 1872              		.loc 1 538 0
 1873 0004 FFF7FEFF 		bl	capsense_CSXSetupWidget
 1874              	.LVL196:
 539:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 1875              		.loc 1 539 0
 1876 0008 E2B2     		uxtb	r2, r4
 1877 000a 184B     		ldr	r3, .L91
 1878 000c 1A70     		strb	r2, [r3]
 542:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     capsense_curRamSnsPtr = &capsense_curRamSnsPtr[sensorId];
 1879              		.loc 1 542 0
 1880 000e 184B     		ldr	r3, .L91+4
 1881 0010 1D68     		ldr	r5, [r3]
 543:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 1882              		.loc 1 543 0
 1883 0012 A300     		lsls	r3, r4, #2
 1884 0014 1B19     		adds	r3, r3, r4
 1885 0016 5B00     		lsls	r3, r3, #1
 1886 0018 AA68     		ldr	r2, [r5, #8]
 1887 001a 9446     		mov	ip, r2
 1888 001c 6344     		add	r3, r3, ip
 1889 001e 154A     		ldr	r2, .L91+8
 1890 0020 1360     		str	r3, [r2]
 555:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     txIndex = sensorId % capsense_curFlashWdgtPtr->numRows;
 1891              		.loc 1 555 0
 1892 0022 6F7F     		ldrb	r7, [r5, #29]
 1893 0024 3900     		movs	r1, r7
 1894 0026 2000     		movs	r0, r4
 1895 0028 FFF7FEFF 		bl	__aeabi_uidiv
 1896              	.LVL197:
 1897 002c 0600     		movs	r6, r0
 1898              	.LVL198:
 556:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 1899              		.loc 1 556 0
 1900 002e 3900     		movs	r1, r7
 1901 0030 2000     		movs	r0, r4
 1902              	.LVL199:
 1903 0032 FFF7FEFF 		bl	__aeabi_uidivmod
 1904              	.LVL200:
 608:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             capsense_curRxIOPtr = &capsense_curRxIOPtr[rxIndex];
 1905              		.loc 1 608 0
 1906 0036 2A68     		ldr	r2, [r5]
 1907 0038 0F4C     		ldr	r4, .L91+12
 1908              	.LVL201:
 609:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 1909              		.loc 1 609 0
 1910 003a F300     		lsls	r3, r6, #3
 1911 003c 9B1B     		subs	r3, r3, r6
 1912 003e 9B00     		lsls	r3, r3, #2
 1913 0040 D318     		adds	r3, r2, r3
 1914 0042 A360     		str	r3, [r4, #8]
 611:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             capsense_curTxIOPtr = &capsense_curTxIOPtr[(capsense_curFlashWdgtPtr->numCols + txIndex
 1915              		.loc 1 611 0
 1916 0044 E260     		str	r2, [r4, #12]
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 79


 612:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 1917              		.loc 1 612 0
 1918 0046 287F     		ldrb	r0, [r5, #28]
 1919 0048 4118     		adds	r1, r0, r1
 1920              	.LVL202:
 1921 004a CB00     		lsls	r3, r1, #3
 1922 004c 581A     		subs	r0, r3, r1
 1923 004e 8000     		lsls	r0, r0, #2
 1924 0050 1018     		adds	r0, r2, r0
 1925 0052 E060     		str	r0, [r4, #12]
 615:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             capsense_CSXConnectRx(capsense_curRxIOPtr);
 1926              		.loc 1 615 0
 1927 0054 FFF7FEFF 		bl	capsense_CSXConnectTx
 1928              	.LVL203:
 616:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****             capsense_eleCsxDisconnectFlag = capsense_DISCONNECT_IO_FLAG;
 1929              		.loc 1 616 0
 1930 0058 A068     		ldr	r0, [r4, #8]
 1931 005a FFF7FEFF 		bl	capsense_CSXConnectRx
 1932              	.LVL204:
 617:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 1933              		.loc 1 617 0
 1934 005e 0123     		movs	r3, #1
 1935 0060 2382     		strh	r3, [r4, #16]
 620:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         }
 1936              		.loc 1 620 0
 1937 0062 064A     		ldr	r2, .L91+16
 1938 0064 064B     		ldr	r3, .L91+20
 1939 0066 1A60     		str	r2, [r3]
 625:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 1940              		.loc 1 625 0
 1941              		@ sp needed
 1942              	.LVL205:
 1943 0068 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1944              	.L92:
 1945 006a C046     		.align	2
 1946              	.L91:
 1947 006c 00000000 		.word	capsense_sensorIndex
 1948 0070 00000000 		.word	capsense_curFlashWdgtPtr
 1949 0074 00000000 		.word	capsense_curRamSnsPtr
 1950 0078 00000000 		.word	.LANCHOR0
 1951 007c 00000000 		.word	capsense_SsCSXPostSingleScan
 1952 0080 00000000 		.word	.LANCHOR1
 1953              		.cfi_endproc
 1954              	.LFE4:
 1955              		.size	capsense_CSXSetupWidgetExt, .-capsense_CSXSetupWidgetExt
 1956              		.section	.text.capsense_SsCSXGetTxClkDivider,"ax",%progbits
 1957              		.align	2
 1958              		.global	capsense_SsCSXGetTxClkDivider
 1959              		.code	16
 1960              		.thumb_func
 1961              		.type	capsense_SsCSXGetTxClkDivider, %function
 1962              	capsense_SsCSXGetTxClkDivider:
 1963              	.LFB16:
1986:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     uint32 retVal;
 1964              		.loc 1 1986 0
 1965              		.cfi_startproc
 1966              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 80


 1967              		@ frame_needed = 0, uses_anonymous_args = 0
 1968              		@ link register save eliminated.
 1969              	.LVL206:
1993:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****         capsense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
 1970              		.loc 1 1993 0
 1971 0000 8300     		lsls	r3, r0, #2
 1972 0002 1818     		adds	r0, r3, r0
 1973              	.LVL207:
 1974 0004 C300     		lsls	r3, r0, #3
 1975 0006 024A     		ldr	r2, .L94
 1976 0008 D318     		adds	r3, r2, r3
 1977 000a 5B68     		ldr	r3, [r3, #4]
 1978              	.LVL208:
1996:Generated_Source\PSoC4/capsense_SensingCSX_LL.c ****     #else
 1979              		.loc 1 1996 0
 1980 000c 9889     		ldrh	r0, [r3, #12]
 1981              	.LVL209:
2007:Generated_Source\PSoC4/capsense_SensingCSX_LL.c **** 
 1982              		.loc 1 2007 0
 1983              		@ sp needed
 1984 000e 7047     		bx	lr
 1985              	.L95:
 1986              		.align	2
 1987              	.L94:
 1988 0010 00000000 		.word	capsense_dsFlash
 1989              		.cfi_endproc
 1990              	.LFE16:
 1991              		.size	capsense_SsCSXGetTxClkDivider, .-capsense_SsCSXGetTxClkDivider
 1992              		.global	capsense_CSXPostScanApiPtr
 1993              		.global	capsense_csxRawCount
 1994              		.global	capsense_csxScanPeriod
 1995              		.data
 1996              		.align	2
 1997              		.set	.LANCHOR1,. + 0
 1998              		.type	capsense_CSXPostScanApiPtr, %object
 1999              		.size	capsense_CSXPostScanApiPtr, 4
 2000              	capsense_CSXPostScanApiPtr:
 2001 0000 00000000 		.word	capsense_SsCSXPostMultiScan
 2002              		.bss
 2003              		.align	2
 2004              		.set	.LANCHOR0,. + 0
 2005              		.type	capsense_csxScanPeriod, %object
 2006              		.size	capsense_csxScanPeriod, 2
 2007              	capsense_csxScanPeriod:
 2008 0000 0000     		.space	2
 2009              		.type	capsense_csxRawCount, %object
 2010              		.size	capsense_csxRawCount, 2
 2011              	capsense_csxRawCount:
 2012 0002 0000     		.space	2
 2013              		.type	capsense_curWdgtTotalTx, %object
 2014              		.size	capsense_curWdgtTotalTx, 2
 2015              	capsense_curWdgtTotalTx:
 2016 0004 0000     		.space	2
 2017              		.type	capsense_curWdgtTotalRx, %object
 2018              		.size	capsense_curWdgtTotalRx, 2
 2019              	capsense_curWdgtTotalRx:
 2020 0006 0000     		.space	2
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 81


 2021              		.type	capsense_curRxIOPtr, %object
 2022              		.size	capsense_curRxIOPtr, 4
 2023              	capsense_curRxIOPtr:
 2024 0008 00000000 		.space	4
 2025              		.type	capsense_curTxIOPtr, %object
 2026              		.size	capsense_curTxIOPtr, 4
 2027              	capsense_curTxIOPtr:
 2028 000c 00000000 		.space	4
 2029              		.type	capsense_eleCsxDisconnectFlag, %object
 2030              		.size	capsense_eleCsxDisconnectFlag, 2
 2031              	capsense_eleCsxDisconnectFlag:
 2032 0010 0000     		.space	2
 2033              		.text
 2034              	.Letext0:
 2035              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 2036              		.file 3 "Generated_Source\\PSoC4\\capsense_Configuration.h"
 2037              		.file 4 "Generated_Source\\PSoC4\\capsense_Structure.h"
 2038              		.file 5 "Generated_Source\\PSoC4\\capsense_Sensing.h"
 2039              		.file 6 "Generated_Source\\PSoC4\\CyLib.h"
 2040              		.section	.debug_info,"",%progbits
 2041              	.Ldebug_info0:
 2042 0000 CE100000 		.4byte	0x10ce
 2043 0004 0400     		.2byte	0x4
 2044 0006 00000000 		.4byte	.Ldebug_abbrev0
 2045 000a 04       		.byte	0x4
 2046 000b 01       		.uleb128 0x1
 2047 000c 5D020000 		.4byte	.LASF186
 2048 0010 0C       		.byte	0xc
 2049 0011 91000000 		.4byte	.LASF187
 2050 0015 860B0000 		.4byte	.LASF188
 2051 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2052 001d 00000000 		.4byte	0
 2053 0021 00000000 		.4byte	.Ldebug_line0
 2054 0025 02       		.uleb128 0x2
 2055 0026 01       		.byte	0x1
 2056 0027 06       		.byte	0x6
 2057 0028 180B0000 		.4byte	.LASF0
 2058 002c 02       		.uleb128 0x2
 2059 002d 01       		.byte	0x1
 2060 002e 08       		.byte	0x8
 2061 002f 0B0A0000 		.4byte	.LASF1
 2062 0033 02       		.uleb128 0x2
 2063 0034 02       		.byte	0x2
 2064 0035 05       		.byte	0x5
 2065 0036 94080000 		.4byte	.LASF2
 2066 003a 02       		.uleb128 0x2
 2067 003b 02       		.byte	0x2
 2068 003c 07       		.byte	0x7
 2069 003d 370B0000 		.4byte	.LASF3
 2070 0041 02       		.uleb128 0x2
 2071 0042 04       		.byte	0x4
 2072 0043 05       		.byte	0x5
 2073 0044 B5080000 		.4byte	.LASF4
 2074 0048 02       		.uleb128 0x2
 2075 0049 04       		.byte	0x4
 2076 004a 07       		.byte	0x7
 2077 004b 79090000 		.4byte	.LASF5
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 82


 2078 004f 02       		.uleb128 0x2
 2079 0050 08       		.byte	0x8
 2080 0051 05       		.byte	0x5
 2081 0052 9C050000 		.4byte	.LASF6
 2082 0056 02       		.uleb128 0x2
 2083 0057 08       		.byte	0x8
 2084 0058 07       		.byte	0x7
 2085 0059 64030000 		.4byte	.LASF7
 2086 005d 03       		.uleb128 0x3
 2087 005e 04       		.byte	0x4
 2088 005f 05       		.byte	0x5
 2089 0060 696E7400 		.ascii	"int\000"
 2090 0064 02       		.uleb128 0x2
 2091 0065 04       		.byte	0x4
 2092 0066 07       		.byte	0x7
 2093 0067 03010000 		.4byte	.LASF8
 2094 006b 04       		.uleb128 0x4
 2095 006c E00B0000 		.4byte	.LASF9
 2096 0070 02       		.byte	0x2
 2097 0071 FC01     		.2byte	0x1fc
 2098 0073 2C000000 		.4byte	0x2c
 2099 0077 04       		.uleb128 0x4
 2100 0078 38050000 		.4byte	.LASF10
 2101 007c 02       		.byte	0x2
 2102 007d FD01     		.2byte	0x1fd
 2103 007f 3A000000 		.4byte	0x3a
 2104 0083 04       		.uleb128 0x4
 2105 0084 C6060000 		.4byte	.LASF11
 2106 0088 02       		.byte	0x2
 2107 0089 FE01     		.2byte	0x1fe
 2108 008b 48000000 		.4byte	0x48
 2109 008f 02       		.uleb128 0x2
 2110 0090 04       		.byte	0x4
 2111 0091 04       		.byte	0x4
 2112 0092 51020000 		.4byte	.LASF12
 2113 0096 02       		.uleb128 0x2
 2114 0097 08       		.byte	0x8
 2115 0098 04       		.byte	0x4
 2116 0099 E60B0000 		.4byte	.LASF13
 2117 009d 02       		.uleb128 0x2
 2118 009e 01       		.byte	0x1
 2119 009f 08       		.byte	0x8
 2120 00a0 DF040000 		.4byte	.LASF14
 2121 00a4 04       		.uleb128 0x4
 2122 00a5 EE090000 		.4byte	.LASF15
 2123 00a9 02       		.byte	0x2
 2124 00aa 9E02     		.2byte	0x29e
 2125 00ac 48000000 		.4byte	0x48
 2126 00b0 05       		.uleb128 0x5
 2127 00b1 6B000000 		.4byte	0x6b
 2128 00b5 05       		.uleb128 0x5
 2129 00b6 77000000 		.4byte	0x77
 2130 00ba 04       		.uleb128 0x4
 2131 00bb 0E080000 		.4byte	.LASF16
 2132 00bf 02       		.byte	0x2
 2133 00c0 A802     		.2byte	0x2a8
 2134 00c2 C6000000 		.4byte	0xc6
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 83


 2135 00c6 05       		.uleb128 0x5
 2136 00c7 83000000 		.4byte	0x83
 2137 00cb 06       		.uleb128 0x6
 2138 00cc 04       		.byte	0x4
 2139 00cd D1000000 		.4byte	0xd1
 2140 00d1 07       		.uleb128 0x7
 2141 00d2 02       		.uleb128 0x2
 2142 00d3 08       		.byte	0x8
 2143 00d4 04       		.byte	0x4
 2144 00d5 F7070000 		.4byte	.LASF17
 2145 00d9 02       		.uleb128 0x2
 2146 00da 04       		.byte	0x4
 2147 00db 07       		.byte	0x7
 2148 00dc 68090000 		.4byte	.LASF18
 2149 00e0 08       		.uleb128 0x8
 2150 00e1 04       		.byte	0x4
 2151 00e2 04       		.uleb128 0x4
 2152 00e3 5A070000 		.4byte	.LASF19
 2153 00e7 03       		.byte	0x3
 2154 00e8 4301     		.2byte	0x143
 2155 00ea 77000000 		.4byte	0x77
 2156 00ee 04       		.uleb128 0x4
 2157 00ef B3040000 		.4byte	.LASF20
 2158 00f3 03       		.byte	0x3
 2159 00f4 4701     		.2byte	0x147
 2160 00f6 6B000000 		.4byte	0x6b
 2161 00fa 09       		.uleb128 0x9
 2162 00fb 01       		.byte	0x1
 2163 00fc 2C000000 		.4byte	0x2c
 2164 0100 04       		.byte	0x4
 2165 0101 70       		.byte	0x70
 2166 0102 25010000 		.4byte	0x125
 2167 0106 0A       		.uleb128 0xa
 2168 0107 9E040000 		.4byte	.LASF21
 2169 010b 00       		.byte	0
 2170 010c 0A       		.uleb128 0xa
 2171 010d 35020000 		.4byte	.LASF22
 2172 0111 01       		.byte	0x1
 2173 0112 0A       		.uleb128 0xa
 2174 0113 C3010000 		.4byte	.LASF23
 2175 0117 02       		.byte	0x2
 2176 0118 0A       		.uleb128 0xa
 2177 0119 E40A0000 		.4byte	.LASF24
 2178 011d 03       		.byte	0x3
 2179 011e 0A       		.uleb128 0xa
 2180 011f 75000000 		.4byte	.LASF25
 2181 0123 04       		.byte	0x4
 2182 0124 00       		.byte	0
 2183 0125 0B       		.uleb128 0xb
 2184 0126 10       		.byte	0x10
 2185 0127 04       		.byte	0x4
 2186 0128 AD       		.byte	0xad
 2187 0129 B2010000 		.4byte	0x1b2
 2188 012d 0C       		.uleb128 0xc
 2189 012e 64050000 		.4byte	.LASF26
 2190 0132 04       		.byte	0x4
 2191 0133 B2       		.byte	0xb2
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 84


 2192 0134 77000000 		.4byte	0x77
 2193 0138 00       		.byte	0
 2194 0139 0C       		.uleb128 0xc
 2195 013a DD090000 		.4byte	.LASF27
 2196 013e 04       		.byte	0x4
 2197 013f B7       		.byte	0xb7
 2198 0140 E2000000 		.4byte	0xe2
 2199 0144 02       		.byte	0x2
 2200 0145 0C       		.uleb128 0xc
 2201 0146 D7040000 		.4byte	.LASF28
 2202 014a 04       		.byte	0x4
 2203 014b BC       		.byte	0xbc
 2204 014c 6B000000 		.4byte	0x6b
 2205 0150 04       		.byte	0x4
 2206 0151 0C       		.uleb128 0xc
 2207 0152 69060000 		.4byte	.LASF29
 2208 0156 04       		.byte	0x4
 2209 0157 C1       		.byte	0xc1
 2210 0158 6B000000 		.4byte	0x6b
 2211 015c 05       		.byte	0x5
 2212 015d 0C       		.uleb128 0xc
 2213 015e 31040000 		.4byte	.LASF30
 2214 0162 04       		.byte	0x4
 2215 0163 C7       		.byte	0xc7
 2216 0164 6B000000 		.4byte	0x6b
 2217 0168 06       		.byte	0x6
 2218 0169 0C       		.uleb128 0xc
 2219 016a E6050000 		.4byte	.LASF31
 2220 016e 04       		.byte	0x4
 2221 016f CD       		.byte	0xcd
 2222 0170 6B000000 		.4byte	0x6b
 2223 0174 07       		.byte	0x7
 2224 0175 0C       		.uleb128 0xc
 2225 0176 50040000 		.4byte	.LASF32
 2226 017a 04       		.byte	0x4
 2227 017b D4       		.byte	0xd4
 2228 017c EE000000 		.4byte	0xee
 2229 0180 08       		.byte	0x8
 2230 0181 0C       		.uleb128 0xc
 2231 0182 AB090000 		.4byte	.LASF33
 2232 0186 04       		.byte	0x4
 2233 0187 DB       		.byte	0xdb
 2234 0188 B2010000 		.4byte	0x1b2
 2235 018c 09       		.byte	0x9
 2236 018d 0C       		.uleb128 0xc
 2237 018e 5B040000 		.4byte	.LASF34
 2238 0192 04       		.byte	0x4
 2239 0193 E0       		.byte	0xe0
 2240 0194 6B000000 		.4byte	0x6b
 2241 0198 0A       		.byte	0xa
 2242 0199 0C       		.uleb128 0xc
 2243 019a DD0A0000 		.4byte	.LASF35
 2244 019e 04       		.byte	0x4
 2245 019f E8       		.byte	0xe8
 2246 01a0 77000000 		.4byte	0x77
 2247 01a4 0C       		.byte	0xc
 2248 01a5 0C       		.uleb128 0xc
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 85


 2249 01a6 62080000 		.4byte	.LASF36
 2250 01aa 04       		.byte	0x4
 2251 01ab ED       		.byte	0xed
 2252 01ac 6B000000 		.4byte	0x6b
 2253 01b0 0E       		.byte	0xe
 2254 01b1 00       		.byte	0
 2255 01b2 0D       		.uleb128 0xd
 2256 01b3 6B000000 		.4byte	0x6b
 2257 01b7 C2010000 		.4byte	0x1c2
 2258 01bb 0E       		.uleb128 0xe
 2259 01bc D9000000 		.4byte	0xd9
 2260 01c0 00       		.byte	0
 2261 01c1 00       		.byte	0
 2262 01c2 0F       		.uleb128 0xf
 2263 01c3 3C0C0000 		.4byte	.LASF37
 2264 01c7 04       		.byte	0x4
 2265 01c8 EE       		.byte	0xee
 2266 01c9 25010000 		.4byte	0x125
 2267 01cd 0B       		.uleb128 0xb
 2268 01ce 10       		.byte	0x10
 2269 01cf 04       		.byte	0x4
 2270 01d0 F3       		.byte	0xf3
 2271 01d1 63020000 		.4byte	0x263
 2272 01d5 0C       		.uleb128 0xc
 2273 01d6 64050000 		.4byte	.LASF26
 2274 01da 04       		.byte	0x4
 2275 01db F8       		.byte	0xf8
 2276 01dc 77000000 		.4byte	0x77
 2277 01e0 00       		.byte	0
 2278 01e1 0C       		.uleb128 0xc
 2279 01e2 DD090000 		.4byte	.LASF27
 2280 01e6 04       		.byte	0x4
 2281 01e7 FD       		.byte	0xfd
 2282 01e8 E2000000 		.4byte	0xe2
 2283 01ec 02       		.byte	0x2
 2284 01ed 10       		.uleb128 0x10
 2285 01ee D7040000 		.4byte	.LASF28
 2286 01f2 04       		.byte	0x4
 2287 01f3 0201     		.2byte	0x102
 2288 01f5 6B000000 		.4byte	0x6b
 2289 01f9 04       		.byte	0x4
 2290 01fa 10       		.uleb128 0x10
 2291 01fb 69060000 		.4byte	.LASF29
 2292 01ff 04       		.byte	0x4
 2293 0200 0701     		.2byte	0x107
 2294 0202 6B000000 		.4byte	0x6b
 2295 0206 05       		.byte	0x5
 2296 0207 10       		.uleb128 0x10
 2297 0208 31040000 		.4byte	.LASF30
 2298 020c 04       		.byte	0x4
 2299 020d 0D01     		.2byte	0x10d
 2300 020f 6B000000 		.4byte	0x6b
 2301 0213 06       		.byte	0x6
 2302 0214 10       		.uleb128 0x10
 2303 0215 E6050000 		.4byte	.LASF31
 2304 0219 04       		.byte	0x4
 2305 021a 1301     		.2byte	0x113
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 86


 2306 021c 6B000000 		.4byte	0x6b
 2307 0220 07       		.byte	0x7
 2308 0221 10       		.uleb128 0x10
 2309 0222 50040000 		.4byte	.LASF32
 2310 0226 04       		.byte	0x4
 2311 0227 1A01     		.2byte	0x11a
 2312 0229 EE000000 		.4byte	0xee
 2313 022d 08       		.byte	0x8
 2314 022e 10       		.uleb128 0x10
 2315 022f AB090000 		.4byte	.LASF33
 2316 0233 04       		.byte	0x4
 2317 0234 2101     		.2byte	0x121
 2318 0236 B2010000 		.4byte	0x1b2
 2319 023a 09       		.byte	0x9
 2320 023b 10       		.uleb128 0x10
 2321 023c 5B040000 		.4byte	.LASF34
 2322 0240 04       		.byte	0x4
 2323 0241 2601     		.2byte	0x126
 2324 0243 6B000000 		.4byte	0x6b
 2325 0247 0A       		.byte	0xa
 2326 0248 10       		.uleb128 0x10
 2327 0249 DD0A0000 		.4byte	.LASF35
 2328 024d 04       		.byte	0x4
 2329 024e 2E01     		.2byte	0x12e
 2330 0250 77000000 		.4byte	0x77
 2331 0254 0C       		.byte	0xc
 2332 0255 10       		.uleb128 0x10
 2333 0256 62080000 		.4byte	.LASF36
 2334 025a 04       		.byte	0x4
 2335 025b 3301     		.2byte	0x133
 2336 025d 6B000000 		.4byte	0x6b
 2337 0261 0E       		.byte	0xe
 2338 0262 00       		.byte	0
 2339 0263 04       		.uleb128 0x4
 2340 0264 AA050000 		.4byte	.LASF38
 2341 0268 04       		.byte	0x4
 2342 0269 3401     		.2byte	0x134
 2343 026b CD010000 		.4byte	0x1cd
 2344 026f 11       		.uleb128 0x11
 2345 0270 12       		.byte	0x12
 2346 0271 04       		.byte	0x4
 2347 0272 3901     		.2byte	0x139
 2348 0274 15030000 		.4byte	0x315
 2349 0278 10       		.uleb128 0x10
 2350 0279 64050000 		.4byte	.LASF26
 2351 027d 04       		.byte	0x4
 2352 027e 3E01     		.2byte	0x13e
 2353 0280 77000000 		.4byte	0x77
 2354 0284 00       		.byte	0
 2355 0285 10       		.uleb128 0x10
 2356 0286 DD090000 		.4byte	.LASF27
 2357 028a 04       		.byte	0x4
 2358 028b 4301     		.2byte	0x143
 2359 028d E2000000 		.4byte	0xe2
 2360 0291 02       		.byte	0x2
 2361 0292 10       		.uleb128 0x10
 2362 0293 D7040000 		.4byte	.LASF28
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 87


 2363 0297 04       		.byte	0x4
 2364 0298 4801     		.2byte	0x148
 2365 029a 6B000000 		.4byte	0x6b
 2366 029e 04       		.byte	0x4
 2367 029f 10       		.uleb128 0x10
 2368 02a0 69060000 		.4byte	.LASF29
 2369 02a4 04       		.byte	0x4
 2370 02a5 4D01     		.2byte	0x14d
 2371 02a7 6B000000 		.4byte	0x6b
 2372 02ab 05       		.byte	0x5
 2373 02ac 10       		.uleb128 0x10
 2374 02ad 31040000 		.4byte	.LASF30
 2375 02b1 04       		.byte	0x4
 2376 02b2 5301     		.2byte	0x153
 2377 02b4 6B000000 		.4byte	0x6b
 2378 02b8 06       		.byte	0x6
 2379 02b9 10       		.uleb128 0x10
 2380 02ba E6050000 		.4byte	.LASF31
 2381 02be 04       		.byte	0x4
 2382 02bf 5901     		.2byte	0x159
 2383 02c1 6B000000 		.4byte	0x6b
 2384 02c5 07       		.byte	0x7
 2385 02c6 10       		.uleb128 0x10
 2386 02c7 50040000 		.4byte	.LASF32
 2387 02cb 04       		.byte	0x4
 2388 02cc 6001     		.2byte	0x160
 2389 02ce EE000000 		.4byte	0xee
 2390 02d2 08       		.byte	0x8
 2391 02d3 10       		.uleb128 0x10
 2392 02d4 AB090000 		.4byte	.LASF33
 2393 02d8 04       		.byte	0x4
 2394 02d9 6701     		.2byte	0x167
 2395 02db B2010000 		.4byte	0x1b2
 2396 02df 09       		.byte	0x9
 2397 02e0 10       		.uleb128 0x10
 2398 02e1 5B040000 		.4byte	.LASF34
 2399 02e5 04       		.byte	0x4
 2400 02e6 6C01     		.2byte	0x16c
 2401 02e8 6B000000 		.4byte	0x6b
 2402 02ec 0A       		.byte	0xa
 2403 02ed 10       		.uleb128 0x10
 2404 02ee DD0A0000 		.4byte	.LASF35
 2405 02f2 04       		.byte	0x4
 2406 02f3 7401     		.2byte	0x174
 2407 02f5 77000000 		.4byte	0x77
 2408 02f9 0C       		.byte	0xc
 2409 02fa 10       		.uleb128 0x10
 2410 02fb 62080000 		.4byte	.LASF36
 2411 02ff 04       		.byte	0x4
 2412 0300 7901     		.2byte	0x179
 2413 0302 6B000000 		.4byte	0x6b
 2414 0306 0E       		.byte	0xe
 2415 0307 10       		.uleb128 0x10
 2416 0308 580C0000 		.4byte	.LASF39
 2417 030c 04       		.byte	0x4
 2418 030d 7E01     		.2byte	0x17e
 2419 030f 15030000 		.4byte	0x315
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 88


 2420 0313 10       		.byte	0x10
 2421 0314 00       		.byte	0
 2422 0315 0D       		.uleb128 0xd
 2423 0316 77000000 		.4byte	0x77
 2424 031a 25030000 		.4byte	0x325
 2425 031e 0E       		.uleb128 0xe
 2426 031f D9000000 		.4byte	0xd9
 2427 0323 00       		.byte	0
 2428 0324 00       		.byte	0
 2429 0325 04       		.uleb128 0x4
 2430 0326 A2070000 		.4byte	.LASF40
 2431 032a 04       		.byte	0x4
 2432 032b 7F01     		.2byte	0x17f
 2433 032d 6F020000 		.4byte	0x26f
 2434 0331 11       		.uleb128 0x11
 2435 0332 42       		.byte	0x42
 2436 0333 04       		.byte	0x4
 2437 0334 8501     		.2byte	0x185
 2438 0336 6F030000 		.4byte	0x36f
 2439 033a 10       		.uleb128 0x10
 2440 033b 69040000 		.4byte	.LASF41
 2441 033f 04       		.byte	0x4
 2442 0340 8A01     		.2byte	0x18a
 2443 0342 63020000 		.4byte	0x263
 2444 0346 00       		.byte	0
 2445 0347 10       		.uleb128 0x10
 2446 0348 6E040000 		.4byte	.LASF42
 2447 034c 04       		.byte	0x4
 2448 034d 8F01     		.2byte	0x18f
 2449 034f 63020000 		.4byte	0x263
 2450 0353 10       		.byte	0x10
 2451 0354 10       		.uleb128 0x10
 2452 0355 73040000 		.4byte	.LASF43
 2453 0359 04       		.byte	0x4
 2454 035a 9401     		.2byte	0x194
 2455 035c 63020000 		.4byte	0x263
 2456 0360 20       		.byte	0x20
 2457 0361 10       		.uleb128 0x10
 2458 0362 DF080000 		.4byte	.LASF44
 2459 0366 04       		.byte	0x4
 2460 0367 9901     		.2byte	0x199
 2461 0369 25030000 		.4byte	0x325
 2462 036d 30       		.byte	0x30
 2463 036e 00       		.byte	0
 2464 036f 04       		.uleb128 0x4
 2465 0370 20070000 		.4byte	.LASF45
 2466 0374 04       		.byte	0x4
 2467 0375 9A01     		.2byte	0x19a
 2468 0377 31030000 		.4byte	0x331
 2469 037b 11       		.uleb128 0x11
 2470 037c 0A       		.byte	0xa
 2471 037d 04       		.byte	0x4
 2472 037e A001     		.2byte	0x1a0
 2473 0380 D3030000 		.4byte	0x3d3
 2474 0384 12       		.uleb128 0x12
 2475 0385 72617700 		.ascii	"raw\000"
 2476 0389 04       		.byte	0x4
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 89


 2477 038a A501     		.2byte	0x1a5
 2478 038c 15030000 		.4byte	0x315
 2479 0390 00       		.byte	0
 2480 0391 10       		.uleb128 0x10
 2481 0392 320B0000 		.4byte	.LASF46
 2482 0396 04       		.byte	0x4
 2483 0397 AA01     		.2byte	0x1aa
 2484 0399 15030000 		.4byte	0x315
 2485 039d 02       		.byte	0x2
 2486 039e 10       		.uleb128 0x10
 2487 039f E6090000 		.4byte	.LASF47
 2488 03a3 04       		.byte	0x4
 2489 03a4 B001     		.2byte	0x1b0
 2490 03a6 B2010000 		.4byte	0x1b2
 2491 03aa 04       		.byte	0x4
 2492 03ab 10       		.uleb128 0x10
 2493 03ac EC080000 		.4byte	.LASF48
 2494 03b0 04       		.byte	0x4
 2495 03b1 B501     		.2byte	0x1b5
 2496 03b3 E2000000 		.4byte	0xe2
 2497 03b7 06       		.byte	0x6
 2498 03b8 10       		.uleb128 0x10
 2499 03b9 ED0B0000 		.4byte	.LASF49
 2500 03bd 04       		.byte	0x4
 2501 03be BA01     		.2byte	0x1ba
 2502 03c0 D3030000 		.4byte	0x3d3
 2503 03c4 08       		.byte	0x8
 2504 03c5 10       		.uleb128 0x10
 2505 03c6 82050000 		.4byte	.LASF50
 2506 03ca 04       		.byte	0x4
 2507 03cb BF01     		.2byte	0x1bf
 2508 03cd B2010000 		.4byte	0x1b2
 2509 03d1 09       		.byte	0x9
 2510 03d2 00       		.byte	0
 2511 03d3 0D       		.uleb128 0xd
 2512 03d4 EE000000 		.4byte	0xee
 2513 03d8 E3030000 		.4byte	0x3e3
 2514 03dc 0E       		.uleb128 0xe
 2515 03dd D9000000 		.4byte	0xd9
 2516 03e1 00       		.byte	0
 2517 03e2 00       		.byte	0
 2518 03e3 04       		.uleb128 0x4
 2519 03e4 0F090000 		.4byte	.LASF51
 2520 03e8 04       		.byte	0x4
 2521 03e9 C001     		.2byte	0x1c0
 2522 03eb 7B030000 		.4byte	0x37b
 2523 03ef 11       		.uleb128 0x11
 2524 03f0 50       		.byte	0x50
 2525 03f1 04       		.byte	0x4
 2526 03f2 C601     		.2byte	0x1c6
 2527 03f4 2D040000 		.4byte	0x42d
 2528 03f8 10       		.uleb128 0x10
 2529 03f9 69040000 		.4byte	.LASF41
 2530 03fd 04       		.byte	0x4
 2531 03fe CB01     		.2byte	0x1cb
 2532 0400 2D040000 		.4byte	0x42d
 2533 0404 00       		.byte	0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 90


 2534 0405 10       		.uleb128 0x10
 2535 0406 6E040000 		.4byte	.LASF42
 2536 040a 04       		.byte	0x4
 2537 040b D001     		.2byte	0x1d0
 2538 040d 2D040000 		.4byte	0x42d
 2539 0411 0A       		.byte	0xa
 2540 0412 10       		.uleb128 0x10
 2541 0413 73040000 		.4byte	.LASF43
 2542 0417 04       		.byte	0x4
 2543 0418 D501     		.2byte	0x1d5
 2544 041a 2D040000 		.4byte	0x42d
 2545 041e 14       		.byte	0x14
 2546 041f 10       		.uleb128 0x10
 2547 0420 DF080000 		.4byte	.LASF44
 2548 0424 04       		.byte	0x4
 2549 0425 DA01     		.2byte	0x1da
 2550 0427 3D040000 		.4byte	0x43d
 2551 042b 1E       		.byte	0x1e
 2552 042c 00       		.byte	0
 2553 042d 0D       		.uleb128 0xd
 2554 042e E3030000 		.4byte	0x3e3
 2555 0432 3D040000 		.4byte	0x43d
 2556 0436 0E       		.uleb128 0xe
 2557 0437 D9000000 		.4byte	0xd9
 2558 043b 00       		.byte	0
 2559 043c 00       		.byte	0
 2560 043d 0D       		.uleb128 0xd
 2561 043e E3030000 		.4byte	0x3e3
 2562 0442 4D040000 		.4byte	0x44d
 2563 0446 0E       		.uleb128 0xe
 2564 0447 D9000000 		.4byte	0xd9
 2565 044b 04       		.byte	0x4
 2566 044c 00       		.byte	0
 2567 044d 04       		.uleb128 0x4
 2568 044e 1C000000 		.4byte	.LASF52
 2569 0452 04       		.byte	0x4
 2570 0453 DB01     		.2byte	0x1db
 2571 0455 EF030000 		.4byte	0x3ef
 2572 0459 11       		.uleb128 0x11
 2573 045a BC       		.byte	0xbc
 2574 045b 04       		.byte	0x4
 2575 045c E101     		.2byte	0x1e1
 2576 045e 74050000 		.4byte	0x574
 2577 0462 10       		.uleb128 0x10
 2578 0463 27080000 		.4byte	.LASF53
 2579 0467 04       		.byte	0x4
 2580 0468 E801     		.2byte	0x1e8
 2581 046a 77000000 		.4byte	0x77
 2582 046e 00       		.byte	0
 2583 046f 10       		.uleb128 0x10
 2584 0470 2A0C0000 		.4byte	.LASF54
 2585 0474 04       		.byte	0x4
 2586 0475 ED01     		.2byte	0x1ed
 2587 0477 77000000 		.4byte	0x77
 2588 047b 02       		.byte	0x2
 2589 047c 10       		.uleb128 0x10
 2590 047d 29010000 		.4byte	.LASF55
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 91


 2591 0481 04       		.byte	0x4
 2592 0482 F201     		.2byte	0x1f2
 2593 0484 77000000 		.4byte	0x77
 2594 0488 04       		.byte	0x4
 2595 0489 10       		.uleb128 0x10
 2596 048a F1080000 		.4byte	.LASF56
 2597 048e 04       		.byte	0x4
 2598 048f F801     		.2byte	0x1f8
 2599 0491 77000000 		.4byte	0x77
 2600 0495 06       		.byte	0x6
 2601 0496 10       		.uleb128 0x10
 2602 0497 1D010000 		.4byte	.LASF57
 2603 049b 04       		.byte	0x4
 2604 049c FD01     		.2byte	0x1fd
 2605 049e 77000000 		.4byte	0x77
 2606 04a2 08       		.byte	0x8
 2607 04a3 10       		.uleb128 0x10
 2608 04a4 6F050000 		.4byte	.LASF58
 2609 04a8 04       		.byte	0x4
 2610 04a9 0202     		.2byte	0x202
 2611 04ab C6000000 		.4byte	0xc6
 2612 04af 0C       		.byte	0xc
 2613 04b0 10       		.uleb128 0x10
 2614 04b1 D4080000 		.4byte	.LASF59
 2615 04b5 04       		.byte	0x4
 2616 04b6 0802     		.2byte	0x208
 2617 04b8 74050000 		.4byte	0x574
 2618 04bc 10       		.byte	0x10
 2619 04bd 10       		.uleb128 0x10
 2620 04be 37090000 		.4byte	.LASF60
 2621 04c2 04       		.byte	0x4
 2622 04c3 0F02     		.2byte	0x20f
 2623 04c5 74050000 		.4byte	0x574
 2624 04c9 14       		.byte	0x14
 2625 04ca 10       		.uleb128 0x10
 2626 04cb 58080000 		.4byte	.LASF61
 2627 04cf 04       		.byte	0x4
 2628 04d0 1F02     		.2byte	0x21f
 2629 04d2 84050000 		.4byte	0x584
 2630 04d6 18       		.byte	0x18
 2631 04d7 10       		.uleb128 0x10
 2632 04d8 72060000 		.4byte	.LASF62
 2633 04dc 04       		.byte	0x4
 2634 04dd 2502     		.2byte	0x225
 2635 04df 77000000 		.4byte	0x77
 2636 04e3 1C       		.byte	0x1c
 2637 04e4 10       		.uleb128 0x10
 2638 04e5 02040000 		.4byte	.LASF63
 2639 04e9 04       		.byte	0x4
 2640 04ea 2A02     		.2byte	0x22a
 2641 04ec 6B000000 		.4byte	0x6b
 2642 04f0 1E       		.byte	0x1e
 2643 04f1 10       		.uleb128 0x10
 2644 04f2 640A0000 		.4byte	.LASF64
 2645 04f6 04       		.byte	0x4
 2646 04f7 2F02     		.2byte	0x22f
 2647 04f9 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 92


 2648 04fd 1F       		.byte	0x1f
 2649 04fe 10       		.uleb128 0x10
 2650 04ff 36060000 		.4byte	.LASF65
 2651 0503 04       		.byte	0x4
 2652 0504 3402     		.2byte	0x234
 2653 0506 6F030000 		.4byte	0x36f
 2654 050a 20       		.byte	0x20
 2655 050b 10       		.uleb128 0x10
 2656 050c 5C030000 		.4byte	.LASF66
 2657 0510 04       		.byte	0x4
 2658 0511 3902     		.2byte	0x239
 2659 0513 4D040000 		.4byte	0x44d
 2660 0517 62       		.byte	0x62
 2661 0518 10       		.uleb128 0x10
 2662 0519 C1000000 		.4byte	.LASF67
 2663 051d 04       		.byte	0x4
 2664 051e 3E02     		.2byte	0x23e
 2665 0520 6B000000 		.4byte	0x6b
 2666 0524 B2       		.byte	0xb2
 2667 0525 10       		.uleb128 0x10
 2668 0526 7B030000 		.4byte	.LASF68
 2669 052a 04       		.byte	0x4
 2670 052b 4302     		.2byte	0x243
 2671 052d 6B000000 		.4byte	0x6b
 2672 0531 B3       		.byte	0xb3
 2673 0532 10       		.uleb128 0x10
 2674 0533 14080000 		.4byte	.LASF69
 2675 0537 04       		.byte	0x4
 2676 0538 4802     		.2byte	0x248
 2677 053a 77000000 		.4byte	0x77
 2678 053e B4       		.byte	0xb4
 2679 053f 10       		.uleb128 0x10
 2680 0540 59060000 		.4byte	.LASF70
 2681 0544 04       		.byte	0x4
 2682 0545 4D02     		.2byte	0x24d
 2683 0547 15030000 		.4byte	0x315
 2684 054b B6       		.byte	0xb6
 2685 054c 10       		.uleb128 0x10
 2686 054d 31010000 		.4byte	.LASF71
 2687 0551 04       		.byte	0x4
 2688 0552 5202     		.2byte	0x252
 2689 0554 6B000000 		.4byte	0x6b
 2690 0558 B8       		.byte	0xb8
 2691 0559 10       		.uleb128 0x10
 2692 055a 03080000 		.4byte	.LASF72
 2693 055e 04       		.byte	0x4
 2694 055f 5702     		.2byte	0x257
 2695 0561 6B000000 		.4byte	0x6b
 2696 0565 B9       		.byte	0xb9
 2697 0566 10       		.uleb128 0x10
 2698 0567 6E0A0000 		.4byte	.LASF73
 2699 056b 04       		.byte	0x4
 2700 056c 5C02     		.2byte	0x25c
 2701 056e 6B000000 		.4byte	0x6b
 2702 0572 BA       		.byte	0xba
 2703 0573 00       		.byte	0
 2704 0574 0D       		.uleb128 0xd
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 93


 2705 0575 83000000 		.4byte	0x83
 2706 0579 84050000 		.4byte	0x584
 2707 057d 0E       		.uleb128 0xe
 2708 057e D9000000 		.4byte	0xd9
 2709 0582 00       		.byte	0
 2710 0583 00       		.byte	0
 2711 0584 0D       		.uleb128 0xd
 2712 0585 6B000000 		.4byte	0x6b
 2713 0589 94050000 		.4byte	0x594
 2714 058d 0E       		.uleb128 0xe
 2715 058e D9000000 		.4byte	0xd9
 2716 0592 03       		.byte	0x3
 2717 0593 00       		.byte	0
 2718 0594 04       		.uleb128 0x4
 2719 0595 890A0000 		.4byte	.LASF74
 2720 0599 04       		.byte	0x4
 2721 059a 5D02     		.2byte	0x25d
 2722 059c 59040000 		.4byte	0x459
 2723 05a0 11       		.uleb128 0x11
 2724 05a1 1C       		.byte	0x1c
 2725 05a2 04       		.byte	0x4
 2726 05a3 6302     		.2byte	0x263
 2727 05a5 1F060000 		.4byte	0x61f
 2728 05a9 10       		.uleb128 0x10
 2729 05aa BD060000 		.4byte	.LASF75
 2730 05ae 04       		.byte	0x4
 2731 05af 6802     		.2byte	0x268
 2732 05b1 1F060000 		.4byte	0x61f
 2733 05b5 00       		.byte	0
 2734 05b6 10       		.uleb128 0x10
 2735 05b7 8B050000 		.4byte	.LASF76
 2736 05bb 04       		.byte	0x4
 2737 05bc 6D02     		.2byte	0x26d
 2738 05be 1F060000 		.4byte	0x61f
 2739 05c2 04       		.byte	0x4
 2740 05c3 10       		.uleb128 0x10
 2741 05c4 2B040000 		.4byte	.LASF77
 2742 05c8 04       		.byte	0x4
 2743 05c9 7202     		.2byte	0x272
 2744 05cb 1F060000 		.4byte	0x61f
 2745 05cf 08       		.byte	0x8
 2746 05d0 10       		.uleb128 0x10
 2747 05d1 FF080000 		.4byte	.LASF78
 2748 05d5 04       		.byte	0x4
 2749 05d6 7702     		.2byte	0x277
 2750 05d8 1F060000 		.4byte	0x61f
 2751 05dc 0C       		.byte	0xc
 2752 05dd 10       		.uleb128 0x10
 2753 05de BD0A0000 		.4byte	.LASF79
 2754 05e2 04       		.byte	0x4
 2755 05e3 7C02     		.2byte	0x27c
 2756 05e5 83000000 		.4byte	0x83
 2757 05e9 10       		.byte	0x10
 2758 05ea 10       		.uleb128 0x10
 2759 05eb E7060000 		.4byte	.LASF80
 2760 05ef 04       		.byte	0x4
 2761 05f0 8102     		.2byte	0x281
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 94


 2762 05f2 83000000 		.4byte	0x83
 2763 05f6 14       		.byte	0x14
 2764 05f7 10       		.uleb128 0x10
 2765 05f8 17050000 		.4byte	.LASF81
 2766 05fc 04       		.byte	0x4
 2767 05fd 8602     		.2byte	0x286
 2768 05ff 6B000000 		.4byte	0x6b
 2769 0603 18       		.byte	0x18
 2770 0604 10       		.uleb128 0x10
 2771 0605 71090000 		.4byte	.LASF82
 2772 0609 04       		.byte	0x4
 2773 060a 8B02     		.2byte	0x28b
 2774 060c 6B000000 		.4byte	0x6b
 2775 0610 19       		.byte	0x19
 2776 0611 10       		.uleb128 0x10
 2777 0612 57020000 		.4byte	.LASF83
 2778 0616 04       		.byte	0x4
 2779 0617 9002     		.2byte	0x290
 2780 0619 6B000000 		.4byte	0x6b
 2781 061d 1A       		.byte	0x1a
 2782 061e 00       		.byte	0
 2783 061f 06       		.uleb128 0x6
 2784 0620 04       		.byte	0x4
 2785 0621 BA000000 		.4byte	0xba
 2786 0625 04       		.uleb128 0x4
 2787 0626 320A0000 		.4byte	.LASF84
 2788 062a 04       		.byte	0x4
 2789 062b 9102     		.2byte	0x291
 2790 062d A0050000 		.4byte	0x5a0
 2791 0631 11       		.uleb128 0x11
 2792 0632 28       		.byte	0x28
 2793 0633 04       		.byte	0x4
 2794 0634 C402     		.2byte	0x2c4
 2795 0636 F1060000 		.4byte	0x6f1
 2796 063a 10       		.uleb128 0x10
 2797 063b 5C0B0000 		.4byte	.LASF85
 2798 063f 04       		.byte	0x4
 2799 0640 CD02     		.2byte	0x2cd
 2800 0642 F1060000 		.4byte	0x6f1
 2801 0646 00       		.byte	0
 2802 0647 10       		.uleb128 0x10
 2803 0648 7D0A0000 		.4byte	.LASF86
 2804 064c 04       		.byte	0x4
 2805 064d D402     		.2byte	0x2d4
 2806 064f E0000000 		.4byte	0xe0
 2807 0653 04       		.byte	0x4
 2808 0654 10       		.uleb128 0x10
 2809 0655 30080000 		.4byte	.LASF87
 2810 0659 04       		.byte	0x4
 2811 065a DA02     		.2byte	0x2da
 2812 065c F8060000 		.4byte	0x6f8
 2813 0660 08       		.byte	0x8
 2814 0661 10       		.uleb128 0x10
 2815 0662 CD060000 		.4byte	.LASF88
 2816 0666 04       		.byte	0x4
 2817 0667 E002     		.2byte	0x2e0
 2818 0669 E0000000 		.4byte	0xe0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 95


 2819 066d 0C       		.byte	0xc
 2820 066e 10       		.uleb128 0x10
 2821 066f B9090000 		.4byte	.LASF89
 2822 0673 04       		.byte	0x4
 2823 0674 E702     		.2byte	0x2e7
 2824 0676 FE060000 		.4byte	0x6fe
 2825 067a 10       		.byte	0x10
 2826 067b 10       		.uleb128 0x10
 2827 067c 4B0A0000 		.4byte	.LASF90
 2828 0680 04       		.byte	0x4
 2829 0681 EC02     		.2byte	0x2ec
 2830 0683 83000000 		.4byte	0x83
 2831 0687 14       		.byte	0x14
 2832 0688 10       		.uleb128 0x10
 2833 0689 78040000 		.4byte	.LASF91
 2834 068d 04       		.byte	0x4
 2835 068e F302     		.2byte	0x2f3
 2836 0690 77000000 		.4byte	0x77
 2837 0694 18       		.byte	0x18
 2838 0695 10       		.uleb128 0x10
 2839 0696 B8030000 		.4byte	.LASF92
 2840 069a 04       		.byte	0x4
 2841 069b FA02     		.2byte	0x2fa
 2842 069d 6B000000 		.4byte	0x6b
 2843 06a1 1A       		.byte	0x1a
 2844 06a2 10       		.uleb128 0x10
 2845 06a3 580A0000 		.4byte	.LASF93
 2846 06a7 04       		.byte	0x4
 2847 06a8 0003     		.2byte	0x300
 2848 06aa 6B000000 		.4byte	0x6b
 2849 06ae 1B       		.byte	0x1b
 2850 06af 10       		.uleb128 0x10
 2851 06b0 2F090000 		.4byte	.LASF94
 2852 06b4 04       		.byte	0x4
 2853 06b5 0A03     		.2byte	0x30a
 2854 06b7 6B000000 		.4byte	0x6b
 2855 06bb 1C       		.byte	0x1c
 2856 06bc 10       		.uleb128 0x10
 2857 06bd B50A0000 		.4byte	.LASF95
 2858 06c1 04       		.byte	0x4
 2859 06c2 1203     		.2byte	0x312
 2860 06c4 6B000000 		.4byte	0x6b
 2861 06c8 1D       		.byte	0x1d
 2862 06c9 10       		.uleb128 0x10
 2863 06ca 88080000 		.4byte	.LASF96
 2864 06ce 04       		.byte	0x4
 2865 06cf 1703     		.2byte	0x317
 2866 06d1 77000000 		.4byte	0x77
 2867 06d5 1E       		.byte	0x1e
 2868 06d6 10       		.uleb128 0x10
 2869 06d7 C9090000 		.4byte	.LASF97
 2870 06db 04       		.byte	0x4
 2871 06dc 2003     		.2byte	0x320
 2872 06de 83000000 		.4byte	0x83
 2873 06e2 20       		.byte	0x20
 2874 06e3 10       		.uleb128 0x10
 2875 06e4 EC010000 		.4byte	.LASF98
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 96


 2876 06e8 04       		.byte	0x4
 2877 06e9 2503     		.2byte	0x325
 2878 06eb 6B000000 		.4byte	0x6b
 2879 06ef 24       		.byte	0x24
 2880 06f0 00       		.byte	0
 2881 06f1 06       		.uleb128 0x6
 2882 06f2 04       		.byte	0x4
 2883 06f3 F7060000 		.4byte	0x6f7
 2884 06f7 13       		.uleb128 0x13
 2885 06f8 06       		.uleb128 0x6
 2886 06f9 04       		.byte	0x4
 2887 06fa E3030000 		.4byte	0x3e3
 2888 06fe 06       		.uleb128 0x6
 2889 06ff 04       		.byte	0x4
 2890 0700 6B000000 		.4byte	0x6b
 2891 0704 04       		.uleb128 0x4
 2892 0705 FF020000 		.4byte	.LASF99
 2893 0709 04       		.byte	0x4
 2894 070a 2603     		.2byte	0x326
 2895 070c 31060000 		.4byte	0x631
 2896 0710 11       		.uleb128 0x11
 2897 0711 A0       		.byte	0xa0
 2898 0712 04       		.byte	0x4
 2899 0713 2C03     		.2byte	0x32c
 2900 0715 27070000 		.4byte	0x727
 2901 0719 10       		.uleb128 0x10
 2902 071a 780C0000 		.4byte	.LASF100
 2903 071e 04       		.byte	0x4
 2904 071f 3103     		.2byte	0x331
 2905 0721 27070000 		.4byte	0x727
 2906 0725 00       		.byte	0
 2907 0726 00       		.byte	0
 2908 0727 0D       		.uleb128 0xd
 2909 0728 04070000 		.4byte	0x704
 2910 072c 37070000 		.4byte	0x737
 2911 0730 0E       		.uleb128 0xe
 2912 0731 D9000000 		.4byte	0xd9
 2913 0735 03       		.byte	0x3
 2914 0736 00       		.byte	0
 2915 0737 04       		.uleb128 0x4
 2916 0738 FB0B0000 		.4byte	.LASF101
 2917 073c 04       		.byte	0x4
 2918 073d 3203     		.2byte	0x332
 2919 073f 10070000 		.4byte	0x710
 2920 0743 0B       		.uleb128 0xb
 2921 0744 08       		.byte	0x8
 2922 0745 05       		.byte	0x5
 2923 0746 CF       		.byte	0xcf
 2924 0747 64070000 		.4byte	0x764
 2925 074b 0C       		.uleb128 0xc
 2926 074c 27090000 		.4byte	.LASF102
 2927 0750 05       		.byte	0x5
 2928 0751 D4       		.byte	0xd4
 2929 0752 83000000 		.4byte	0x83
 2930 0756 00       		.byte	0
 2931 0757 0C       		.uleb128 0xc
 2932 0758 DD060000 		.4byte	.LASF103
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 97


 2933 075c 05       		.byte	0x5
 2934 075d D9       		.byte	0xd9
 2935 075e 83000000 		.4byte	0x83
 2936 0762 04       		.byte	0x4
 2937 0763 00       		.byte	0
 2938 0764 0F       		.uleb128 0xf
 2939 0765 82070000 		.4byte	.LASF104
 2940 0769 05       		.byte	0x5
 2941 076a DA       		.byte	0xda
 2942 076b 43070000 		.4byte	0x743
 2943 076f 14       		.uleb128 0x14
 2944 0770 D1000000 		.4byte	.LASF189
 2945 0774 01       		.byte	0x1
 2946 0775 7F05     		.2byte	0x57f
 2947 0777 00000000 		.4byte	.LFB8
 2948 077b 38000000 		.4byte	.LFE8-.LFB8
 2949 077f 01       		.uleb128 0x1
 2950 0780 9C       		.byte	0x9c
 2951 0781 15       		.uleb128 0x15
 2952 0782 04020000 		.4byte	.LASF115
 2953 0786 01       		.byte	0x1
 2954 0787 8506     		.2byte	0x685
 2955 0789 A4000000 		.4byte	0xa4
 2956 078d 00000000 		.4byte	.LFB10
 2957 0791 94000000 		.4byte	.LFE10-.LFB10
 2958 0795 01       		.uleb128 0x1
 2959 0796 9C       		.byte	0x9c
 2960 0797 48080000 		.4byte	0x848
 2961 079b 16       		.uleb128 0x16
 2962 079c 330C0000 		.4byte	.LASF105
 2963 07a0 01       		.byte	0x1
 2964 07a1 8506     		.2byte	0x685
 2965 07a3 83000000 		.4byte	0x83
 2966 07a7 00000000 		.4byte	.LLST0
 2967 07ab 16       		.uleb128 0x16
 2968 07ac 91050000 		.4byte	.LASF106
 2969 07b0 01       		.byte	0x1
 2970 07b1 8506     		.2byte	0x685
 2971 07b3 83000000 		.4byte	0x83
 2972 07b7 42000000 		.4byte	.LLST1
 2973 07bb 16       		.uleb128 0x16
 2974 07bc 24040000 		.4byte	.LASF107
 2975 07c0 01       		.byte	0x1
 2976 07c1 8506     		.2byte	0x685
 2977 07c3 83000000 		.4byte	0x83
 2978 07c7 6E000000 		.4byte	.LLST2
 2979 07cb 17       		.uleb128 0x17
 2980 07cc DA030000 		.4byte	.LASF108
 2981 07d0 01       		.byte	0x1
 2982 07d1 8706     		.2byte	0x687
 2983 07d3 83000000 		.4byte	0x83
 2984 07d7 9C000000 		.4byte	.LLST3
 2985 07db 17       		.uleb128 0x17
 2986 07dc C0070000 		.4byte	.LASF109
 2987 07e0 01       		.byte	0x1
 2988 07e1 8806     		.2byte	0x688
 2989 07e3 83000000 		.4byte	0x83
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 98


 2990 07e7 BA000000 		.4byte	.LLST4
 2991 07eb 17       		.uleb128 0x17
 2992 07ec B1060000 		.4byte	.LASF110
 2993 07f0 01       		.byte	0x1
 2994 07f1 8906     		.2byte	0x689
 2995 07f3 83000000 		.4byte	0x83
 2996 07f7 D9000000 		.4byte	.LLST5
 2997 07fb 17       		.uleb128 0x17
 2998 07fc F1050000 		.4byte	.LASF111
 2999 0800 01       		.byte	0x1
 3000 0801 8A06     		.2byte	0x68a
 3001 0803 83000000 		.4byte	0x83
 3002 0807 02010000 		.4byte	.LLST6
 3003 080b 17       		.uleb128 0x17
 3004 080c EC060000 		.4byte	.LASF112
 3005 0810 01       		.byte	0x1
 3006 0811 8B06     		.2byte	0x68b
 3007 0813 83000000 		.4byte	0x83
 3008 0817 36010000 		.4byte	.LLST7
 3009 081b 17       		.uleb128 0x17
 3010 081c 26060000 		.4byte	.LASF113
 3011 0820 01       		.byte	0x1
 3012 0821 8C06     		.2byte	0x68c
 3013 0823 A4000000 		.4byte	0xa4
 3014 0827 82010000 		.4byte	.LLST8
 3015 082b 18       		.uleb128 0x18
 3016 082c 82010000 		.4byte	.LASF119
 3017 0830 01       		.byte	0x1
 3018 0831 8E06     		.2byte	0x68e
 3019 0833 48080000 		.4byte	0x848
 3020 0837 17       		.uleb128 0x17
 3021 0838 3F050000 		.4byte	.LASF114
 3022 083c 01       		.byte	0x1
 3023 083d 8F06     		.2byte	0x68f
 3024 083f F8060000 		.4byte	0x6f8
 3025 0843 AE010000 		.4byte	.LLST9
 3026 0847 00       		.byte	0
 3027 0848 06       		.uleb128 0x6
 3028 0849 04       		.byte	0x4
 3029 084a 4E080000 		.4byte	0x84e
 3030 084e 19       		.uleb128 0x19
 3031 084f 04070000 		.4byte	0x704
 3032 0853 1A       		.uleb128 0x1a
 3033 0854 E4040000 		.4byte	.LASF116
 3034 0858 01       		.byte	0x1
 3035 0859 EC07     		.2byte	0x7ec
 3036 085b 77000000 		.4byte	0x77
 3037 085f 00000000 		.4byte	.LFB17
 3038 0863 0C000000 		.4byte	.LFE17-.LFB17
 3039 0867 01       		.uleb128 0x1
 3040 0868 9C       		.byte	0x9c
 3041 0869 8E080000 		.4byte	0x88e
 3042 086d 16       		.uleb128 0x16
 3043 086e 190A0000 		.4byte	.LASF117
 3044 0872 01       		.byte	0x1
 3045 0873 EC07     		.2byte	0x7ec
 3046 0875 8E080000 		.4byte	0x88e
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 99


 3047 0879 C1010000 		.4byte	.LLST10
 3048 087d 17       		.uleb128 0x17
 3049 087e FA080000 		.4byte	.LASF118
 3050 0882 01       		.byte	0x1
 3051 0883 EE07     		.2byte	0x7ee
 3052 0885 83000000 		.4byte	0x83
 3053 0889 E2010000 		.4byte	.LLST11
 3054 088d 00       		.byte	0
 3055 088e 06       		.uleb128 0x6
 3056 088f 04       		.byte	0x4
 3057 0890 94080000 		.4byte	0x894
 3058 0894 19       		.uleb128 0x19
 3059 0895 C2010000 		.4byte	0x1c2
 3060 0899 1B       		.uleb128 0x1b
 3061 089a 3B080000 		.4byte	.LASF190
 3062 089e 01       		.byte	0x1
 3063 089f 9408     		.2byte	0x894
 3064 08a1 03       		.byte	0x3
 3065 08a2 CB080000 		.4byte	0x8cb
 3066 08a6 18       		.uleb128 0x18
 3067 08a7 76050000 		.4byte	.LASF120
 3068 08ab 01       		.byte	0x1
 3069 08ac 9608     		.2byte	0x896
 3070 08ae 83000000 		.4byte	0x83
 3071 08b2 18       		.uleb128 0x18
 3072 08b3 EF020000 		.4byte	.LASF121
 3073 08b7 01       		.byte	0x1
 3074 08b8 9708     		.2byte	0x897
 3075 08ba 83000000 		.4byte	0x83
 3076 08be 18       		.uleb128 0x18
 3077 08bf 72070000 		.4byte	.LASF122
 3078 08c3 01       		.byte	0x1
 3079 08c4 9908     		.2byte	0x899
 3080 08c6 83000000 		.4byte	0x83
 3081 08ca 00       		.byte	0
 3082 08cb 1C       		.uleb128 0x1c
 3083 08cc 84040000 		.4byte	.LASF141
 3084 08d0 01       		.byte	0x1
 3085 08d1 BD06     		.2byte	0x6bd
 3086 08d3 00000000 		.4byte	.LFB11
 3087 08d7 50010000 		.4byte	.LFE11-.LFB11
 3088 08db 01       		.uleb128 0x1
 3089 08dc 9C       		.byte	0x9c
 3090 08dd 38090000 		.4byte	0x938
 3091 08e1 17       		.uleb128 0x17
 3092 08e2 D30A0000 		.4byte	.LASF123
 3093 08e6 01       		.byte	0x1
 3094 08e7 BF06     		.2byte	0x6bf
 3095 08e9 83000000 		.4byte	0x83
 3096 08ed 06020000 		.4byte	.LLST12
 3097 08f1 17       		.uleb128 0x17
 3098 08f2 5B040000 		.4byte	.LASF34
 3099 08f6 01       		.byte	0x1
 3100 08f7 C006     		.2byte	0x6c0
 3101 08f9 83000000 		.4byte	0x83
 3102 08fd 38020000 		.4byte	.LLST13
 3103 0901 1D       		.uleb128 0x1d
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 100


 3104 0902 99080000 		.4byte	0x899
 3105 0906 30000000 		.4byte	.LBB4
 3106 090a B2000000 		.4byte	.LBE4-.LBB4
 3107 090e 01       		.byte	0x1
 3108 090f D606     		.2byte	0x6d6
 3109 0911 1E       		.uleb128 0x1e
 3110 0912 30000000 		.4byte	.LBB5
 3111 0916 B2000000 		.4byte	.LBE5-.LBB5
 3112 091a 1F       		.uleb128 0x1f
 3113 091b A6080000 		.4byte	0x8a6
 3114 091f 4B020000 		.4byte	.LLST14
 3115 0923 1F       		.uleb128 0x1f
 3116 0924 B2080000 		.4byte	0x8b2
 3117 0928 5E020000 		.4byte	.LLST15
 3118 092c 1F       		.uleb128 0x1f
 3119 092d BE080000 		.4byte	0x8be
 3120 0931 7E020000 		.4byte	.LLST16
 3121 0935 00       		.byte	0
 3122 0936 00       		.byte	0
 3123 0937 00       		.byte	0
 3124 0938 20       		.uleb128 0x20
 3125 0939 3C040000 		.4byte	.LASF124
 3126 093d 01       		.byte	0x1
 3127 093e 4D08     		.2byte	0x84d
 3128 0940 00000000 		.4byte	.LFB18
 3129 0944 90000000 		.4byte	.LFE18-.LFB18
 3130 0948 01       		.uleb128 0x1
 3131 0949 9C       		.byte	0x9c
 3132 094a 71090000 		.4byte	0x971
 3133 094e 21       		.uleb128 0x21
 3134 094f 08000000 		.4byte	.LVL52
 3135 0953 37100000 		.4byte	0x1037
 3136 0957 61090000 		.4byte	0x961
 3137 095b 22       		.uleb128 0x22
 3138 095c 01       		.uleb128 0x1
 3139 095d 50       		.byte	0x50
 3140 095e 01       		.uleb128 0x1
 3141 095f 3A       		.byte	0x3a
 3142 0960 00       		.byte	0
 3143 0961 23       		.uleb128 0x23
 3144 0962 62000000 		.4byte	.LVL54
 3145 0966 42100000 		.4byte	0x1042
 3146 096a 22       		.uleb128 0x22
 3147 096b 01       		.uleb128 0x1
 3148 096c 50       		.byte	0x50
 3149 096d 01       		.uleb128 0x1
 3150 096e 3A       		.byte	0x3a
 3151 096f 00       		.byte	0
 3152 0970 00       		.byte	0
 3153 0971 24       		.uleb128 0x24
 3154 0972 AC010000 		.4byte	.LASF125
 3155 0976 01       		.byte	0x1
 3156 0977 9C       		.byte	0x9c
 3157 0978 00000000 		.4byte	.LFB1
 3158 097c F4010000 		.4byte	.LFE1-.LFB1
 3159 0980 01       		.uleb128 0x1
 3160 0981 9C       		.byte	0x9c
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 101


 3161 0982 490A0000 		.4byte	0xa49
 3162 0986 25       		.uleb128 0x25
 3163 0987 4B010000 		.4byte	.LASF126
 3164 098b 01       		.byte	0x1
 3165 098c 9F       		.byte	0x9f
 3166 098d 6B000000 		.4byte	0x6b
 3167 0991 91020000 		.4byte	.LLST17
 3168 0995 25       		.uleb128 0x25
 3169 0996 D30A0000 		.4byte	.LASF123
 3170 099a 01       		.byte	0x1
 3171 099b A0       		.byte	0xa0
 3172 099c 83000000 		.4byte	0x83
 3173 09a0 DB020000 		.4byte	.LLST18
 3174 09a4 26       		.uleb128 0x26
 3175 09a5 14000000 		.4byte	.LVL55
 3176 09a9 4D100000 		.4byte	0x104d
 3177 09ad 26       		.uleb128 0x26
 3178 09ae 78000000 		.4byte	.LVL56
 3179 09b2 58100000 		.4byte	0x1058
 3180 09b6 26       		.uleb128 0x26
 3181 09b7 8C000000 		.4byte	.LVL60
 3182 09bb 63100000 		.4byte	0x1063
 3183 09bf 26       		.uleb128 0x26
 3184 09c0 9E000000 		.4byte	.LVL61
 3185 09c4 58100000 		.4byte	0x1058
 3186 09c8 26       		.uleb128 0x26
 3187 09c9 B2000000 		.4byte	.LVL65
 3188 09cd 63100000 		.4byte	0x1063
 3189 09d1 21       		.uleb128 0x21
 3190 09d2 E8000000 		.4byte	.LVL66
 3191 09d6 6E100000 		.4byte	0x106e
 3192 09da E4090000 		.4byte	0x9e4
 3193 09de 22       		.uleb128 0x22
 3194 09df 01       		.uleb128 0x1
 3195 09e0 50       		.byte	0x50
 3196 09e1 01       		.uleb128 0x1
 3197 09e2 31       		.byte	0x31
 3198 09e3 00       		.byte	0
 3199 09e4 26       		.uleb128 0x26
 3200 09e5 EC000000 		.4byte	.LVL67
 3201 09e9 58100000 		.4byte	0x1058
 3202 09ed 26       		.uleb128 0x26
 3203 09ee FA000000 		.4byte	.LVL70
 3204 09f2 63100000 		.4byte	0x1063
 3205 09f6 26       		.uleb128 0x26
 3206 09f7 FE000000 		.4byte	.LVL71
 3207 09fb 58100000 		.4byte	0x1058
 3208 09ff 26       		.uleb128 0x26
 3209 0a00 0A010000 		.4byte	.LVL74
 3210 0a04 63100000 		.4byte	0x1063
 3211 0a08 26       		.uleb128 0x26
 3212 0a09 0E010000 		.4byte	.LVL75
 3213 0a0d 58100000 		.4byte	0x1058
 3214 0a11 26       		.uleb128 0x26
 3215 0a12 22010000 		.4byte	.LVL79
 3216 0a16 63100000 		.4byte	0x1063
 3217 0a1a 26       		.uleb128 0x26
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 102


 3218 0a1b 26010000 		.4byte	.LVL80
 3219 0a1f 58100000 		.4byte	0x1058
 3220 0a23 26       		.uleb128 0x26
 3221 0a24 38010000 		.4byte	.LVL84
 3222 0a28 63100000 		.4byte	0x1063
 3223 0a2c 26       		.uleb128 0x26
 3224 0a2d 40010000 		.4byte	.LVL85
 3225 0a31 79100000 		.4byte	0x1079
 3226 0a35 23       		.uleb128 0x23
 3227 0a36 46010000 		.4byte	.LVL86
 3228 0a3a 84100000 		.4byte	0x1084
 3229 0a3e 22       		.uleb128 0x22
 3230 0a3f 01       		.uleb128 0x1
 3231 0a40 50       		.byte	0x50
 3232 0a41 05       		.uleb128 0x5
 3233 0a42 03       		.byte	0x3
 3234 0a43 00000000 		.4byte	capsense_CSXScanISR
 3235 0a47 00       		.byte	0
 3236 0a48 00       		.byte	0
 3237 0a49 27       		.uleb128 0x27
 3238 0a4a 18030000 		.4byte	.LASF127
 3239 0a4e 01       		.byte	0x1
 3240 0a4f 8803     		.2byte	0x388
 3241 0a51 00000000 		.4byte	.LFB6
 3242 0a55 1C000000 		.4byte	.LFE6-.LFB6
 3243 0a59 01       		.uleb128 0x1
 3244 0a5a 9C       		.byte	0x9c
 3245 0a5b 7C0A0000 		.4byte	0xa7c
 3246 0a5f 21       		.uleb128 0x21
 3247 0a60 12000000 		.4byte	.LVL87
 3248 0a64 8F100000 		.4byte	0x108f
 3249 0a68 720A0000 		.4byte	0xa72
 3250 0a6c 22       		.uleb128 0x22
 3251 0a6d 01       		.uleb128 0x1
 3252 0a6e 50       		.byte	0x50
 3253 0a6f 01       		.uleb128 0x1
 3254 0a70 3A       		.byte	0x3a
 3255 0a71 00       		.byte	0
 3256 0a72 26       		.uleb128 0x26
 3257 0a73 16000000 		.4byte	.LVL88
 3258 0a77 CB080000 		.4byte	0x8cb
 3259 0a7b 00       		.byte	0
 3260 0a7c 28       		.uleb128 0x28
 3261 0a7d 00000000 		.4byte	.LASF151
 3262 0a81 01       		.byte	0x1
 3263 0a82 DD05     		.2byte	0x5dd
 3264 0a84 A4000000 		.4byte	0xa4
 3265 0a88 00000000 		.4byte	.LFB9
 3266 0a8c 2C010000 		.4byte	.LFE9-.LFB9
 3267 0a90 01       		.uleb128 0x1
 3268 0a91 9C       		.byte	0x9c
 3269 0a92 8F0B0000 		.4byte	0xb8f
 3270 0a96 16       		.uleb128 0x16
 3271 0a97 330C0000 		.4byte	.LASF105
 3272 0a9b 01       		.byte	0x1
 3273 0a9c DD05     		.2byte	0x5dd
 3274 0a9e 83000000 		.4byte	0x83
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 103


 3275 0aa2 67030000 		.4byte	.LLST19
 3276 0aa6 16       		.uleb128 0x16
 3277 0aa7 24040000 		.4byte	.LASF107
 3278 0aab 01       		.byte	0x1
 3279 0aac DD05     		.2byte	0x5dd
 3280 0aae 77000000 		.4byte	0x77
 3281 0ab2 91030000 		.4byte	.LLST20
 3282 0ab6 17       		.uleb128 0x17
 3283 0ab7 05090000 		.4byte	.LASF128
 3284 0abb 01       		.byte	0x1
 3285 0abc E005     		.2byte	0x5e0
 3286 0abe 83000000 		.4byte	0x83
 3287 0ac2 B2030000 		.4byte	.LLST21
 3288 0ac6 17       		.uleb128 0x17
 3289 0ac7 CE040000 		.4byte	.LASF129
 3290 0acb 01       		.byte	0x1
 3291 0acc E205     		.2byte	0x5e2
 3292 0ace 83000000 		.4byte	0x83
 3293 0ad2 E1030000 		.4byte	.LLST22
 3294 0ad6 17       		.uleb128 0x17
 3295 0ad7 210A0000 		.4byte	.LASF130
 3296 0adb 01       		.byte	0x1
 3297 0adc E405     		.2byte	0x5e4
 3298 0ade 83000000 		.4byte	0x83
 3299 0ae2 F4030000 		.4byte	.LLST23
 3300 0ae6 17       		.uleb128 0x17
 3301 0ae7 EF020000 		.4byte	.LASF121
 3302 0aeb 01       		.byte	0x1
 3303 0aec E605     		.2byte	0x5e6
 3304 0aee 83000000 		.4byte	0x83
 3305 0af2 2A040000 		.4byte	.LLST24
 3306 0af6 17       		.uleb128 0x17
 3307 0af7 26060000 		.4byte	.LASF113
 3308 0afb 01       		.byte	0x1
 3309 0afc E805     		.2byte	0x5e8
 3310 0afe A4000000 		.4byte	0xa4
 3311 0b02 63040000 		.4byte	.LLST25
 3312 0b06 17       		.uleb128 0x17
 3313 0b07 29020000 		.4byte	.LASF131
 3314 0b0b 01       		.byte	0x1
 3315 0b0c EB05     		.2byte	0x5eb
 3316 0b0e 6B000000 		.4byte	0x6b
 3317 0b12 C4040000 		.4byte	.LLST26
 3318 0b16 17       		.uleb128 0x17
 3319 0b17 10010000 		.4byte	.LASF132
 3320 0b1b 01       		.byte	0x1
 3321 0b1c ED05     		.2byte	0x5ed
 3322 0b1e 6B000000 		.4byte	0x6b
 3323 0b22 FA040000 		.4byte	.LLST27
 3324 0b26 21       		.uleb128 0x21
 3325 0b27 2C000000 		.4byte	.LVL92
 3326 0b2b 53080000 		.4byte	0x853
 3327 0b2f 3B0B0000 		.4byte	0xb3b
 3328 0b33 22       		.uleb128 0x22
 3329 0b34 01       		.uleb128 0x1
 3330 0b35 50       		.byte	0x50
 3331 0b36 03       		.uleb128 0x3
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 104


 3332 0b37 74       		.byte	0x74
 3333 0b38 04       		.sleb128 4
 3334 0b39 06       		.byte	0x6
 3335 0b3a 00       		.byte	0
 3336 0b3b 21       		.uleb128 0x21
 3337 0b3c 72000000 		.4byte	.LVL102
 3338 0b40 9A100000 		.4byte	0x109a
 3339 0b44 500B0000 		.4byte	0xb50
 3340 0b48 22       		.uleb128 0x22
 3341 0b49 01       		.uleb128 0x1
 3342 0b4a 50       		.byte	0x50
 3343 0b4b 03       		.uleb128 0x3
 3344 0b4c 91       		.byte	0x91
 3345 0b4d 5C       		.sleb128 -36
 3346 0b4e 06       		.byte	0x6
 3347 0b4f 00       		.byte	0
 3348 0b50 26       		.uleb128 0x26
 3349 0b51 76000000 		.4byte	.LVL103
 3350 0b55 A5100000 		.4byte	0x10a5
 3351 0b59 21       		.uleb128 0x21
 3352 0b5a D0000000 		.4byte	.LVL113
 3353 0b5e 9A100000 		.4byte	0x109a
 3354 0b62 6E0B0000 		.4byte	0xb6e
 3355 0b66 22       		.uleb128 0x22
 3356 0b67 01       		.uleb128 0x1
 3357 0b68 50       		.byte	0x50
 3358 0b69 03       		.uleb128 0x3
 3359 0b6a 91       		.byte	0x91
 3360 0b6b 5C       		.sleb128 -36
 3361 0b6c 06       		.byte	0x6
 3362 0b6d 00       		.byte	0
 3363 0b6e 26       		.uleb128 0x26
 3364 0b6f D4000000 		.4byte	.LVL114
 3365 0b73 A5100000 		.4byte	0x10a5
 3366 0b77 23       		.uleb128 0x23
 3367 0b78 08010000 		.4byte	.LVL122
 3368 0b7c 81070000 		.4byte	0x781
 3369 0b80 22       		.uleb128 0x22
 3370 0b81 01       		.uleb128 0x1
 3371 0b82 50       		.byte	0x50
 3372 0b83 03       		.uleb128 0x3
 3373 0b84 91       		.byte	0x91
 3374 0b85 5C       		.sleb128 -36
 3375 0b86 06       		.byte	0x6
 3376 0b87 22       		.uleb128 0x22
 3377 0b88 01       		.uleb128 0x1
 3378 0b89 52       		.byte	0x52
 3379 0b8a 02       		.uleb128 0x2
 3380 0b8b 7B       		.byte	0x7b
 3381 0b8c 00       		.sleb128 0
 3382 0b8d 00       		.byte	0
 3383 0b8e 00       		.byte	0
 3384 0b8f 27       		.uleb128 0x27
 3385 0b90 BE080000 		.4byte	.LASF133
 3386 0b94 01       		.byte	0x1
 3387 0b95 2007     		.2byte	0x720
 3388 0b97 00000000 		.4byte	.LFB12
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 105


 3389 0b9b 26000000 		.4byte	.LFE12-.LFB12
 3390 0b9f 01       		.uleb128 0x1
 3391 0ba0 9C       		.byte	0x9c
 3392 0ba1 C80B0000 		.4byte	0xbc8
 3393 0ba5 16       		.uleb128 0x16
 3394 0ba6 45010000 		.4byte	.LASF134
 3395 0baa 01       		.byte	0x1
 3396 0bab 2007     		.2byte	0x720
 3397 0bad C80B0000 		.4byte	0xbc8
 3398 0bb1 3F050000 		.4byte	.LLST28
 3399 0bb5 26       		.uleb128 0x26
 3400 0bb6 14000000 		.4byte	.LVL130
 3401 0bba B0100000 		.4byte	0x10b0
 3402 0bbe 26       		.uleb128 0x26
 3403 0bbf 24000000 		.4byte	.LVL131
 3404 0bc3 B0100000 		.4byte	0x10b0
 3405 0bc7 00       		.byte	0
 3406 0bc8 06       		.uleb128 0x6
 3407 0bc9 04       		.byte	0x4
 3408 0bca CE0B0000 		.4byte	0xbce
 3409 0bce 19       		.uleb128 0x19
 3410 0bcf 25060000 		.4byte	0x625
 3411 0bd3 27       		.uleb128 0x27
 3412 0bd4 9B060000 		.4byte	.LASF135
 3413 0bd8 01       		.byte	0x1
 3414 0bd9 3D07     		.2byte	0x73d
 3415 0bdb 00000000 		.4byte	.LFB13
 3416 0bdf 24000000 		.4byte	.LFE13-.LFB13
 3417 0be3 01       		.uleb128 0x1
 3418 0be4 9C       		.byte	0x9c
 3419 0be5 160C0000 		.4byte	0xc16
 3420 0be9 16       		.uleb128 0x16
 3421 0bea B3090000 		.4byte	.LASF136
 3422 0bee 01       		.byte	0x1
 3423 0bef 3D07     		.2byte	0x73d
 3424 0bf1 C80B0000 		.4byte	0xbc8
 3425 0bf5 6B050000 		.4byte	.LLST29
 3426 0bf9 21       		.uleb128 0x21
 3427 0bfa 12000000 		.4byte	.LVL135
 3428 0bfe B0100000 		.4byte	0x10b0
 3429 0c02 0C0C0000 		.4byte	0xc0c
 3430 0c06 22       		.uleb128 0x22
 3431 0c07 01       		.uleb128 0x1
 3432 0c08 52       		.byte	0x52
 3433 0c09 01       		.uleb128 0x1
 3434 0c0a 30       		.byte	0x30
 3435 0c0b 00       		.byte	0
 3436 0c0c 26       		.uleb128 0x26
 3437 0c0d 22000000 		.4byte	.LVL136
 3438 0c11 B0100000 		.4byte	0x10b0
 3439 0c15 00       		.byte	0
 3440 0c16 27       		.uleb128 0x27
 3441 0c17 57090000 		.4byte	.LASF137
 3442 0c1b 01       		.byte	0x1
 3443 0c1c 9702     		.2byte	0x297
 3444 0c1e 00000000 		.4byte	.LFB5
 3445 0c22 88000000 		.4byte	.LFE5-.LFB5
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 106


 3446 0c26 01       		.uleb128 0x1
 3447 0c27 9C       		.byte	0x9c
 3448 0c28 640C0000 		.4byte	0xc64
 3449 0c2c 26       		.uleb128 0x26
 3450 0c2d 14000000 		.4byte	.LVL138
 3451 0c31 4D100000 		.4byte	0x104d
 3452 0c35 26       		.uleb128 0x26
 3453 0c36 4A000000 		.4byte	.LVL139
 3454 0c3a 8F0B0000 		.4byte	0xb8f
 3455 0c3e 26       		.uleb128 0x26
 3456 0c3f 50000000 		.4byte	.LVL140
 3457 0c43 D30B0000 		.4byte	0xbd3
 3458 0c47 21       		.uleb128 0x21
 3459 0c48 66000000 		.4byte	.LVL141
 3460 0c4c 8F100000 		.4byte	0x108f
 3461 0c50 5A0C0000 		.4byte	0xc5a
 3462 0c54 22       		.uleb128 0x22
 3463 0c55 01       		.uleb128 0x1
 3464 0c56 50       		.byte	0x50
 3465 0c57 01       		.uleb128 0x1
 3466 0c58 3A       		.byte	0x3a
 3467 0c59 00       		.byte	0
 3468 0c5a 26       		.uleb128 0x26
 3469 0c5b 6A000000 		.4byte	.LVL142
 3470 0c5f CB080000 		.4byte	0x8cb
 3471 0c63 00       		.byte	0
 3472 0c64 27       		.uleb128 0x27
 3473 0c65 92090000 		.4byte	.LASF138
 3474 0c69 01       		.byte	0x1
 3475 0c6a 5907     		.2byte	0x759
 3476 0c6c 00000000 		.4byte	.LFB14
 3477 0c70 44000000 		.4byte	.LFE14-.LFB14
 3478 0c74 01       		.uleb128 0x1
 3479 0c75 9C       		.byte	0x9c
 3480 0c76 CF0C0000 		.4byte	0xccf
 3481 0c7a 16       		.uleb128 0x16
 3482 0c7b 45010000 		.4byte	.LASF134
 3483 0c7f 01       		.byte	0x1
 3484 0c80 5907     		.2byte	0x759
 3485 0c82 C80B0000 		.4byte	0xbc8
 3486 0c86 97050000 		.4byte	.LLST30
 3487 0c8a 17       		.uleb128 0x17
 3488 0c8b 3C010000 		.4byte	.LASF139
 3489 0c8f 01       		.byte	0x1
 3490 0c90 5B07     		.2byte	0x75b
 3491 0c92 83000000 		.4byte	0x83
 3492 0c96 C3050000 		.4byte	.LLST31
 3493 0c9a 17       		.uleb128 0x17
 3494 0c9b 4B010000 		.4byte	.LASF126
 3495 0c9f 01       		.byte	0x1
 3496 0ca0 5C07     		.2byte	0x75c
 3497 0ca2 6B000000 		.4byte	0x6b
 3498 0ca6 E1050000 		.4byte	.LLST32
 3499 0caa 26       		.uleb128 0x26
 3500 0cab 08000000 		.4byte	.LVL144
 3501 0caf 58100000 		.4byte	0x1058
 3502 0cb3 26       		.uleb128 0x26
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 107


 3503 0cb4 16000000 		.4byte	.LVL147
 3504 0cb8 63100000 		.4byte	0x1063
 3505 0cbc 26       		.uleb128 0x26
 3506 0cbd 1A000000 		.4byte	.LVL148
 3507 0cc1 58100000 		.4byte	0x1058
 3508 0cc5 26       		.uleb128 0x26
 3509 0cc6 3C000000 		.4byte	.LVL153
 3510 0cca 63100000 		.4byte	0x1063
 3511 0cce 00       		.byte	0
 3512 0ccf 27       		.uleb128 0x27
 3513 0cd0 6F080000 		.4byte	.LASF140
 3514 0cd4 01       		.byte	0x1
 3515 0cd5 8C07     		.2byte	0x78c
 3516 0cd7 00000000 		.4byte	.LFB15
 3517 0cdb 4C000000 		.4byte	.LFE15-.LFB15
 3518 0cdf 01       		.uleb128 0x1
 3519 0ce0 9C       		.byte	0x9c
 3520 0ce1 3A0D0000 		.4byte	0xd3a
 3521 0ce5 16       		.uleb128 0x16
 3522 0ce6 B3090000 		.4byte	.LASF136
 3523 0cea 01       		.byte	0x1
 3524 0ceb 8C07     		.2byte	0x78c
 3525 0ced C80B0000 		.4byte	0xbc8
 3526 0cf1 FF050000 		.4byte	.LLST33
 3527 0cf5 17       		.uleb128 0x17
 3528 0cf6 3C010000 		.4byte	.LASF139
 3529 0cfa 01       		.byte	0x1
 3530 0cfb 8E07     		.2byte	0x78e
 3531 0cfd 83000000 		.4byte	0x83
 3532 0d01 2B060000 		.4byte	.LLST34
 3533 0d05 17       		.uleb128 0x17
 3534 0d06 4B010000 		.4byte	.LASF126
 3535 0d0a 01       		.byte	0x1
 3536 0d0b 8F07     		.2byte	0x78f
 3537 0d0d 6B000000 		.4byte	0x6b
 3538 0d11 49060000 		.4byte	.LLST35
 3539 0d15 26       		.uleb128 0x26
 3540 0d16 08000000 		.4byte	.LVL155
 3541 0d1a 58100000 		.4byte	0x1058
 3542 0d1e 26       		.uleb128 0x26
 3543 0d1f 16000000 		.4byte	.LVL158
 3544 0d23 63100000 		.4byte	0x1063
 3545 0d27 26       		.uleb128 0x26
 3546 0d28 1A000000 		.4byte	.LVL159
 3547 0d2c 58100000 		.4byte	0x1058
 3548 0d30 26       		.uleb128 0x26
 3549 0d31 46000000 		.4byte	.LVL165
 3550 0d35 63100000 		.4byte	0x1063
 3551 0d39 00       		.byte	0
 3552 0d3a 29       		.uleb128 0x29
 3553 0d3b 8B030000 		.4byte	.LASF142
 3554 0d3f 01       		.byte	0x1
 3555 0d40 B503     		.2byte	0x3b5
 3556 0d42 00000000 		.4byte	.LFB7
 3557 0d46 DC000000 		.4byte	.LFE7-.LFB7
 3558 0d4a 01       		.uleb128 0x1
 3559 0d4b 9C       		.byte	0x9c
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 108


 3560 0d4c A20D0000 		.4byte	0xda2
 3561 0d50 26       		.uleb128 0x26
 3562 0d51 1C000000 		.4byte	.LVL167
 3563 0d55 640C0000 		.4byte	0xc64
 3564 0d59 26       		.uleb128 0x26
 3565 0d5a 3E000000 		.4byte	.LVL168
 3566 0d5e 8F0B0000 		.4byte	0xb8f
 3567 0d62 26       		.uleb128 0x26
 3568 0d63 4A000000 		.4byte	.LVL169
 3569 0d67 CB080000 		.4byte	0x8cb
 3570 0d6b 26       		.uleb128 0x26
 3571 0d6c 62000000 		.4byte	.LVL170
 3572 0d70 CF0C0000 		.4byte	0xccf
 3573 0d74 26       		.uleb128 0x26
 3574 0d75 6C000000 		.4byte	.LVL171
 3575 0d79 D30B0000 		.4byte	0xbd3
 3576 0d7d 26       		.uleb128 0x26
 3577 0d7e 88000000 		.4byte	.LVL172
 3578 0d82 8F0B0000 		.4byte	0xb8f
 3579 0d86 26       		.uleb128 0x26
 3580 0d87 94000000 		.4byte	.LVL173
 3581 0d8b CB080000 		.4byte	0x8cb
 3582 0d8f 26       		.uleb128 0x26
 3583 0d90 9E000000 		.4byte	.LVL174
 3584 0d94 CF0C0000 		.4byte	0xccf
 3585 0d98 26       		.uleb128 0x26
 3586 0d99 AA000000 		.4byte	.LVL175
 3587 0d9d BB100000 		.4byte	0x10bb
 3588 0da1 00       		.byte	0
 3589 0da2 27       		.uleb128 0x27
 3590 0da3 FC050000 		.4byte	.LASF143
 3591 0da7 01       		.byte	0x1
 3592 0da8 3901     		.2byte	0x139
 3593 0daa 00000000 		.4byte	.LFB2
 3594 0dae 24000000 		.4byte	.LFE2-.LFB2
 3595 0db2 01       		.uleb128 0x1
 3596 0db3 9C       		.byte	0x9c
 3597 0db4 CB0D0000 		.4byte	0xdcb
 3598 0db8 26       		.uleb128 0x26
 3599 0db9 12000000 		.4byte	.LVL176
 3600 0dbd 640C0000 		.4byte	0xc64
 3601 0dc1 26       		.uleb128 0x26
 3602 0dc2 18000000 		.4byte	.LVL177
 3603 0dc6 CF0C0000 		.4byte	0xccf
 3604 0dca 00       		.byte	0
 3605 0dcb 27       		.uleb128 0x27
 3606 0dcc 9D0A0000 		.4byte	.LASF144
 3607 0dd0 01       		.byte	0x1
 3608 0dd1 9B01     		.2byte	0x19b
 3609 0dd3 00000000 		.4byte	.LFB3
 3610 0dd7 6C000000 		.4byte	.LFE3-.LFB3
 3611 0ddb 01       		.uleb128 0x1
 3612 0ddc 9C       		.byte	0x9c
 3613 0ddd 5B0E0000 		.4byte	0xe5b
 3614 0de1 16       		.uleb128 0x16
 3615 0de2 330C0000 		.4byte	.LASF105
 3616 0de6 01       		.byte	0x1
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 109


 3617 0de7 9B01     		.2byte	0x19b
 3618 0de9 83000000 		.4byte	0x83
 3619 0ded 67060000 		.4byte	.LLST36
 3620 0df1 17       		.uleb128 0x17
 3621 0df2 4A0B0000 		.4byte	.LASF145
 3622 0df6 01       		.byte	0x1
 3623 0df7 9E01     		.2byte	0x19e
 3624 0df9 5B0E0000 		.4byte	0xe5b
 3625 0dfd 93060000 		.4byte	.LLST37
 3626 0e01 17       		.uleb128 0x17
 3627 0e02 D30A0000 		.4byte	.LASF123
 3628 0e06 01       		.byte	0x1
 3629 0e07 A101     		.2byte	0x1a1
 3630 0e09 83000000 		.4byte	0x83
 3631 0e0d A6060000 		.4byte	.LLST38
 3632 0e11 17       		.uleb128 0x17
 3633 0e12 F8030000 		.4byte	.LASF146
 3634 0e16 01       		.byte	0x1
 3635 0e17 A201     		.2byte	0x1a2
 3636 0e19 83000000 		.4byte	0x83
 3637 0e1d D6060000 		.4byte	.LLST39
 3638 0e21 21       		.uleb128 0x21
 3639 0e22 10000000 		.4byte	.LVL180
 3640 0e26 C6100000 		.4byte	0x10c6
 3641 0e2a 340E0000 		.4byte	0xe34
 3642 0e2e 22       		.uleb128 0x22
 3643 0e2f 01       		.uleb128 0x1
 3644 0e30 50       		.byte	0x50
 3645 0e31 01       		.uleb128 0x1
 3646 0e32 32       		.byte	0x32
 3647 0e33 00       		.byte	0
 3648 0e34 26       		.uleb128 0x26
 3649 0e35 14000000 		.4byte	.LVL181
 3650 0e39 A20D0000 		.4byte	0xda2
 3651 0e3d 21       		.uleb128 0x21
 3652 0e3e 32000000 		.4byte	.LVL185
 3653 0e42 53080000 		.4byte	0x853
 3654 0e46 510E0000 		.4byte	0xe51
 3655 0e4a 22       		.uleb128 0x22
 3656 0e4b 01       		.uleb128 0x1
 3657 0e4c 50       		.byte	0x50
 3658 0e4d 02       		.uleb128 0x2
 3659 0e4e 75       		.byte	0x75
 3660 0e4f 00       		.sleb128 0
 3661 0e50 00       		.byte	0
 3662 0e51 26       		.uleb128 0x26
 3663 0e52 4E000000 		.4byte	.LVL192
 3664 0e56 79100000 		.4byte	0x1079
 3665 0e5a 00       		.byte	0
 3666 0e5b 06       		.uleb128 0x6
 3667 0e5c 04       		.byte	0x4
 3668 0e5d C2010000 		.4byte	0x1c2
 3669 0e61 20       		.uleb128 0x20
 3670 0e62 91010000 		.4byte	.LASF147
 3671 0e66 01       		.byte	0x1
 3672 0e67 1002     		.2byte	0x210
 3673 0e69 00000000 		.4byte	.LFB4
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 110


 3674 0e6d 84000000 		.4byte	.LFE4-.LFB4
 3675 0e71 01       		.uleb128 0x1
 3676 0e72 9C       		.byte	0x9c
 3677 0e73 DF0E0000 		.4byte	0xedf
 3678 0e77 16       		.uleb128 0x16
 3679 0e78 330C0000 		.4byte	.LASF105
 3680 0e7c 01       		.byte	0x1
 3681 0e7d 1002     		.2byte	0x210
 3682 0e7f 83000000 		.4byte	0x83
 3683 0e83 01070000 		.4byte	.LLST40
 3684 0e87 16       		.uleb128 0x16
 3685 0e88 FB010000 		.4byte	.LASF148
 3686 0e8c 01       		.byte	0x1
 3687 0e8d 1002     		.2byte	0x210
 3688 0e8f 83000000 		.4byte	0x83
 3689 0e93 22070000 		.4byte	.LLST41
 3690 0e97 17       		.uleb128 0x17
 3691 0e98 2C030000 		.4byte	.LASF149
 3692 0e9c 01       		.byte	0x1
 3693 0e9d 1202     		.2byte	0x212
 3694 0e9f 83000000 		.4byte	0x83
 3695 0ea3 4E070000 		.4byte	.LLST42
 3696 0ea7 17       		.uleb128 0x17
 3697 0ea8 5A010000 		.4byte	.LASF150
 3698 0eac 01       		.byte	0x1
 3699 0ead 1302     		.2byte	0x213
 3700 0eaf 83000000 		.4byte	0x83
 3701 0eb3 61070000 		.4byte	.LLST43
 3702 0eb7 21       		.uleb128 0x21
 3703 0eb8 08000000 		.4byte	.LVL196
 3704 0ebc CB0D0000 		.4byte	0xdcb
 3705 0ec0 CC0E0000 		.4byte	0xecc
 3706 0ec4 22       		.uleb128 0x22
 3707 0ec5 01       		.uleb128 0x1
 3708 0ec6 50       		.byte	0x50
 3709 0ec7 03       		.uleb128 0x3
 3710 0ec8 F3       		.byte	0xf3
 3711 0ec9 01       		.uleb128 0x1
 3712 0eca 50       		.byte	0x50
 3713 0ecb 00       		.byte	0
 3714 0ecc 26       		.uleb128 0x26
 3715 0ecd 58000000 		.4byte	.LVL203
 3716 0ed1 8F0B0000 		.4byte	0xb8f
 3717 0ed5 26       		.uleb128 0x26
 3718 0ed6 5E000000 		.4byte	.LVL204
 3719 0eda D30B0000 		.4byte	0xbd3
 3720 0ede 00       		.byte	0
 3721 0edf 2A       		.uleb128 0x2a
 3722 0ee0 34030000 		.4byte	.LASF152
 3723 0ee4 01       		.byte	0x1
 3724 0ee5 C107     		.2byte	0x7c1
 3725 0ee7 83000000 		.4byte	0x83
 3726 0eeb 00000000 		.4byte	.LFB16
 3727 0eef 14000000 		.4byte	.LFE16-.LFB16
 3728 0ef3 01       		.uleb128 0x1
 3729 0ef4 9C       		.byte	0x9c
 3730 0ef5 260F0000 		.4byte	0xf26
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 111


 3731 0ef9 16       		.uleb128 0x16
 3732 0efa 330C0000 		.4byte	.LASF105
 3733 0efe 01       		.byte	0x1
 3734 0eff C107     		.2byte	0x7c1
 3735 0f01 83000000 		.4byte	0x83
 3736 0f05 7F070000 		.4byte	.LLST44
 3737 0f09 2B       		.uleb128 0x2b
 3738 0f0a 8B090000 		.4byte	.LASF153
 3739 0f0e 01       		.byte	0x1
 3740 0f0f C307     		.2byte	0x7c3
 3741 0f11 83000000 		.4byte	0x83
 3742 0f15 01       		.uleb128 0x1
 3743 0f16 50       		.byte	0x50
 3744 0f17 2B       		.uleb128 0x2b
 3745 0f18 21020000 		.4byte	.LASF154
 3746 0f1c 01       		.byte	0x1
 3747 0f1d C707     		.2byte	0x7c7
 3748 0f1f 5B0E0000 		.4byte	0xe5b
 3749 0f23 01       		.uleb128 0x1
 3750 0f24 53       		.byte	0x53
 3751 0f25 00       		.byte	0
 3752 0f26 2C       		.uleb128 0x2c
 3753 0f27 F7090000 		.4byte	.LASF155
 3754 0f2b 01       		.byte	0x1
 3755 0f2c 4D       		.byte	0x4d
 3756 0f2d C80B0000 		.4byte	0xbc8
 3757 0f31 05       		.uleb128 0x5
 3758 0f32 03       		.byte	0x3
 3759 0f33 0C000000 		.4byte	capsense_curTxIOPtr
 3760 0f37 2C       		.uleb128 0x2c
 3761 0f38 0C070000 		.4byte	.LASF156
 3762 0f3c 01       		.byte	0x1
 3763 0f3d 4F       		.byte	0x4f
 3764 0f3e C80B0000 		.4byte	0xbc8
 3765 0f42 05       		.uleb128 0x5
 3766 0f43 03       		.byte	0x3
 3767 0f44 08000000 		.4byte	capsense_curRxIOPtr
 3768 0f48 2C       		.uleb128 0x2c
 3769 0f49 0C040000 		.4byte	.LASF157
 3770 0f4d 01       		.byte	0x1
 3771 0f4e 51       		.byte	0x51
 3772 0f4f 77000000 		.4byte	0x77
 3773 0f53 05       		.uleb128 0x5
 3774 0f54 03       		.byte	0x3
 3775 0f55 06000000 		.4byte	capsense_curWdgtTotalRx
 3776 0f59 2C       		.uleb128 0x2c
 3777 0f5a 4C050000 		.4byte	.LASF158
 3778 0f5e 01       		.byte	0x1
 3779 0f5f 53       		.byte	0x53
 3780 0f60 77000000 		.4byte	0x77
 3781 0f64 05       		.uleb128 0x5
 3782 0f65 03       		.byte	0x3
 3783 0f66 04000000 		.4byte	capsense_curWdgtTotalTx
 3784 0f6a 2C       		.uleb128 0x2c
 3785 0f6b 3C070000 		.4byte	.LASF159
 3786 0f6f 01       		.byte	0x1
 3787 0f70 55       		.byte	0x55
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 112


 3788 0f71 77000000 		.4byte	0x77
 3789 0f75 05       		.uleb128 0x5
 3790 0f76 03       		.byte	0x3
 3791 0f77 10000000 		.4byte	capsense_eleCsxDisconnectFlag
 3792 0f7b 2D       		.uleb128 0x2d
 3793 0f7c 17060000 		.4byte	.LASF160
 3794 0f80 04       		.byte	0x4
 3795 0f81 C604     		.2byte	0x4c6
 3796 0f83 94050000 		.4byte	0x594
 3797 0f87 2D       		.uleb128 0x2d
 3798 0f88 A7030000 		.4byte	.LASF161
 3799 0f8c 04       		.byte	0x4
 3800 0f8d C704     		.2byte	0x4c7
 3801 0f8f 930F0000 		.4byte	0xf93
 3802 0f93 19       		.uleb128 0x19
 3803 0f94 37070000 		.4byte	0x737
 3804 0f98 2E       		.uleb128 0x2e
 3805 0f99 9E080000 		.4byte	.LASF162
 3806 0f9d 01       		.byte	0x1
 3807 0f9e 44       		.byte	0x44
 3808 0f9f B5000000 		.4byte	0xb5
 3809 0fa3 05       		.uleb128 0x5
 3810 0fa4 03       		.byte	0x3
 3811 0fa5 00000000 		.4byte	capsense_csxScanPeriod
 3812 0fa9 2E       		.uleb128 0x2e
 3813 0faa 42090000 		.4byte	.LASF163
 3814 0fae 01       		.byte	0x1
 3815 0faf 46       		.byte	0x46
 3816 0fb0 B5000000 		.4byte	0xb5
 3817 0fb4 05       		.uleb128 0x5
 3818 0fb5 03       		.byte	0x3
 3819 0fb6 00000000 		.4byte	capsense_csxRawCount
 3820 0fba 2E       		.uleb128 0x2e
 3821 0fbb 39000000 		.4byte	.LASF164
 3822 0fbf 01       		.byte	0x1
 3823 0fc0 7B       		.byte	0x7b
 3824 0fc1 CB000000 		.4byte	0xcb
 3825 0fc5 05       		.uleb128 0x5
 3826 0fc6 03       		.byte	0x3
 3827 0fc7 00000000 		.4byte	capsense_CSXPostScanApiPtr
 3828 0fcb 2F       		.uleb128 0x2f
 3829 0fcc E3030000 		.4byte	.LASF165
 3830 0fd0 05       		.byte	0x5
 3831 0fd1 B1       		.byte	0xb1
 3832 0fd2 B0000000 		.4byte	0xb0
 3833 0fd6 2F       		.uleb128 0x2f
 3834 0fd7 F7060000 		.4byte	.LASF166
 3835 0fdb 05       		.byte	0x5
 3836 0fdc B2       		.byte	0xb2
 3837 0fdd B0000000 		.4byte	0xb0
 3838 0fe1 2F       		.uleb128 0x2f
 3839 0fe2 7D060000 		.4byte	.LASF167
 3840 0fe6 05       		.byte	0x5
 3841 0fe7 B3       		.byte	0xb3
 3842 0fe8 6B000000 		.4byte	0x6b
 3843 0fec 2F       		.uleb128 0x2f
 3844 0fed 22050000 		.4byte	.LASF168
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 113


 3845 0ff1 05       		.byte	0x5
 3846 0ff2 B5       		.byte	0xb5
 3847 0ff3 F8060000 		.4byte	0x6f8
 3848 0ff7 2F       		.uleb128 0x2f
 3849 0ff8 610C0000 		.4byte	.LASF169
 3850 0ffc 05       		.byte	0x5
 3851 0ffd BC       		.byte	0xbc
 3852 0ffe 02100000 		.4byte	0x1002
 3853 1002 19       		.uleb128 0x19
 3854 1003 6B000000 		.4byte	0x6b
 3855 1007 2F       		.uleb128 0x2f
 3856 1008 C1030000 		.4byte	.LASF170
 3857 100c 05       		.byte	0x5
 3858 100d C2       		.byte	0xc2
 3859 100e 48080000 		.4byte	0x848
 3860 1012 0D       		.uleb128 0xd
 3861 1013 22100000 		.4byte	0x1022
 3862 1017 22100000 		.4byte	0x1022
 3863 101b 0E       		.uleb128 0xe
 3864 101c D9000000 		.4byte	0xd9
 3865 1020 05       		.byte	0x5
 3866 1021 00       		.byte	0
 3867 1022 19       		.uleb128 0x19
 3868 1023 64070000 		.4byte	0x764
 3869 1027 2F       		.uleb128 0x2f
 3870 1028 E0070000 		.4byte	.LASF171
 3871 102c 05       		.byte	0x5
 3872 102d F5       		.byte	0xf5
 3873 102e 32100000 		.4byte	0x1032
 3874 1032 19       		.uleb128 0x19
 3875 1033 12100000 		.4byte	0x1012
 3876 1037 30       		.uleb128 0x30
 3877 1038 DF010000 		.4byte	.LASF172
 3878 103c DF010000 		.4byte	.LASF172
 3879 1040 06       		.byte	0x6
 3880 1041 D8       		.byte	0xd8
 3881 1042 30       		.uleb128 0x30
 3882 1043 C70A0000 		.4byte	.LASF173
 3883 1047 C70A0000 		.4byte	.LASF173
 3884 104b 06       		.byte	0x6
 3885 104c D6       		.byte	0xd6
 3886 104d 30       		.uleb128 0x30
 3887 104e 3F060000 		.4byte	.LASF174
 3888 1052 3F060000 		.4byte	.LASF174
 3889 1056 05       		.byte	0x5
 3890 1057 84       		.byte	0x84
 3891 1058 30       		.uleb128 0x30
 3892 1059 010B0000 		.4byte	.LASF175
 3893 105d 010B0000 		.4byte	.LASF175
 3894 1061 06       		.byte	0x6
 3895 1062 F8       		.byte	0xf8
 3896 1063 30       		.uleb128 0x30
 3897 1064 01050000 		.4byte	.LASF176
 3898 1068 01050000 		.4byte	.LASF176
 3899 106c 06       		.byte	0x6
 3900 106d F9       		.byte	0xf9
 3901 106e 30       		.uleb128 0x30
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 114


 3902 106f 62010000 		.4byte	.LASF177
 3903 1073 62010000 		.4byte	.LASF177
 3904 1077 05       		.byte	0x5
 3905 1078 A8       		.byte	0xa8
 3906 1079 30       		.uleb128 0x30
 3907 107a 54000000 		.4byte	.LASF178
 3908 107e 54000000 		.4byte	.LASF178
 3909 1082 05       		.byte	0x5
 3910 1083 7F       		.byte	0x7f
 3911 1084 30       		.uleb128 0x30
 3912 1085 110C0000 		.4byte	.LASF179
 3913 1089 110C0000 		.4byte	.LASF179
 3914 108d 05       		.byte	0x5
 3915 108e 82       		.byte	0x82
 3916 108f 30       		.uleb128 0x30
 3917 1090 52030000 		.4byte	.LASF180
 3918 1094 52030000 		.4byte	.LASF180
 3919 1098 06       		.byte	0x6
 3920 1099 ED       		.byte	0xed
 3921 109a 30       		.uleb128 0x30
 3922 109b EE000000 		.4byte	.LASF181
 3923 109f EE000000 		.4byte	.LASF181
 3924 10a3 05       		.byte	0x5
 3925 10a4 57       		.byte	0x57
 3926 10a5 30       		.uleb128 0x30
 3927 10a6 240B0000 		.4byte	.LASF182
 3928 10aa 240B0000 		.4byte	.LASF182
 3929 10ae 05       		.byte	0x5
 3930 10af 58       		.byte	0x58
 3931 10b0 30       		.uleb128 0x30
 3932 10b1 C9070000 		.4byte	.LASF183
 3933 10b5 C9070000 		.4byte	.LASF183
 3934 10b9 05       		.byte	0x5
 3935 10ba A9       		.byte	0xa9
 3936 10bb 30       		.uleb128 0x30
 3937 10bc C8050000 		.4byte	.LASF184
 3938 10c0 C8050000 		.4byte	.LASF184
 3939 10c4 05       		.byte	0x5
 3940 10c5 83       		.byte	0x83
 3941 10c6 30       		.uleb128 0x30
 3942 10c7 690B0000 		.4byte	.LASF185
 3943 10cb 690B0000 		.4byte	.LASF185
 3944 10cf 05       		.byte	0x5
 3945 10d0 85       		.byte	0x85
 3946 10d1 00       		.byte	0
 3947              		.section	.debug_abbrev,"",%progbits
 3948              	.Ldebug_abbrev0:
 3949 0000 01       		.uleb128 0x1
 3950 0001 11       		.uleb128 0x11
 3951 0002 01       		.byte	0x1
 3952 0003 25       		.uleb128 0x25
 3953 0004 0E       		.uleb128 0xe
 3954 0005 13       		.uleb128 0x13
 3955 0006 0B       		.uleb128 0xb
 3956 0007 03       		.uleb128 0x3
 3957 0008 0E       		.uleb128 0xe
 3958 0009 1B       		.uleb128 0x1b
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 115


 3959 000a 0E       		.uleb128 0xe
 3960 000b 55       		.uleb128 0x55
 3961 000c 17       		.uleb128 0x17
 3962 000d 11       		.uleb128 0x11
 3963 000e 01       		.uleb128 0x1
 3964 000f 10       		.uleb128 0x10
 3965 0010 17       		.uleb128 0x17
 3966 0011 00       		.byte	0
 3967 0012 00       		.byte	0
 3968 0013 02       		.uleb128 0x2
 3969 0014 24       		.uleb128 0x24
 3970 0015 00       		.byte	0
 3971 0016 0B       		.uleb128 0xb
 3972 0017 0B       		.uleb128 0xb
 3973 0018 3E       		.uleb128 0x3e
 3974 0019 0B       		.uleb128 0xb
 3975 001a 03       		.uleb128 0x3
 3976 001b 0E       		.uleb128 0xe
 3977 001c 00       		.byte	0
 3978 001d 00       		.byte	0
 3979 001e 03       		.uleb128 0x3
 3980 001f 24       		.uleb128 0x24
 3981 0020 00       		.byte	0
 3982 0021 0B       		.uleb128 0xb
 3983 0022 0B       		.uleb128 0xb
 3984 0023 3E       		.uleb128 0x3e
 3985 0024 0B       		.uleb128 0xb
 3986 0025 03       		.uleb128 0x3
 3987 0026 08       		.uleb128 0x8
 3988 0027 00       		.byte	0
 3989 0028 00       		.byte	0
 3990 0029 04       		.uleb128 0x4
 3991 002a 16       		.uleb128 0x16
 3992 002b 00       		.byte	0
 3993 002c 03       		.uleb128 0x3
 3994 002d 0E       		.uleb128 0xe
 3995 002e 3A       		.uleb128 0x3a
 3996 002f 0B       		.uleb128 0xb
 3997 0030 3B       		.uleb128 0x3b
 3998 0031 05       		.uleb128 0x5
 3999 0032 49       		.uleb128 0x49
 4000 0033 13       		.uleb128 0x13
 4001 0034 00       		.byte	0
 4002 0035 00       		.byte	0
 4003 0036 05       		.uleb128 0x5
 4004 0037 35       		.uleb128 0x35
 4005 0038 00       		.byte	0
 4006 0039 49       		.uleb128 0x49
 4007 003a 13       		.uleb128 0x13
 4008 003b 00       		.byte	0
 4009 003c 00       		.byte	0
 4010 003d 06       		.uleb128 0x6
 4011 003e 0F       		.uleb128 0xf
 4012 003f 00       		.byte	0
 4013 0040 0B       		.uleb128 0xb
 4014 0041 0B       		.uleb128 0xb
 4015 0042 49       		.uleb128 0x49
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 116


 4016 0043 13       		.uleb128 0x13
 4017 0044 00       		.byte	0
 4018 0045 00       		.byte	0
 4019 0046 07       		.uleb128 0x7
 4020 0047 15       		.uleb128 0x15
 4021 0048 00       		.byte	0
 4022 0049 27       		.uleb128 0x27
 4023 004a 19       		.uleb128 0x19
 4024 004b 00       		.byte	0
 4025 004c 00       		.byte	0
 4026 004d 08       		.uleb128 0x8
 4027 004e 0F       		.uleb128 0xf
 4028 004f 00       		.byte	0
 4029 0050 0B       		.uleb128 0xb
 4030 0051 0B       		.uleb128 0xb
 4031 0052 00       		.byte	0
 4032 0053 00       		.byte	0
 4033 0054 09       		.uleb128 0x9
 4034 0055 04       		.uleb128 0x4
 4035 0056 01       		.byte	0x1
 4036 0057 0B       		.uleb128 0xb
 4037 0058 0B       		.uleb128 0xb
 4038 0059 49       		.uleb128 0x49
 4039 005a 13       		.uleb128 0x13
 4040 005b 3A       		.uleb128 0x3a
 4041 005c 0B       		.uleb128 0xb
 4042 005d 3B       		.uleb128 0x3b
 4043 005e 0B       		.uleb128 0xb
 4044 005f 01       		.uleb128 0x1
 4045 0060 13       		.uleb128 0x13
 4046 0061 00       		.byte	0
 4047 0062 00       		.byte	0
 4048 0063 0A       		.uleb128 0xa
 4049 0064 28       		.uleb128 0x28
 4050 0065 00       		.byte	0
 4051 0066 03       		.uleb128 0x3
 4052 0067 0E       		.uleb128 0xe
 4053 0068 1C       		.uleb128 0x1c
 4054 0069 0B       		.uleb128 0xb
 4055 006a 00       		.byte	0
 4056 006b 00       		.byte	0
 4057 006c 0B       		.uleb128 0xb
 4058 006d 13       		.uleb128 0x13
 4059 006e 01       		.byte	0x1
 4060 006f 0B       		.uleb128 0xb
 4061 0070 0B       		.uleb128 0xb
 4062 0071 3A       		.uleb128 0x3a
 4063 0072 0B       		.uleb128 0xb
 4064 0073 3B       		.uleb128 0x3b
 4065 0074 0B       		.uleb128 0xb
 4066 0075 01       		.uleb128 0x1
 4067 0076 13       		.uleb128 0x13
 4068 0077 00       		.byte	0
 4069 0078 00       		.byte	0
 4070 0079 0C       		.uleb128 0xc
 4071 007a 0D       		.uleb128 0xd
 4072 007b 00       		.byte	0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 117


 4073 007c 03       		.uleb128 0x3
 4074 007d 0E       		.uleb128 0xe
 4075 007e 3A       		.uleb128 0x3a
 4076 007f 0B       		.uleb128 0xb
 4077 0080 3B       		.uleb128 0x3b
 4078 0081 0B       		.uleb128 0xb
 4079 0082 49       		.uleb128 0x49
 4080 0083 13       		.uleb128 0x13
 4081 0084 38       		.uleb128 0x38
 4082 0085 0B       		.uleb128 0xb
 4083 0086 00       		.byte	0
 4084 0087 00       		.byte	0
 4085 0088 0D       		.uleb128 0xd
 4086 0089 01       		.uleb128 0x1
 4087 008a 01       		.byte	0x1
 4088 008b 49       		.uleb128 0x49
 4089 008c 13       		.uleb128 0x13
 4090 008d 01       		.uleb128 0x1
 4091 008e 13       		.uleb128 0x13
 4092 008f 00       		.byte	0
 4093 0090 00       		.byte	0
 4094 0091 0E       		.uleb128 0xe
 4095 0092 21       		.uleb128 0x21
 4096 0093 00       		.byte	0
 4097 0094 49       		.uleb128 0x49
 4098 0095 13       		.uleb128 0x13
 4099 0096 2F       		.uleb128 0x2f
 4100 0097 0B       		.uleb128 0xb
 4101 0098 00       		.byte	0
 4102 0099 00       		.byte	0
 4103 009a 0F       		.uleb128 0xf
 4104 009b 16       		.uleb128 0x16
 4105 009c 00       		.byte	0
 4106 009d 03       		.uleb128 0x3
 4107 009e 0E       		.uleb128 0xe
 4108 009f 3A       		.uleb128 0x3a
 4109 00a0 0B       		.uleb128 0xb
 4110 00a1 3B       		.uleb128 0x3b
 4111 00a2 0B       		.uleb128 0xb
 4112 00a3 49       		.uleb128 0x49
 4113 00a4 13       		.uleb128 0x13
 4114 00a5 00       		.byte	0
 4115 00a6 00       		.byte	0
 4116 00a7 10       		.uleb128 0x10
 4117 00a8 0D       		.uleb128 0xd
 4118 00a9 00       		.byte	0
 4119 00aa 03       		.uleb128 0x3
 4120 00ab 0E       		.uleb128 0xe
 4121 00ac 3A       		.uleb128 0x3a
 4122 00ad 0B       		.uleb128 0xb
 4123 00ae 3B       		.uleb128 0x3b
 4124 00af 05       		.uleb128 0x5
 4125 00b0 49       		.uleb128 0x49
 4126 00b1 13       		.uleb128 0x13
 4127 00b2 38       		.uleb128 0x38
 4128 00b3 0B       		.uleb128 0xb
 4129 00b4 00       		.byte	0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 118


 4130 00b5 00       		.byte	0
 4131 00b6 11       		.uleb128 0x11
 4132 00b7 13       		.uleb128 0x13
 4133 00b8 01       		.byte	0x1
 4134 00b9 0B       		.uleb128 0xb
 4135 00ba 0B       		.uleb128 0xb
 4136 00bb 3A       		.uleb128 0x3a
 4137 00bc 0B       		.uleb128 0xb
 4138 00bd 3B       		.uleb128 0x3b
 4139 00be 05       		.uleb128 0x5
 4140 00bf 01       		.uleb128 0x1
 4141 00c0 13       		.uleb128 0x13
 4142 00c1 00       		.byte	0
 4143 00c2 00       		.byte	0
 4144 00c3 12       		.uleb128 0x12
 4145 00c4 0D       		.uleb128 0xd
 4146 00c5 00       		.byte	0
 4147 00c6 03       		.uleb128 0x3
 4148 00c7 08       		.uleb128 0x8
 4149 00c8 3A       		.uleb128 0x3a
 4150 00c9 0B       		.uleb128 0xb
 4151 00ca 3B       		.uleb128 0x3b
 4152 00cb 05       		.uleb128 0x5
 4153 00cc 49       		.uleb128 0x49
 4154 00cd 13       		.uleb128 0x13
 4155 00ce 38       		.uleb128 0x38
 4156 00cf 0B       		.uleb128 0xb
 4157 00d0 00       		.byte	0
 4158 00d1 00       		.byte	0
 4159 00d2 13       		.uleb128 0x13
 4160 00d3 26       		.uleb128 0x26
 4161 00d4 00       		.byte	0
 4162 00d5 00       		.byte	0
 4163 00d6 00       		.byte	0
 4164 00d7 14       		.uleb128 0x14
 4165 00d8 2E       		.uleb128 0x2e
 4166 00d9 00       		.byte	0
 4167 00da 03       		.uleb128 0x3
 4168 00db 0E       		.uleb128 0xe
 4169 00dc 3A       		.uleb128 0x3a
 4170 00dd 0B       		.uleb128 0xb
 4171 00de 3B       		.uleb128 0x3b
 4172 00df 05       		.uleb128 0x5
 4173 00e0 27       		.uleb128 0x27
 4174 00e1 19       		.uleb128 0x19
 4175 00e2 11       		.uleb128 0x11
 4176 00e3 01       		.uleb128 0x1
 4177 00e4 12       		.uleb128 0x12
 4178 00e5 06       		.uleb128 0x6
 4179 00e6 40       		.uleb128 0x40
 4180 00e7 18       		.uleb128 0x18
 4181 00e8 9742     		.uleb128 0x2117
 4182 00ea 19       		.uleb128 0x19
 4183 00eb 00       		.byte	0
 4184 00ec 00       		.byte	0
 4185 00ed 15       		.uleb128 0x15
 4186 00ee 2E       		.uleb128 0x2e
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 119


 4187 00ef 01       		.byte	0x1
 4188 00f0 03       		.uleb128 0x3
 4189 00f1 0E       		.uleb128 0xe
 4190 00f2 3A       		.uleb128 0x3a
 4191 00f3 0B       		.uleb128 0xb
 4192 00f4 3B       		.uleb128 0x3b
 4193 00f5 05       		.uleb128 0x5
 4194 00f6 27       		.uleb128 0x27
 4195 00f7 19       		.uleb128 0x19
 4196 00f8 49       		.uleb128 0x49
 4197 00f9 13       		.uleb128 0x13
 4198 00fa 11       		.uleb128 0x11
 4199 00fb 01       		.uleb128 0x1
 4200 00fc 12       		.uleb128 0x12
 4201 00fd 06       		.uleb128 0x6
 4202 00fe 40       		.uleb128 0x40
 4203 00ff 18       		.uleb128 0x18
 4204 0100 9642     		.uleb128 0x2116
 4205 0102 19       		.uleb128 0x19
 4206 0103 01       		.uleb128 0x1
 4207 0104 13       		.uleb128 0x13
 4208 0105 00       		.byte	0
 4209 0106 00       		.byte	0
 4210 0107 16       		.uleb128 0x16
 4211 0108 05       		.uleb128 0x5
 4212 0109 00       		.byte	0
 4213 010a 03       		.uleb128 0x3
 4214 010b 0E       		.uleb128 0xe
 4215 010c 3A       		.uleb128 0x3a
 4216 010d 0B       		.uleb128 0xb
 4217 010e 3B       		.uleb128 0x3b
 4218 010f 05       		.uleb128 0x5
 4219 0110 49       		.uleb128 0x49
 4220 0111 13       		.uleb128 0x13
 4221 0112 02       		.uleb128 0x2
 4222 0113 17       		.uleb128 0x17
 4223 0114 00       		.byte	0
 4224 0115 00       		.byte	0
 4225 0116 17       		.uleb128 0x17
 4226 0117 34       		.uleb128 0x34
 4227 0118 00       		.byte	0
 4228 0119 03       		.uleb128 0x3
 4229 011a 0E       		.uleb128 0xe
 4230 011b 3A       		.uleb128 0x3a
 4231 011c 0B       		.uleb128 0xb
 4232 011d 3B       		.uleb128 0x3b
 4233 011e 05       		.uleb128 0x5
 4234 011f 49       		.uleb128 0x49
 4235 0120 13       		.uleb128 0x13
 4236 0121 02       		.uleb128 0x2
 4237 0122 17       		.uleb128 0x17
 4238 0123 00       		.byte	0
 4239 0124 00       		.byte	0
 4240 0125 18       		.uleb128 0x18
 4241 0126 34       		.uleb128 0x34
 4242 0127 00       		.byte	0
 4243 0128 03       		.uleb128 0x3
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 120


 4244 0129 0E       		.uleb128 0xe
 4245 012a 3A       		.uleb128 0x3a
 4246 012b 0B       		.uleb128 0xb
 4247 012c 3B       		.uleb128 0x3b
 4248 012d 05       		.uleb128 0x5
 4249 012e 49       		.uleb128 0x49
 4250 012f 13       		.uleb128 0x13
 4251 0130 00       		.byte	0
 4252 0131 00       		.byte	0
 4253 0132 19       		.uleb128 0x19
 4254 0133 26       		.uleb128 0x26
 4255 0134 00       		.byte	0
 4256 0135 49       		.uleb128 0x49
 4257 0136 13       		.uleb128 0x13
 4258 0137 00       		.byte	0
 4259 0138 00       		.byte	0
 4260 0139 1A       		.uleb128 0x1a
 4261 013a 2E       		.uleb128 0x2e
 4262 013b 01       		.byte	0x1
 4263 013c 03       		.uleb128 0x3
 4264 013d 0E       		.uleb128 0xe
 4265 013e 3A       		.uleb128 0x3a
 4266 013f 0B       		.uleb128 0xb
 4267 0140 3B       		.uleb128 0x3b
 4268 0141 05       		.uleb128 0x5
 4269 0142 27       		.uleb128 0x27
 4270 0143 19       		.uleb128 0x19
 4271 0144 49       		.uleb128 0x49
 4272 0145 13       		.uleb128 0x13
 4273 0146 11       		.uleb128 0x11
 4274 0147 01       		.uleb128 0x1
 4275 0148 12       		.uleb128 0x12
 4276 0149 06       		.uleb128 0x6
 4277 014a 40       		.uleb128 0x40
 4278 014b 18       		.uleb128 0x18
 4279 014c 9742     		.uleb128 0x2117
 4280 014e 19       		.uleb128 0x19
 4281 014f 01       		.uleb128 0x1
 4282 0150 13       		.uleb128 0x13
 4283 0151 00       		.byte	0
 4284 0152 00       		.byte	0
 4285 0153 1B       		.uleb128 0x1b
 4286 0154 2E       		.uleb128 0x2e
 4287 0155 01       		.byte	0x1
 4288 0156 03       		.uleb128 0x3
 4289 0157 0E       		.uleb128 0xe
 4290 0158 3A       		.uleb128 0x3a
 4291 0159 0B       		.uleb128 0xb
 4292 015a 3B       		.uleb128 0x3b
 4293 015b 05       		.uleb128 0x5
 4294 015c 27       		.uleb128 0x27
 4295 015d 19       		.uleb128 0x19
 4296 015e 20       		.uleb128 0x20
 4297 015f 0B       		.uleb128 0xb
 4298 0160 01       		.uleb128 0x1
 4299 0161 13       		.uleb128 0x13
 4300 0162 00       		.byte	0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 121


 4301 0163 00       		.byte	0
 4302 0164 1C       		.uleb128 0x1c
 4303 0165 2E       		.uleb128 0x2e
 4304 0166 01       		.byte	0x1
 4305 0167 03       		.uleb128 0x3
 4306 0168 0E       		.uleb128 0xe
 4307 0169 3A       		.uleb128 0x3a
 4308 016a 0B       		.uleb128 0xb
 4309 016b 3B       		.uleb128 0x3b
 4310 016c 05       		.uleb128 0x5
 4311 016d 27       		.uleb128 0x27
 4312 016e 19       		.uleb128 0x19
 4313 016f 11       		.uleb128 0x11
 4314 0170 01       		.uleb128 0x1
 4315 0171 12       		.uleb128 0x12
 4316 0172 06       		.uleb128 0x6
 4317 0173 40       		.uleb128 0x40
 4318 0174 18       		.uleb128 0x18
 4319 0175 9642     		.uleb128 0x2116
 4320 0177 19       		.uleb128 0x19
 4321 0178 01       		.uleb128 0x1
 4322 0179 13       		.uleb128 0x13
 4323 017a 00       		.byte	0
 4324 017b 00       		.byte	0
 4325 017c 1D       		.uleb128 0x1d
 4326 017d 1D       		.uleb128 0x1d
 4327 017e 01       		.byte	0x1
 4328 017f 31       		.uleb128 0x31
 4329 0180 13       		.uleb128 0x13
 4330 0181 11       		.uleb128 0x11
 4331 0182 01       		.uleb128 0x1
 4332 0183 12       		.uleb128 0x12
 4333 0184 06       		.uleb128 0x6
 4334 0185 58       		.uleb128 0x58
 4335 0186 0B       		.uleb128 0xb
 4336 0187 59       		.uleb128 0x59
 4337 0188 05       		.uleb128 0x5
 4338 0189 00       		.byte	0
 4339 018a 00       		.byte	0
 4340 018b 1E       		.uleb128 0x1e
 4341 018c 0B       		.uleb128 0xb
 4342 018d 01       		.byte	0x1
 4343 018e 11       		.uleb128 0x11
 4344 018f 01       		.uleb128 0x1
 4345 0190 12       		.uleb128 0x12
 4346 0191 06       		.uleb128 0x6
 4347 0192 00       		.byte	0
 4348 0193 00       		.byte	0
 4349 0194 1F       		.uleb128 0x1f
 4350 0195 34       		.uleb128 0x34
 4351 0196 00       		.byte	0
 4352 0197 31       		.uleb128 0x31
 4353 0198 13       		.uleb128 0x13
 4354 0199 02       		.uleb128 0x2
 4355 019a 17       		.uleb128 0x17
 4356 019b 00       		.byte	0
 4357 019c 00       		.byte	0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 122


 4358 019d 20       		.uleb128 0x20
 4359 019e 2E       		.uleb128 0x2e
 4360 019f 01       		.byte	0x1
 4361 01a0 3F       		.uleb128 0x3f
 4362 01a1 19       		.uleb128 0x19
 4363 01a2 03       		.uleb128 0x3
 4364 01a3 0E       		.uleb128 0xe
 4365 01a4 3A       		.uleb128 0x3a
 4366 01a5 0B       		.uleb128 0xb
 4367 01a6 3B       		.uleb128 0x3b
 4368 01a7 05       		.uleb128 0x5
 4369 01a8 27       		.uleb128 0x27
 4370 01a9 19       		.uleb128 0x19
 4371 01aa 11       		.uleb128 0x11
 4372 01ab 01       		.uleb128 0x1
 4373 01ac 12       		.uleb128 0x12
 4374 01ad 06       		.uleb128 0x6
 4375 01ae 40       		.uleb128 0x40
 4376 01af 18       		.uleb128 0x18
 4377 01b0 9642     		.uleb128 0x2116
 4378 01b2 19       		.uleb128 0x19
 4379 01b3 01       		.uleb128 0x1
 4380 01b4 13       		.uleb128 0x13
 4381 01b5 00       		.byte	0
 4382 01b6 00       		.byte	0
 4383 01b7 21       		.uleb128 0x21
 4384 01b8 898201   		.uleb128 0x4109
 4385 01bb 01       		.byte	0x1
 4386 01bc 11       		.uleb128 0x11
 4387 01bd 01       		.uleb128 0x1
 4388 01be 31       		.uleb128 0x31
 4389 01bf 13       		.uleb128 0x13
 4390 01c0 01       		.uleb128 0x1
 4391 01c1 13       		.uleb128 0x13
 4392 01c2 00       		.byte	0
 4393 01c3 00       		.byte	0
 4394 01c4 22       		.uleb128 0x22
 4395 01c5 8A8201   		.uleb128 0x410a
 4396 01c8 00       		.byte	0
 4397 01c9 02       		.uleb128 0x2
 4398 01ca 18       		.uleb128 0x18
 4399 01cb 9142     		.uleb128 0x2111
 4400 01cd 18       		.uleb128 0x18
 4401 01ce 00       		.byte	0
 4402 01cf 00       		.byte	0
 4403 01d0 23       		.uleb128 0x23
 4404 01d1 898201   		.uleb128 0x4109
 4405 01d4 01       		.byte	0x1
 4406 01d5 11       		.uleb128 0x11
 4407 01d6 01       		.uleb128 0x1
 4408 01d7 31       		.uleb128 0x31
 4409 01d8 13       		.uleb128 0x13
 4410 01d9 00       		.byte	0
 4411 01da 00       		.byte	0
 4412 01db 24       		.uleb128 0x24
 4413 01dc 2E       		.uleb128 0x2e
 4414 01dd 01       		.byte	0x1
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 123


 4415 01de 3F       		.uleb128 0x3f
 4416 01df 19       		.uleb128 0x19
 4417 01e0 03       		.uleb128 0x3
 4418 01e1 0E       		.uleb128 0xe
 4419 01e2 3A       		.uleb128 0x3a
 4420 01e3 0B       		.uleb128 0xb
 4421 01e4 3B       		.uleb128 0x3b
 4422 01e5 0B       		.uleb128 0xb
 4423 01e6 27       		.uleb128 0x27
 4424 01e7 19       		.uleb128 0x19
 4425 01e8 11       		.uleb128 0x11
 4426 01e9 01       		.uleb128 0x1
 4427 01ea 12       		.uleb128 0x12
 4428 01eb 06       		.uleb128 0x6
 4429 01ec 40       		.uleb128 0x40
 4430 01ed 18       		.uleb128 0x18
 4431 01ee 9742     		.uleb128 0x2117
 4432 01f0 19       		.uleb128 0x19
 4433 01f1 01       		.uleb128 0x1
 4434 01f2 13       		.uleb128 0x13
 4435 01f3 00       		.byte	0
 4436 01f4 00       		.byte	0
 4437 01f5 25       		.uleb128 0x25
 4438 01f6 34       		.uleb128 0x34
 4439 01f7 00       		.byte	0
 4440 01f8 03       		.uleb128 0x3
 4441 01f9 0E       		.uleb128 0xe
 4442 01fa 3A       		.uleb128 0x3a
 4443 01fb 0B       		.uleb128 0xb
 4444 01fc 3B       		.uleb128 0x3b
 4445 01fd 0B       		.uleb128 0xb
 4446 01fe 49       		.uleb128 0x49
 4447 01ff 13       		.uleb128 0x13
 4448 0200 02       		.uleb128 0x2
 4449 0201 17       		.uleb128 0x17
 4450 0202 00       		.byte	0
 4451 0203 00       		.byte	0
 4452 0204 26       		.uleb128 0x26
 4453 0205 898201   		.uleb128 0x4109
 4454 0208 00       		.byte	0
 4455 0209 11       		.uleb128 0x11
 4456 020a 01       		.uleb128 0x1
 4457 020b 31       		.uleb128 0x31
 4458 020c 13       		.uleb128 0x13
 4459 020d 00       		.byte	0
 4460 020e 00       		.byte	0
 4461 020f 27       		.uleb128 0x27
 4462 0210 2E       		.uleb128 0x2e
 4463 0211 01       		.byte	0x1
 4464 0212 3F       		.uleb128 0x3f
 4465 0213 19       		.uleb128 0x19
 4466 0214 03       		.uleb128 0x3
 4467 0215 0E       		.uleb128 0xe
 4468 0216 3A       		.uleb128 0x3a
 4469 0217 0B       		.uleb128 0xb
 4470 0218 3B       		.uleb128 0x3b
 4471 0219 05       		.uleb128 0x5
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 124


 4472 021a 27       		.uleb128 0x27
 4473 021b 19       		.uleb128 0x19
 4474 021c 11       		.uleb128 0x11
 4475 021d 01       		.uleb128 0x1
 4476 021e 12       		.uleb128 0x12
 4477 021f 06       		.uleb128 0x6
 4478 0220 40       		.uleb128 0x40
 4479 0221 18       		.uleb128 0x18
 4480 0222 9742     		.uleb128 0x2117
 4481 0224 19       		.uleb128 0x19
 4482 0225 01       		.uleb128 0x1
 4483 0226 13       		.uleb128 0x13
 4484 0227 00       		.byte	0
 4485 0228 00       		.byte	0
 4486 0229 28       		.uleb128 0x28
 4487 022a 2E       		.uleb128 0x2e
 4488 022b 01       		.byte	0x1
 4489 022c 3F       		.uleb128 0x3f
 4490 022d 19       		.uleb128 0x19
 4491 022e 03       		.uleb128 0x3
 4492 022f 0E       		.uleb128 0xe
 4493 0230 3A       		.uleb128 0x3a
 4494 0231 0B       		.uleb128 0xb
 4495 0232 3B       		.uleb128 0x3b
 4496 0233 05       		.uleb128 0x5
 4497 0234 27       		.uleb128 0x27
 4498 0235 19       		.uleb128 0x19
 4499 0236 49       		.uleb128 0x49
 4500 0237 13       		.uleb128 0x13
 4501 0238 11       		.uleb128 0x11
 4502 0239 01       		.uleb128 0x1
 4503 023a 12       		.uleb128 0x12
 4504 023b 06       		.uleb128 0x6
 4505 023c 40       		.uleb128 0x40
 4506 023d 18       		.uleb128 0x18
 4507 023e 9642     		.uleb128 0x2116
 4508 0240 19       		.uleb128 0x19
 4509 0241 01       		.uleb128 0x1
 4510 0242 13       		.uleb128 0x13
 4511 0243 00       		.byte	0
 4512 0244 00       		.byte	0
 4513 0245 29       		.uleb128 0x29
 4514 0246 2E       		.uleb128 0x2e
 4515 0247 01       		.byte	0x1
 4516 0248 03       		.uleb128 0x3
 4517 0249 0E       		.uleb128 0xe
 4518 024a 3A       		.uleb128 0x3a
 4519 024b 0B       		.uleb128 0xb
 4520 024c 3B       		.uleb128 0x3b
 4521 024d 05       		.uleb128 0x5
 4522 024e 27       		.uleb128 0x27
 4523 024f 19       		.uleb128 0x19
 4524 0250 11       		.uleb128 0x11
 4525 0251 01       		.uleb128 0x1
 4526 0252 12       		.uleb128 0x12
 4527 0253 06       		.uleb128 0x6
 4528 0254 40       		.uleb128 0x40
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 125


 4529 0255 18       		.uleb128 0x18
 4530 0256 9742     		.uleb128 0x2117
 4531 0258 19       		.uleb128 0x19
 4532 0259 01       		.uleb128 0x1
 4533 025a 13       		.uleb128 0x13
 4534 025b 00       		.byte	0
 4535 025c 00       		.byte	0
 4536 025d 2A       		.uleb128 0x2a
 4537 025e 2E       		.uleb128 0x2e
 4538 025f 01       		.byte	0x1
 4539 0260 3F       		.uleb128 0x3f
 4540 0261 19       		.uleb128 0x19
 4541 0262 03       		.uleb128 0x3
 4542 0263 0E       		.uleb128 0xe
 4543 0264 3A       		.uleb128 0x3a
 4544 0265 0B       		.uleb128 0xb
 4545 0266 3B       		.uleb128 0x3b
 4546 0267 05       		.uleb128 0x5
 4547 0268 27       		.uleb128 0x27
 4548 0269 19       		.uleb128 0x19
 4549 026a 49       		.uleb128 0x49
 4550 026b 13       		.uleb128 0x13
 4551 026c 11       		.uleb128 0x11
 4552 026d 01       		.uleb128 0x1
 4553 026e 12       		.uleb128 0x12
 4554 026f 06       		.uleb128 0x6
 4555 0270 40       		.uleb128 0x40
 4556 0271 18       		.uleb128 0x18
 4557 0272 9742     		.uleb128 0x2117
 4558 0274 19       		.uleb128 0x19
 4559 0275 01       		.uleb128 0x1
 4560 0276 13       		.uleb128 0x13
 4561 0277 00       		.byte	0
 4562 0278 00       		.byte	0
 4563 0279 2B       		.uleb128 0x2b
 4564 027a 34       		.uleb128 0x34
 4565 027b 00       		.byte	0
 4566 027c 03       		.uleb128 0x3
 4567 027d 0E       		.uleb128 0xe
 4568 027e 3A       		.uleb128 0x3a
 4569 027f 0B       		.uleb128 0xb
 4570 0280 3B       		.uleb128 0x3b
 4571 0281 05       		.uleb128 0x5
 4572 0282 49       		.uleb128 0x49
 4573 0283 13       		.uleb128 0x13
 4574 0284 02       		.uleb128 0x2
 4575 0285 18       		.uleb128 0x18
 4576 0286 00       		.byte	0
 4577 0287 00       		.byte	0
 4578 0288 2C       		.uleb128 0x2c
 4579 0289 34       		.uleb128 0x34
 4580 028a 00       		.byte	0
 4581 028b 03       		.uleb128 0x3
 4582 028c 0E       		.uleb128 0xe
 4583 028d 3A       		.uleb128 0x3a
 4584 028e 0B       		.uleb128 0xb
 4585 028f 3B       		.uleb128 0x3b
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 126


 4586 0290 0B       		.uleb128 0xb
 4587 0291 49       		.uleb128 0x49
 4588 0292 13       		.uleb128 0x13
 4589 0293 02       		.uleb128 0x2
 4590 0294 18       		.uleb128 0x18
 4591 0295 00       		.byte	0
 4592 0296 00       		.byte	0
 4593 0297 2D       		.uleb128 0x2d
 4594 0298 34       		.uleb128 0x34
 4595 0299 00       		.byte	0
 4596 029a 03       		.uleb128 0x3
 4597 029b 0E       		.uleb128 0xe
 4598 029c 3A       		.uleb128 0x3a
 4599 029d 0B       		.uleb128 0xb
 4600 029e 3B       		.uleb128 0x3b
 4601 029f 05       		.uleb128 0x5
 4602 02a0 49       		.uleb128 0x49
 4603 02a1 13       		.uleb128 0x13
 4604 02a2 3F       		.uleb128 0x3f
 4605 02a3 19       		.uleb128 0x19
 4606 02a4 3C       		.uleb128 0x3c
 4607 02a5 19       		.uleb128 0x19
 4608 02a6 00       		.byte	0
 4609 02a7 00       		.byte	0
 4610 02a8 2E       		.uleb128 0x2e
 4611 02a9 34       		.uleb128 0x34
 4612 02aa 00       		.byte	0
 4613 02ab 03       		.uleb128 0x3
 4614 02ac 0E       		.uleb128 0xe
 4615 02ad 3A       		.uleb128 0x3a
 4616 02ae 0B       		.uleb128 0xb
 4617 02af 3B       		.uleb128 0x3b
 4618 02b0 0B       		.uleb128 0xb
 4619 02b1 49       		.uleb128 0x49
 4620 02b2 13       		.uleb128 0x13
 4621 02b3 3F       		.uleb128 0x3f
 4622 02b4 19       		.uleb128 0x19
 4623 02b5 02       		.uleb128 0x2
 4624 02b6 18       		.uleb128 0x18
 4625 02b7 00       		.byte	0
 4626 02b8 00       		.byte	0
 4627 02b9 2F       		.uleb128 0x2f
 4628 02ba 34       		.uleb128 0x34
 4629 02bb 00       		.byte	0
 4630 02bc 03       		.uleb128 0x3
 4631 02bd 0E       		.uleb128 0xe
 4632 02be 3A       		.uleb128 0x3a
 4633 02bf 0B       		.uleb128 0xb
 4634 02c0 3B       		.uleb128 0x3b
 4635 02c1 0B       		.uleb128 0xb
 4636 02c2 49       		.uleb128 0x49
 4637 02c3 13       		.uleb128 0x13
 4638 02c4 3F       		.uleb128 0x3f
 4639 02c5 19       		.uleb128 0x19
 4640 02c6 3C       		.uleb128 0x3c
 4641 02c7 19       		.uleb128 0x19
 4642 02c8 00       		.byte	0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 127


 4643 02c9 00       		.byte	0
 4644 02ca 30       		.uleb128 0x30
 4645 02cb 2E       		.uleb128 0x2e
 4646 02cc 00       		.byte	0
 4647 02cd 3F       		.uleb128 0x3f
 4648 02ce 19       		.uleb128 0x19
 4649 02cf 3C       		.uleb128 0x3c
 4650 02d0 19       		.uleb128 0x19
 4651 02d1 6E       		.uleb128 0x6e
 4652 02d2 0E       		.uleb128 0xe
 4653 02d3 03       		.uleb128 0x3
 4654 02d4 0E       		.uleb128 0xe
 4655 02d5 3A       		.uleb128 0x3a
 4656 02d6 0B       		.uleb128 0xb
 4657 02d7 3B       		.uleb128 0x3b
 4658 02d8 0B       		.uleb128 0xb
 4659 02d9 00       		.byte	0
 4660 02da 00       		.byte	0
 4661 02db 00       		.byte	0
 4662              		.section	.debug_loc,"",%progbits
 4663              	.Ldebug_loc0:
 4664              	.LLST0:
 4665 0000 00000000 		.4byte	.LVL0
 4666 0004 1E000000 		.4byte	.LVL4
 4667 0008 0100     		.2byte	0x1
 4668 000a 50       		.byte	0x50
 4669 000b 1E000000 		.4byte	.LVL4
 4670 000f 22000000 		.4byte	.LVL6
 4671 0013 0100     		.2byte	0x1
 4672 0015 55       		.byte	0x55
 4673 0016 22000000 		.4byte	.LVL6
 4674 001a 24000000 		.4byte	.LVL7
 4675 001e 0100     		.2byte	0x1
 4676 0020 50       		.byte	0x50
 4677 0021 24000000 		.4byte	.LVL7
 4678 0025 8A000000 		.4byte	.LVL29
 4679 0029 0100     		.2byte	0x1
 4680 002b 55       		.byte	0x55
 4681 002c 8A000000 		.4byte	.LVL29
 4682 0030 94000000 		.4byte	.LFE10
 4683 0034 0400     		.2byte	0x4
 4684 0036 F3       		.byte	0xf3
 4685 0037 01       		.uleb128 0x1
 4686 0038 50       		.byte	0x50
 4687 0039 9F       		.byte	0x9f
 4688 003a 00000000 		.4byte	0
 4689 003e 00000000 		.4byte	0
 4690              	.LLST1:
 4691 0042 00000000 		.4byte	.LVL0
 4692 0046 0E000000 		.4byte	.LVL2
 4693 004a 0100     		.2byte	0x1
 4694 004c 51       		.byte	0x51
 4695 004d 0E000000 		.4byte	.LVL2
 4696 0051 8A000000 		.4byte	.LVL32
 4697 0055 0100     		.2byte	0x1
 4698 0057 58       		.byte	0x58
 4699 0058 8A000000 		.4byte	.LVL32
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 128


 4700 005c 94000000 		.4byte	.LFE10
 4701 0060 0400     		.2byte	0x4
 4702 0062 F3       		.byte	0xf3
 4703 0063 01       		.uleb128 0x1
 4704 0064 51       		.byte	0x51
 4705 0065 9F       		.byte	0x9f
 4706 0066 00000000 		.4byte	0
 4707 006a 00000000 		.4byte	0
 4708              	.LLST2:
 4709 006e 00000000 		.4byte	.LVL0
 4710 0072 26000000 		.4byte	.LVL8
 4711 0076 0100     		.2byte	0x1
 4712 0078 52       		.byte	0x52
 4713 0079 26000000 		.4byte	.LVL8
 4714 007d 37000000 		.4byte	.LVL12-1
 4715 0081 0300     		.2byte	0x3
 4716 0083 72       		.byte	0x72
 4717 0084 6C       		.sleb128 -20
 4718 0085 9F       		.byte	0x9f
 4719 0086 37000000 		.4byte	.LVL12-1
 4720 008a 94000000 		.4byte	.LFE10
 4721 008e 0400     		.2byte	0x4
 4722 0090 F3       		.byte	0xf3
 4723 0091 01       		.uleb128 0x1
 4724 0092 52       		.byte	0x52
 4725 0093 9F       		.byte	0x9f
 4726 0094 00000000 		.4byte	0
 4727 0098 00000000 		.4byte	0
 4728              	.LLST3:
 4729 009c 52000000 		.4byte	.LVL18
 4730 00a0 5E000000 		.4byte	.LVL19
 4731 00a4 0100     		.2byte	0x1
 4732 00a6 50       		.byte	0x50
 4733 00a7 68000000 		.4byte	.LVL22
 4734 00ab 72000000 		.4byte	.LVL25
 4735 00af 0100     		.2byte	0x1
 4736 00b1 50       		.byte	0x50
 4737 00b2 00000000 		.4byte	0
 4738 00b6 00000000 		.4byte	0
 4739              	.LLST4:
 4740 00ba 46000000 		.4byte	.LVL16
 4741 00be 4E000000 		.4byte	.LVL17
 4742 00c2 0200     		.2byte	0x2
 4743 00c4 30       		.byte	0x30
 4744 00c5 9F       		.byte	0x9f
 4745 00c6 4E000000 		.4byte	.LVL17
 4746 00ca 8A000000 		.4byte	.LVL31
 4747 00ce 0100     		.2byte	0x1
 4748 00d0 57       		.byte	0x57
 4749 00d1 00000000 		.4byte	0
 4750 00d5 00000000 		.4byte	0
 4751              	.LLST5:
 4752 00d9 4E000000 		.4byte	.LVL17
 4753 00dd 5E000000 		.4byte	.LVL19
 4754 00e1 0100     		.2byte	0x1
 4755 00e3 52       		.byte	0x52
 4756 00e4 60000000 		.4byte	.LVL20
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 129


 4757 00e8 62000000 		.4byte	.LVL21
 4758 00ec 0100     		.2byte	0x1
 4759 00ee 53       		.byte	0x53
 4760 00ef 62000000 		.4byte	.LVL21
 4761 00f3 76000000 		.4byte	.LVL27
 4762 00f7 0100     		.2byte	0x1
 4763 00f9 52       		.byte	0x52
 4764 00fa 00000000 		.4byte	0
 4765 00fe 00000000 		.4byte	0
 4766              	.LLST6:
 4767 0102 28000000 		.4byte	.LVL9
 4768 0106 2E000000 		.4byte	.LVL10
 4769 010a 0100     		.2byte	0x1
 4770 010c 52       		.byte	0x52
 4771 010d 2E000000 		.4byte	.LVL10
 4772 0111 46000000 		.4byte	.LVL16
 4773 0115 0100     		.2byte	0x1
 4774 0117 57       		.byte	0x57
 4775 0118 46000000 		.4byte	.LVL16
 4776 011c 4E000000 		.4byte	.LVL17
 4777 0120 0100     		.2byte	0x1
 4778 0122 50       		.byte	0x50
 4779 0123 4E000000 		.4byte	.LVL17
 4780 0127 94000000 		.4byte	.LFE10
 4781 012b 0100     		.2byte	0x1
 4782 012d 51       		.byte	0x51
 4783 012e 00000000 		.4byte	0
 4784 0132 00000000 		.4byte	0
 4785              	.LLST7:
 4786 0136 18000000 		.4byte	.LVL3
 4787 013a 20000000 		.4byte	.LVL5
 4788 013e 0200     		.2byte	0x2
 4789 0140 30       		.byte	0x30
 4790 0141 9F       		.byte	0x9f
 4791 0142 20000000 		.4byte	.LVL5
 4792 0146 22000000 		.4byte	.LVL6
 4793 014a 0100     		.2byte	0x1
 4794 014c 50       		.byte	0x50
 4795 014d 22000000 		.4byte	.LVL6
 4796 0151 24000000 		.4byte	.LVL7
 4797 0155 0200     		.2byte	0x2
 4798 0157 30       		.byte	0x30
 4799 0158 9F       		.byte	0x9f
 4800 0159 24000000 		.4byte	.LVL7
 4801 015d 32000000 		.4byte	.LVL11
 4802 0161 0100     		.2byte	0x1
 4803 0163 50       		.byte	0x50
 4804 0164 3A000000 		.4byte	.LVL13
 4805 0168 3C000000 		.4byte	.LVL14
 4806 016c 0100     		.2byte	0x1
 4807 016e 50       		.byte	0x50
 4808 016f 3C000000 		.4byte	.LVL14
 4809 0173 8A000000 		.4byte	.LVL30
 4810 0177 0100     		.2byte	0x1
 4811 0179 56       		.byte	0x56
 4812 017a 00000000 		.4byte	0
 4813 017e 00000000 		.4byte	0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 130


 4814              	.LLST8:
 4815 0182 0C000000 		.4byte	.LVL1
 4816 0186 4E000000 		.4byte	.LVL17
 4817 018a 0200     		.2byte	0x2
 4818 018c 30       		.byte	0x30
 4819 018d 9F       		.byte	0x9f
 4820 018e 4E000000 		.4byte	.LVL17
 4821 0192 6C000000 		.4byte	.LVL23
 4822 0196 0200     		.2byte	0x2
 4823 0198 91       		.byte	0x91
 4824 0199 64       		.sleb128 -28
 4825 019a 6E000000 		.4byte	.LVL24
 4826 019e 94000000 		.4byte	.LFE10
 4827 01a2 0200     		.2byte	0x2
 4828 01a4 91       		.byte	0x91
 4829 01a5 64       		.sleb128 -28
 4830 01a6 00000000 		.4byte	0
 4831 01aa 00000000 		.4byte	0
 4832              	.LLST9:
 4833 01ae 18000000 		.4byte	.LVL3
 4834 01b2 8A000000 		.4byte	.LVL28
 4835 01b6 0100     		.2byte	0x1
 4836 01b8 54       		.byte	0x54
 4837 01b9 00000000 		.4byte	0
 4838 01bd 00000000 		.4byte	0
 4839              	.LLST10:
 4840 01c1 00000000 		.4byte	.LVL33
 4841 01c5 06000000 		.4byte	.LVL35
 4842 01c9 0100     		.2byte	0x1
 4843 01cb 50       		.byte	0x50
 4844 01cc 06000000 		.4byte	.LVL35
 4845 01d0 0C000000 		.4byte	.LFE17
 4846 01d4 0400     		.2byte	0x4
 4847 01d6 F3       		.byte	0xf3
 4848 01d7 01       		.uleb128 0x1
 4849 01d8 50       		.byte	0x50
 4850 01d9 9F       		.byte	0x9f
 4851 01da 00000000 		.4byte	0
 4852 01de 00000000 		.4byte	0
 4853              	.LLST11:
 4854 01e2 02000000 		.4byte	.LVL34
 4855 01e6 0A000000 		.4byte	.LVL36
 4856 01ea 0100     		.2byte	0x1
 4857 01ec 53       		.byte	0x53
 4858 01ed 0A000000 		.4byte	.LVL36
 4859 01f1 0C000000 		.4byte	.LFE17
 4860 01f5 0700     		.2byte	0x7
 4861 01f7 70       		.byte	0x70
 4862 01f8 00       		.sleb128 0
 4863 01f9 0A       		.byte	0xa
 4864 01fa FFFF     		.2byte	0xffff
 4865 01fc 1A       		.byte	0x1a
 4866 01fd 9F       		.byte	0x9f
 4867 01fe 00000000 		.4byte	0
 4868 0202 00000000 		.4byte	0
 4869              	.LLST12:
 4870 0206 0A000000 		.4byte	.LVL37
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 131


 4871 020a 1E000000 		.4byte	.LVL38
 4872 020e 0600     		.2byte	0x6
 4873 0210 0C       		.byte	0xc
 4874 0211 800E0F00 		.4byte	0xf0e80
 4875 0215 9F       		.byte	0x9f
 4876 0216 1E000000 		.4byte	.LVL38
 4877 021a 2E000000 		.4byte	.LVL42
 4878 021e 0100     		.2byte	0x1
 4879 0220 53       		.byte	0x53
 4880 0221 2E000000 		.4byte	.LVL42
 4881 0225 30000000 		.4byte	.LVL43
 4882 0229 0500     		.2byte	0x5
 4883 022b 0C       		.byte	0xc
 4884 022c C0010B40 		.4byte	0x400b01c0
 4885 0230 00000000 		.4byte	0
 4886 0234 00000000 		.4byte	0
 4887              	.LLST13:
 4888 0238 0A000000 		.4byte	.LVL37
 4889 023c 20000000 		.4byte	.LVL39
 4890 0240 0100     		.2byte	0x1
 4891 0242 52       		.byte	0x52
 4892 0243 00000000 		.4byte	0
 4893 0247 00000000 		.4byte	0
 4894              	.LLST14:
 4895 024b A8000000 		.4byte	.LVL49
 4896 024f AC000000 		.4byte	.LVL50
 4897 0253 0100     		.2byte	0x1
 4898 0255 53       		.byte	0x53
 4899 0256 00000000 		.4byte	0
 4900 025a 00000000 		.4byte	0
 4901              	.LLST15:
 4902 025e 66000000 		.4byte	.LVL44
 4903 0262 6A000000 		.4byte	.LVL45
 4904 0266 0300     		.2byte	0x3
 4905 0268 08       		.byte	0x8
 4906 0269 F0       		.byte	0xf0
 4907 026a 9F       		.byte	0x9f
 4908 026b 6A000000 		.4byte	.LVL45
 4909 026f 7A000000 		.4byte	.LVL47
 4910 0273 0100     		.2byte	0x1
 4911 0275 53       		.byte	0x53
 4912 0276 00000000 		.4byte	0
 4913 027a 00000000 		.4byte	0
 4914              	.LLST16:
 4915 027e 92000000 		.4byte	.LVL48
 4916 0282 C6000000 		.4byte	.LVL51
 4917 0286 0100     		.2byte	0x1
 4918 0288 50       		.byte	0x50
 4919 0289 00000000 		.4byte	0
 4920 028d 00000000 		.4byte	0
 4921              	.LLST17:
 4922 0291 78000000 		.4byte	.LVL56
 4923 0295 8B000000 		.4byte	.LVL60-1
 4924 0299 0100     		.2byte	0x1
 4925 029b 50       		.byte	0x50
 4926 029c 9E000000 		.4byte	.LVL61
 4927 02a0 B1000000 		.4byte	.LVL65-1
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 132


 4928 02a4 0100     		.2byte	0x1
 4929 02a6 50       		.byte	0x50
 4930 02a7 EC000000 		.4byte	.LVL67
 4931 02ab F9000000 		.4byte	.LVL70-1
 4932 02af 0100     		.2byte	0x1
 4933 02b1 50       		.byte	0x50
 4934 02b2 FE000000 		.4byte	.LVL71
 4935 02b6 09010000 		.4byte	.LVL74-1
 4936 02ba 0100     		.2byte	0x1
 4937 02bc 50       		.byte	0x50
 4938 02bd 0E010000 		.4byte	.LVL75
 4939 02c1 21010000 		.4byte	.LVL79-1
 4940 02c5 0100     		.2byte	0x1
 4941 02c7 50       		.byte	0x50
 4942 02c8 26010000 		.4byte	.LVL80
 4943 02cc 37010000 		.4byte	.LVL84-1
 4944 02d0 0100     		.2byte	0x1
 4945 02d2 50       		.byte	0x50
 4946 02d3 00000000 		.4byte	0
 4947 02d7 00000000 		.4byte	0
 4948              	.LLST18:
 4949 02db 7C000000 		.4byte	.LVL57
 4950 02df 80000000 		.4byte	.LVL58
 4951 02e3 0100     		.2byte	0x1
 4952 02e5 51       		.byte	0x51
 4953 02e6 80000000 		.4byte	.LVL58
 4954 02ea 8B000000 		.4byte	.LVL60-1
 4955 02ee 0100     		.2byte	0x1
 4956 02f0 53       		.byte	0x53
 4957 02f1 A2000000 		.4byte	.LVL62
 4958 02f5 A6000000 		.4byte	.LVL63
 4959 02f9 0100     		.2byte	0x1
 4960 02fb 51       		.byte	0x51
 4961 02fc A6000000 		.4byte	.LVL63
 4962 0300 B1000000 		.4byte	.LVL65-1
 4963 0304 0100     		.2byte	0x1
 4964 0306 53       		.byte	0x53
 4965 0307 F0000000 		.4byte	.LVL68
 4966 030b F4000000 		.4byte	.LVL69
 4967 030f 0100     		.2byte	0x1
 4968 0311 52       		.byte	0x52
 4969 0312 F4000000 		.4byte	.LVL69
 4970 0316 F9000000 		.4byte	.LVL70-1
 4971 031a 0100     		.2byte	0x1
 4972 031c 53       		.byte	0x53
 4973 031d 00010000 		.4byte	.LVL72
 4974 0321 04010000 		.4byte	.LVL73
 4975 0325 0100     		.2byte	0x1
 4976 0327 52       		.byte	0x52
 4977 0328 04010000 		.4byte	.LVL73
 4978 032c 09010000 		.4byte	.LVL74-1
 4979 0330 0100     		.2byte	0x1
 4980 0332 53       		.byte	0x53
 4981 0333 12010000 		.4byte	.LVL76
 4982 0337 16010000 		.4byte	.LVL77
 4983 033b 0100     		.2byte	0x1
 4984 033d 52       		.byte	0x52
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 133


 4985 033e 16010000 		.4byte	.LVL77
 4986 0342 21010000 		.4byte	.LVL79-1
 4987 0346 0100     		.2byte	0x1
 4988 0348 53       		.byte	0x53
 4989 0349 28010000 		.4byte	.LVL81
 4990 034d 2C010000 		.4byte	.LVL82
 4991 0351 0100     		.2byte	0x1
 4992 0353 52       		.byte	0x52
 4993 0354 2C010000 		.4byte	.LVL82
 4994 0358 37010000 		.4byte	.LVL84-1
 4995 035c 0100     		.2byte	0x1
 4996 035e 53       		.byte	0x53
 4997 035f 00000000 		.4byte	0
 4998 0363 00000000 		.4byte	0
 4999              	.LLST19:
 5000 0367 00000000 		.4byte	.LVL89
 5001 036b 28000000 		.4byte	.LVL91
 5002 036f 0100     		.2byte	0x1
 5003 0371 50       		.byte	0x50
 5004 0372 28000000 		.4byte	.LVL91
 5005 0376 2B000000 		.4byte	.LVL92-1
 5006 037a 0100     		.2byte	0x1
 5007 037c 5C       		.byte	0x5c
 5008 037d 2B000000 		.4byte	.LVL92-1
 5009 0381 2C010000 		.4byte	.LFE9
 5010 0385 0200     		.2byte	0x2
 5011 0387 91       		.byte	0x91
 5012 0388 5C       		.sleb128 -36
 5013 0389 00000000 		.4byte	0
 5014 038d 00000000 		.4byte	0
 5015              	.LLST20:
 5016 0391 00000000 		.4byte	.LVL89
 5017 0395 2B000000 		.4byte	.LVL92-1
 5018 0399 0100     		.2byte	0x1
 5019 039b 51       		.byte	0x51
 5020 039c 2B000000 		.4byte	.LVL92-1
 5021 03a0 2C010000 		.4byte	.LFE9
 5022 03a4 0400     		.2byte	0x4
 5023 03a6 F3       		.byte	0xf3
 5024 03a7 01       		.uleb128 0x1
 5025 03a8 51       		.byte	0x51
 5026 03a9 9F       		.byte	0x9f
 5027 03aa 00000000 		.4byte	0
 5028 03ae 00000000 		.4byte	0
 5029              	.LLST21:
 5030 03b2 32000000 		.4byte	.LVL93
 5031 03b6 36000000 		.4byte	.LVL94
 5032 03ba 0700     		.2byte	0x7
 5033 03bc 70       		.byte	0x70
 5034 03bd 00       		.sleb128 0
 5035 03be 0A       		.byte	0xa
 5036 03bf FFFF     		.2byte	0xffff
 5037 03c1 1A       		.byte	0x1a
 5038 03c2 9F       		.byte	0x9f
 5039 03c3 3E000000 		.4byte	.LVL96
 5040 03c7 48000000 		.4byte	.LVL98
 5041 03cb 0100     		.2byte	0x1
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 134


 5042 03cd 50       		.byte	0x50
 5043 03ce 48000000 		.4byte	.LVL98
 5044 03d2 0E010000 		.4byte	.LVL126
 5045 03d6 0100     		.2byte	0x1
 5046 03d8 56       		.byte	0x56
 5047 03d9 00000000 		.4byte	0
 5048 03dd 00000000 		.4byte	0
 5049              	.LLST22:
 5050 03e1 44000000 		.4byte	.LVL97
 5051 03e5 0E010000 		.4byte	.LVL125
 5052 03e9 0100     		.2byte	0x1
 5053 03eb 55       		.byte	0x55
 5054 03ec 00000000 		.4byte	0
 5055 03f0 00000000 		.4byte	0
 5056              	.LLST23:
 5057 03f4 44000000 		.4byte	.LVL97
 5058 03f8 48000000 		.4byte	.LVL98
 5059 03fc 0200     		.2byte	0x2
 5060 03fe 30       		.byte	0x30
 5061 03ff 9F       		.byte	0x9f
 5062 0400 48000000 		.4byte	.LVL98
 5063 0404 71000000 		.4byte	.LVL102-1
 5064 0408 0100     		.2byte	0x1
 5065 040a 51       		.byte	0x51
 5066 040b 94000000 		.4byte	.LVL108
 5067 040f 98000000 		.4byte	.LVL109
 5068 0413 0200     		.2byte	0x2
 5069 0415 30       		.byte	0x30
 5070 0416 9F       		.byte	0x9f
 5071 0417 98000000 		.4byte	.LVL109
 5072 041b CF000000 		.4byte	.LVL113-1
 5073 041f 0100     		.2byte	0x1
 5074 0421 51       		.byte	0x51
 5075 0422 00000000 		.4byte	0
 5076 0426 00000000 		.4byte	0
 5077              	.LLST24:
 5078 042a 76000000 		.4byte	.LVL103
 5079 042e 7A000000 		.4byte	.LVL104
 5080 0432 0600     		.2byte	0x6
 5081 0434 0C       		.byte	0xc
 5082 0435 00A60E00 		.4byte	0xea600
 5083 0439 9F       		.byte	0x9f
 5084 043a 7A000000 		.4byte	.LVL104
 5085 043e 8C000000 		.4byte	.LVL106
 5086 0442 0100     		.2byte	0x1
 5087 0444 53       		.byte	0x53
 5088 0445 DC000000 		.4byte	.LVL116
 5089 0449 E4000000 		.4byte	.LVL118
 5090 044d 0100     		.2byte	0x1
 5091 044f 53       		.byte	0x53
 5092 0450 E6000000 		.4byte	.LVL119
 5093 0454 F2000000 		.4byte	.LVL120
 5094 0458 0100     		.2byte	0x1
 5095 045a 53       		.byte	0x53
 5096 045b 00000000 		.4byte	0
 5097 045f 00000000 		.4byte	0
 5098              	.LLST25:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 135


 5099 0463 10000000 		.4byte	.LVL90
 5100 0467 6A000000 		.4byte	.LVL100
 5101 046b 0200     		.2byte	0x2
 5102 046d 30       		.byte	0x30
 5103 046e 9F       		.byte	0x9f
 5104 046f 6A000000 		.4byte	.LVL100
 5105 0473 6C000000 		.4byte	.LVL101
 5106 0477 0100     		.2byte	0x1
 5107 0479 52       		.byte	0x52
 5108 047a 6C000000 		.4byte	.LVL101
 5109 047e DA000000 		.4byte	.LVL115
 5110 0482 0100     		.2byte	0x1
 5111 0484 58       		.byte	0x58
 5112 0485 DA000000 		.4byte	.LVL115
 5113 0489 DC000000 		.4byte	.LVL116
 5114 048d 0100     		.2byte	0x1
 5115 048f 53       		.byte	0x53
 5116 0490 DC000000 		.4byte	.LVL116
 5117 0494 E4000000 		.4byte	.LVL118
 5118 0498 0100     		.2byte	0x1
 5119 049a 58       		.byte	0x58
 5120 049b E4000000 		.4byte	.LVL118
 5121 049f E6000000 		.4byte	.LVL119
 5122 04a3 0100     		.2byte	0x1
 5123 04a5 53       		.byte	0x53
 5124 04a6 E6000000 		.4byte	.LVL119
 5125 04aa 0E010000 		.4byte	.LVL127
 5126 04ae 0100     		.2byte	0x1
 5127 04b0 58       		.byte	0x58
 5128 04b1 0E010000 		.4byte	.LVL127
 5129 04b5 2C010000 		.4byte	.LFE9
 5130 04b9 0100     		.2byte	0x1
 5131 04bb 50       		.byte	0x50
 5132 04bc 00000000 		.4byte	0
 5133 04c0 00000000 		.4byte	0
 5134              	.LLST26:
 5135 04c4 10000000 		.4byte	.LVL90
 5136 04c8 6A000000 		.4byte	.LVL100
 5137 04cc 0300     		.2byte	0x3
 5138 04ce 08       		.byte	0x8
 5139 04cf 40       		.byte	0x40
 5140 04d0 9F       		.byte	0x9f
 5141 04d1 6A000000 		.4byte	.LVL100
 5142 04d5 6C000000 		.4byte	.LVL101
 5143 04d9 0100     		.2byte	0x1
 5144 04db 54       		.byte	0x54
 5145 04dc 6C000000 		.4byte	.LVL101
 5146 04e0 BA000000 		.4byte	.LVL111
 5147 04e4 0100     		.2byte	0x1
 5148 04e6 57       		.byte	0x57
 5149 04e7 BA000000 		.4byte	.LVL111
 5150 04eb 0E010000 		.4byte	.LVL124
 5151 04ef 0100     		.2byte	0x1
 5152 04f1 54       		.byte	0x54
 5153 04f2 00000000 		.4byte	0
 5154 04f6 00000000 		.4byte	0
 5155              	.LLST27:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 136


 5156 04fa 10000000 		.4byte	.LVL90
 5157 04fe 6A000000 		.4byte	.LVL100
 5158 0502 0300     		.2byte	0x3
 5159 0504 08       		.byte	0x8
 5160 0505 20       		.byte	0x20
 5161 0506 9F       		.byte	0x9f
 5162 0507 6A000000 		.4byte	.LVL100
 5163 050b 6C000000 		.4byte	.LVL101
 5164 050f 0100     		.2byte	0x1
 5165 0511 53       		.byte	0x53
 5166 0512 6C000000 		.4byte	.LVL101
 5167 0516 BE000000 		.4byte	.LVL112
 5168 051a 0100     		.2byte	0x1
 5169 051c 54       		.byte	0x54
 5170 051d BE000000 		.4byte	.LVL112
 5171 0521 CF000000 		.4byte	.LVL113-1
 5172 0525 0100     		.2byte	0x1
 5173 0527 53       		.byte	0x53
 5174 0528 CF000000 		.4byte	.LVL113-1
 5175 052c 0E010000 		.4byte	.LVL124
 5176 0530 0500     		.2byte	0x5
 5177 0532 74       		.byte	0x74
 5178 0533 00       		.sleb128 0
 5179 0534 31       		.byte	0x31
 5180 0535 25       		.byte	0x25
 5181 0536 9F       		.byte	0x9f
 5182 0537 00000000 		.4byte	0
 5183 053b 00000000 		.4byte	0
 5184              	.LLST28:
 5185 053f 00000000 		.4byte	.LVL128
 5186 0543 10000000 		.4byte	.LVL129
 5187 0547 0100     		.2byte	0x1
 5188 0549 50       		.byte	0x50
 5189 054a 10000000 		.4byte	.LVL129
 5190 054e 24000000 		.4byte	.LVL132
 5191 0552 0100     		.2byte	0x1
 5192 0554 54       		.byte	0x54
 5193 0555 24000000 		.4byte	.LVL132
 5194 0559 26000000 		.4byte	.LFE12
 5195 055d 0400     		.2byte	0x4
 5196 055f F3       		.byte	0xf3
 5197 0560 01       		.uleb128 0x1
 5198 0561 50       		.byte	0x50
 5199 0562 9F       		.byte	0x9f
 5200 0563 00000000 		.4byte	0
 5201 0567 00000000 		.4byte	0
 5202              	.LLST29:
 5203 056b 00000000 		.4byte	.LVL133
 5204 056f 0E000000 		.4byte	.LVL134
 5205 0573 0100     		.2byte	0x1
 5206 0575 50       		.byte	0x50
 5207 0576 0E000000 		.4byte	.LVL134
 5208 057a 22000000 		.4byte	.LVL137
 5209 057e 0100     		.2byte	0x1
 5210 0580 54       		.byte	0x54
 5211 0581 22000000 		.4byte	.LVL137
 5212 0585 24000000 		.4byte	.LFE13
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 137


 5213 0589 0400     		.2byte	0x4
 5214 058b F3       		.byte	0xf3
 5215 058c 01       		.uleb128 0x1
 5216 058d 50       		.byte	0x50
 5217 058e 9F       		.byte	0x9f
 5218 058f 00000000 		.4byte	0
 5219 0593 00000000 		.4byte	0
 5220              	.LLST30:
 5221 0597 00000000 		.4byte	.LVL143
 5222 059b 07000000 		.4byte	.LVL144-1
 5223 059f 0100     		.2byte	0x1
 5224 05a1 50       		.byte	0x50
 5225 05a2 07000000 		.4byte	.LVL144-1
 5226 05a6 20000000 		.4byte	.LVL150
 5227 05aa 0100     		.2byte	0x1
 5228 05ac 54       		.byte	0x54
 5229 05ad 20000000 		.4byte	.LVL150
 5230 05b1 44000000 		.4byte	.LFE14
 5231 05b5 0400     		.2byte	0x4
 5232 05b7 F3       		.byte	0xf3
 5233 05b8 01       		.uleb128 0x1
 5234 05b9 50       		.byte	0x50
 5235 05ba 9F       		.byte	0x9f
 5236 05bb 00000000 		.4byte	0
 5237 05bf 00000000 		.4byte	0
 5238              	.LLST31:
 5239 05c3 0C000000 		.4byte	.LVL145
 5240 05c7 15000000 		.4byte	.LVL147-1
 5241 05cb 0100     		.2byte	0x1
 5242 05cd 53       		.byte	0x53
 5243 05ce 1E000000 		.4byte	.LVL149
 5244 05d2 3B000000 		.4byte	.LVL153-1
 5245 05d6 0100     		.2byte	0x1
 5246 05d8 53       		.byte	0x53
 5247 05d9 00000000 		.4byte	0
 5248 05dd 00000000 		.4byte	0
 5249              	.LLST32:
 5250 05e1 08000000 		.4byte	.LVL144
 5251 05e5 15000000 		.4byte	.LVL147-1
 5252 05e9 0100     		.2byte	0x1
 5253 05eb 50       		.byte	0x50
 5254 05ec 1A000000 		.4byte	.LVL148
 5255 05f0 3B000000 		.4byte	.LVL153-1
 5256 05f4 0100     		.2byte	0x1
 5257 05f6 50       		.byte	0x50
 5258 05f7 00000000 		.4byte	0
 5259 05fb 00000000 		.4byte	0
 5260              	.LLST33:
 5261 05ff 00000000 		.4byte	.LVL154
 5262 0603 07000000 		.4byte	.LVL155-1
 5263 0607 0100     		.2byte	0x1
 5264 0609 50       		.byte	0x50
 5265 060a 07000000 		.4byte	.LVL155-1
 5266 060e 46000000 		.4byte	.LVL166
 5267 0612 0100     		.2byte	0x1
 5268 0614 54       		.byte	0x54
 5269 0615 46000000 		.4byte	.LVL166
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 138


 5270 0619 4C000000 		.4byte	.LFE15
 5271 061d 0400     		.2byte	0x4
 5272 061f F3       		.byte	0xf3
 5273 0620 01       		.uleb128 0x1
 5274 0621 50       		.byte	0x50
 5275 0622 9F       		.byte	0x9f
 5276 0623 00000000 		.4byte	0
 5277 0627 00000000 		.4byte	0
 5278              	.LLST34:
 5279 062b 0C000000 		.4byte	.LVL156
 5280 062f 15000000 		.4byte	.LVL158-1
 5281 0633 0100     		.2byte	0x1
 5282 0635 53       		.byte	0x53
 5283 0636 1E000000 		.4byte	.LVL160
 5284 063a 45000000 		.4byte	.LVL165-1
 5285 063e 0100     		.2byte	0x1
 5286 0640 53       		.byte	0x53
 5287 0641 00000000 		.4byte	0
 5288 0645 00000000 		.4byte	0
 5289              	.LLST35:
 5290 0649 08000000 		.4byte	.LVL155
 5291 064d 15000000 		.4byte	.LVL158-1
 5292 0651 0100     		.2byte	0x1
 5293 0653 50       		.byte	0x50
 5294 0654 1A000000 		.4byte	.LVL159
 5295 0658 45000000 		.4byte	.LVL165-1
 5296 065c 0100     		.2byte	0x1
 5297 065e 50       		.byte	0x50
 5298 065f 00000000 		.4byte	0
 5299 0663 00000000 		.4byte	0
 5300              	.LLST36:
 5301 0667 00000000 		.4byte	.LVL178
 5302 066b 0C000000 		.4byte	.LVL179
 5303 066f 0100     		.2byte	0x1
 5304 0671 50       		.byte	0x50
 5305 0672 0C000000 		.4byte	.LVL179
 5306 0676 18000000 		.4byte	.LVL182
 5307 067a 0100     		.2byte	0x1
 5308 067c 54       		.byte	0x54
 5309 067d 18000000 		.4byte	.LVL182
 5310 0681 6C000000 		.4byte	.LFE3
 5311 0685 0400     		.2byte	0x4
 5312 0687 F3       		.byte	0xf3
 5313 0688 01       		.uleb128 0x1
 5314 0689 50       		.byte	0x50
 5315 068a 9F       		.byte	0x9f
 5316 068b 00000000 		.4byte	0
 5317 068f 00000000 		.4byte	0
 5318              	.LLST37:
 5319 0693 24000000 		.4byte	.LVL183
 5320 0697 4E000000 		.4byte	.LVL194
 5321 069b 0100     		.2byte	0x1
 5322 069d 55       		.byte	0x55
 5323 069e 00000000 		.4byte	0
 5324 06a2 00000000 		.4byte	0
 5325              	.LLST38:
 5326 06a6 38000000 		.4byte	.LVL186
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 139


 5327 06aa 40000000 		.4byte	.LVL190
 5328 06ae 0100     		.2byte	0x1
 5329 06b0 53       		.byte	0x53
 5330 06b1 40000000 		.4byte	.LVL190
 5331 06b5 42000000 		.4byte	.LVL191
 5332 06b9 0800     		.2byte	0x8
 5333 06bb 75       		.byte	0x75
 5334 06bc 0E       		.sleb128 14
 5335 06bd 94       		.byte	0x94
 5336 06be 01       		.byte	0x1
 5337 06bf 08       		.byte	0x8
 5338 06c0 FF       		.byte	0xff
 5339 06c1 1A       		.byte	0x1a
 5340 06c2 9F       		.byte	0x9f
 5341 06c3 42000000 		.4byte	.LVL191
 5342 06c7 4E000000 		.4byte	.LVL193
 5343 06cb 0100     		.2byte	0x1
 5344 06cd 54       		.byte	0x54
 5345 06ce 00000000 		.4byte	0
 5346 06d2 00000000 		.4byte	0
 5347              	.LLST39:
 5348 06d6 26000000 		.4byte	.LVL184
 5349 06da 3A000000 		.4byte	.LVL187
 5350 06de 0100     		.2byte	0x1
 5351 06e0 54       		.byte	0x54
 5352 06e1 3A000000 		.4byte	.LVL187
 5353 06e5 3C000000 		.4byte	.LVL188
 5354 06e9 0300     		.2byte	0x3
 5355 06eb 74       		.byte	0x74
 5356 06ec 01       		.sleb128 1
 5357 06ed 9F       		.byte	0x9f
 5358 06ee 3E000000 		.4byte	.LVL189
 5359 06f2 42000000 		.4byte	.LVL191
 5360 06f6 0100     		.2byte	0x1
 5361 06f8 54       		.byte	0x54
 5362 06f9 00000000 		.4byte	0
 5363 06fd 00000000 		.4byte	0
 5364              	.LLST40:
 5365 0701 00000000 		.4byte	.LVL195
 5366 0705 07000000 		.4byte	.LVL196-1
 5367 0709 0100     		.2byte	0x1
 5368 070b 50       		.byte	0x50
 5369 070c 07000000 		.4byte	.LVL196-1
 5370 0710 84000000 		.4byte	.LFE4
 5371 0714 0400     		.2byte	0x4
 5372 0716 F3       		.byte	0xf3
 5373 0717 01       		.uleb128 0x1
 5374 0718 50       		.byte	0x50
 5375 0719 9F       		.byte	0x9f
 5376 071a 00000000 		.4byte	0
 5377 071e 00000000 		.4byte	0
 5378              	.LLST41:
 5379 0722 00000000 		.4byte	.LVL195
 5380 0726 07000000 		.4byte	.LVL196-1
 5381 072a 0100     		.2byte	0x1
 5382 072c 51       		.byte	0x51
 5383 072d 07000000 		.4byte	.LVL196-1
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 140


 5384 0731 3A000000 		.4byte	.LVL201
 5385 0735 0100     		.2byte	0x1
 5386 0737 54       		.byte	0x54
 5387 0738 3A000000 		.4byte	.LVL201
 5388 073c 84000000 		.4byte	.LFE4
 5389 0740 0400     		.2byte	0x4
 5390 0742 F3       		.byte	0xf3
 5391 0743 01       		.uleb128 0x1
 5392 0744 51       		.byte	0x51
 5393 0745 9F       		.byte	0x9f
 5394 0746 00000000 		.4byte	0
 5395 074a 00000000 		.4byte	0
 5396              	.LLST42:
 5397 074e 36000000 		.4byte	.LVL200
 5398 0752 4A000000 		.4byte	.LVL202
 5399 0756 0100     		.2byte	0x1
 5400 0758 51       		.byte	0x51
 5401 0759 00000000 		.4byte	0
 5402 075d 00000000 		.4byte	0
 5403              	.LLST43:
 5404 0761 2E000000 		.4byte	.LVL198
 5405 0765 32000000 		.4byte	.LVL199
 5406 0769 0100     		.2byte	0x1
 5407 076b 50       		.byte	0x50
 5408 076c 32000000 		.4byte	.LVL199
 5409 0770 68000000 		.4byte	.LVL205
 5410 0774 0100     		.2byte	0x1
 5411 0776 56       		.byte	0x56
 5412 0777 00000000 		.4byte	0
 5413 077b 00000000 		.4byte	0
 5414              	.LLST44:
 5415 077f 00000000 		.4byte	.LVL206
 5416 0783 04000000 		.4byte	.LVL207
 5417 0787 0100     		.2byte	0x1
 5418 0789 50       		.byte	0x50
 5419 078a 04000000 		.4byte	.LVL207
 5420 078e 14000000 		.4byte	.LFE16
 5421 0792 0400     		.2byte	0x4
 5422 0794 F3       		.byte	0xf3
 5423 0795 01       		.uleb128 0x1
 5424 0796 50       		.byte	0x50
 5425 0797 9F       		.byte	0x9f
 5426 0798 00000000 		.4byte	0
 5427 079c 00000000 		.4byte	0
 5428              		.section	.debug_aranges,"",%progbits
 5429 0000 A4000000 		.4byte	0xa4
 5430 0004 0200     		.2byte	0x2
 5431 0006 00000000 		.4byte	.Ldebug_info0
 5432 000a 04       		.byte	0x4
 5433 000b 00       		.byte	0
 5434 000c 0000     		.2byte	0
 5435 000e 0000     		.2byte	0
 5436 0010 00000000 		.4byte	.LFB8
 5437 0014 38000000 		.4byte	.LFE8-.LFB8
 5438 0018 00000000 		.4byte	.LFB10
 5439 001c 94000000 		.4byte	.LFE10-.LFB10
 5440 0020 00000000 		.4byte	.LFB17
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 141


 5441 0024 0C000000 		.4byte	.LFE17-.LFB17
 5442 0028 00000000 		.4byte	.LFB11
 5443 002c 50010000 		.4byte	.LFE11-.LFB11
 5444 0030 00000000 		.4byte	.LFB18
 5445 0034 90000000 		.4byte	.LFE18-.LFB18
 5446 0038 00000000 		.4byte	.LFB1
 5447 003c F4010000 		.4byte	.LFE1-.LFB1
 5448 0040 00000000 		.4byte	.LFB6
 5449 0044 1C000000 		.4byte	.LFE6-.LFB6
 5450 0048 00000000 		.4byte	.LFB9
 5451 004c 2C010000 		.4byte	.LFE9-.LFB9
 5452 0050 00000000 		.4byte	.LFB12
 5453 0054 26000000 		.4byte	.LFE12-.LFB12
 5454 0058 00000000 		.4byte	.LFB13
 5455 005c 24000000 		.4byte	.LFE13-.LFB13
 5456 0060 00000000 		.4byte	.LFB5
 5457 0064 88000000 		.4byte	.LFE5-.LFB5
 5458 0068 00000000 		.4byte	.LFB14
 5459 006c 44000000 		.4byte	.LFE14-.LFB14
 5460 0070 00000000 		.4byte	.LFB15
 5461 0074 4C000000 		.4byte	.LFE15-.LFB15
 5462 0078 00000000 		.4byte	.LFB7
 5463 007c DC000000 		.4byte	.LFE7-.LFB7
 5464 0080 00000000 		.4byte	.LFB2
 5465 0084 24000000 		.4byte	.LFE2-.LFB2
 5466 0088 00000000 		.4byte	.LFB3
 5467 008c 6C000000 		.4byte	.LFE3-.LFB3
 5468 0090 00000000 		.4byte	.LFB4
 5469 0094 84000000 		.4byte	.LFE4-.LFB4
 5470 0098 00000000 		.4byte	.LFB16
 5471 009c 14000000 		.4byte	.LFE16-.LFB16
 5472 00a0 00000000 		.4byte	0
 5473 00a4 00000000 		.4byte	0
 5474              		.section	.debug_ranges,"",%progbits
 5475              	.Ldebug_ranges0:
 5476 0000 00000000 		.4byte	.LFB8
 5477 0004 38000000 		.4byte	.LFE8
 5478 0008 00000000 		.4byte	.LFB10
 5479 000c 94000000 		.4byte	.LFE10
 5480 0010 00000000 		.4byte	.LFB17
 5481 0014 0C000000 		.4byte	.LFE17
 5482 0018 00000000 		.4byte	.LFB11
 5483 001c 50010000 		.4byte	.LFE11
 5484 0020 00000000 		.4byte	.LFB18
 5485 0024 90000000 		.4byte	.LFE18
 5486 0028 00000000 		.4byte	.LFB1
 5487 002c F4010000 		.4byte	.LFE1
 5488 0030 00000000 		.4byte	.LFB6
 5489 0034 1C000000 		.4byte	.LFE6
 5490 0038 00000000 		.4byte	.LFB9
 5491 003c 2C010000 		.4byte	.LFE9
 5492 0040 00000000 		.4byte	.LFB12
 5493 0044 26000000 		.4byte	.LFE12
 5494 0048 00000000 		.4byte	.LFB13
 5495 004c 24000000 		.4byte	.LFE13
 5496 0050 00000000 		.4byte	.LFB5
 5497 0054 88000000 		.4byte	.LFE5
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 142


 5498 0058 00000000 		.4byte	.LFB14
 5499 005c 44000000 		.4byte	.LFE14
 5500 0060 00000000 		.4byte	.LFB15
 5501 0064 4C000000 		.4byte	.LFE15
 5502 0068 00000000 		.4byte	.LFB7
 5503 006c DC000000 		.4byte	.LFE7
 5504 0070 00000000 		.4byte	.LFB2
 5505 0074 24000000 		.4byte	.LFE2
 5506 0078 00000000 		.4byte	.LFB3
 5507 007c 6C000000 		.4byte	.LFE3
 5508 0080 00000000 		.4byte	.LFB4
 5509 0084 84000000 		.4byte	.LFE4
 5510 0088 00000000 		.4byte	.LFB16
 5511 008c 14000000 		.4byte	.LFE16
 5512 0090 00000000 		.4byte	0
 5513 0094 00000000 		.4byte	0
 5514              		.section	.debug_line,"",%progbits
 5515              	.Ldebug_line0:
 5516 0000 A0030000 		.section	.debug_str,"MS",%progbits,1
 5516      0200A800 
 5516      00000201 
 5516      FB0E0D00 
 5516      01010101 
 5517              	.LASF151:
 5518 0000 63617073 		.ascii	"capsense_CSXCalibrateWidget\000"
 5518      656E7365 
 5518      5F435358 
 5518      43616C69 
 5518      62726174 
 5519              	.LASF52:
 5520 001c 63617073 		.ascii	"capsense_RAM_SNS_LIST_STRUCT\000"
 5520      656E7365 
 5520      5F52414D 
 5520      5F534E53 
 5520      5F4C4953 
 5521              	.LASF164:
 5522 0039 63617073 		.ascii	"capsense_CSXPostScanApiPtr\000"
 5522      656E7365 
 5522      5F435358 
 5522      506F7374 
 5522      5363616E 
 5523              	.LASF178:
 5524 0054 63617073 		.ascii	"capsense_SsSetModClkClockDivider\000"
 5524      656E7365 
 5524      5F537353 
 5524      65744D6F 
 5524      64436C6B 
 5525              	.LASF25:
 5526 0075 63617073 		.ascii	"capsense_SENSE_METHOD_ISX_E\000"
 5526      656E7365 
 5526      5F53454E 
 5526      53455F4D 
 5526      4554484F 
 5527              	.LASF187:
 5528 0091 47656E65 		.ascii	"Generated_Source\\PSoC4\\capsense_SensingCSX_LL.c\000"
 5528      72617465 
 5528      645F536F 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 143


 5528      75726365 
 5528      5C50536F 
 5529              	.LASF67:
 5530 00c1 736E7254 		.ascii	"snrTestWidgetId\000"
 5530      65737457 
 5530      69646765 
 5530      74496400 
 5531              	.LASF189:
 5532 00d1 63617073 		.ascii	"capsense_SsCSXPostSingleScan\000"
 5532      656E7365 
 5532      5F537343 
 5532      5358506F 
 5532      73745369 
 5533              	.LASF181:
 5534 00ee 63617073 		.ascii	"capsense_SetupWidget\000"
 5534      656E7365 
 5534      5F536574 
 5534      75705769 
 5534      64676574 
 5535              	.LASF8:
 5536 0103 756E7369 		.ascii	"unsigned int\000"
 5536      676E6564 
 5536      20696E74 
 5536      00
 5537              	.LASF132:
 5538 0110 6E657874 		.ascii	"nextIdacMask\000"
 5538      49646163 
 5538      4D61736B 
 5538      00
 5539              	.LASF57:
 5540 011d 7363616E 		.ascii	"scanCounter\000"
 5540      436F756E 
 5540      74657200 
 5541              	.LASF55:
 5542 0129 6877436C 		.ascii	"hwClock\000"
 5542      6F636B00 
 5543              	.LASF71:
 5544 0131 7363616E 		.ascii	"scanCsdISC\000"
 5544      43736449 
 5544      534300
 5545              	.LASF139:
 5546 013c 72656756 		.ascii	"regValue\000"
 5546      616C7565 
 5546      00
 5547              	.LASF134:
 5548 0145 74785074 		.ascii	"txPtr\000"
 5548      7200
 5549              	.LASF126:
 5550 014b 696E7465 		.ascii	"interruptState\000"
 5550      72727570 
 5550      74537461 
 5550      746500
 5551              	.LASF150:
 5552 015a 7278496E 		.ascii	"rxIndex\000"
 5552      64657800 
 5553              	.LASF177:
 5554 0162 63617073 		.ascii	"capsense_DischargeExtCapacitors\000"
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 144


 5554      656E7365 
 5554      5F446973 
 5554      63686172 
 5554      67654578 
 5555              	.LASF119:
 5556 0182 70747246 		.ascii	"ptrFlashWidget\000"
 5556      6C617368 
 5556      57696467 
 5556      657400
 5557              	.LASF147:
 5558 0191 63617073 		.ascii	"capsense_CSXSetupWidgetExt\000"
 5558      656E7365 
 5558      5F435358 
 5558      53657475 
 5558      70576964 
 5559              	.LASF125:
 5560 01ac 63617073 		.ascii	"capsense_CSXInitialize\000"
 5560      656E7365 
 5560      5F435358 
 5560      496E6974 
 5560      69616C69 
 5561              	.LASF23:
 5562 01c3 63617073 		.ascii	"capsense_SENSE_METHOD_CSX_E\000"
 5562      656E7365 
 5562      5F53454E 
 5562      53455F4D 
 5562      4554484F 
 5563              	.LASF172:
 5564 01df 4379496E 		.ascii	"CyIntDisable\000"
 5564      74446973 
 5564      61626C65 
 5564      00
 5565              	.LASF98:
 5566 01ec 69697246 		.ascii	"iirFilterCoeff\000"
 5566      696C7465 
 5566      72436F65 
 5566      666600
 5567              	.LASF148:
 5568 01fb 73656E73 		.ascii	"sensorId\000"
 5568      6F724964 
 5568      00
 5569              	.LASF115:
 5570 0204 63617073 		.ascii	"capsense_SsCSXCalibrateCheck\000"
 5570      656E7365 
 5570      5F537343 
 5570      53584361 
 5570      6C696272 
 5571              	.LASF154:
 5572 0221 70747257 		.ascii	"ptrWdgt\000"
 5572      64677400 
 5573              	.LASF131:
 5574 0229 63757249 		.ascii	"curIdacMask\000"
 5574      6461634D 
 5574      61736B00 
 5575              	.LASF22:
 5576 0235 63617073 		.ascii	"capsense_SENSE_METHOD_CSD_E\000"
 5576      656E7365 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 145


 5576      5F53454E 
 5576      53455F4D 
 5576      4554484F 
 5577              	.LASF12:
 5578 0251 666C6F61 		.ascii	"float\000"
 5578      7400
 5579              	.LASF83:
 5580 0257 73686966 		.ascii	"shift\000"
 5580      7400
 5581              	.LASF186:
 5582 025d 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5582      43313120 
 5582      352E342E 
 5582      31203230 
 5582      31363036 
 5583 0290 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 5583      20726576 
 5583      6973696F 
 5583      6E203233 
 5583      37373135 
 5584 02c3 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 5584      67202D66 
 5584      66756E63 
 5584      74696F6E 
 5584      2D736563 
 5585              	.LASF121:
 5586 02ef 77617463 		.ascii	"watchdogCounter\000"
 5586      68646F67 
 5586      436F756E 
 5586      74657200 
 5587              	.LASF99:
 5588 02ff 63617073 		.ascii	"capsense_FLASH_WD_STRUCT\000"
 5588      656E7365 
 5588      5F464C41 
 5588      53485F57 
 5588      445F5354 
 5589              	.LASF127:
 5590 0318 63617073 		.ascii	"capsense_CSXScanExt\000"
 5590      656E7365 
 5590      5F435358 
 5590      5363616E 
 5590      45787400 
 5591              	.LASF149:
 5592 032c 7478496E 		.ascii	"txIndex\000"
 5592      64657800 
 5593              	.LASF152:
 5594 0334 63617073 		.ascii	"capsense_SsCSXGetTxClkDivider\000"
 5594      656E7365 
 5594      5F537343 
 5594      53584765 
 5594      74547843 
 5595              	.LASF180:
 5596 0352 43794465 		.ascii	"CyDelayUs\000"
 5596      6C617955 
 5596      7300
 5597              	.LASF66:
 5598 035c 736E734C 		.ascii	"snsList\000"
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 146


 5598      69737400 
 5599              	.LASF7:
 5600 0364 6C6F6E67 		.ascii	"long long unsigned int\000"
 5600      206C6F6E 
 5600      6720756E 
 5600      7369676E 
 5600      65642069 
 5601              	.LASF68:
 5602 037b 736E7254 		.ascii	"snrTestSensorId\000"
 5602      65737453 
 5602      656E736F 
 5602      72496400 
 5603              	.LASF142:
 5604 038b 63617073 		.ascii	"capsense_SsCSXPostMultiScan\000"
 5604      656E7365 
 5604      5F537343 
 5604      5358506F 
 5604      73744D75 
 5605              	.LASF161:
 5606 03a7 63617073 		.ascii	"capsense_dsFlash\000"
 5606      656E7365 
 5606      5F647346 
 5606      6C617368 
 5606      00
 5607              	.LASF92:
 5608 03b8 77646774 		.ascii	"wdgtType\000"
 5608      54797065 
 5608      00
 5609              	.LASF170:
 5610 03c1 63617073 		.ascii	"capsense_curFlashWdgtPtr\000"
 5610      656E7365 
 5610      5F637572 
 5610      466C6173 
 5610      68576467 
 5611              	.LASF108:
 5612 03da 72617763 		.ascii	"rawcount\000"
 5612      6F756E74 
 5612      00
 5613              	.LASF165:
 5614 03e3 63617073 		.ascii	"capsense_widgetIndex\000"
 5614      656E7365 
 5614      5F776964 
 5614      67657449 
 5614      6E646578 
 5615              	.LASF146:
 5616 03f8 736E7343 		.ascii	"snsClkVal\000"
 5616      6C6B5661 
 5616      6C00
 5617              	.LASF63:
 5618 0402 6D6F6443 		.ascii	"modCsdClk\000"
 5618      7364436C 
 5618      6B00
 5619              	.LASF157:
 5620 040c 63617073 		.ascii	"capsense_curWdgtTotalRx\000"
 5620      656E7365 
 5620      5F637572 
 5620      57646774 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 147


 5620      546F7461 
 5621              	.LASF107:
 5622 0424 74617267 		.ascii	"target\000"
 5622      657400
 5623              	.LASF77:
 5624 042b 64725074 		.ascii	"drPtr\000"
 5624      7200
 5625              	.LASF30:
 5626 0431 68797374 		.ascii	"hysteresis\000"
 5626      65726573 
 5626      697300
 5627              	.LASF124:
 5628 043c 63617073 		.ascii	"capsense_CSXScanISR\000"
 5628      656E7365 
 5628      5F435358 
 5628      5363616E 
 5628      49535200 
 5629              	.LASF32:
 5630 0450 6C6F7742 		.ascii	"lowBslnRst\000"
 5630      736C6E52 
 5630      737400
 5631              	.LASF34:
 5632 045b 69646163 		.ascii	"idacGainIndex\000"
 5632      4761696E 
 5632      496E6465 
 5632      7800
 5633              	.LASF41:
 5634 0469 62746E30 		.ascii	"btn0\000"
 5634      00
 5635              	.LASF42:
 5636 046e 62746E31 		.ascii	"btn1\000"
 5636      00
 5637              	.LASF43:
 5638 0473 62746E32 		.ascii	"btn2\000"
 5638      00
 5639              	.LASF91:
 5640 0478 746F7461 		.ascii	"totalNumSns\000"
 5640      6C4E756D 
 5640      536E7300 
 5641              	.LASF141:
 5642 0484 63617073 		.ascii	"capsense_SsCSXStartSample\000"
 5642      656E7365 
 5642      5F537343 
 5642      53585374 
 5642      61727453 
 5643              	.LASF21:
 5644 049e 63617073 		.ascii	"capsense_UNDEFINED_E\000"
 5644      656E7365 
 5644      5F554E44 
 5644      4546494E 
 5644      45445F45 
 5645              	.LASF20:
 5646 04b3 63617073 		.ascii	"capsense_LOW_BSLN_RST_TYPE\000"
 5646      656E7365 
 5646      5F4C4F57 
 5646      5F42534C 
 5646      4E5F5253 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 148


 5647              	.LASF129:
 5648 04ce 746F7461 		.ascii	"totalSns\000"
 5648      6C536E73 
 5648      00
 5649              	.LASF28:
 5650 04d7 6E6F6973 		.ascii	"noiseTh\000"
 5650      65546800 
 5651              	.LASF14:
 5652 04df 63686172 		.ascii	"char\000"
 5652      00
 5653              	.LASF116:
 5654 04e4 63617073 		.ascii	"capsense_SsCalcCsxScanPeriod\000"
 5654      656E7365 
 5654      5F537343 
 5654      616C6343 
 5654      73785363 
 5655              	.LASF176:
 5656 0501 43794578 		.ascii	"CyExitCriticalSection\000"
 5656      69744372 
 5656      69746963 
 5656      616C5365 
 5656      6374696F 
 5657              	.LASF81:
 5658 0517 6873696F 		.ascii	"hsiomShift\000"
 5658      6D536869 
 5658      667400
 5659              	.LASF168:
 5660 0522 63617073 		.ascii	"capsense_curRamSnsPtr\000"
 5660      656E7365 
 5660      5F637572 
 5660      52616D53 
 5660      6E735074 
 5661              	.LASF10:
 5662 0538 75696E74 		.ascii	"uint16\000"
 5662      313600
 5663              	.LASF114:
 5664 053f 70747252 		.ascii	"ptrRamSensor\000"
 5664      616D5365 
 5664      6E736F72 
 5664      00
 5665              	.LASF158:
 5666 054c 63617073 		.ascii	"capsense_curWdgtTotalTx\000"
 5666      656E7365 
 5666      5F637572 
 5666      57646774 
 5666      546F7461 
 5667              	.LASF26:
 5668 0564 7265736F 		.ascii	"resolution\000"
 5668      6C757469 
 5668      6F6E00
 5669              	.LASF58:
 5670 056f 73746174 		.ascii	"status\000"
 5670      757300
 5671              	.LASF120:
 5672 0576 66696C74 		.ascii	"filterDelay\000"
 5672      65724465 
 5672      6C617900 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 149


 5673              	.LASF50:
 5674 0582 69646163 		.ascii	"idacComp\000"
 5674      436F6D70 
 5674      00
 5675              	.LASF76:
 5676 058b 70635074 		.ascii	"pcPtr\000"
 5676      7200
 5677              	.LASF106:
 5678 0591 7363616E 		.ascii	"scanPeriod\000"
 5678      50657269 
 5678      6F6400
 5679              	.LASF6:
 5680 059c 6C6F6E67 		.ascii	"long long int\000"
 5680      206C6F6E 
 5680      6720696E 
 5680      7400
 5681              	.LASF38:
 5682 05aa 63617073 		.ascii	"capsense_RAM_WD_BUTTON_STRUCT\000"
 5682      656E7365 
 5682      5F52414D 
 5682      5F57445F 
 5682      42555454 
 5683              	.LASF184:
 5684 05c8 63617073 		.ascii	"capsense_SsPostAllWidgetsScan\000"
 5684      656E7365 
 5684      5F537350 
 5684      6F737441 
 5684      6C6C5769 
 5685              	.LASF31:
 5686 05e6 6F6E4465 		.ascii	"onDebounce\000"
 5686      626F756E 
 5686      636500
 5687              	.LASF111:
 5688 05f1 75707065 		.ascii	"upperLimit\000"
 5688      724C696D 
 5688      697400
 5689              	.LASF143:
 5690 05fc 63617073 		.ascii	"capsense_CSXElectrodeCheck\000"
 5690      656E7365 
 5690      5F435358 
 5690      456C6563 
 5690      74726F64 
 5691              	.LASF160:
 5692 0617 63617073 		.ascii	"capsense_dsRam\000"
 5692      656E7365 
 5692      5F647352 
 5692      616D00
 5693              	.LASF113:
 5694 0626 63616C69 		.ascii	"calibrateStatus\000"
 5694      62726174 
 5694      65537461 
 5694      74757300 
 5695              	.LASF65:
 5696 0636 77646774 		.ascii	"wdgtList\000"
 5696      4C697374 
 5696      00
 5697              	.LASF174:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 150


 5698 063f 63617073 		.ascii	"capsense_SsSetAllIOsState\000"
 5698      656E7365 
 5698      5F537353 
 5698      6574416C 
 5698      6C494F73 
 5699              	.LASF70:
 5700 0659 736E7254 		.ascii	"snrTestRawCount\000"
 5700      65737452 
 5700      6177436F 
 5700      756E7400 
 5701              	.LASF29:
 5702 0669 6E4E6F69 		.ascii	"nNoiseTh\000"
 5702      73655468 
 5702      00
 5703              	.LASF62:
 5704 0672 63736430 		.ascii	"csd0Config\000"
 5704      436F6E66 
 5704      696700
 5705              	.LASF167:
 5706 067d 63617073 		.ascii	"capsense_requestScanAllWidget\000"
 5706      656E7365 
 5706      5F726571 
 5706      75657374 
 5706      5363616E 
 5707              	.LASF135:
 5708 069b 63617073 		.ascii	"capsense_CSXConnectRx\000"
 5708      656E7365 
 5708      5F435358 
 5708      436F6E6E 
 5708      65637452 
 5709              	.LASF110:
 5710 06b1 66726571 		.ascii	"freqChannel\000"
 5710      4368616E 
 5710      6E656C00 
 5711              	.LASF75:
 5712 06bd 6873696F 		.ascii	"hsiomPtr\000"
 5712      6D507472 
 5712      00
 5713              	.LASF11:
 5714 06c6 75696E74 		.ascii	"uint32\000"
 5714      333200
 5715              	.LASF88:
 5716 06cd 70747232 		.ascii	"ptr2FltrHistory\000"
 5716      466C7472 
 5716      48697374 
 5716      6F727900 
 5717              	.LASF103:
 5718 06dd 6761696E 		.ascii	"gainValue\000"
 5718      56616C75 
 5718      6500
 5719              	.LASF80:
 5720 06e7 6D61736B 		.ascii	"mask\000"
 5720      00
 5721              	.LASF112:
 5722 06ec 6C6F7765 		.ascii	"lowerLimit\000"
 5722      724C696D 
 5722      697400
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 151


 5723              	.LASF166:
 5724 06f7 63617073 		.ascii	"capsense_sensorIndex\000"
 5724      656E7365 
 5724      5F73656E 
 5724      736F7249 
 5724      6E646578 
 5725              	.LASF156:
 5726 070c 63617073 		.ascii	"capsense_curRxIOPtr\000"
 5726      656E7365 
 5726      5F637572 
 5726      5278494F 
 5726      50747200 
 5727              	.LASF45:
 5728 0720 63617073 		.ascii	"capsense_RAM_WD_LIST_STRUCT\000"
 5728      656E7365 
 5728      5F52414D 
 5728      5F57445F 
 5728      4C495354 
 5729              	.LASF159:
 5730 073c 63617073 		.ascii	"capsense_eleCsxDisconnectFlag\000"
 5730      656E7365 
 5730      5F656C65 
 5730      43737844 
 5730      6973636F 
 5731              	.LASF19:
 5732 075a 63617073 		.ascii	"capsense_THRESHOLD_TYPE\000"
 5732      656E7365 
 5732      5F544852 
 5732      4553484F 
 5732      4C445F54 
 5733              	.LASF122:
 5734 0772 73616D70 		.ascii	"sampleClkFreqHz\000"
 5734      6C65436C 
 5734      6B467265 
 5734      71487A00 
 5735              	.LASF104:
 5736 0782 63617073 		.ascii	"capsense_IDAC_GAIN_TABLE_STRUCT\000"
 5736      656E7365 
 5736      5F494441 
 5736      435F4741 
 5736      494E5F54 
 5737              	.LASF40:
 5738 07a2 63617073 		.ascii	"capsense_RAM_WD_SLIDER_STRUCT\000"
 5738      656E7365 
 5738      5F52414D 
 5738      5F57445F 
 5738      534C4944 
 5739              	.LASF109:
 5740 07c0 736E7349 		.ascii	"snsIndex\000"
 5740      6E646578 
 5740      00
 5741              	.LASF183:
 5742 07c9 63617073 		.ascii	"capsense_WriteBitsSafe\000"
 5742      656E7365 
 5742      5F577269 
 5742      74654269 
 5742      74735361 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 152


 5743              	.LASF171:
 5744 07e0 63617073 		.ascii	"capsense_idacGainTable\000"
 5744      656E7365 
 5744      5F696461 
 5744      63476169 
 5744      6E546162 
 5745              	.LASF17:
 5746 07f7 6C6F6E67 		.ascii	"long double\000"
 5746      20646F75 
 5746      626C6500 
 5747              	.LASF72:
 5748 0803 7363616E 		.ascii	"scanCsxISC\000"
 5748      43737849 
 5748      534300
 5749              	.LASF16:
 5750 080e 72656733 		.ascii	"reg32\000"
 5750      3200
 5751              	.LASF69:
 5752 0814 736E7254 		.ascii	"snrTestScanCounter\000"
 5752      65737453 
 5752      63616E43 
 5752      6F756E74 
 5752      657200
 5753              	.LASF53:
 5754 0827 636F6E66 		.ascii	"configId\000"
 5754      69674964 
 5754      00
 5755              	.LASF87:
 5756 0830 70747232 		.ascii	"ptr2SnsRam\000"
 5756      536E7352 
 5756      616D00
 5757              	.LASF190:
 5758 083b 63617073 		.ascii	"capsense_SsCSXStartSampleExt\000"
 5758      656E7365 
 5758      5F537343 
 5758      53585374 
 5758      61727453 
 5759              	.LASF61:
 5760 0858 736E7353 		.ascii	"snsStatus\000"
 5760      74617475 
 5760      7300
 5761              	.LASF36:
 5762 0862 736E7343 		.ascii	"snsClkSource\000"
 5762      6C6B536F 
 5762      75726365 
 5762      00
 5763              	.LASF140:
 5764 086f 63617073 		.ascii	"capsense_CSXDisconnectRx\000"
 5764      656E7365 
 5764      5F435358 
 5764      44697363 
 5764      6F6E6E65 
 5765              	.LASF96:
 5766 0888 78526573 		.ascii	"xResolution\000"
 5766      6F6C7574 
 5766      696F6E00 
 5767              	.LASF2:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 153


 5768 0894 73686F72 		.ascii	"short int\000"
 5768      7420696E 
 5768      7400
 5769              	.LASF162:
 5770 089e 63617073 		.ascii	"capsense_csxScanPeriod\000"
 5770      656E7365 
 5770      5F637378 
 5770      5363616E 
 5770      50657269 
 5771              	.LASF4:
 5772 08b5 6C6F6E67 		.ascii	"long int\000"
 5772      20696E74 
 5772      00
 5773              	.LASF133:
 5774 08be 63617073 		.ascii	"capsense_CSXConnectTx\000"
 5774      656E7365 
 5774      5F435358 
 5774      436F6E6E 
 5774      65637454 
 5775              	.LASF59:
 5776 08d4 77646774 		.ascii	"wdgtEnable\000"
 5776      456E6162 
 5776      6C6500
 5777              	.LASF44:
 5778 08df 6C696E65 		.ascii	"linearslider\000"
 5778      6172736C 
 5778      69646572 
 5778      00
 5779              	.LASF48:
 5780 08ec 64696666 		.ascii	"diff\000"
 5780      00
 5781              	.LASF56:
 5782 08f1 74756E65 		.ascii	"tunerCmd\000"
 5782      72436D64 
 5782      00
 5783              	.LASF118:
 5784 08fa 74656D70 		.ascii	"temp\000"
 5784      00
 5785              	.LASF78:
 5786 08ff 70735074 		.ascii	"psPtr\000"
 5786      7200
 5787              	.LASF128:
 5788 0905 72617754 		.ascii	"rawTarget\000"
 5788      61726765 
 5788      7400
 5789              	.LASF51:
 5790 090f 63617073 		.ascii	"capsense_RAM_SNS_STRUCT\000"
 5790      656E7365 
 5790      5F52414D 
 5790      5F534E53 
 5790      5F535452 
 5791              	.LASF102:
 5792 0927 6761696E 		.ascii	"gainReg\000"
 5792      52656700 
 5793              	.LASF94:
 5794 092f 6E756D43 		.ascii	"numCols\000"
 5794      6F6C7300 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 154


 5795              	.LASF60:
 5796 0937 77646774 		.ascii	"wdgtStatus\000"
 5796      53746174 
 5796      757300
 5797              	.LASF163:
 5798 0942 63617073 		.ascii	"capsense_csxRawCount\000"
 5798      656E7365 
 5798      5F637378 
 5798      52617743 
 5798      6F756E74 
 5799              	.LASF137:
 5800 0957 63617073 		.ascii	"capsense_CSXScan\000"
 5800      656E7365 
 5800      5F435358 
 5800      5363616E 
 5800      00
 5801              	.LASF18:
 5802 0968 73697A65 		.ascii	"sizetype\000"
 5802      74797065 
 5802      00
 5803              	.LASF82:
 5804 0971 64725368 		.ascii	"drShift\000"
 5804      69667400 
 5805              	.LASF5:
 5806 0979 6C6F6E67 		.ascii	"long unsigned int\000"
 5806      20756E73 
 5806      69676E65 
 5806      6420696E 
 5806      7400
 5807              	.LASF153:
 5808 098b 72657456 		.ascii	"retVal\000"
 5808      616C00
 5809              	.LASF138:
 5810 0992 63617073 		.ascii	"capsense_CSXDisconnectTx\000"
 5810      656E7365 
 5810      5F435358 
 5810      44697363 
 5810      6F6E6E65 
 5811              	.LASF33:
 5812 09ab 69646163 		.ascii	"idacMod\000"
 5812      4D6F6400 
 5813              	.LASF136:
 5814 09b3 72785074 		.ascii	"rxPtr\000"
 5814      7200
 5815              	.LASF89:
 5816 09b9 70747232 		.ascii	"ptr2DebounceArr\000"
 5816      4465626F 
 5816      756E6365 
 5816      41727200 
 5817              	.LASF97:
 5818 09c9 7843656E 		.ascii	"xCentroidMultiplier\000"
 5818      74726F69 
 5818      644D756C 
 5818      7469706C 
 5818      69657200 
 5819              	.LASF27:
 5820 09dd 66696E67 		.ascii	"fingerTh\000"
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 155


 5820      65725468 
 5820      00
 5821              	.LASF47:
 5822 09e6 62736C6E 		.ascii	"bslnExt\000"
 5822      45787400 
 5823              	.LASF15:
 5824 09ee 63797374 		.ascii	"cystatus\000"
 5824      61747573 
 5824      00
 5825              	.LASF155:
 5826 09f7 63617073 		.ascii	"capsense_curTxIOPtr\000"
 5826      656E7365 
 5826      5F637572 
 5826      5478494F 
 5826      50747200 
 5827              	.LASF1:
 5828 0a0b 756E7369 		.ascii	"unsigned char\000"
 5828      676E6564 
 5828      20636861 
 5828      7200
 5829              	.LASF117:
 5830 0a19 77646774 		.ascii	"wdgtPtr\000"
 5830      50747200 
 5831              	.LASF130:
 5832 0a21 63616C69 		.ascii	"calibrationIndex\000"
 5832      62726174 
 5832      696F6E49 
 5832      6E646578 
 5832      00
 5833              	.LASF84:
 5834 0a32 63617073 		.ascii	"capsense_FLASH_IO_STRUCT\000"
 5834      656E7365 
 5834      5F464C41 
 5834      53485F49 
 5834      4F5F5354 
 5835              	.LASF90:
 5836 0a4b 73746174 		.ascii	"staticConfig\000"
 5836      6963436F 
 5836      6E666967 
 5836      00
 5837              	.LASF93:
 5838 0a58 73656E73 		.ascii	"senseMethod\000"
 5838      654D6574 
 5838      686F6400 
 5839              	.LASF64:
 5840 0a64 6D6F6443 		.ascii	"modCsxClk\000"
 5840      7378436C 
 5840      6B00
 5841              	.LASF73:
 5842 0a6e 7363616E 		.ascii	"scanCurrentISC\000"
 5842      43757272 
 5842      656E7449 
 5842      534300
 5843              	.LASF86:
 5844 0a7d 70747232 		.ascii	"ptr2WdgtRam\000"
 5844      57646774 
 5844      52616D00 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 156


 5845              	.LASF74:
 5846 0a89 63617073 		.ascii	"capsense_RAM_STRUCT\000"
 5846      656E7365 
 5846      5F52414D 
 5846      5F535452 
 5846      55435400 
 5847              	.LASF144:
 5848 0a9d 63617073 		.ascii	"capsense_CSXSetupWidget\000"
 5848      656E7365 
 5848      5F435358 
 5848      53657475 
 5848      70576964 
 5849              	.LASF95:
 5850 0ab5 6E756D52 		.ascii	"numRows\000"
 5850      6F777300 
 5851              	.LASF79:
 5852 0abd 6873696F 		.ascii	"hsiomMask\000"
 5852      6D4D6173 
 5852      6B00
 5853              	.LASF173:
 5854 0ac7 4379496E 		.ascii	"CyIntEnable\000"
 5854      74456E61 
 5854      626C6500 
 5855              	.LASF123:
 5856 0ad3 746D7052 		.ascii	"tmpRegVal\000"
 5856      65675661 
 5856      6C00
 5857              	.LASF35:
 5858 0add 736E7343 		.ascii	"snsClk\000"
 5858      6C6B00
 5859              	.LASF24:
 5860 0ae4 63617073 		.ascii	"capsense_SENSE_METHOD_BIST_E\000"
 5860      656E7365 
 5860      5F53454E 
 5860      53455F4D 
 5860      4554484F 
 5861              	.LASF175:
 5862 0b01 4379456E 		.ascii	"CyEnterCriticalSection\000"
 5862      74657243 
 5862      72697469 
 5862      63616C53 
 5862      65637469 
 5863              	.LASF0:
 5864 0b18 7369676E 		.ascii	"signed char\000"
 5864      65642063 
 5864      68617200 
 5865              	.LASF182:
 5866 0b24 63617073 		.ascii	"capsense_Scan\000"
 5866      656E7365 
 5866      5F536361 
 5866      6E00
 5867              	.LASF46:
 5868 0b32 62736C6E 		.ascii	"bsln\000"
 5868      00
 5869              	.LASF3:
 5870 0b37 73686F72 		.ascii	"short unsigned int\000"
 5870      7420756E 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 157


 5870      7369676E 
 5870      65642069 
 5870      6E7400
 5871              	.LASF145:
 5872 0b4a 63757252 		.ascii	"curRamWdgtBasePtr\000"
 5872      616D5764 
 5872      67744261 
 5872      73655074 
 5872      7200
 5873              	.LASF85:
 5874 0b5c 70747232 		.ascii	"ptr2SnsFlash\000"
 5874      536E7346 
 5874      6C617368 
 5874      00
 5875              	.LASF185:
 5876 0b69 63617073 		.ascii	"capsense_SsSwitchSensingMode\000"
 5876      656E7365 
 5876      5F537353 
 5876      77697463 
 5876      6853656E 
 5877              	.LASF188:
 5878 0b86 433A5C72 		.ascii	"C:\\repopsitorios\\aixt\\ports\\Cypress\\CY8CKIT-14"
 5878      65706F70 
 5878      7369746F 
 5878      72696F73 
 5878      5C616978 
 5879 0bb4 352D3430 		.ascii	"5-40XX\\projects\\Configuracion_General.cydsn\000"
 5879      58585C70 
 5879      726F6A65 
 5879      6374735C 
 5879      436F6E66 
 5880              	.LASF9:
 5881 0be0 75696E74 		.ascii	"uint8\000"
 5881      3800
 5882              	.LASF13:
 5883 0be6 646F7562 		.ascii	"double\000"
 5883      6C6500
 5884              	.LASF49:
 5885 0bed 6E656742 		.ascii	"negBslnRstCnt\000"
 5885      736C6E52 
 5885      7374436E 
 5885      7400
 5886              	.LASF101:
 5887 0bfb 63617073 		.ascii	"capsense_FLASH_STRUCT\000"
 5887      656E7365 
 5887      5F464C41 
 5887      53485F53 
 5887      54525543 
 5888              	.LASF179:
 5889 0c11 63617073 		.ascii	"capsense_SsIsrInitialize\000"
 5889      656E7365 
 5889      5F537349 
 5889      7372496E 
 5889      69746961 
 5890              	.LASF54:
 5891 0c2a 64657669 		.ascii	"deviceId\000"
 5891      63654964 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccm3ISjJ.s 			page 158


 5891      00
 5892              	.LASF105:
 5893 0c33 77696467 		.ascii	"widgetId\000"
 5893      65744964 
 5893      00
 5894              	.LASF37:
 5895 0c3c 63617073 		.ascii	"capsense_RAM_WD_BASE_STRUCT\000"
 5895      656E7365 
 5895      5F52414D 
 5895      5F57445F 
 5895      42415345 
 5896              	.LASF39:
 5897 0c58 706F7369 		.ascii	"position\000"
 5897      74696F6E 
 5897      00
 5898              	.LASF169:
 5899 0c61 63617073 		.ascii	"capsense_scanFreqIndex\000"
 5899      656E7365 
 5899      5F736361 
 5899      6E467265 
 5899      71496E64 
 5900              	.LASF100:
 5901 0c78 77646774 		.ascii	"wdgtArray\000"
 5901      41727261 
 5901      7900
 5902              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
