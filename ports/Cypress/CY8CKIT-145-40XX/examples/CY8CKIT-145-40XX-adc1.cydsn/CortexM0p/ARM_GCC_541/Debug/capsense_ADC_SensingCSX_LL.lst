ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"capsense_ADC_SensingCSX_LL.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.capsense_ADC_SsCSXPostSingleScan,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	capsense_ADC_SsCSXPostSingleScan, %function
  24              	capsense_ADC_SsCSXPostSingleScan:
  25              	.LFB8:
  26              		.file 1 "Generated_Source\\PSoC4\\capsense_ADC_SensingCSX_LL.c"
   1:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \file capsense_ADC_SensingCSX_LL.c
   3:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \version 7.10
   4:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
   5:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \brief
   6:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *   This file defines the data structure global variables and provides
   7:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *   implementation for the low-level APIs of the CSX part of
   8:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *   the Sensing module. The file contains the APIs used for the CSD block
   9:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *   initialization, calibration and scanning.
  10:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
  11:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \see capsense_ADC v7.10 Datasheet
  12:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
  13:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *//*****************************************************************************
  14:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * Copyright (2016-2019), Cypress Semiconductor Corporation.
  15:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** ********************************************************************************
  16:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  17:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * protected by and subject to worldwide patent protection (United States and
  18:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * foreign), United States copyright laws and international treaty provisions.
  19:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  20:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * license to copy, use, modify, create derivative works of, and compile the
  21:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  22:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * custom software in support of licensee product to be used only in conjunction
  23:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  24:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * Any reproduction, modification, translation, compilation, or representation of
  25:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * this software except as specified above is prohibited without the express
  26:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * written permission of Cypress.
  27:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
  28:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  29:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  30:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  31:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * Cypress reserves the right to make changes without further notice to the
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 2


  32:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * materials described herein. Cypress does not assume any liability arising out
  33:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * of the application or use of any product or circuit described herein. Cypress
  34:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * does not authorize its products for use as critical components in life-support
  35:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * systems where a malfunction or failure may reasonably be expected to result in
  36:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  37:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * support systems application implies that the manufacturer assumes all risk of
  38:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  39:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * limited by and subject to the applicable Cypress software license agreement.
  40:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *******************************************************************************/
  41:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** #include <cytypes.h>
  42:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** #include "CyLib.h"
  43:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
  44:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** #include "capsense_ADC_Structure.h"
  45:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** #include "capsense_ADC_Configuration.h"
  46:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** #include "capsense_ADC_SensingCSX_LL.h"
  47:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** #include "capsense_ADC_Sensing.h"
  48:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** #if (capsense_ADC_ENABLE == capsense_ADC_SELF_TEST_EN)
  49:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #include "capsense_ADC_SelfTest.h"
  50:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** #endif
  51:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
  52:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** #include "cyapicallbacks.h"
  53:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
  54:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** #if (capsense_ADC_ENABLE == capsense_ADC_CSX_EN)
  55:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
  56:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** /*******************************************************************************
  57:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * Function constants
  58:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *******************************************************************************/
  59:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
  60:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** #define  capsense_ADC_NUM_HALF_CYCLES                       (2u)
  61:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
  62:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
  63:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** /*******************************************************************************
  64:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * Defines module variables
  65:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *******************************************************************************/
  66:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
  67:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** /* Local variable used to store the Scan period */
  68:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** volatile uint16 capsense_ADC_csxScanPeriod = 0u;
  69:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** /* Local variable used to return raw count from the post scan ISR */
  70:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** volatile uint16 capsense_ADC_csxRawCount = 0u;
  71:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
  72:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** #if(capsense_ADC_ENABLE != capsense_ADC_CSDV2)
  73:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     volatile uint32 capsense_ADC_csxRawGarbage = 0u;
  74:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** #endif /* (capsense_ADC_ENABLE != capsense_ADC_CSDV2) */
  75:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
  76:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** /* Pointer to Flash structure to hold Tx electrode that was connected previously */
  77:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** static capsense_ADC_FLASH_IO_STRUCT const *capsense_ADC_curTxIOPtr;
  78:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** /* Pointer to Flash structure to hold Rx electrode that was connected previously */
  79:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** static capsense_ADC_FLASH_IO_STRUCT const *capsense_ADC_curRxIOPtr;
  80:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** /* Local variable to hold total Tx in widget, while scanning all the sensors in widget */
  81:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** static uint16 capsense_ADC_curWdgtTotalRx = 0u;
  82:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** /* Local variable to hold total Rx in widget, while scanning all the sensors in widget */
  83:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** static uint16 capsense_ADC_curWdgtTotalTx = 0u;
  84:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** /* Flag to indicate that electrodes were connected previously */
  85:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** static uint16 capsense_ADC_eleCsxDisconnectFlag = 0u;
  86:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** /* Pointer to Flash structure holding info of sensor to be scanned */
  87:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** #if (capsense_ADC_ENABLE == capsense_ADC_CSX_GANGED_SNS_EN)
  88:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     static capsense_ADC_FLASH_SNS_STRUCT const *capsense_ADC_curGangRxPtr = 0u;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 3


  89:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     static capsense_ADC_FLASH_SNS_STRUCT const *capsense_ADC_curGangTxPtr = 0u;
  90:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** #endif
  91:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
  92:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** /*******************************************************************************
  93:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * Module local function declarations
  94:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *******************************************************************************/
  95:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** /**
  96:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \cond SECTION_C_INTERNAL
  97:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \addtogroup group_c_internal
  98:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \{
  99:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** */
 100:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 101:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** static void capsense_ADC_SsCSXStartSample(void);
 102:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** static void capsense_ADC_SsCSXPostMultiScan(void);
 103:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** static void capsense_ADC_SsCSXPostSingleScan(void);
 104:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** static uint16 capsense_ADC_SsCalcCsxScanPeriod(capsense_ADC_RAM_WD_BASE_STRUCT const *wdgtPtr);
 105:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 106:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** #if(capsense_ADC_ENABLE == capsense_ADC_CSDV2)
 107:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     CY_INLINE static void capsense_ADC_SsCSXStartSampleExt(void);
 108:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** #endif
 109:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 110:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** #if (capsense_ADC_ENABLE == capsense_ADC_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 111:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     static uint32 capsense_ADC_SsCSXOversample(void);
 112:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** #endif
 113:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 114:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** #if (capsense_ADC_ENABLE == capsense_ADC_CSX_GANGED_SNS_EN)
 115:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     static void capsense_ADC_SsCSXPostMultiScanGanged(void);
 116:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** #endif
 117:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 118:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** #if (capsense_ADC_CSX_IDAC_AUTOCAL_EN == capsense_ADC_ENABLE)
 119:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     static cystatus capsense_ADC_SsCSXCalibrateCheck(uint32 widgetId, uint32 scanPeriod, uint32 tar
 120:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** #endif
 121:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 122:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** /* Pointer to Pointer to function used to register callback in ISR */
 123:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** void (*capsense_ADC_CSXPostScanApiPtr)(void) = &capsense_ADC_SsCSXPostMultiScan;
 124:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** /** \}
 125:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \endcond */
 126:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 127:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** /*******************************************************************************
 128:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * Function Name: capsense_ADC_CSXInitialize
 129:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** ****************************************************************************//**
 130:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
 131:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \brief
 132:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *   Performs hardware and firmware initialization required for the CSX operation
 133:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *   of the capsense_ADC Component.
 134:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
 135:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \details
 136:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *   This function initializes hardware to perform the CSX sensing operation. This
 137:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *   function is called by the capsense_ADC_Start() API during the Component
 138:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *   initialization. If both CSX and CSD sensing methods are used in the Component,
 139:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *   this function is called by the capsense_ADC_SetupWidget() API to change hardware
 140:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *   configured for CSD to re-initialize for the CSX sensing.
 141:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
 142:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *   If the CSD and CSX widgets are used in the Component, it is recommended not to
 143:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *   mix the CSD widgets between the CSX widgets, instead, place all CSX widgets in
 144:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *   the required scanning order and then place the CSD widgets in the customizer.
 145:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *   For the Component API, this action will eliminate the need for changing the hardware
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 4


 146:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *   configuration for every widget scan and will increase the execution speed
 147:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *   in the capsense_ADC_ScanAllWidgets() when the API is called.
 148:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
 149:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *   Similarly, it is recommended to set up and scan all the CSX widgets in such
 150:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *   a sequence that the capsense_ADC_SetupWidget() API  shouldn't need
 151:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *   hardware  sensing-configuration change.
 152:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
 153:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *   It is highly not recommended to call this API directly from the application layer.
 154:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
 155:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *******************************************************************************/
 156:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** void capsense_ADC_CSXInitialize(void)
 157:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** {
 158:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #if(capsense_ADC_ENABLE == capsense_ADC_CSDV2)
 159:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         uint8  interruptState;
 160:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         uint32 tmpRegVal;
 161:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 162:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         /* Set all the sensors to inactive state */
 163:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         if(capsense_ADC_dsRam.scanCurrentISC != capsense_ADC_dsRam.scanCsxISC)
 164:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         {
 165:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             capsense_ADC_SsSetAllIOsState((uint32)capsense_ADC_dsRam.scanCsxISC);
 166:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             capsense_ADC_dsRam.scanCurrentISC = capsense_ADC_dsRam.scanCsxISC;
 167:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         }
 168:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 169:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_INTR_PTR,             capsense_ADC_DEFAULT_CSD_INTR_CFG);
 170:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_INTR_SET_PTR,         capsense_ADC_DEFAULT_CSD_INTR_SET_CFG);
 171:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_INTR_MASK_PTR,        capsense_ADC_DEFAULT_CSD_INTR_MASK_CFG);
 172:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_HSCMP_PTR,            capsense_ADC_DEFAULT_CSD_HSCMP_CFG);
 173:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_AMBUF_PTR,            capsense_ADC_DEFAULT_CSD_AMBUF_CFG);
 174:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_REFGEN_PTR,           capsense_ADC_DEFAULT_CSD_REFGEN_CFG);
 175:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_CSDCMP_PTR,           capsense_ADC_DEFAULT_CSD_CSDCMP_CFG);
 176:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_CSD_IDACA_PTR,         capsense_ADC_DEFAULT_CSD_IDACA_CFG);
 177:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 178:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         #if((0u != capsense_ADC_ADC_EN) || (0u != capsense_ADC_CSD_IDAC_COMP_EN))
 179:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             CY_SET_REG32(capsense_ADC_CSD_IDACB_PTR,    capsense_ADC_DEFAULT_CSD_IDACB_CFG);
 180:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         #endif /* (0u != capsense_ADC_ADC_EN) || (0u != capsense_ADC_CSD_IDAC_COMP_EN) */
 181:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 182:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_SW_RES_PTR,           capsense_ADC_DEFAULT_CSD_SW_RES_CFG);
 183:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_SENSE_PERIOD_PTR,     capsense_ADC_DEFAULT_CSD_SENSE_PERIOD_CFG);
 184:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_SENSE_DUTY_PTR,       capsense_ADC_DEFAULT_CSD_SENSE_DUTY_CFG);
 185:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_SW_HS_P_SEL_PTR,      capsense_ADC_DEFAULT_CSD_SW_HS_P_SEL_CFG);
 186:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_SW_HS_N_SEL_PTR,      capsense_ADC_DEFAULT_CSD_SW_HS_N_SEL_CFG);
 187:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_SW_SHIELD_SEL_PTR,    capsense_ADC_DEFAULT_CSD_SW_SHIELD_SEL_CFG)
 188:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_SW_AMUXBUF_SEL_PTR,   capsense_ADC_DEFAULT_CSD_SW_AMUXBUF_SEL_CFG
 189:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 190:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         interruptState = CyEnterCriticalSection();
 191:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(capsense_ADC_SW_BYP_SEL_PTR);
 192:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         tmpRegVal &= ~(capsense_ADC_SW_BYP_SEL_SW_BYA_MASK);
 193:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         tmpRegVal |= capsense_ADC_DEFAULT_CSD_SW_BYP_SEL_CFG;
 194:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_SW_BYP_SEL_PTR,       tmpRegVal);
 195:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 196:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 197:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_SW_CMP_P_SEL_PTR,     capsense_ADC_DEFAULT_CSD_SW_CMP_P_SEL_CFG);
 198:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_SW_CMP_N_SEL_PTR,     capsense_ADC_DEFAULT_CSD_SW_CMP_N_SEL_CFG);
 199:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 200:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         interruptState = CyEnterCriticalSection();
 201:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(capsense_ADC_SW_REFGEN_SEL_PTR);
 202:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         tmpRegVal &= ~capsense_ADC_SW_REFGEN_SEL_SW_MASK;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 5


 203:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         tmpRegVal |= capsense_ADC_DEFAULT_CSD_SW_REFGEN_SEL_CFG;
 204:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_SW_REFGEN_SEL_PTR,    tmpRegVal);
 205:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 206:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 207:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_SW_FW_MOD_SEL_PTR,    capsense_ADC_DEFAULT_CSD_SW_FW_MOD_SEL_CFG)
 208:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_SW_FW_TANK_SEL_PTR,   capsense_ADC_DEFAULT_CSD_SW_FW_TANK_SEL_CFG
 209:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_SW_DSI_SEL_PTR,       capsense_ADC_DEFAULT_CSD_SW_DSI_SEL_CFG);
 210:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_SEQ_TIME_PTR,         capsense_ADC_DEFAULT_CSD_SEQ_TIME_CFG);
 211:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_SEQ_INIT_CNT_PTR,     capsense_ADC_DEFAULT_CSD_SEQ_INIT_CNT_CFG);
 212:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_SEQ_NORM_CNT_PTR,     capsense_ADC_DEFAULT_CSD_SEQ_NORM_CNT_CFG);
 213:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_ADC_CTL_PTR,          capsense_ADC_DEFAULT_CSD_ADC_CTL_CFG);
 214:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_SEQ_START_PTR,        capsense_ADC_DEFAULT_CSD_SEQ_START_CFG);
 215:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_CONFIG_PTR,           capsense_ADC_DEFAULT_CSD_CONFIG_CFG);
 216:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 217:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         capsense_ADC_DischargeExtCapacitors(capsense_ADC_EXT_CAP_DISCHARGE_TIME);
 218:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 219:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         interruptState = CyEnterCriticalSection();
 220:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(capsense_ADC_CintA_PC_PTR);
 221:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         tmpRegVal &= (~(capsense_ADC_GPIO_PC_MASK << (capsense_ADC_CintA_SHIFT * capsense_ADC_GPIO_
 222:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_CintA_PC_PTR, tmpRegVal);
 223:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 224:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 225:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         interruptState = CyEnterCriticalSection();
 226:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(capsense_ADC_CintB_PC_PTR);
 227:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         tmpRegVal &= (~(capsense_ADC_GPIO_PC_MASK << (capsense_ADC_CintB__SHIFT * capsense_ADC_GPIO
 228:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_CintB_PC_PTR, tmpRegVal);
 229:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 230:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 231:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         /* Connect CintA_tank pin to AMUXBUS-A using HSIOM registers. */
 232:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         interruptState = CyEnterCriticalSection();
 233:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(capsense_ADC_CintA_HSIOM_PTR);
 234:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         tmpRegVal &= ~capsense_ADC_CintA_HSIOM_MASK;
 235:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         tmpRegVal |= (capsense_ADC_HSIOM_SEL_AMUXA << capsense_ADC_CintA_HSIOM_SHIFT);
 236:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_CintA_HSIOM_PTR, tmpRegVal);
 237:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 238:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 239:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         /* Connect CintB to AMUXBUS-A using HSIOM registers. */
 240:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         interruptState = CyEnterCriticalSection();
 241:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(capsense_ADC_CintB_HSIOM_PTR);
 242:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         tmpRegVal &= ~capsense_ADC_CintB_HSIOM_MASK;
 243:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         tmpRegVal |= (capsense_ADC_HSIOM_SEL_AMUXA << capsense_ADC_CintB_HSIOM_SHIFT);
 244:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_CintB_HSIOM_PTR, tmpRegVal);
 245:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 246:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 247:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         capsense_ADC_SsSetModClkClockDivider((uint32)capsense_ADC_dsRam.modCsxClk);
 248:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 249:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         #if (capsense_ADC_ENABLE == capsense_ADC_CSX_COMMON_TX_CLK_EN)
 250:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             capsense_ADC_SsSetSnsClockDivider((uint32)capsense_ADC_dsRam.snsCsxClk);
 251:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         #endif
 252:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 253:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #else
 254:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         uint32 trimValue;
 255:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 256:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         /* Set all the sensors to inactive state */
 257:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         if(capsense_ADC_dsRam.scanCurrentISC != capsense_ADC_dsRam.scanCsxISC)
 258:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         {
 259:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             capsense_ADC_SsSetAllIOsState((uint32)capsense_ADC_dsRam.scanCsxISC);
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 6


 260:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             capsense_ADC_dsRam.scanCurrentISC = capsense_ADC_dsRam.scanCsxISC;
 261:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         }
 262:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 263:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         #if(capsense_ADC_ENABLE == capsense_ADC_CSD_IDAC_COMP_EN)
 264:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             trimValue = CY_GET_REG32(capsense_ADC_IDAC_PTR);
 265:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             trimValue &= ~(capsense_ADC_IDAC_COMP_CFG_MASK | capsense_ADC_IDAC_FEEDBACK_MODE_MASK);
 266:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             CY_SET_REG32(capsense_ADC_IDAC_PTR, trimValue);
 267:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         #endif /* (capsense_ADC_ENABLE == capsense_ADC_CSD_IDAC_COMP_EN) */
 268:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 269:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         /* Connect CintB to AMUXBUS-A using HSIOM registers. */
 270:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         capsense_ADC_WriteBitsSafe(capsense_ADC_CintB_HSIOM_PTR, capsense_ADC_CintB_HSIOM_MASK,
 271:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     (uint32)(capsense_ADC_HSIOM_SEL_AMUXA << capsense_ADC_CintB_HSIOM_SHIFT));
 272:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         capsense_ADC_WriteBitsSafe(capsense_ADC_CintB_PC_PTR,
 273:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     (uint32)(capsense_ADC_GPIO_PC_MASK << (capsense_ADC_CintB__SHIFT * capsense_ADC
 274:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         capsense_ADC_WriteBitsSafe(capsense_ADC_CintB_DR_PTR, (uint32)(0x01uL << capsense_ADC_CintB
 275:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 276:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         /* Connect CintA_tank pin to AMUXBUS-A using HSIOM registers. */
 277:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         capsense_ADC_WriteBitsSafe(capsense_ADC_CintA_HSIOM_PTR, capsense_ADC_CintA_HSIOM_MASK,
 278:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     (uint32)(capsense_ADC_HSIOM_SEL_AMUXA << capsense_ADC_CintA_HSIOM_SHIFT));
 279:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         capsense_ADC_WriteBitsSafe(capsense_ADC_CintA_PC_PTR,
 280:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     (uint32)(capsense_ADC_GPIO_PC_MASK << (capsense_ADC_CintA_SHIFT * capsense_ADC_
 281:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         capsense_ADC_WriteBitsSafe(capsense_ADC_CintA_DR_PTR, (uint32)(0x01uL << capsense_ADC_CintA
 282:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 283:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         /* Connect CSD comparator to CintB via AMUXBUS-A */
 284:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         trimValue = CY_GET_REG32(capsense_ADC_CONFIG_PTR);
 285:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         trimValue |= capsense_ADC_CONFIG_SENSE_INSEL_MASK;
 286:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_CONFIG_PTR, trimValue);
 287:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 288:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         /* If common clocks are enabled for Component, set clock
 289:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             divider for sensor and modulator clocks and start/restart them */
 290:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         #if (capsense_ADC_CSX_COMMON_TX_CLK_EN == capsense_ADC_ENABLE)
 291:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             capsense_ADC_SsSetClockDividers((uint32)capsense_ADC_dsRam.snsCsxClk, (uint32)capsense_
 292:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         #endif
 293:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #endif /* (capsense_ADC_ENABLE == capsense_ADC_CSDV2) */
 294:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 295:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     /* Enable capsense_ADC ISR and set ISR for CSX sensing */
 296:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     capsense_ADC_SsIsrInitialize(&capsense_ADC_CSXScanISR);
 297:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** }
 298:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 299:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 300:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** /*******************************************************************************
 301:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * Function Name: capsense_ADC_CSXElectrodeCheck
 302:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** ****************************************************************************//**
 303:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
 304:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \brief
 305:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *   Check if electrodes were previously connected using
 306:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *   the capsense_ADC_CSXSetupWidgetExt() API and if yes, disconnect them.
 307:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
 308:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \details
 309:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *   This function checks if capsense_ADC_eleCsxDisconnectFlag is set.
 310:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *   If it is set, the function disconnects the previously connected electrode.
 311:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
 312:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *******************************************************************************/
 313:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** void capsense_ADC_CSXElectrodeCheck(void)
 314:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** {
 315:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #if (capsense_ADC_ENABLE == capsense_ADC_CSX_GANGED_SNS_EN)
 316:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         uint32 numElectrodes;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 7


 317:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #endif /* (capsense_ADC_ENABLE == capsense_ADC_CSX_GANGED_SNS_EN) */
 318:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 319:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     if (0u != capsense_ADC_eleCsxDisconnectFlag)
 320:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     {
 321:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****        /* Disconnect if electrodes were previous connected by SetupWidgetExt() API */
 322:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         #if (capsense_ADC_ENABLE == capsense_ADC_CSX_GANGED_SNS_EN)
 323:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             /* Check ganged sns flag */
 324:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             if (capsense_ADC_GANGED_SNS_MASK == (capsense_ADC_curFlashWdgtPtr->staticConfig & capse
 325:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             {
 326:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 /* 1. Get number of pins in previous connected Tx electrode
 327:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     3. Get Tx pointer
 328:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     4. Disconnect all Tx */
 329:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 numElectrodes = capsense_ADC_curGangTxPtr->numPins;
 330:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 capsense_ADC_curTxIOPtr = &capsense_ADC_ioList[capsense_ADC_curGangTxPtr->firstPinI
 331:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 332:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 do
 333:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 {
 334:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     capsense_ADC_CSXDisconnectTx(capsense_ADC_curTxIOPtr++);
 335:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     numElectrodes--;
 336:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 } while (0u != numElectrodes);
 337:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 338:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 /* 1. Get number of pins in previous connected Rx electrode
 339:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     3. Get Rx pointer
 340:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     4. Disconnect all Rx */
 341:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 numElectrodes = capsense_ADC_curGangRxPtr->numPins;
 342:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 capsense_ADC_curRxIOPtr = &capsense_ADC_ioList[capsense_ADC_curGangRxPtr->firstPinI
 343:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 344:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 do
 345:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 {
 346:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     capsense_ADC_CSXDisconnectRx(capsense_ADC_curRxIOPtr++);
 347:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     numElectrodes--;
 348:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 } while (0u != numElectrodes);
 349:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             }
 350:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             else
 351:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             {
 352:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 /* Disconnect if electrodes were previous connected by SetupWidgetExt API */
 353:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 capsense_ADC_CSXDisconnectTx(capsense_ADC_curTxIOPtr);
 354:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 capsense_ADC_CSXDisconnectRx(capsense_ADC_curRxIOPtr);
 355:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             }
 356:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         #else
 357:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             /* Disconnect if electrodes were previous connected by SetupWidgetExt API */
 358:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             capsense_ADC_CSXDisconnectTx(capsense_ADC_curTxIOPtr);
 359:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             capsense_ADC_CSXDisconnectRx(capsense_ADC_curRxIOPtr);
 360:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         #endif
 361:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         capsense_ADC_eleCsxDisconnectFlag = 0u;
 362:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     }
 363:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** }
 364:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 365:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 366:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** /*******************************************************************************
 367:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * Function Name: capsense_ADC_CSXSetupWidget
 368:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** ****************************************************************************//**
 369:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
 370:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \brief
 371:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  Performs hardware and firmware initialization required for scanning sensors
 372:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  in a specific widget using the CSX sensing method. This function requires
 373:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  using the capsense_ADC_CSXScan() function to start scanning.
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 8


 374:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
 375:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \details
 376:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  Performs hardware and firmware initialization required for scanning sensors
 377:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  in a specific widget using the CSX sensing method. This function requires
 378:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  using the capsense_ADC_CSXScan() function to start scanning.
 379:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
 380:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  \note This function is obsolete and kept for backward compatibility only.
 381:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  The capsense_ADC_SetupWidget() function should be used instead.
 382:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
 383:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  This function initializes the widgets specific common parameters to perform
 384:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  the CSX scanning. The initialization includes the following:
 385:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *    1. The CSD_CONFIG register.
 386:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *    2. The IDAC register.
 387:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *    3. The Sense clock frequency
 388:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *    4. The phase alignment of the sense and modulator clocks.
 389:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
 390:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  This function does not connect any specific sensors to the scanning hardware
 391:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  and neither does it start a scanning process. The capsense_ADC_CSXScan()
 392:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  function must be called after initializing the widget to start scanning.
 393:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
 394:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  This function is called when no scanning is in progress. I.e.
 395:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  capsense_ADC_IsBusy() returns a non-busy status.
 396:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
 397:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  This function is called by the capsense_ADC_SetupWidget() API if the
 398:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  given widget uses the CSX sensing method.
 399:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
 400:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
 401:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
 402:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
 403:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
 404:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \param widgetId
 405:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  Specifies the ID number of the widget to perform hardware and firmware
 406:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  initialization required for scanning sensors in the specific widget.
 407:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  A macro for the widget ID can be found in the capsense_ADC Configuration header
 408:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  file defined as capsense_ADC_<WidgetName>_WDGT_ID.
 409:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
 410:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *******************************************************************************/
 411:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** void capsense_ADC_CSXSetupWidget(uint32 widgetId)
 412:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** {
 413:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     /* variable to access widget details */
 414:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     capsense_ADC_RAM_WD_BASE_STRUCT * curRamWdgtBasePtr;
 415:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 416:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #if (capsense_ADC_ENABLE == capsense_ADC_CSDV2)
 417:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         uint32 tmpRegVal;
 418:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         uint32 snsClkVal;
 419:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #endif /* (capsense_ADC_DISABLE == capsense_ADC_CSDV2) */
 420:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 421:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     /* Save the current widget Id */
 422:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     capsense_ADC_widgetIndex = (uint8)widgetId;
 423:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 424:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     capsense_ADC_SsSwitchSensingMode(capsense_ADC_SENSE_METHOD_CSX_E);
 425:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 426:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     /*
 427:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     *  Check if CSX electrodes were previously connected using
 428:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     *  capsense_ADC_CSXSetupWidgetExt API and if yes, disconnect them
 429:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     */
 430:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     capsense_ADC_CSXElectrodeCheck();
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 9


 431:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 432:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     /* Configure hardware block */
 433:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #if (capsense_ADC_ENABLE == capsense_ADC_CSDV2)
 434:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         capsense_ADC_curFlashWdgtPtr = &capsense_ADC_dsFlash.wdgtArray[widgetId];
 435:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 436:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         curRamWdgtBasePtr = (capsense_ADC_RAM_WD_BASE_STRUCT *)capsense_ADC_curFlashWdgtPtr->ptr2Wd
 437:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 438:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         #if (capsense_ADC_ENABLE == capsense_ADC_CSX_COMMON_TX_CLK_EN)
 439:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             snsClkVal = (uint32)capsense_ADC_dsRam.snsCsxClk;
 440:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         #else
 441:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             snsClkVal = (uint32)curRamWdgtBasePtr->snsClk;
 442:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         #endif /* (capsense_ADC_ENABLE == capsense_ADC_CSX_COMMON_TX_CLK_EN) */
 443:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 444:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_SEQ_NORM_CNT_PTR, (uint32)curRamWdgtBasePtr->resolution);
 445:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         capsense_ADC_csxScanPeriod  = capsense_ADC_SsCalcCsxScanPeriod(curRamWdgtBasePtr);
 446:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 447:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         tmpRegVal = (uint32)curRamWdgtBasePtr->snsClkSource;
 448:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 449:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         snsClkVal = (snsClkVal - 1uL) & capsense_ADC_SENSE_PERIOD_SENSE_DIV_MASK;
 450:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         tmpRegVal = (tmpRegVal << capsense_ADC_SENSE_PERIOD_LFSR_SIZE_SHIFT) | snsClkVal;
 451:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_SENSE_PERIOD_PTR, tmpRegVal);
 452:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         capsense_ADC_SsSetModClkClockDivider((uint32)capsense_ADC_dsRam.modCsxClk);
 453:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #else
 454:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         /*
 455:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         * initialize access pointers for current:
 456:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         *    1. Pointer to widget configuration in Flash
 457:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         *    2. Widget configuration in RAM
 458:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         *    3. Make a local copy of widget index
 459:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         */
 460:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         capsense_ADC_curFlashWdgtPtr = &capsense_ADC_dsFlash.wdgtArray[widgetId];
 461:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         curRamWdgtBasePtr = (capsense_ADC_RAM_WD_BASE_STRUCT *)capsense_ADC_curFlashWdgtPtr->ptr2Wd
 462:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 463:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_CONFIG_PTR, capsense_ADC_CONFIG_ENABLE_MASK);
 464:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_CONFIG_PTR, (CY_GET_REG32(capsense_ADC_CONFIG_PTR) |
 465:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                                 capsense_ADC_CONFIG_MUTUALCAP_EN_MASK     |
 466:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                                 capsense_ADC_CONFIG_SENSE_COMP_BW_MASK    |
 467:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                                 capsense_ADC_CONFIG_SENSE_COMP_EN_MASK    |
 468:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                                 capsense_ADC_CONFIG_SENSE_INSEL_MASK      |
 469:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                                 capsense_ADC_CONFIG_REFBUF_EN_MASK        |
 470:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                                 capsense_ADC_CONFIG_REFBUF_DRV_MASK));
 471:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 472:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         /* If individual clocks are enabled for each widget, set clock
 473:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             divider for sensor and modulator clocks and start/restart them. */
 474:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         #if (capsense_ADC_CSX_COMMON_TX_CLK_EN == capsense_ADC_DISABLE)
 475:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             capsense_ADC_SsSetClockDividers((uint32)curRamWdgtBasePtr->snsClk, (uint32)capsense_ADC
 476:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         #endif
 477:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 478:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         /* Find scan period */
 479:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         capsense_ADC_csxScanPeriod = capsense_ADC_SsCalcCsxScanPeriod(curRamWdgtBasePtr);
 480:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #endif /* (capsense_ADC_ENABLE == capsense_ADC_CSDV2) */
 481:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** }
 482:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 483:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** /*******************************************************************************
 484:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * Function Name: capsense_ADC_CSXSetupWidgetExt
 485:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** ****************************************************************************//**
 486:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
 487:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \brief
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 10


 488:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  Performs extended initialization for the CSX widget and also performs
 489:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  initialization required for a specific sensor in the widget. This function
 490:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  requires using the capsense_ADC_CSXScan() function to initiate a scan.
 491:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
 492:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \details
 493:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  Performs extended initialization for the CSX widget and also performs
 494:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  initialization required for a specific sensor in the widget. This function
 495:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  requires using the capsense_ADC_CSXScan() function to initiate a scan.
 496:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
 497:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  \note This function is obsolete and kept for backward compatibility only.
 498:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  The capsense_ADC_SetupWidgetExt() function should be used instead.
 499:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
 500:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  This function does the same tasks as capsense_ADC_CSXSetupWidget() and
 501:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  also connects a sensor in the widget for scanning. Once this function is
 502:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  called to initialize a widget and a sensor, the capsense_ADC_CSXScanExt()
 503:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  function must be called to scan the sensor.
 504:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
 505:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  This function is called when no scanning is in progress. I.e.
 506:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  capsense_ADC_IsBusy() returns a non-busy status.
 507:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
 508:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
 509:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
 510:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
 511:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
 512:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \param widgetId
 513:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  Specifies the ID number of the widget to perform hardware and firmware
 514:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  initialization required for scanning a specific sensor in a specific widget.
 515:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  A macro for the widget ID can be found in the capsense_ADC
 516:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  Configuration header file defined as capsense_ADC_<WidgetName>_WDGT_ID.
 517:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
 518:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \param sensorId
 519:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  Specifies the ID number of the sensor within the widget to perform hardware
 520:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  and firmware initialization required for scanning a specific sensor in a
 521:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  specific widget.
 522:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  A macro for the sensor ID within a specified widget can be found in the
 523:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  capsense_ADC Configuration header file defined as
 524:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  capsense_ADC_<WidgetName>_SNS<SensorNumber>_ID.
 525:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
 526:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *******************************************************************************/
 527:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 528:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** void capsense_ADC_CSXSetupWidgetExt(uint32 widgetId, uint32 sensorId)
 529:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** {
 530:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     uint32 txIndex;
 531:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     uint32 rxIndex;
 532:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 533:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #if (capsense_ADC_ENABLE == capsense_ADC_CSX_GANGED_SNS_EN)
 534:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         uint16 numElectrodes;
 535:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #endif /* (capsense_ADC_ENABLE == capsense_ADC_CSX_GANGED_SNS_EN) */
 536:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 537:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     /* Initialize widget */
 538:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     capsense_ADC_CSXSetupWidget(widgetId);
 539:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     capsense_ADC_sensorIndex = (uint8)sensorId;
 540:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 541:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     /* initialize sensor data structure pointer to appropriate address */
 542:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     capsense_ADC_curRamSnsPtr = capsense_ADC_curFlashWdgtPtr->ptr2SnsRam;
 543:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     capsense_ADC_curRamSnsPtr = &capsense_ADC_curRamSnsPtr[sensorId];
 544:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 11


 545:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #if (capsense_ADC_ENABLE == capsense_ADC_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 546:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         if (0u != capsense_ADC_curRamSnsPtr->subConvNum)
 547:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         {
 548:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #endif /* (capsense_ADC_ENABLE == capsense_ADC_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
 549:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 550:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     /*
 551:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     *  Find Tx and Rx index for given snsIndex
 552:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     *    rxIndex = sensorId / TxCount
 553:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     *    txIndex = sensorId % TxCount
 554:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     */
 555:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     rxIndex = sensorId /capsense_ADC_curFlashWdgtPtr->numRows;
 556:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     txIndex = sensorId % capsense_ADC_curFlashWdgtPtr->numRows;
 557:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 558:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     /* If widget is APA, find node (Tx/Rx) to be connected for scanning */
 559:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #if (capsense_ADC_ENABLE == capsense_ADC_CSX_GANGED_SNS_EN)
 560:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         if (capsense_ADC_GANGED_SNS_MASK == (capsense_ADC_curFlashWdgtPtr->staticConfig & capsense_
 561:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         {
 562:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             /*
 563:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             *  1. Get access to Rx sensor pointer (Rx = Base + rxIndex).
 564:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             *  2. Get number of Rx electrodes
 565:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             *  3. Get Rx pointer
 566:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             *  4. Connect all Rx
 567:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             */
 568:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             capsense_ADC_curGangRxPtr = capsense_ADC_curFlashWdgtPtr->ptr2SnsFlash;
 569:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             capsense_ADC_curGangRxPtr += rxIndex;
 570:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             numElectrodes = capsense_ADC_curGangRxPtr->numPins;
 571:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             capsense_ADC_curRxIOPtr = &capsense_ADC_ioList[capsense_ADC_curGangRxPtr->firstPinId];
 572:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 573:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             do
 574:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             {
 575:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 capsense_ADC_CSXConnectRx(capsense_ADC_curRxIOPtr++);
 576:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 numElectrodes--;
 577:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             } while (0u != numElectrodes);
 578:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 579:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             /*
 580:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             *  1. Get access to Tx sensor pointer (Tx = Base + NumberRx + TxIndex).
 581:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             *  2. Get number of Tx electrodes
 582:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             *  3. Get Tx pointer
 583:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             *  4. Connect all Tx
 584:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             */
 585:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             capsense_ADC_curGangTxPtr = capsense_ADC_curFlashWdgtPtr->ptr2SnsFlash;
 586:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             capsense_ADC_curGangTxPtr += (capsense_ADC_curFlashWdgtPtr->numCols + txIndex);
 587:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 588:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             numElectrodes = capsense_ADC_curGangTxPtr->numPins;
 589:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             capsense_ADC_curTxIOPtr = &capsense_ADC_ioList[capsense_ADC_curGangTxPtr->firstPinId];
 590:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 591:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             do
 592:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             {
 593:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 capsense_ADC_CSXConnectTx(capsense_ADC_curTxIOPtr++);
 594:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 numElectrodes--;
 595:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             }while (0u != numElectrodes);
 596:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 597:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             /* Set callback to scan connected ganged sensor only */
 598:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             capsense_ADC_CSXPostScanApiPtr = &capsense_ADC_SsCSXPostSingleScan;
 599:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         }
 600:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         else
 601:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #endif  /* (capsense_ADC_ENABLE == capsense_ADC_CSX_GANGED_SNS_EN) */
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 12


 602:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         {
 603:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             /*
 604:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             *  If no ganged sensor in Component OR current widget no contains ganged sns, then:
 605:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             *    1. Find Rx pointer: Rx = Base address + RxIndex
 606:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             *    2. Find Tx pointer: Tx = Base address + (total Rx + TxIndex)
 607:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             */
 608:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             capsense_ADC_curRxIOPtr = (capsense_ADC_FLASH_IO_STRUCT const *)capsense_ADC_curFlashWd
 609:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             capsense_ADC_curRxIOPtr = &capsense_ADC_curRxIOPtr[rxIndex];
 610:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 611:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             capsense_ADC_curTxIOPtr = (capsense_ADC_FLASH_IO_STRUCT const *)capsense_ADC_curFlashWd
 612:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             capsense_ADC_curTxIOPtr = &capsense_ADC_curTxIOPtr[(capsense_ADC_curFlashWdgtPtr->numCo
 613:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 614:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             /* Connect Tx and Rx IOs for scan ad set flag to indicate that IOs should be disconnect
 615:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             capsense_ADC_CSXConnectTx(capsense_ADC_curTxIOPtr);
 616:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             capsense_ADC_CSXConnectRx(capsense_ADC_curRxIOPtr);
 617:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             capsense_ADC_eleCsxDisconnectFlag = capsense_ADC_DISCONNECT_IO_FLAG;
 618:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 619:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             /* Set callback to scan all the sensors in widget */
 620:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             capsense_ADC_CSXPostScanApiPtr = &capsense_ADC_SsCSXPostSingleScan;
 621:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         }
 622:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #if (capsense_ADC_ENABLE == capsense_ADC_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 623:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         }
 624:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #endif
 625:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** }
 626:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 627:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** /*******************************************************************************
 628:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * Function Name: capsense_ADC_CSXScan
 629:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** ****************************************************************************//**
 630:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
 631:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \brief
 632:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  This function initiates a scan for the sensors of the widget initialized by
 633:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  the capsense_ADC_CSXSetupWidget() function.
 634:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
 635:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \details
 636:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  This function initiates a scan for the sensors of the widget initialized by
 637:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  the capsense_ADC_CSXSetupWidget() function.
 638:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
 639:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  \note This function is obsolete and kept for backward compatibility only.
 640:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  The capsense_ADC_Scan() function should be used instead.
 641:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
 642:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  This function performs scanning of all the sensors in the widget configured by
 643:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  the capsense_ADC_CSXSetupWidget() function. It does the following tasks:
 644:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *    1. Connects the first sensor of the widget.
 645:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *    2. Initializes an interrupt callback function to initialize a scan of the
 646:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *       next sensors in a widget.
 647:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *    3. Starts scanning for the first sensor in the widget.
 648:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
 649:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  This function is called by the capsense_ADC_Scan() API if the given
 650:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  widget uses the CSX sensing method.
 651:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
 652:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
 653:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
 654:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
 655:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
 656:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  This function is called when no scanning is in progress. I.e.
 657:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  capsense_ADC_IsBusy() returns a non-busy status. The widget must be
 658:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  preconfigured by the capsense_ADC_CSXSetupWidget() function if any other
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 13


 659:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  widget was previously scanned or any other type of scan functions were used.
 660:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
 661:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *******************************************************************************/
 662:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 663:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** void capsense_ADC_CSXScan(void)
 664:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** {
 665:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #if (capsense_ADC_ENABLE == capsense_ADC_CSX_GANGED_SNS_EN)
 666:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         uint32 numElectrodes;
 667:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #endif
 668:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #if (capsense_ADC_ENABLE == capsense_ADC_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 669:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         uint32 snsIndex = 0u;
 670:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         uint32 snsNum;
 671:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #endif
 672:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 673:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     /* Set all the sensors to inactive state */
 674:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     if(capsense_ADC_dsRam.scanCurrentISC != capsense_ADC_dsRam.scanCsxISC)
 675:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     {
 676:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         capsense_ADC_SsSetAllIOsState((uint32)capsense_ADC_dsRam.scanCsxISC);
 677:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         capsense_ADC_dsRam.scanCurrentISC = capsense_ADC_dsRam.scanCsxISC;
 678:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     }
 679:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 680:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     capsense_ADC_sensorIndex = 0u;
 681:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 682:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     /* initialize pointer to access sensor RAM elements */
 683:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     capsense_ADC_curRamSnsPtr = capsense_ADC_curFlashWdgtPtr->ptr2SnsRam;
 684:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 685:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #if (capsense_ADC_ENABLE == capsense_ADC_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 686:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         /* Loop through the sensors until non-skipped is found */
 687:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         snsNum = capsense_ADC_curFlashWdgtPtr->totalNumSns;
 688:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         while ((snsIndex < snsNum) && (capsense_ADC_curRamSnsPtr->subConvNum == 0u))
 689:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         {
 690:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             /* Increment sensor pointers */
 691:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             capsense_ADC_curRamSnsPtr++;
 692:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             capsense_ADC_sensorIndex++;
 693:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             snsIndex++;
 694:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         }
 695:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         /*
 696:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         *  Calculate total sensor to be scanned. If buttons, one Tx and an Rx for each sensor
 697:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         *  if Matrix button or Touchpad, M x N rule applies
 698:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         */
 699:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         capsense_ADC_curWdgtTotalTx = (uint16)(capsense_ADC_curFlashWdgtPtr->numRows - (snsIndex % 
 700:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         capsense_ADC_curWdgtTotalRx  = (uint16)(capsense_ADC_curFlashWdgtPtr->numCols - (snsIndex /
 701:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 702:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         /* Scan sensor if it's index within a valid range otherwise do nothing as all the sensors a
 703:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         if (snsIndex < snsNum)
 704:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         {
 705:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             #if (capsense_ADC_ENABLE == capsense_ADC_CSX_GANGED_SNS_EN)
 706:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 if ((capsense_ADC_curFlashWdgtPtr->staticConfig & capsense_ADC_GANGED_SNS_MASK) != 
 707:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 {
 708:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     /* Connect all Rx electrodes */
 709:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     capsense_ADC_curGangRxPtr = capsense_ADC_curFlashWdgtPtr->ptr2SnsFlash;
 710:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     capsense_ADC_curGangRxPtr += snsIndex /capsense_ADC_curFlashWdgtPtr->numRows;
 711:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     numElectrodes = capsense_ADC_curGangRxPtr->numPins;
 712:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     capsense_ADC_curRxIOPtr = &capsense_ADC_ioList[capsense_ADC_curGangRxPtr->first
 713:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     do
 714:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     {
 715:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         capsense_ADC_CSXConnectRx(capsense_ADC_curRxIOPtr++);
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 14


 716:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         numElectrodes--;
 717:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     } while (0u != numElectrodes);
 718:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 719:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     /* Connect all Tx electrodes */
 720:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     capsense_ADC_curGangTxPtr = capsense_ADC_curFlashWdgtPtr->ptr2SnsFlash;
 721:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     capsense_ADC_curGangTxPtr += (capsense_ADC_curFlashWdgtPtr->numCols + snsIndex 
 722:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     numElectrodes = capsense_ADC_curGangTxPtr->numPins;
 723:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     capsense_ADC_curTxIOPtr = &capsense_ADC_ioList[capsense_ADC_curGangTxPtr->first
 724:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     do
 725:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     {
 726:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         capsense_ADC_CSXConnectTx(capsense_ADC_curTxIOPtr++);
 727:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         numElectrodes--;
 728:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     }while (0u != numElectrodes);
 729:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     /* Assign callback to ISR */
 730:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     capsense_ADC_CSXPostScanApiPtr = &capsense_ADC_SsCSXPostMultiScanGanged;
 731:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 }
 732:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 else
 733:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             #endif /* (capsense_ADC_ENABLE == capsense_ADC_CSX_GANGED_SNS_EN) */
 734:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             {
 735:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 /* Find Rx pointer: Rx = Base_address + SnsIndex / total_Tx */
 736:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 capsense_ADC_curRxIOPtr = (capsense_ADC_FLASH_IO_STRUCT const *)capsense_ADC_curFla
 737:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 capsense_ADC_curRxIOPtr += (snsIndex / capsense_ADC_curFlashWdgtPtr->numRows);
 738:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 /* Find Tx pointer: Tx = Base_address + total_Rx + SnsIndex % total_Tx */
 739:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 capsense_ADC_curTxIOPtr = (capsense_ADC_FLASH_IO_STRUCT const *)capsense_ADC_curFla
 740:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 capsense_ADC_curTxIOPtr += capsense_ADC_curFlashWdgtPtr->numCols;
 741:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 capsense_ADC_curTxIOPtr += (snsIndex % capsense_ADC_curFlashWdgtPtr->numRows);
 742:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 /* Connect Tx and Rx electrodes for scan */
 743:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 capsense_ADC_CSXConnectTx(capsense_ADC_curTxIOPtr);
 744:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 capsense_ADC_CSXConnectRx(capsense_ADC_curRxIOPtr);
 745:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 /* Set callback to scan all the sensors in widget */
 746:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 capsense_ADC_CSXPostScanApiPtr = &capsense_ADC_SsCSXPostMultiScan;
 747:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             }
 748:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 749:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             /* Reset multi-frequency scan channel if enabled */
 750:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             #if (capsense_ADC_MULTI_FREQ_SCAN_EN == capsense_ADC_ENABLE)
 751:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 capsense_ADC_scanFreqIndex = capsense_ADC_FREQ_CHANNEL_0;
 752:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             #endif
 753:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 754:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             /* Set scan status, enter critical section and initiate scan */
 755:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             capsense_ADC_dsRam.status |= capsense_ADC_SW_STS_BUSY;
 756:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 757:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             #if(capsense_ADC_ENABLE == capsense_ADC_CSDV2) &&\
 758:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                (capsense_ADC_ENABLE != capsense_ADC_BLOCK_OFF_AFTER_SCAN_EN) &&\
 759:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                (capsense_ADC_CSX_ANALOG_STARTUP_DELAY_US > 0uL)
 760:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 CyDelayUs(capsense_ADC_CSX_ANALOG_STARTUP_DELAY_US);
 761:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             #endif
 762:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 763:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             capsense_ADC_SsCSXStartSample();
 764:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         }
 765:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 766:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #else /* (capsense_ADC_ENABLE == capsense_ADC_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
 767:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 768:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         /*
 769:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         *  Calculate total sensor to be scanned. If buttons, one Tx and an Rx for each sensor
 770:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         *  if Matrix button or Touchpad, M x N rule applies
 771:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         */
 772:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         capsense_ADC_curWdgtTotalTx = capsense_ADC_curFlashWdgtPtr->numRows;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 15


 773:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         capsense_ADC_curWdgtTotalRx  = capsense_ADC_curFlashWdgtPtr->numCols;
 774:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 775:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         /* If Component contains CSX ganged sensor, then check if widget contains ganged sensor */
 776:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         #if (capsense_ADC_CSX_GANGED_SNS_EN == 1u)
 777:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             if ((capsense_ADC_curFlashWdgtPtr->staticConfig & capsense_ADC_GANGED_SNS_MASK) != 0u)
 778:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             {
 779:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 /*
 780:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 *  1. Get sns pointer for first Rx
 781:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 *  2. Get number of Rx pin
 782:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 *  3. Get pointer to the Rx pin
 783:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 *  4. Connect all Rx pins
 784:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 */
 785:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 capsense_ADC_curGangRxPtr = capsense_ADC_curFlashWdgtPtr->ptr2SnsFlash;
 786:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 numElectrodes = capsense_ADC_curGangRxPtr->numPins ;
 787:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 capsense_ADC_curRxIOPtr = &capsense_ADC_ioList[capsense_ADC_curGangRxPtr->firstPinI
 788:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 do
 789:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 {
 790:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     capsense_ADC_CSXConnectRx(capsense_ADC_curRxIOPtr++);
 791:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     numElectrodes--;
 792:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 } while (0u != numElectrodes);
 793:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 794:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 /*
 795:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 *  1. Get sns pointer for first Tx (Tx = Base + number of Rx).
 796:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 *  2. Get number of Tx electrodes
 797:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 *  3. Get pointer the Tx electrode
 798:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 *  4. Connect all Tx
 799:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 */
 800:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 capsense_ADC_curGangTxPtr = capsense_ADC_curFlashWdgtPtr->ptr2SnsFlash;
 801:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 capsense_ADC_curGangTxPtr += capsense_ADC_curFlashWdgtPtr->numCols;
 802:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 numElectrodes = capsense_ADC_curGangTxPtr->numPins ;
 803:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 capsense_ADC_curTxIOPtr = &capsense_ADC_ioList[capsense_ADC_curGangTxPtr->firstPinI
 804:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 805:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 do
 806:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 {
 807:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     capsense_ADC_CSXConnectTx(capsense_ADC_curTxIOPtr++);
 808:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     numElectrodes--;
 809:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 }while (0u != numElectrodes);
 810:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 811:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 /* Assign callback to ISR */
 812:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 capsense_ADC_CSXPostScanApiPtr = &capsense_ADC_SsCSXPostMultiScanGanged;
 813:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 814:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             }
 815:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             else
 816:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         #endif
 817:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             {
 818:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 /*
 819:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 *  If no ganged sensor in the Component OR current widget contains no ganged sns, t
 820:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 *    1. Find Rx pointer: Rx = Base address.
 821:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 *    2. Find Tx pointer: Tx = Base address + total Rx
 822:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 */
 823:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 capsense_ADC_curRxIOPtr = (capsense_ADC_FLASH_IO_STRUCT const *)capsense_ADC_curFla
 824:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 capsense_ADC_curTxIOPtr = capsense_ADC_curRxIOPtr;
 825:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 capsense_ADC_curTxIOPtr = &capsense_ADC_curTxIOPtr[(capsense_ADC_curFlashWdgtPtr->n
 826:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 827:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 /* Connect first Tx and first Rx IOs for scan */
 828:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 capsense_ADC_CSXConnectTx(capsense_ADC_curTxIOPtr);
 829:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 capsense_ADC_CSXConnectRx(capsense_ADC_curRxIOPtr);
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 16


 830:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 831:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 /* Set callback to scan all the sensors in widget */
 832:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 capsense_ADC_CSXPostScanApiPtr = &capsense_ADC_SsCSXPostMultiScan;
 833:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             }
 834:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 835:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             /* Reset multi-frequency scan channel if enabled */
 836:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             #if (capsense_ADC_MULTI_FREQ_SCAN_EN == capsense_ADC_ENABLE)
 837:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 capsense_ADC_scanFreqIndex = capsense_ADC_FREQ_CHANNEL_0;
 838:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             #endif
 839:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 840:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         /* Set scan status, enter critical section and initiate scan */
 841:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         capsense_ADC_dsRam.status |= capsense_ADC_SW_STS_BUSY;
 842:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 843:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         #if(capsense_ADC_ENABLE == capsense_ADC_CSDV2) &&\
 844:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****            (capsense_ADC_ENABLE != capsense_ADC_BLOCK_OFF_AFTER_SCAN_EN) &&\
 845:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****            (capsense_ADC_CSX_ANALOG_STARTUP_DELAY_US > 0uL)
 846:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             CyDelayUs(capsense_ADC_CSX_ANALOG_STARTUP_DELAY_US);
 847:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         #endif
 848:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 849:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         capsense_ADC_SsCSXStartSample();
 850:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 851:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #endif /* (capsense_ADC_ENABLE == capsense_ADC_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
 852:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** }
 853:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 854:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** /*******************************************************************************
 855:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * Function Name: capsense_ADC_CSXScanExt()
 856:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** ****************************************************************************//**
 857:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
 858:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \brief
 859:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  Starts the CSX conversion on the preconfigured sensor. This function requires
 860:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  using the capsense_ADC_CSXSetupWidgetExt() function to set up a
 861:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  widget.
 862:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
 863:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \details
 864:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  Starts the CSX conversion on the preconfigured sensor. This function requires
 865:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  using the capsense_ADC_CSXSetupWidgetExt() function to set up a
 866:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  widget.
 867:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
 868:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  \note This function is obsolete and kept for backward compatibility only.
 869:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  The capsense_ADC_ScanExt() function should be used instead.
 870:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
 871:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  This function performs single scanning of one sensor in the widget configured
 872:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  by the capsense_ADC_CSXSetupWidgetExt() function. It does the following
 873:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  tasks:
 874:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *    1. Sets a busy flag in the capsense_ADC_dsRam structure.
 875:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *    2. Configures the Tx clock frequency.
 876:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *    3. Configures the Modulator clock frequency.
 877:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *    4. Configures the IDAC value.
 878:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *    5. Starts single scanning.
 879:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
 880:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
 881:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
 882:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  use cases (for faster execution time or pipeline scanning for example). This
 883:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  function is called when no scanning is in progress. I.e.
 884:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  capsense_ADC_IsBusy() returns a non-busy status.
 885:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
 886:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  The sensor must be preconfigured by using the
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 17


 887:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  capsense_ADC_CSXSetupWidgetExt() API prior to calling this function.
 888:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  The sensor remains ready for the next scan if a previous scan was triggered
 889:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  by using the capsense_ADC_CSXScanExt() function. In this case, calling
 890:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  capsense_ADC_CSXSetupWidgetExt() is not required every time before the
 891:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  capsense_ADC_CSXScanExt() function. If a previous scan was triggered in
 892:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  any other way - capsense_ADC_Scan(), capsense_ADC_ScanAllWidgets()
 893:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  or capsense_ADC_RunTuner() - (see the capsense_ADC_RunTuner() function
 894:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  description for more details), the sensor must be preconfigured again by
 895:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  using the capsense_ADC_CSXSetupWidgetExt() API prior to calling the
 896:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  capsense_ADC_CSXScanExt() function.
 897:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
 898:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  If disconnection of the sensors is required after calling
 899:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  capsense_ADC_CSXScanExt(), the capsense_ADC_CSXDisconnectTx() and
 900:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  capsense_ADC_CSXDisconnectRx() APIs can be used.
 901:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
 902:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *******************************************************************************/
 903:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 904:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** void capsense_ADC_CSXScanExt(void)
 905:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** {
 906:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     /* Reset multi-frequency scan channel if enabled */
 907:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #if (capsense_ADC_MULTI_FREQ_SCAN_EN == capsense_ADC_ENABLE)
 908:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         capsense_ADC_scanFreqIndex = capsense_ADC_FREQ_CHANNEL_0;
 909:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #endif
 910:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 911:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #if (capsense_ADC_ENABLE == capsense_ADC_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 912:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         if (0u != capsense_ADC_curRamSnsPtr->subConvNum)
 913:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         {
 914:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             /* Set busy flag and start conversion */
 915:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             capsense_ADC_dsRam.status |= capsense_ADC_SW_STS_BUSY;
 916:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 917:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             #if(capsense_ADC_ENABLE == capsense_ADC_CSDV2) &&\
 918:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                (capsense_ADC_ENABLE != capsense_ADC_BLOCK_OFF_AFTER_SCAN_EN) &&\
 919:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                (capsense_ADC_CSX_ANALOG_STARTUP_DELAY_US > 0uL)
 920:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         CyDelayUs(capsense_ADC_CSX_ANALOG_STARTUP_DELAY_US);
 921:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             #endif
 922:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             capsense_ADC_SsCSXStartSample();
 923:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         }
 924:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #else
 925:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         /* Set busy flag and start conversion */
 926:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         capsense_ADC_dsRam.status |= capsense_ADC_SW_STS_BUSY;
 927:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 928:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         #if(capsense_ADC_ENABLE == capsense_ADC_CSDV2) &&\
 929:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****            (capsense_ADC_ENABLE != capsense_ADC_BLOCK_OFF_AFTER_SCAN_EN) &&\
 930:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****            (capsense_ADC_CSX_ANALOG_STARTUP_DELAY_US > 0uL)
 931:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             CyDelayUs(capsense_ADC_CSX_ANALOG_STARTUP_DELAY_US);
 932:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         #endif
 933:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         capsense_ADC_SsCSXStartSample();
 934:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #endif /* (capsense_ADC_ENABLE == capsense_ADC_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
 935:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** }
 936:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 937:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 938:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** /*******************************************************************************
 939:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * Function Name: capsense_ADC_SsCSXPostMultiScan
 940:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** ****************************************************************************//**
 941:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
 942:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \brief
 943:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *   ISR function implements the multiple-sensor scanning for un-ganged CSX widgets.
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 18


 944:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *   This function is called by the Component ISR only, it should not be used by
 945:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *   the application layer.
 946:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
 947:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *******************************************************************************/
 948:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 949:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** static void capsense_ADC_SsCSXPostMultiScan(void)
 950:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** {
 951:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #ifdef capsense_ADC_ENTRY_CALLBACK
 952:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         capsense_ADC_EntryCallback();
 953:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #endif /* capsense_ADC_ENTRY_CALLBACK */
 954:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 955:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     /* Copy scan result into sensor raw count array */
 956:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     capsense_ADC_curRamSnsPtr->raw[capsense_ADC_scanFreqIndex] = \
 957:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                              (capsense_ADC_csxScanPeriod - capsense_ADC_csxRawCount);
 958:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 959:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #if (capsense_ADC_ENABLE == capsense_ADC_MULTI_FREQ_SCAN_EN)
 960:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         /* Increment multi frequency scan index if all channels are not scanned */
 961:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         if (capsense_ADC_FREQ_CHANNEL_2 > capsense_ADC_scanFreqIndex)
 962:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         {
 963:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             /* Change multi-frequency channel and start sample */
 964:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             capsense_ADC_scanFreqIndex++;
 965:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 966:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             #if (capsense_ADC_MFS_IMO == capsense_ADC_MFS_METHOD)
 967:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 capsense_ADC_SsChangeImoFreq((uint32)capsense_ADC_scanFreqIndex);
 968:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             #else
 969:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 capsense_ADC_SsChangeClkFreq((uint32)capsense_ADC_scanFreqIndex);
 970:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             #endif /* (capsense_ADC_MFS_IMO == capsense_ADC_MFS_METHOD) */
 971:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 972:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             capsense_ADC_SsCSXStartSample();
 973:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         }
 974:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         else
 975:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #endif
 976:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         {
 977:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             #if (capsense_ADC_MULTI_FREQ_SCAN_EN == capsense_ADC_ENABLE)
 978:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 /* All channels are scanned. Reset the multi frequency scan channel */
 979:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 capsense_ADC_scanFreqIndex = capsense_ADC_FREQ_CHANNEL_0;
 980:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 981:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 #if (capsense_ADC_MFS_IMO == capsense_ADC_MFS_METHOD)
 982:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     capsense_ADC_SsChangeImoFreq(capsense_ADC_FREQ_CHANNEL_0);
 983:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 #else
 984:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     capsense_ADC_SsChangeClkFreq(capsense_ADC_FREQ_CHANNEL_0);
 985:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 #endif /* (capsense_ADC_MFS_IMO == capsense_ADC_MFS_METHOD) */
 986:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 987:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             #endif
 988:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 989:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             #if (capsense_ADC_ENABLE == capsense_ADC_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 990:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 /* Disconnect Tx/Rx electrodes of previously scanned sensor as preparation for next
 991:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 capsense_ADC_CSXDisconnectTx(capsense_ADC_curTxIOPtr);
 992:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 capsense_ADC_CSXDisconnectRx(capsense_ADC_curRxIOPtr);
 993:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 994:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 /* Increment sensor until non-skipped is found */
 995:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 do
 996:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 {
 997:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     /* Increment sensor index to configure next sensor in widget */
 998:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     capsense_ADC_sensorIndex++;
 999:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1000:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     /* Increment sensor pointers */
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 19


1001:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     capsense_ADC_curRamSnsPtr++;
1002:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     capsense_ADC_curWdgtTotalTx--;
1003:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     if (capsense_ADC_curWdgtTotalTx > 0u)
1004:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     {
1005:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         capsense_ADC_curTxIOPtr++;
1006:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     }
1007:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     else
1008:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     {
1009:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         capsense_ADC_curWdgtTotalRx--;
1010:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         if (capsense_ADC_curWdgtTotalRx > 0u)
1011:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         {
1012:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                             capsense_ADC_curRxIOPtr++;
1013:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                             capsense_ADC_curWdgtTotalTx  = capsense_ADC_curFlashWdgtPtr->numRows;
1014:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                             capsense_ADC_curTxIOPtr = (capsense_ADC_FLASH_IO_STRUCT const *)capsens
1015:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                             capsense_ADC_curTxIOPtr = & capsense_ADC_curTxIOPtr[(capsense_ADC_curFl
1016:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         }
1017:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     }
1018:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 } while ((capsense_ADC_curWdgtTotalRx != 0u) && (capsense_ADC_curRamSnsPtr->subConv
1019:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1020:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 /* Perform the next scan or switch to the next widget */
1021:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 if(capsense_ADC_curWdgtTotalRx != 0u)
1022:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 {
1023:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     /* Connect Tx/Rx electrodes for the next scan */
1024:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     capsense_ADC_CSXConnectTx(capsense_ADC_curTxIOPtr);
1025:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     capsense_ADC_CSXConnectRx(capsense_ADC_curRxIOPtr);
1026:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     /* Reset scan result holder, and initiate scan */
1027:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     capsense_ADC_SsCSXStartSample();
1028:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 }
1029:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 else
1030:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 {
1031:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     /* Call scan next widget API if requested, if not, complete scan */
1032:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     if (capsense_ADC_requestScanAllWidget != 0u)
1033:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     {
1034:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         capsense_ADC_SsPostAllWidgetsScan();
1035:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     }
1036:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     else
1037:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     {
1038:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         capsense_ADC_dsRam.scanCounter++;
1039:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         capsense_ADC_dsRam.status &= ~capsense_ADC_SW_STS_BUSY;
1040:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     }
1041:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 }
1042:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             #else /* (capsense_ADC_ENABLE == capsense_ADC_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1043:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1044:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 /*
1045:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 *  Disconnect Tx electrodes of previously scanned sensor as
1046:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 *  preparation for next sensor scan
1047:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 */
1048:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 capsense_ADC_CSXDisconnectTx (capsense_ADC_curTxIOPtr);
1049:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1050:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 /* Increment sensor index to configure next sensor in widget */
1051:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 capsense_ADC_sensorIndex++;
1052:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1053:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 /*
1054:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 *  Initiate scan for next sensor in widget, if all the sensors in
1055:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 *  widget are not scanned
1056:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 */
1057:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 capsense_ADC_curWdgtTotalTx--;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 20


1058:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 if (capsense_ADC_curWdgtTotalTx > 0u)
1059:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 {
1060:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     /*
1061:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     *  1. Increment pointer to next Tx
1062:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     *  2. Connect next Rx for scan
1063:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     *  3. Increment pointer to sns data
1064:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     */
1065:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     capsense_ADC_curTxIOPtr++;
1066:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     capsense_ADC_CSXConnectTx (capsense_ADC_curTxIOPtr);
1067:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     capsense_ADC_curRamSnsPtr++;
1068:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1069:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     /* Reset scan result holder, and initiate scan */
1070:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     capsense_ADC_SsCSXStartSample();
1071:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 }
1072:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1073:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 /* Check if all Rx are looped through */
1074:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 else
1075:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 {
1076:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     capsense_ADC_curWdgtTotalRx--;
1077:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     if (capsense_ADC_curWdgtTotalRx > 0u)
1078:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     {
1079:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         /*
1080:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         *  1. Disconnect current Rx electrode
1081:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         *  2. Connect next Rx electrode
1082:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         *  3. Re-initialize total Tx to be scanned per Rx
1083:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         *  4. Find first Tx electrode again
1084:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         *  5. Connect first Tx electrode
1085:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         */
1086:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         capsense_ADC_CSXDisconnectRx(capsense_ADC_curRxIOPtr);
1087:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         capsense_ADC_curRxIOPtr++;
1088:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         capsense_ADC_CSXConnectRx(capsense_ADC_curRxIOPtr);
1089:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         capsense_ADC_curWdgtTotalTx  = capsense_ADC_curFlashWdgtPtr->numRows;
1090:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         capsense_ADC_curTxIOPtr = (capsense_ADC_FLASH_IO_STRUCT const *)capsense_AD
1091:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         capsense_ADC_curTxIOPtr = & capsense_ADC_curTxIOPtr[(capsense_ADC_curFlashW
1092:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         capsense_ADC_CSXConnectTx(capsense_ADC_curTxIOPtr);
1093:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1094:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         /* Increment RAM sensor pointer pointer */
1095:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         capsense_ADC_curRamSnsPtr++;
1096:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1097:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         /* Initiate sample */
1098:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         capsense_ADC_SsCSXStartSample();
1099:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     }
1100:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     else
1101:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     {
1102:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         /* If all the sensors are scanned, disconnect Tx */
1103:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         capsense_ADC_CSXDisconnectRx(capsense_ADC_curRxIOPtr);
1104:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1105:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         /* Call scan next widget API if requested, if not, complete scan */
1106:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         if (capsense_ADC_requestScanAllWidget != 0u)
1107:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         {
1108:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                             capsense_ADC_SsPostAllWidgetsScan();
1109:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         }
1110:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         else
1111:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         {
1112:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                             /*
1113:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                             *  All pending scans completed,
1114:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                             *    1. update the counter to indicat same
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 21


1115:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                             *    2. Clear busy state as scanning is completed
1116:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                             */
1117:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                             capsense_ADC_dsRam.scanCounter++;
1118:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                             capsense_ADC_dsRam.status &= ~capsense_ADC_SW_STS_BUSY;
1119:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         }
1120:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     }
1121:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 }
1122:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             #endif /* (capsense_ADC_ENABLE == capsense_ADC_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1123:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         }
1124:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1125:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #ifdef capsense_ADC_EXIT_CALLBACK
1126:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         capsense_ADC_ExitCallback();
1127:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #endif /* capsense_ADC_EXIT_CALLBACK */
1128:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** }
1129:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1130:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1131:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** /*******************************************************************************
1132:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * Function Name: capsense_ADC_SsCSXPostMultiScanGanged
1133:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** ****************************************************************************//**
1134:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
1135:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \brief
1136:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *   The ISR function implements the multiple-sensor scanning for ganged CSX widgets.
1137:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *   This function is called by the Component ISR only, should not be used by
1138:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *   the application layer.
1139:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
1140:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \details
1141:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *   The ISR function implements the multiple-sensor scanning for ganged CSX widgets.
1142:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *   This function is called by the Component ISR only, should not be used by
1143:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *   the application layer.
1144:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
1145:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *******************************************************************************/
1146:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** #if (capsense_ADC_CSX_GANGED_SNS_EN == 1u)
1147:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1148:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** static void capsense_ADC_SsCSXPostMultiScanGanged(void)
1149:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** {
1150:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     uint32 numElectrodes;
1151:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1152:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #ifdef capsense_ADC_ENTRY_CALLBACK
1153:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         capsense_ADC_EntryCallback();
1154:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #endif /* capsense_ADC_ENTRY_CALLBACK */
1155:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1156:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     /* Copy scan result into sensor raw count array */
1157:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     capsense_ADC_curRamSnsPtr->raw[capsense_ADC_scanFreqIndex] = \
1158:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     (capsense_ADC_csxScanPeriod - capsense_ADC_csxRawCount);
1159:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1160:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #if (capsense_ADC_ENABLE == capsense_ADC_MULTI_FREQ_SCAN_EN)
1161:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         /* Increment multi frequency scan index if all channels are not scanned */
1162:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         if (capsense_ADC_FREQ_CHANNEL_2 > capsense_ADC_scanFreqIndex)
1163:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         {
1164:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             /* Change multi-frequency channel and start sample */
1165:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             capsense_ADC_scanFreqIndex++;
1166:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1167:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             #if (capsense_ADC_MFS_IMO == capsense_ADC_MFS_METHOD)
1168:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 capsense_ADC_SsChangeImoFreq((uint32)capsense_ADC_scanFreqIndex);
1169:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             #else
1170:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 capsense_ADC_SsChangeClkFreq((uint32)capsense_ADC_scanFreqIndex);
1171:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             #endif /* (capsense_ADC_MFS_IMO == capsense_ADC_MFS_METHOD) */
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 22


1172:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1173:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             capsense_ADC_SsCSXStartSample();
1174:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         }
1175:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         else
1176:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #endif
1177:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         {
1178:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             #if (capsense_ADC_MULTI_FREQ_SCAN_EN == capsense_ADC_ENABLE)
1179:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 /* All channels are scanned. Reset the multi frequency scan channel */
1180:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 capsense_ADC_scanFreqIndex = capsense_ADC_FREQ_CHANNEL_0;
1181:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1182:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 #if (capsense_ADC_MFS_IMO == capsense_ADC_MFS_METHOD)
1183:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     capsense_ADC_SsChangeImoFreq(capsense_ADC_FREQ_CHANNEL_0);
1184:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 #else
1185:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     capsense_ADC_SsChangeClkFreq(capsense_ADC_FREQ_CHANNEL_0);
1186:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 #endif /* (capsense_ADC_MFS_IMO == capsense_ADC_MFS_METHOD) */
1187:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1188:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             #endif
1189:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1190:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             #if (capsense_ADC_ENABLE == capsense_ADC_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
1191:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 /* Disconnect Tx electrodes of previously scanned sensor as preparation for next se
1192:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 numElectrodes = capsense_ADC_curGangTxPtr->numPins;
1193:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 capsense_ADC_curTxIOPtr = &capsense_ADC_ioList[capsense_ADC_curGangTxPtr->firstPinI
1194:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 do
1195:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 {
1196:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     capsense_ADC_CSXDisconnectTx(capsense_ADC_curTxIOPtr++);
1197:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     numElectrodes--;
1198:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 } while (0u != numElectrodes);
1199:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 /* Disconnect Rx electrodes of previously scanned sensor as preparation for next se
1200:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 numElectrodes = capsense_ADC_curGangRxPtr->numPins;
1201:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 capsense_ADC_curRxIOPtr = &capsense_ADC_ioList[capsense_ADC_curGangRxPtr->firstPinI
1202:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 do
1203:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 {
1204:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     capsense_ADC_CSXDisconnectRx(capsense_ADC_curRxIOPtr++);
1205:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     numElectrodes--;
1206:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 } while (0u != numElectrodes);
1207:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1208:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 /* Increment sensor until non-skipped is found */
1209:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 do
1210:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 {
1211:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     /* Increment sensor index to configure next sensor in widget */
1212:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     capsense_ADC_sensorIndex++;
1213:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1214:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     /* Increment RAM sensor pointer */
1215:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     capsense_ADC_curRamSnsPtr++;
1216:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     capsense_ADC_curWdgtTotalTx--;
1217:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     if (capsense_ADC_curWdgtTotalTx > 0u)
1218:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     {
1219:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         capsense_ADC_curGangTxPtr++;
1220:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     }
1221:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     else
1222:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     {
1223:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         /* Check if all Rx are scanned, if not, initiate scan for next Rx */
1224:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         capsense_ADC_curWdgtTotalRx--;
1225:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         if (capsense_ADC_curWdgtTotalRx > 0u)
1226:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         {
1227:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                             capsense_ADC_curGangRxPtr++;
1228:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                             capsense_ADC_curWdgtTotalTx = capsense_ADC_curFlashWdgtPtr->numRows;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 23


1229:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                             capsense_ADC_curGangTxPtr = capsense_ADC_curFlashWdgtPtr->ptr2SnsFlash;
1230:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                             capsense_ADC_curGangTxPtr += capsense_ADC_curFlashWdgtPtr->numCols;
1231:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         }
1232:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     }
1233:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 } while ((capsense_ADC_curWdgtTotalRx != 0u) && (capsense_ADC_curRamSnsPtr->subConv
1234:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1235:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 if(capsense_ADC_curWdgtTotalRx != 0u)
1236:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 {
1237:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     /* Connect Tx electrodes for the next scan */
1238:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     numElectrodes = capsense_ADC_curGangTxPtr->numPins;
1239:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     capsense_ADC_curTxIOPtr = &capsense_ADC_ioList[capsense_ADC_curGangTxPtr->first
1240:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     do
1241:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     {
1242:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         capsense_ADC_CSXConnectTx(capsense_ADC_curTxIOPtr++);
1243:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         numElectrodes--;
1244:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     } while (0u != numElectrodes);
1245:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     /* Connect Tx electrodes for the next scan */
1246:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     numElectrodes = capsense_ADC_curGangRxPtr->numPins ;
1247:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     capsense_ADC_curRxIOPtr = &capsense_ADC_ioList[capsense_ADC_curGangRxPtr->first
1248:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     do
1249:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     {
1250:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         capsense_ADC_CSXConnectRx(capsense_ADC_curRxIOPtr++);
1251:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         numElectrodes--;
1252:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     } while (0u != numElectrodes);
1253:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     /* Reset scan result holder, and initiate scan */
1254:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     capsense_ADC_SsCSXStartSample();
1255:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 }
1256:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 else
1257:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 {
1258:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     /* Call scan next widget API if requested, if not, complete scan */
1259:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     if (capsense_ADC_requestScanAllWidget != 0u)
1260:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     {
1261:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         capsense_ADC_SsPostAllWidgetsScan();
1262:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     }
1263:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     else
1264:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     {
1265:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         capsense_ADC_dsRam.scanCounter++;
1266:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         capsense_ADC_dsRam.status &= ~capsense_ADC_SW_STS_BUSY;
1267:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     }
1268:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 }
1269:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             #else /* (capsense_ADC_ENABLE == capsense_ADC_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1270:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1271:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 /* Disconnect ALL pins of previously scanned Tx */
1272:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 numElectrodes = capsense_ADC_curGangTxPtr->numPins ;
1273:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 capsense_ADC_curTxIOPtr = &capsense_ADC_ioList[capsense_ADC_curGangTxPtr->firstPinI
1274:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 do
1275:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 {
1276:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     capsense_ADC_CSXDisconnectTx (capsense_ADC_curTxIOPtr++);
1277:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     numElectrodes--;
1278:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 } while (0u != numElectrodes);
1279:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1280:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 /* Increment sensor index to configure next sensor in widget */
1281:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 capsense_ADC_sensorIndex++;
1282:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1283:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 /* Check if all Tx are scanned, if not, initiate scan for next Tx */
1284:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 capsense_ADC_curWdgtTotalTx--;
1285:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 if (capsense_ADC_curWdgtTotalTx > 0u)
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 24


1286:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 {
1287:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     /*
1288:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     *  1. Find pointer of next Tx (ganged)
1289:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     *  2. Connect all Tx pins
1290:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     */
1291:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     capsense_ADC_curGangTxPtr++;
1292:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     numElectrodes = capsense_ADC_curGangTxPtr->numPins ;
1293:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     capsense_ADC_curTxIOPtr = &capsense_ADC_ioList[capsense_ADC_curGangTxPtr->first
1294:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     do
1295:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     {
1296:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         capsense_ADC_CSXConnectTx(capsense_ADC_curTxIOPtr++);
1297:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         numElectrodes--;
1298:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     } while (0u != numElectrodes);
1299:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1300:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     /* Increment RAM pointer to next sensor */
1301:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     capsense_ADC_curRamSnsPtr++;
1302:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1303:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     /* Reset scan result holder and initiate scan */
1304:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     capsense_ADC_SsCSXStartSample();
1305:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 }
1306:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 else
1307:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 {
1308:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     /* Check if all Rx are scanned, if not, initiate scan for next Rx */
1309:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     capsense_ADC_curWdgtTotalRx--;
1310:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     if (capsense_ADC_curWdgtTotalRx > 0u)
1311:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     {
1312:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         /* 1. Disconnect current Rx ALL pins */
1313:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         numElectrodes = capsense_ADC_curGangRxPtr->numPins ;
1314:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         capsense_ADC_curRxIOPtr = &capsense_ADC_ioList[capsense_ADC_curGangRxPtr->f
1315:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         do
1316:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         {
1317:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                             capsense_ADC_CSXDisconnectRx(capsense_ADC_curRxIOPtr++);
1318:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                             numElectrodes--;
1319:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         } while (0u != numElectrodes);
1320:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1321:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         /* 2. Connect next Rx ALL pins */
1322:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         capsense_ADC_curGangRxPtr++;
1323:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         numElectrodes = capsense_ADC_curGangRxPtr->numPins ;
1324:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         capsense_ADC_curRxIOPtr = &capsense_ADC_ioList[capsense_ADC_curGangRxPtr->f
1325:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         do
1326:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         {
1327:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                             capsense_ADC_CSXConnectRx(capsense_ADC_curRxIOPtr++);
1328:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                             numElectrodes--;
1329:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         } while (0u != numElectrodes);
1330:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1331:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         /*
1332:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         *  3. Re-initialize total Tx to be scanned per Rx
1333:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         *  4. Find first Tx  again
1334:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         *  5. Connect first Tx ALL pins
1335:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         */
1336:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         capsense_ADC_curWdgtTotalTx = capsense_ADC_curFlashWdgtPtr->numRows;
1337:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         capsense_ADC_curGangTxPtr = capsense_ADC_curFlashWdgtPtr->ptr2SnsFlash;
1338:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         capsense_ADC_curGangTxPtr += capsense_ADC_curFlashWdgtPtr->numCols;
1339:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1340:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         /* 6. Connect Tx ALL pins */
1341:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         numElectrodes = capsense_ADC_curGangTxPtr->numPins ;
1342:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         capsense_ADC_curTxIOPtr = &capsense_ADC_ioList[capsense_ADC_curGangTxPtr->f
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 25


1343:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         do
1344:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         {
1345:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                             capsense_ADC_CSXConnectTx(capsense_ADC_curTxIOPtr++);
1346:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                             numElectrodes--;
1347:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         } while (0u != numElectrodes);
1348:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1349:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         /* Increment RAM pointer to next sensor */
1350:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         capsense_ADC_curRamSnsPtr++;
1351:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1352:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         /* Reset scan result holder and initiate scan */
1353:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         capsense_ADC_SsCSXStartSample();
1354:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     }
1355:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     else
1356:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     {
1357:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         /* Disconnect ALL electrodes of previously scanned Rx */
1358:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         numElectrodes = capsense_ADC_curGangRxPtr->numPins ;
1359:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         capsense_ADC_curRxIOPtr = &capsense_ADC_ioList[capsense_ADC_curGangRxPtr->f
1360:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         do
1361:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         {
1362:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                             capsense_ADC_CSXDisconnectRx(capsense_ADC_curRxIOPtr++);
1363:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                             numElectrodes--;
1364:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         } while (0u != numElectrodes);
1365:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1366:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         /* Call scan next widget API if requested, if not, complete scan */
1367:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         if (capsense_ADC_requestScanAllWidget != 0u)
1368:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         {
1369:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                             capsense_ADC_SsPostAllWidgetsScan();
1370:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         }
1371:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         else
1372:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         {
1373:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                             /*
1374:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                             *  All pending scans completed,
1375:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                             *    1. update the counter to indicate same
1376:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                             *    2. Clear busy state as scanning is completed
1377:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                             */
1378:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                             capsense_ADC_dsRam.scanCounter++;
1379:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                             capsense_ADC_dsRam.status &= ~capsense_ADC_SW_STS_BUSY;
1380:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         }
1381:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     }
1382:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 }
1383:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             #endif /* (capsense_ADC_ENABLE == capsense_ADC_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1384:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         }
1385:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1386:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #ifdef capsense_ADC_EXIT_CALLBACK
1387:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         capsense_ADC_ExitCallback();
1388:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #endif /* capsense_ADC_EXIT_CALLBACK */
1389:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** }
1390:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1391:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** #endif  /* (capsense_ADC_CSX_GANGED_SNS_EN == 1u) */
1392:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1393:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** /*******************************************************************************
1394:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * Function Name: capsense_ADC_SsCSXPostSingleScan
1395:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** ****************************************************************************//**
1396:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
1397:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \brief
1398:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *   The ISR function for single-sensor scanning implementation.
1399:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 26


1400:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \details
1401:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *   This function is used by capsense_ADC ISR in the CSX scanning mode to implement
1402:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *   the single-sensor scanning.
1403:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *   This function should not be used by the application layer.
1404:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
1405:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *******************************************************************************/
1406:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1407:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** static void capsense_ADC_SsCSXPostSingleScan(void)
1408:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** {
  27              		.loc 1 1408 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
1409:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #ifdef capsense_ADC_ENTRY_CALLBACK
1410:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         capsense_ADC_EntryCallback();
1411:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #endif /* capsense_ADC_ENTRY_CALLBACK */
1412:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1413:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     /*
1414:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     * Copy scan result into sensor raw count array and clear busy flag
1415:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     *    No sensor is connected or disconnected in this function
1416:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     *    Calling capsense_ADC_ScanExt from application would perform
1417:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     *    one more scan of same sensor. Specifically for low-power mode.
1418:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     */
1419:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     capsense_ADC_curRamSnsPtr->raw[capsense_ADC_scanFreqIndex] =
  32              		.loc 1 1419 0
  33 0000 094B     		ldr	r3, .L2
  34 0002 1868     		ldr	r0, [r3]
  35 0004 094B     		ldr	r3, .L2+4
  36 0006 1B78     		ldrb	r3, [r3]
  37 0008 0949     		ldr	r1, .L2+8
  38 000a 0A88     		ldrh	r2, [r1]
  39 000c 4988     		ldrh	r1, [r1, #2]
  40 000e 5B00     		lsls	r3, r3, #1
  41 0010 521A     		subs	r2, r2, r1
  42 0012 1A52     		strh	r2, [r3, r0]
1420:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         (capsense_ADC_csxScanPeriod - capsense_ADC_csxRawCount);
1421:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1422:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #if (capsense_ADC_ENABLE == capsense_ADC_MULTI_FREQ_SCAN_EN)
1423:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         /* Increment multi frequency scan index if all channels are not scanned */
1424:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         if (capsense_ADC_FREQ_CHANNEL_2 > capsense_ADC_scanFreqIndex)
1425:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         {
1426:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             /* Change multi-frequency channel and start sample */
1427:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             capsense_ADC_scanFreqIndex++;
1428:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1429:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             #if (capsense_ADC_MFS_IMO == capsense_ADC_MFS_METHOD)
1430:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 capsense_ADC_SsChangeImoFreq((uint32)capsense_ADC_scanFreqIndex);
1431:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             #else
1432:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 capsense_ADC_SsChangeClkFreq((uint32)capsense_ADC_scanFreqIndex);
1433:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             #endif /* (capsense_ADC_MFS_IMO == capsense_ADC_MFS_METHOD) */
1434:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1435:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             capsense_ADC_SsCSXStartSample();
1436:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         }
1437:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         else
1438:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #endif
1439:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         {
1440:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             #if (capsense_ADC_MULTI_FREQ_SCAN_EN == capsense_ADC_ENABLE)
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 27


1441:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 /* All channels are scanned. Reset the multi frequency scan channel */
1442:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 capsense_ADC_scanFreqIndex = capsense_ADC_FREQ_CHANNEL_0;
1443:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1444:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 #if (capsense_ADC_MFS_IMO == capsense_ADC_MFS_METHOD)
1445:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     capsense_ADC_SsChangeImoFreq(capsense_ADC_FREQ_CHANNEL_0);
1446:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 #else
1447:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     capsense_ADC_SsChangeClkFreq(capsense_ADC_FREQ_CHANNEL_0);
1448:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 #endif /* (capsense_ADC_MFS_IMO == capsense_ADC_MFS_METHOD) */
1449:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1450:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             #endif
1451:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             /*
1452:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             * All pending scans completed,
1453:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             *   1. Update the counter to indicate same
1454:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             *   2. Clear busy state as scanning is completed
1455:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             */
1456:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             capsense_ADC_dsRam.scanCounter++;
  43              		.loc 1 1456 0
  44 0014 074B     		ldr	r3, .L2+12
  45 0016 1A89     		ldrh	r2, [r3, #8]
  46 0018 0132     		adds	r2, r2, #1
  47 001a 1A81     		strh	r2, [r3, #8]
1457:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             capsense_ADC_dsRam.status &= ~capsense_ADC_SW_STS_BUSY;
  48              		.loc 1 1457 0
  49 001c DA68     		ldr	r2, [r3, #12]
  50 001e 8021     		movs	r1, #128
  51 0020 8A43     		bics	r2, r1
  52 0022 DA60     		str	r2, [r3, #12]
1458:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         }
1459:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1460:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #ifdef capsense_ADC_EXIT_CALLBACK
1461:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         capsense_ADC_ExitCallback();
1462:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #endif /* capsense_ADC_EXIT_CALLBACK */
1463:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** }
  53              		.loc 1 1463 0
  54              		@ sp needed
  55 0024 7047     		bx	lr
  56              	.L3:
  57 0026 C046     		.align	2
  58              	.L2:
  59 0028 00000000 		.word	capsense_ADC_curRamSnsPtr
  60 002c 00000000 		.word	capsense_ADC_scanFreqIndex
  61 0030 00000000 		.word	.LANCHOR0
  62 0034 00000000 		.word	capsense_ADC_dsRam
  63              		.cfi_endproc
  64              	.LFE8:
  65              		.size	capsense_ADC_SsCSXPostSingleScan, .-capsense_ADC_SsCSXPostSingleScan
  66              		.global	__aeabi_uidiv
  67              		.section	.text.capsense_ADC_SsCSXCalibrateCheck,"ax",%progbits
  68              		.align	2
  69              		.code	16
  70              		.thumb_func
  71              		.type	capsense_ADC_SsCSXCalibrateCheck, %function
  72              	capsense_ADC_SsCSXCalibrateCheck:
  73              	.LFB10:
1464:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1465:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** /*******************************************************************************
1466:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * Function Name: capsense_ADC_CSXCalibrateWidget
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 28


1467:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** ****************************************************************************//**
1468:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
1469:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \brief
1470:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  Calibrates the raw count values of all the sensors/nodes in a CSX widget.
1471:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
1472:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \details
1473:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  Calibrates the raw count values of all the sensors/nodes in a CSX widget.
1474:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
1475:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  \note This function is obsolete and kept for backward compatibility only.
1476:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  The capsense_ADC_CalibrateWidget() function should be used instead.
1477:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
1478:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  Performs a successive approximation search algorithm to find appropriate
1479:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  IDAC values for sensors in the specified widget that provides a raw count
1480:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  to the level specified by the target parameter.
1481:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
1482:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  This function is available when the CSX Enable IDAC auto-calibration
1483:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  parameter is enabled.
1484:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
1485:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \param widgetId
1486:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  Specifies the ID number of the CSX widget to calibrate its raw count.
1487:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  A macro for the widget ID can be found in the
1488:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  capsense_ADC Configuration header file defined as
1489:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  capsense_ADC_<WidgetName>_WDGT_ID.
1490:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
1491:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \param target
1492:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  Specifies the calibration target in percentages of the maximum raw count.
1493:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
1494:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \return Returns the status of the operation:
1495:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *   - Zero     - All the sensors in the widget are calibrated successfully.
1496:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *   - Non-Zero - Calibration failed for any sensor in the widget.
1497:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
1498:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *******************************************************************************/
1499:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** #if (capsense_ADC_ENABLE == capsense_ADC_CSX_IDAC_AUTOCAL_EN)
1500:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1501:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** cystatus capsense_ADC_CSXCalibrateWidget(uint32 widgetId, uint16 target)
1502:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** {
1503:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     /* Variable to calculate raw count target */
1504:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     uint32 rawTarget;
1505:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     /* Counter for loop execution */
1506:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     uint32 totalSns;
1507:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     /* Counter for loop execution */
1508:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     uint32 calibrationIndex;
1509:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1510:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     uint32 watchdogCounter;
1511:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1512:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     cystatus calibrateStatus = CYRET_SUCCESS;
1513:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1514:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     /* Currently used IDAC-bit */
1515:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     uint8 curIdacMask = (1u << (capsense_ADC_CSX_IDAC_BITS_USED - 1u));
1516:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     /* Next used IDAC-bit */
1517:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     uint8 nextIdacMask = (curIdacMask >> 1u);
1518:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1519:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     /* initialize ptr to sensor structures */
1520:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     capsense_ADC_curRamSnsPtr = (capsense_ADC_RAM_SNS_STRUCT *)capsense_ADC_dsFlash.wdgtArray[widge
1521:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1522:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #if (capsense_ADC_DISABLE == capsense_ADC_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
1523:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         /* Calculate target raw count */
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 29


1524:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         capsense_ADC_csxScanPeriod  = capsense_ADC_SsCalcCsxScanPeriod(
1525:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             (capsense_ADC_RAM_WD_BASE_STRUCT *)capsense_ADC_dsFlash.wdgtArray[widgetId].ptr2WdgtRam
1526:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         rawTarget = capsense_ADC_csxScanPeriod;
1527:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         rawTarget = (rawTarget * target) / capsense_ADC_PERCENTAGE_100;
1528:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #endif /* (capsense_ADC_DISABLE == capsense_ADC_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1529:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1530:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1531:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     /* Find out total sensors/nodes in widget */
1532:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     totalSns = ((uint32)capsense_ADC_dsFlash.wdgtArray[widgetId].numCols *
1533:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 (uint32)capsense_ADC_dsFlash.wdgtArray[widgetId].numRows);
1534:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1535:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     /* Clear raw count registers and IDAC registers of all the sensors/nodes */
1536:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     for (calibrationIndex = 0u; calibrationIndex < totalSns; calibrationIndex++)
1537:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     {
1538:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         capsense_ADC_curRamSnsPtr->raw[capsense_ADC_FREQ_CHANNEL_0] = 0u;
1539:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         capsense_ADC_curRamSnsPtr->idacComp[capsense_ADC_FREQ_CHANNEL_0] = curIdacMask;
1540:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         #if (capsense_ADC_ENABLE == capsense_ADC_MULTI_FREQ_SCAN_EN)
1541:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             capsense_ADC_curRamSnsPtr->raw[capsense_ADC_FREQ_CHANNEL_1] = 0u;
1542:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             capsense_ADC_curRamSnsPtr->raw[capsense_ADC_FREQ_CHANNEL_2] = 0u;
1543:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             capsense_ADC_curRamSnsPtr->idacComp[capsense_ADC_FREQ_CHANNEL_1] = curIdacMask;
1544:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             capsense_ADC_curRamSnsPtr->idacComp[capsense_ADC_FREQ_CHANNEL_2] = curIdacMask;
1545:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         #endif
1546:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         capsense_ADC_curRamSnsPtr++;
1547:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     }
1548:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1549:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     /* Perform binary search for accurate IDAC value for each sensor/node */
1550:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     do
1551:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     {
1552:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         /* Scan all the sensors/nodes in widget */
1553:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         (void)capsense_ADC_SetupWidget(widgetId);
1554:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         (void)capsense_ADC_Scan();
1555:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1556:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         watchdogCounter = capsense_ADC_CSX_MEASURE_WATCHDOG_CYCLES_NUM;
1557:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         while ((capsense_ADC_dsRam.status & capsense_ADC_SW_STS_BUSY) != 0u)
1558:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         {
1559:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             if(0uL == watchdogCounter)
1560:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             {
1561:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 calibrateStatus = CYRET_TIMEOUT;
1562:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 break;
1563:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             }
1564:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             watchdogCounter--;
1565:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         }
1566:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1567:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         /* Get access to sensor data */
1568:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         capsense_ADC_curRamSnsPtr = (capsense_ADC_RAM_SNS_STRUCT *)capsense_ADC_dsFlash.wdgtArray[w
1569:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1570:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         /* Check raw count and adjust IDAC, loop through all the sensors/nodes */
1571:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         for (calibrationIndex = 0u; calibrationIndex < totalSns; calibrationIndex++)
1572:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         {
1573:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             /* Calculate raw count target for specified node */
1574:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             #if (capsense_ADC_ENABLE == capsense_ADC_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
1575:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 rawTarget = (capsense_ADC_SsCSXOversample() * target) / capsense_ADC_PERCENTAGE_100
1576:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             #endif
1577:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1578:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             /* Check if current raw count is above target,
1579:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             *   if yes, clear the MS bit of bit
1580:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             *   if no, keep the MS bit and set next bit
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 30


1581:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             */
1582:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             if (capsense_ADC_curRamSnsPtr->raw[capsense_ADC_FREQ_CHANNEL_0] > rawTarget)
1583:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             {
1584:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 capsense_ADC_curRamSnsPtr->idacComp[capsense_ADC_FREQ_CHANNEL_0] &= (uint8)(~curIda
1585:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             }
1586:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             capsense_ADC_curRamSnsPtr->idacComp[capsense_ADC_FREQ_CHANNEL_0] |= nextIdacMask;
1587:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1588:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             #if (capsense_ADC_ENABLE == capsense_ADC_MULTI_FREQ_SCAN_EN)
1589:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 if (capsense_ADC_curRamSnsPtr->raw[capsense_ADC_FREQ_CHANNEL_1] > rawTarget)
1590:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 {
1591:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     capsense_ADC_curRamSnsPtr->idacComp[capsense_ADC_FREQ_CHANNEL_1] &= (uint8)(~cu
1592:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 }
1593:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1594:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 if (capsense_ADC_curRamSnsPtr->raw[capsense_ADC_FREQ_CHANNEL_2] > rawTarget)
1595:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 {
1596:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     capsense_ADC_curRamSnsPtr->idacComp[capsense_ADC_FREQ_CHANNEL_2] &= (uint8)(~cu
1597:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 }
1598:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1599:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 capsense_ADC_curRamSnsPtr->idacComp[capsense_ADC_FREQ_CHANNEL_1] |= nextIdacMask;
1600:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 capsense_ADC_curRamSnsPtr->idacComp[capsense_ADC_FREQ_CHANNEL_2] |= nextIdacMask;
1601:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             #endif
1602:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             capsense_ADC_curRamSnsPtr++;
1603:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         }
1604:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1605:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         /* Shift both current idac and pre Idac values to right by 1 */
1606:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         curIdacMask = nextIdacMask;
1607:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         nextIdacMask = nextIdacMask >> 1u;
1608:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     }
1609:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     while ((curIdacMask != 0u) && (calibrateStatus == CYRET_SUCCESS));
1610:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1611:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     /* Perform specified widget scan to check calibration result */
1612:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     (void)capsense_ADC_SetupWidget(widgetId);
1613:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     (void)capsense_ADC_Scan();
1614:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1615:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     if (calibrateStatus == CYRET_SUCCESS)
1616:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     {
1617:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         watchdogCounter = capsense_ADC_CSX_MEASURE_WATCHDOG_CYCLES_NUM;
1618:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         while ((capsense_ADC_dsRam.status & capsense_ADC_SW_STS_BUSY) != 0u)
1619:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         {
1620:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             if(0uL == watchdogCounter)
1621:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             {
1622:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 calibrateStatus = CYRET_TIMEOUT;
1623:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 break;
1624:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             }
1625:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1626:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             watchdogCounter--;
1627:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         }
1628:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1629:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         if (calibrateStatus == CYRET_SUCCESS)
1630:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         {
1631:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             calibrateStatus = capsense_ADC_SsCSXCalibrateCheck(widgetId, (uint32)capsense_ADC_csxSc
1632:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         }
1633:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     }
1634:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1635:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****      /* Update CRC */
1636:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #if (capsense_ADC_ENABLE ==capsense_ADC_TST_WDGT_CRC_EN)
1637:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         capsense_ADC_DsUpdateWidgetCrc(widgetId);
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 31


1638:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #endif
1639:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1640:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     return(calibrateStatus);
1641:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** }
1642:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1643:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1644:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** /*******************************************************************************
1645:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * Function Name: capsense_ADC_SsCSXCalibrateCheck
1646:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** ****************************************************************************//**
1647:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
1648:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \brief
1649:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  This internal function checks if the calibration is performed successfully.
1650:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
1651:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \details
1652:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  The function verifies that raw counts are within acceptable range
1653:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  defined by target and calibration error parameters.
1654:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
1655:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \param widgetId
1656:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  The desired widget ID.
1657:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
1658:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \param scanPeriod
1659:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  CSX scan period for the specified widget.
1660:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
1661:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \param target
1662:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  Raw count target in percentage.
1663:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
1664:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \return Returns the status of the operation:
1665:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *   - Zero     - All the sensors in the widget are calibrated successfully.
1666:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *   - Non-Zero - Calibration failed for any sensor in the widget.
1667:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
1668:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *******************************************************************************/
1669:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** static cystatus capsense_ADC_SsCSXCalibrateCheck(uint32 widgetId, uint32 scanPeriod, uint32 target)
1670:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** {
  74              		.loc 1 1670 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 8
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              	.LVL0:
  79 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  80              		.cfi_def_cfa_offset 20
  81              		.cfi_offset 4, -20
  82              		.cfi_offset 5, -16
  83              		.cfi_offset 6, -12
  84              		.cfi_offset 7, -8
  85              		.cfi_offset 14, -4
  86 0002 4746     		mov	r7, r8
  87 0004 80B4     		push	{r7}
  88              		.cfi_def_cfa_offset 24
  89              		.cfi_offset 8, -24
  90 0006 82B0     		sub	sp, sp, #8
  91              		.cfi_def_cfa_offset 32
  92 0008 0500     		movs	r5, r0
  93 000a 8846     		mov	r8, r1
  94              	.LVL1:
1671:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     uint32 rawcount;
1672:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     uint32 snsIndex;
1673:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     uint32 freqChannel;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 32


1674:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     uint32 upperLimit;
1675:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     uint32 lowerLimit;
1676:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     cystatus calibrateStatus = CYRET_SUCCESS;
1677:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1678:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     capsense_ADC_FLASH_WD_STRUCT const *ptrFlashWidget = &capsense_ADC_dsFlash.wdgtArray[widgetId];
1679:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     capsense_ADC_RAM_SNS_STRUCT *ptrRamSensor = ptrFlashWidget->ptr2SnsRam;
  95              		.loc 1 1679 0
  96 000c 4301     		lsls	r3, r0, #5
  97 000e 1E49     		ldr	r1, .L16
  98              	.LVL2:
  99 0010 CB18     		adds	r3, r1, r3
 100              	.LVL3:
 101 0012 9C68     		ldr	r4, [r3, #8]
 102              	.LVL4:
1680:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1681:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     lowerLimit = 0u;
1682:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     if (target > capsense_ADC_CSX_CALIBRATION_ERROR)
 103              		.loc 1 1682 0
 104 0014 142A     		cmp	r2, #20
 105 0016 02D9     		bls	.L11
1683:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     {
1684:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         lowerLimit = target - capsense_ADC_CSX_CALIBRATION_ERROR;
 106              		.loc 1 1684 0
 107 0018 1000     		movs	r0, r2
 108              	.LVL5:
 109 001a 1438     		subs	r0, r0, #20
 110              	.LVL6:
 111 001c 00E0     		b	.L5
 112              	.LVL7:
 113              	.L11:
1681:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     if (target > capsense_ADC_CSX_CALIBRATION_ERROR)
 114              		.loc 1 1681 0
 115 001e 0020     		movs	r0, #0
 116              	.LVL8:
 117              	.L5:
1685:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     }
1686:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     upperLimit = target + capsense_ADC_CSX_CALIBRATION_ERROR;
 118              		.loc 1 1686 0
 119 0020 1432     		adds	r2, r2, #20
 120              	.LVL9:
 121 0022 1700     		movs	r7, r2
 122              	.LVL10:
1687:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     if (upperLimit > capsense_ADC_PERCENTAGE_100)
 123              		.loc 1 1687 0
 124 0024 642A     		cmp	r2, #100
 125 0026 00D9     		bls	.L6
1688:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     {
1689:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         upperLimit = capsense_ADC_PERCENTAGE_100;
 126              		.loc 1 1689 0
 127 0028 6427     		movs	r7, #100
 128              	.L6:
 129              	.LVL11:
1690:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     }
1691:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     lowerLimit = (scanPeriod * lowerLimit) / capsense_ADC_PERCENTAGE_100;
 130              		.loc 1 1691 0
 131 002a 4346     		mov	r3, r8
 132              	.LVL12:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 33


 133 002c 5843     		muls	r0, r3
 134              	.LVL13:
 135 002e 6421     		movs	r1, #100
 136 0030 FFF7FEFF 		bl	__aeabi_uidiv
 137              	.LVL14:
 138 0034 0600     		movs	r6, r0
 139              	.LVL15:
1692:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     upperLimit = (scanPeriod * upperLimit) / capsense_ADC_PERCENTAGE_100;
 140              		.loc 1 1692 0
 141 0036 4046     		mov	r0, r8
 142              	.LVL16:
 143 0038 7843     		muls	r0, r7
 144 003a 6421     		movs	r1, #100
 145 003c FFF7FEFF 		bl	__aeabi_uidiv
 146              	.LVL17:
 147 0040 0200     		movs	r2, r0
 148              	.LVL18:
1676:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 149              		.loc 1 1676 0
 150 0042 0023     		movs	r3, #0
 151 0044 0193     		str	r3, [sp, #4]
1693:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1694:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     /* Check if raw count is in the defined range */
1695:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     for(snsIndex = 0u; snsIndex < ptrFlashWidget->totalNumSns; snsIndex++)
 152              		.loc 1 1695 0
 153 0046 0027     		movs	r7, #0
 154 0048 13E0     		b	.L7
 155              	.LVL19:
 156              	.L9:
1696:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     {
1697:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         for(freqChannel = capsense_ADC_NUM_SCAN_FREQS; freqChannel-- > 0u;)
1698:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         {
1699:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             rawcount = ptrRamSensor->raw[freqChannel];
 157              		.loc 1 1699 0
 158 004a 4B00     		lsls	r3, r1, #1
 159 004c 185B     		ldrh	r0, [r3, r4]
 160              	.LVL20:
1700:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             if ((rawcount < lowerLimit) || (rawcount > upperLimit))
 161              		.loc 1 1700 0
 162 004e 8642     		cmp	r6, r0
 163 0050 08D8     		bhi	.L13
1697:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         {
 164              		.loc 1 1697 0 discriminator 1
 165 0052 0B00     		movs	r3, r1
 166              		.loc 1 1700 0 discriminator 1
 167 0054 8242     		cmp	r2, r0
 168 0056 01D2     		bcs	.L10
 169 0058 07E0     		b	.L14
 170              	.LVL21:
 171              	.L15:
 172 005a 0123     		movs	r3, #1
 173              	.L10:
 174              	.LVL22:
1697:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         {
 175              		.loc 1 1697 0 discriminator 1
 176 005c 591E     		subs	r1, r3, #1
 177              	.LVL23:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 34


 178 005e 002B     		cmp	r3, #0
 179 0060 F3D1     		bne	.L9
 180 0062 04E0     		b	.L8
 181              	.LVL24:
 182              	.L13:
1701:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             {
1702:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 calibrateStatus = CYRET_BAD_DATA;
 183              		.loc 1 1702 0
 184 0064 0623     		movs	r3, #6
 185 0066 0193     		str	r3, [sp, #4]
 186              	.LVL25:
 187 0068 01E0     		b	.L8
 188              	.LVL26:
 189              	.L14:
 190 006a 0623     		movs	r3, #6
 191 006c 0193     		str	r3, [sp, #4]
 192              	.LVL27:
 193              	.L8:
1703:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 break;
1704:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             }
1705:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         }
1706:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         ptrRamSensor++;
 194              		.loc 1 1706 0 discriminator 2
 195 006e 0A34     		adds	r4, r4, #10
 196              	.LVL28:
1695:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     {
 197              		.loc 1 1695 0 discriminator 2
 198 0070 0137     		adds	r7, r7, #1
 199              	.LVL29:
 200              	.L7:
1695:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     {
 201              		.loc 1 1695 0 is_stmt 0 discriminator 1
 202 0072 6B01     		lsls	r3, r5, #5
 203 0074 0449     		ldr	r1, .L16
 204 0076 CB18     		adds	r3, r1, r3
 205 0078 1B8B     		ldrh	r3, [r3, #24]
 206 007a 9F42     		cmp	r7, r3
 207 007c EDD3     		bcc	.L15
1707:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     }
1708:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     return (calibrateStatus);
1709:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** }
 208              		.loc 1 1709 0 is_stmt 1
 209 007e 0198     		ldr	r0, [sp, #4]
 210 0080 02B0     		add	sp, sp, #8
 211              		@ sp needed
 212              	.LVL30:
 213              	.LVL31:
 214              	.LVL32:
 215              	.LVL33:
 216              	.LVL34:
 217 0082 04BC     		pop	{r2}
 218 0084 9046     		mov	r8, r2
 219 0086 F0BD     		pop	{r4, r5, r6, r7, pc}
 220              	.L17:
 221              		.align	2
 222              	.L16:
 223 0088 00000000 		.word	capsense_ADC_dsFlash
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 35


 224              		.cfi_endproc
 225              	.LFE10:
 226              		.size	capsense_ADC_SsCSXCalibrateCheck, .-capsense_ADC_SsCSXCalibrateCheck
 227              		.section	.text.capsense_ADC_SsCalcCsxScanPeriod,"ax",%progbits
 228              		.align	2
 229              		.code	16
 230              		.thumb_func
 231              		.type	capsense_ADC_SsCalcCsxScanPeriod, %function
 232              	capsense_ADC_SsCalcCsxScanPeriod:
 233              	.LFB17:
1710:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1711:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** #endif /* (capsense_ADC_CSX_IDAC_AUTOCAL_EN == capsense_ADC_ENABLE) */
1712:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1713:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** #if(capsense_ADC_ENABLE == capsense_ADC_CSDV2)
1714:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** /*******************************************************************************
1715:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * Function Name: capsense_ADC_SsCSXStartSample
1716:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** ****************************************************************************//**
1717:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
1718:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \brief
1719:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *   Starts scanning for the CSX widget.
1720:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
1721:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \details
1722:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *   Starts scanning for the CSX widget.
1723:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
1724:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *******************************************************************************/
1725:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** static void capsense_ADC_SsCSXStartSample(void)
1726:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** {
1727:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     uint32 tmpRegVal;
1728:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     uint32 idacGainIndex;
1729:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1730:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     /* Configuring IDAC register */
1731:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     idacGainIndex = ((capsense_ADC_RAM_WD_BASE_STRUCT *)capsense_ADC_curFlashWdgtPtr->ptr2WdgtRam)-
1732:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     tmpRegVal = capsense_ADC_DEFAULT_CSD_IDACA_CFG & ~capsense_ADC_IDAC_GAIN_MASK;
1733:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     tmpRegVal |= ((uint32)capsense_ADC_curRamSnsPtr->idacComp[capsense_ADC_scanFreqIndex] & capsens
1734:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     tmpRegVal |= capsense_ADC_idacGainTable[idacGainIndex].gainReg;
1735:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     CY_SET_REG32(capsense_ADC_CSD_IDACA_PTR, tmpRegVal);
1736:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1737:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #if (capsense_ADC_ENABLE == capsense_ADC_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
1738:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         /* Configure node-specific number of sub-conversion */
1739:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         capsense_ADC_csxScanPeriod = (uint16)capsense_ADC_SsCSXOversample();
1740:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_SEQ_NORM_CNT_PTR, (uint32)capsense_ADC_curRamSnsPtr->subConvNum);
1741:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #endif /* (capsense_ADC_ENABLE == capsense_ADC_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1742:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1743:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     /* Clear scan result holder */
1744:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     capsense_ADC_csxRawCount = 0u;
1745:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1746:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #ifdef capsense_ADC_START_SAMPLE_CALLBACK
1747:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         capsense_ADC_StartSampleCallback(capsense_ADC_widgetIndex, capsense_ADC_sensorIndex);
1748:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #endif /* capsense_ADC_START_SAMPLE_CALLBACK */
1749:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1750:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     capsense_ADC_SsCSXStartSampleExt();
1751:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** }
1752:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** #else
1753:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1754:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** /*******************************************************************************
1755:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * Function Name: capsense_ADC_SsCSXStartSample
1756:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** ****************************************************************************//**
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 36


1757:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
1758:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \brief
1759:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *   Starts scanning for the CSX widget.
1760:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
1761:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \param widgetIndex The ID of the widget to be calibrated.
1762:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
1763:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \details
1764:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
1765:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *******************************************************************************/
1766:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** static void capsense_ADC_SsCSXStartSample(void)
1767:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** {
1768:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     uint8 critSect;
1769:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     uint32 tmpRegVal;
1770:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     uint32 idacGainIndex;
1771:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1772:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     idacGainIndex = ((capsense_ADC_RAM_WD_BASE_STRUCT *)capsense_ADC_curFlashWdgtPtr->ptr2WdgtRam)-
1773:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     critSect = CyEnterCriticalSection();
1774:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     tmpRegVal = CY_GET_REG32(capsense_ADC_IDAC_PTR);
1775:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     tmpRegVal &= ~capsense_ADC_IDAC_MOD_MASK;
1776:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     tmpRegVal &= ~capsense_ADC_IDAC_GAIN_MASK;
1777:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     tmpRegVal |= capsense_ADC_IDAC_MOD_MODE_VARIABLE | (uint32)capsense_ADC_curRamSnsPtr->idacComp[
1778:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     tmpRegVal |= capsense_ADC_idacGainTable[idacGainIndex].gainReg;
1779:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1780:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     CY_SET_REG32(capsense_ADC_IDAC_PTR, tmpRegVal);
1781:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     CyExitCriticalSection(critSect);
1782:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1783:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     /* Clear scan result holder */
1784:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     capsense_ADC_csxRawCount = 0u;
1785:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1786:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #ifdef capsense_ADC_START_SAMPLE_CALLBACK
1787:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         capsense_ADC_StartSampleCallback(capsense_ADC_widgetIndex, capsense_ADC_sensorIndex);
1788:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #endif /* capsense_ADC_START_SAMPLE_CALLBACK */
1789:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1790:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #if (capsense_ADC_ENABLE == capsense_ADC_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
1791:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         /* Configure node-specific number of sub-conversion */
1792:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         capsense_ADC_csxScanPeriod = (uint16)capsense_ADC_SsCSXOversample();
1793:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #endif /* (capsense_ADC_ENABLE == capsense_ADC_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1794:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1795:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     /* Disable interrupts and initiate scan */
1796:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     critSect = CyEnterCriticalSection();
1797:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     capsense_ADC_SsCSXStartSampleExt();
1798:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     CyExitCriticalSection(critSect);
1799:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** }
1800:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** #endif /* (capsense_ADC_ENABLE == capsense_ADC_CSDV2) */
1801:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1802:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** /*******************************************************************************
1803:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * Function Name: capsense_ADC_CSXConnectTx
1804:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** ****************************************************************************//**
1805:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
1806:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \brief
1807:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  Connects a Tx electrode to the CSX scanning hardware.
1808:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
1809:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \details
1810:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  This function connects a port pin (Tx electrode) to the CSD_SENSE signal.
1811:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  It is assumed that drive mode of the port pin is already set to STRONG
1812:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  in the HSIOM_PORT_SELx register.
1813:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 37


1814:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
1815:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
1816:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  use cases (for faster execution time when there is only one port pin for an
1817:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  electrode for example).
1818:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
1819:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \param txPtr
1820:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  Specifies the pointer to the FLASH_IO_STRUCT object belonging to a sensor
1821:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  to be connected to the sensing HW block as a Tx pin.
1822:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
1823:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *******************************************************************************/
1824:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** void capsense_ADC_CSXConnectTx(capsense_ADC_FLASH_IO_STRUCT const *txPtr)
1825:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** {
1826:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     capsense_ADC_WriteBitsSafe(txPtr->pcPtr, (uint32)(capsense_ADC_GPIO_PC_MASK << txPtr->shift),
1827:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             (uint32)(capsense_ADC_GPIO_STRGDRV << txPtr->shift));
1828:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     capsense_ADC_WriteBitsSafe(txPtr->hsiomPtr, (capsense_ADC_HSIOM_SEL_MASK << txPtr->hsiomShift),
1829:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             (uint32)(capsense_ADC_HSIOM_SEL_CSD_SENSE << txPtr->hsiomShift));
1830:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** }
1831:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1832:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** /*******************************************************************************
1833:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * Function Name: capsense_ADC_CSXConnectRx
1834:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** ****************************************************************************//**
1835:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
1836:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \brief
1837:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  Connects an Rx electrode to the CSX scanning hardware.
1838:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
1839:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \details
1840:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  This function connects a port pin (Rx electrode) to AMUXBUS-A and sets
1841:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  drive mode of the port pin to High-Z in the GPIO_PRT_PCx register.
1842:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
1843:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
1844:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
1845:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  use cases (for faster execution time when there is only one port pin for an
1846:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  electrode for example).
1847:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
1848:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \param rxPtr
1849:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  Specifies the pointer to the FLASH_IO_STRUCT object belonging to a sensor
1850:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  to be connected to the sensing HW block as an Rx pin.
1851:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
1852:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *******************************************************************************/
1853:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** void capsense_ADC_CSXConnectRx(capsense_ADC_FLASH_IO_STRUCT const *rxPtr)
1854:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** {
1855:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     capsense_ADC_WriteBitsSafe(rxPtr->pcPtr, (uint32)(capsense_ADC_GPIO_PC_MASK << rxPtr->shift), 0
1856:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     capsense_ADC_WriteBitsSafe(rxPtr->hsiomPtr, (capsense_ADC_HSIOM_SEL_MASK << rxPtr->hsiomShift),
1857:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** }
1858:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1859:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** /*******************************************************************************
1860:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * Function Name: capsense_ADC_CSXDisconnectTx
1861:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** ****************************************************************************//**
1862:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
1863:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \brief
1864:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  Disconnects a Tx electrode from the CSX scanning hardware.
1865:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
1866:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \details
1867:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  This function disconnects a port pin (Tx electrode) from the CSD_SENSE
1868:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  signal and configures the port pin to the strong drive mode. It is assumed
1869:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  that the data register (GPIO_PRTx_DR) of the port pin is already 0.
1870:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 38


1871:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
1872:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
1873:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  use cases (for faster execution time when there is only one port pin for an
1874:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  electrode for example).
1875:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
1876:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \param txPtr
1877:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  Specifies the pointer to the FLASH_IO_STRUCT object belonging to a Tx pin
1878:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  sensor to be disconnected from the sensing HW block.
1879:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
1880:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *******************************************************************************/
1881:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** void capsense_ADC_CSXDisconnectTx(capsense_ADC_FLASH_IO_STRUCT const *txPtr)
1882:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** {
1883:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     uint32 regValue;
1884:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     uint8  interruptState;
1885:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1886:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     interruptState = CyEnterCriticalSection();
1887:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (txPtr->hsiomPtr);
1888:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     regValue &= ~(txPtr->hsiomMask);
1889:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     CY_SET_REG32 (txPtr->hsiomPtr, regValue);
1890:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     CyExitCriticalSection(interruptState);
1891:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1892:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     interruptState = CyEnterCriticalSection();
1893:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     /* Update port configuration register (drive mode) for sensor */
1894:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     regValue = CY_GET_REG32(txPtr->pcPtr);
1895:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     regValue &= ~(capsense_ADC_GPIO_PC_MASK << txPtr->shift);
1896:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1897:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     if(capsense_ADC_SNS_CONNECTION_GROUND == capsense_ADC_dsRam.scanCurrentISC)
1898:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     {
1899:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         regValue |= (CY_SYS_PINS_DM_STRONG << txPtr->shift);
1900:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     }
1901:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     else
1902:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     {
1903:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         regValue |= (CY_SYS_PINS_DM_ALG_HIZ << txPtr->shift);
1904:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     }
1905:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1906:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     CY_SET_REG32(txPtr->pcPtr, regValue);
1907:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     CyExitCriticalSection(interruptState);
1908:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** }
1909:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1910:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** /*******************************************************************************
1911:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * Function Name: capsense_ADC_CSXDisconnectRx
1912:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** ****************************************************************************//**
1913:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
1914:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \brief
1915:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  Disconnects an Rx electrode from the CSX scanning hardware.
1916:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
1917:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \details
1918:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  This function disconnects a port pin (Rx electrode) from AMUXBUS_A and
1919:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  configures the port pin to the strong drive mode. It is assumed that the
1920:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  data register (GPIO_PRTx_DR) of the port pin is already 0.
1921:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
1922:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
1923:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
1924:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  use cases (for faster execution time when there is only one port pin for
1925:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  an electrode for example).
1926:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
1927:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \param rxPtr
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 39


1928:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  Specifies the pointer to the FLASH_IO_STRUCT object belonging to an Rx pin
1929:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  sensor to be disconnected from the sensing HW block.
1930:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
1931:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *******************************************************************************/
1932:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** void capsense_ADC_CSXDisconnectRx(capsense_ADC_FLASH_IO_STRUCT const *rxPtr)
1933:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** {
1934:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     uint32 regValue;
1935:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     uint8  interruptState;
1936:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1937:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     interruptState = CyEnterCriticalSection();
1938:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (rxPtr->hsiomPtr);
1939:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     regValue &= ~(rxPtr->hsiomMask);
1940:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->hsiomPtr, regValue);
1941:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     CyExitCriticalSection(interruptState);
1942:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1943:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     interruptState = CyEnterCriticalSection();
1944:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     /* Update port configuration register (drive mode) for sensor */
1945:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     regValue = CY_GET_REG32(rxPtr->pcPtr);
1946:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     regValue &= ~(capsense_ADC_GPIO_PC_MASK << rxPtr->shift);
1947:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1948:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     if(capsense_ADC_SNS_CONNECTION_GROUND == capsense_ADC_dsRam.scanCurrentISC)
1949:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     {
1950:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         regValue |= (CY_SYS_PINS_DM_STRONG << rxPtr->shift);
1951:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     }
1952:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     else
1953:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     {
1954:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         regValue |= (CY_SYS_PINS_DM_ALG_HIZ << rxPtr->shift);
1955:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     }
1956:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1957:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     CY_SET_REG32(rxPtr->pcPtr, regValue);
1958:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     regValue = CY_GET_REG32(rxPtr->drPtr);
1959:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     regValue &=  ~(rxPtr->mask);
1960:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->drPtr, regValue);
1961:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     CyExitCriticalSection(interruptState);
1962:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** }
1963:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1964:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1965:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** /*******************************************************************************
1966:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * Function Name: capsense_ADC_SsCSXGetTxClkDivider
1967:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** ****************************************************************************//**
1968:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
1969:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \brief
1970:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  This function gets the Sense Clock Divider value for one-dimension widgets
1971:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  and the Column Sense Clock divider value for two-dimension widgets.
1972:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
1973:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \details
1974:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  This function gets the Sense Clock Divider value based on the Component
1975:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  configuration. The function is applicable for one-dimension widgets and for
1976:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  two-dimension widgets.
1977:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
1978:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \param
1979:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  widgetId Specifies the ID of the widget.
1980:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
1981:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \return The Sense Clock Divider value for one-dimension widgets
1982:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *         and the Column Sense Clock divider value for two-dimension widgets.
1983:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
1984:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *******************************************************************************/
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 40


1985:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** uint32 capsense_ADC_SsCSXGetTxClkDivider(uint32 widgetId)
1986:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** {
1987:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     uint32 retVal;
1988:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1989:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     /* Get sense divider based on configuration */
1990:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #if (capsense_ADC_DISABLE == capsense_ADC_CSX_COMMON_TX_CLK_EN)
1991:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         capsense_ADC_RAM_WD_BASE_STRUCT *ptrWdgt;
1992:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1993:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         ptrWdgt = (capsense_ADC_RAM_WD_BASE_STRUCT *)
1994:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         capsense_ADC_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
1995:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
1996:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         retVal = (uint32)(ptrWdgt->snsClk);
1997:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #else
1998:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         retVal = (uint32)capsense_ADC_dsRam.snsCsxClk;
1999:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #endif /* (capsense_ADC_DISABLE == capsense_ADC_CSX_COMMON_TX_CLK_EN) */
2000:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
2001:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     if(widgetId == 0uL)
2002:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     {
2003:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         ;
2004:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     }
2005:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
2006:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     return (retVal);
2007:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** }
2008:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
2009:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
2010:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** /*******************************************************************************
2011:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * Function Name: capsense_ADC_SsCalcCsxScanPeriod
2012:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** ****************************************************************************//**
2013:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
2014:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \brief
2015:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  Calculates scan period for a desired CSX widget.
2016:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
2017:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \details
2018:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  This function calculates a scan period for a desired CSX widget considering
2019:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  common Tx clock option.
2020:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
2021:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \param wdgtPtr
2022:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  The pointer to a register map object that contains widget information.
2023:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
2024:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \return
2025:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  Returns the CSX scan period for the widget.
2026:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
2027:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *******************************************************************************/
2028:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** static uint16 capsense_ADC_SsCalcCsxScanPeriod(capsense_ADC_RAM_WD_BASE_STRUCT const *wdgtPtr)
2029:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** {
 234              		.loc 1 2029 0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 0
 237              		@ frame_needed = 0, uses_anonymous_args = 0
 238              		@ link register save eliminated.
 239              	.LVL35:
2030:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     uint32 temp;
2031:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
2032:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #if(capsense_ADC_DISABLE == capsense_ADC_CSX_COMMON_TX_CLK_EN)
2033:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         temp = (uint32)(wdgtPtr->snsClk);
 240              		.loc 1 2033 0
 241 0000 4389     		ldrh	r3, [r0, #10]
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 41


 242              	.LVL36:
2034:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #else
2035:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         temp = (uint32)(capsense_ADC_dsRam.snsCsxClk);
2036:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #endif /* (capsense_ADC_DISABLE == capsense_ADC_CSX_COMMON_TX_CLK_EN) */
2037:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
2038:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #if(capsense_ADC_ENABLE == capsense_ADC_CSDV2)
2039:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         temp  = LO16((uint32)wdgtPtr->resolution * (temp - capsense_ADC_CSX_DEADBAND_CYCLES_NUMBER)
 243              		.loc 1 2039 0
 244 0002 0288     		ldrh	r2, [r0]
 245 0004 981E     		subs	r0, r3, #2
 246              	.LVL37:
 247 0006 5043     		muls	r0, r2
 248 0008 80B2     		uxth	r0, r0
 249              	.LVL38:
2040:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #else
2041:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         #if(capsense_ADC_ENABLE == capsense_ADC_IS_M0S8PERI_BLOCK)
2042:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             temp = (temp / (uint32)capsense_ADC_dsRam.modCsxClk);
2043:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         #endif /* (capsense_ADC_ENABLE == capsense_ADC_IS_M0S8PERI_BLOCK) */
2044:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
2045:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         temp = ((uint32)wdgtPtr->resolution * capsense_ADC_NUM_HALF_CYCLES * temp);
2046:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #endif /* (capsense_ADC_ENABLE == capsense_ADC_CSDV2) */
2047:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
2048:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     /* return the scan period */
2049:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     return ((uint16)temp);
2050:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** }
 250              		.loc 1 2050 0
 251              		@ sp needed
 252 000a 7047     		bx	lr
 253              		.cfi_endproc
 254              	.LFE17:
 255              		.size	capsense_ADC_SsCalcCsxScanPeriod, .-capsense_ADC_SsCalcCsxScanPeriod
 256              		.section	.text.capsense_ADC_SsCSXStartSample,"ax",%progbits
 257              		.align	2
 258              		.code	16
 259              		.thumb_func
 260              		.type	capsense_ADC_SsCSXStartSample, %function
 261              	capsense_ADC_SsCSXStartSample:
 262              	.LFB11:
1726:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     uint32 tmpRegVal;
 263              		.loc 1 1726 0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 0
 266              		@ frame_needed = 0, uses_anonymous_args = 0
 267 0000 10B5     		push	{r4, lr}
 268              		.cfi_def_cfa_offset 8
 269              		.cfi_offset 4, -8
 270              		.cfi_offset 14, -4
1731:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     tmpRegVal = capsense_ADC_DEFAULT_CSD_IDACA_CFG & ~capsense_ADC_IDAC_GAIN_MASK;
 271              		.loc 1 1731 0
 272 0002 394B     		ldr	r3, .L27
 273 0004 1B68     		ldr	r3, [r3]
 274 0006 5B68     		ldr	r3, [r3, #4]
 275 0008 5A7A     		ldrb	r2, [r3, #9]
 276              	.LVL39:
1733:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     tmpRegVal |= capsense_ADC_idacGainTable[idacGainIndex].gainReg;
 277              		.loc 1 1733 0
 278 000a 384B     		ldr	r3, .L27+4
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 42


 279 000c 1968     		ldr	r1, [r3]
 280 000e 384B     		ldr	r3, .L27+8
 281 0010 1B78     		ldrb	r3, [r3]
 282 0012 CB18     		adds	r3, r1, r3
 283 0014 5B7A     		ldrb	r3, [r3, #9]
 284 0016 7F21     		movs	r1, #127
 285 0018 0B40     		ands	r3, r1
 286 001a 3649     		ldr	r1, .L27+12
 287 001c 0B43     		orrs	r3, r1
 288              	.LVL40:
1734:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     CY_SET_REG32(capsense_ADC_CSD_IDACA_PTR, tmpRegVal);
 289              		.loc 1 1734 0
 290 001e D200     		lsls	r2, r2, #3
 291              	.LVL41:
 292 0020 3549     		ldr	r1, .L27+16
 293 0022 5258     		ldr	r2, [r2, r1]
 294 0024 1343     		orrs	r3, r2
 295              	.LVL42:
1735:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 296              		.loc 1 1735 0
 297 0026 354A     		ldr	r2, .L27+20
 298 0028 1360     		str	r3, [r2]
 299              	.LVL43:
1744:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 300              		.loc 1 1744 0
 301 002a 0022     		movs	r2, #0
 302 002c 344B     		ldr	r3, .L27+24
 303              	.LVL44:
 304 002e 5A80     		strh	r2, [r3, #2]
 305              	.LVL45:
 306              	.LBB4:
 307              	.LBB5:
2051:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
2052:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
2053:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** #if (capsense_ADC_ENABLE == capsense_ADC_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
2054:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** /*******************************************************************************
2055:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * Function Name: capsense_ADC_SsCSXOversample
2056:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** ****************************************************************************//**
2057:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
2058:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \brief
2059:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *   Calculates the scan period of specific node.
2060:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
2061:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \details
2062:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *   Calculates the scan period of specific node that is used as maximum
2063:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *   raw count at raw count inversion (capsense_ADC_csxScanPeriod variable).
2064:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *   The capsense_ADC_curFlashWdgtPtr and capsense_ADC_curRamSnsPtr
2065:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *   must be configured to proper widget/sensor before calling this function.
2066:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
2067:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \return
2068:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *   Returns the scan period of specific node (used as maximum raw count)
2069:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
2070:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *******************************************************************************/
2071:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** static uint32 capsense_ADC_SsCSXOversample(void)
2072:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** {
2073:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     uint32 temp;
2074:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
2075:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #if(capsense_ADC_DISABLE == capsense_ADC_CSX_COMMON_TX_CLK_EN)
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 43


2076:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         capsense_ADC_RAM_WD_BASE_STRUCT * curRamWdgtBasePtr;
2077:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         curRamWdgtBasePtr = (capsense_ADC_RAM_WD_BASE_STRUCT *)capsense_ADC_curFlashWdgtPtr->ptr2Wd
2078:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         temp = (uint32)(curRamWdgtBasePtr->snsClk);
2079:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #else
2080:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         temp = (uint32)(capsense_ADC_dsRam.snsCsxClk);
2081:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #endif /* (capsense_ADC_DISABLE == capsense_ADC_CSX_COMMON_TX_CLK_EN) */
2082:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
2083:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #if(capsense_ADC_ENABLE == capsense_ADC_CSDV2)
2084:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         temp  = LO16((uint32)capsense_ADC_curRamSnsPtr->subConvNum * (temp - capsense_ADC_CSX_DEADB
2085:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #else
2086:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         #if(capsense_ADC_ENABLE == capsense_ADC_IS_M0S8PERI_BLOCK)
2087:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             temp = (temp / (uint32)capsense_ADC_dsRam.modCsxClk);
2088:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         #endif /* (capsense_ADC_ENABLE == capsense_ADC_IS_M0S8PERI_BLOCK) */
2089:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
2090:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         temp = ((uint32)capsense_ADC_curRamSnsPtr->subConvNum * capsense_ADC_NUM_HALF_CYCLES * temp
2091:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #endif /* (capsense_ADC_ENABLE == capsense_ADC_CSDV2) */
2092:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
2093:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     /* return the scan period */
2094:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     return (temp);
2095:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** }
2096:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** #endif /* (capsense_ADC_ENABLE == capsense_ADC_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
2097:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
2098:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
2099:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** #if(capsense_ADC_ENABLE == capsense_ADC_CSDV2)
2100:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** /**
2101:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \cond SECTION_C_INTERRUPT
2102:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \addtogroup group_c_interrupt
2103:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \{
2104:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** */
2105:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** /*******************************************************************************
2106:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * Function Name: capsense_ADC_CSXScanISR
2107:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** ****************************************************************************//**
2108:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
2109:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \brief
2110:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  This is an internal ISR function to handle the CSX sensing method operation.
2111:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
2112:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \details
2113:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *  This handler covers the following functionality:
2114:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *   - Read the result of the measurement and store it into the corresponding register of
2115:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *     the data structure.
2116:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *   - If the Noise Metric functionality is enabled, then check the number of bad
2117:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *     conversions and repeat the scan of the current sensor of the number of bad
2118:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *     conversions is greater than the Noise Metric Threshold.
2119:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *   - Initiate the scan of the next sensor for multiple sensor scanning mode.
2120:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *   - Update the Status register in the data structure.
2121:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *   - Switch the HW block to the default state if scanning of all the sensors is
2122:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *     completed.
2123:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
2124:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *******************************************************************************/
2125:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** CY_ISR(capsense_ADC_CSXScanISR)
2126:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** {
2127:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** #if(0u != capsense_ADC_CSX_NOISE_METRIC_EN)
2128:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     uint32 tmpRegVal;
2129:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** #endif /* (0u != capsense_ADC_CSX_NOISE_METRIC_EN) */
2130:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** #if(0u != capsense_ADC_CSX_NOISE_METRIC_EN)
2131:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     static uint32 capsense_ADC_resamplingCyclesCnt = capsense_ADC_RESAMPLING_CYCLES_MAX_NUMBER;
2132:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** #endif /* (0u != capsense_ADC_CSX_NOISE_METRIC_EN) */
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 44


2133:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
2134:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     CyIntDisable(capsense_ADC_ISR_NUMBER);
2135:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
2136:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     CY_SET_REG32(capsense_ADC_INTR_PTR, capsense_ADC_DEFAULT_CSD_INTR_CFG);
2137:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
2138:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     capsense_ADC_csxRawCount  = (uint16)(CY_GET_REG32(capsense_ADC_RESULT_VAL1_PTR) &\
2139:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                                                          capsense_ADC_RESULT_VAL1_VALUE_MASK);
2140:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
2141:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     capsense_ADC_csxRawCount += (uint16)(CY_GET_REG32(capsense_ADC_RESULT_VAL2_PTR) &\
2142:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                                                          capsense_ADC_RESULT_VAL2_VALUE_MASK);
2143:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
2144:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     /* This workaround neded to prevent overflow in the SW register map. Cypress ID #234358 */
2145:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     if(capsense_ADC_csxRawCount > capsense_ADC_csxScanPeriod)
2146:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     {
2147:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         capsense_ADC_csxRawCount = capsense_ADC_csxScanPeriod;
2148:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     }
2149:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
2150:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** #if(0u != capsense_ADC_CSX_NOISE_METRIC_EN)
2151:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     tmpRegVal = CY_GET_REG32(capsense_ADC_RESULT_VAL1_PTR) >> capsense_ADC_RESULT_VAL1_BAD_CONVS_SH
2152:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
2153:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     if((tmpRegVal > capsense_ADC_CSX_NOISE_METRIC_TH) && (capsense_ADC_resamplingCyclesCnt > 0uL))
2154:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     {
2155:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_SEQ_START_PTR, capsense_ADC_SCAN_CSD_SEQ_START_CFG);
2156:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         capsense_ADC_resamplingCyclesCnt--;
2157:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     }
2158:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     else
2159:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     {
2160:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         capsense_ADC_CSXPostScanApiPtr();
2161:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         capsense_ADC_resamplingCyclesCnt = capsense_ADC_RESAMPLING_CYCLES_MAX_NUMBER;
2162:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     }
2163:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** #else
2164:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     capsense_ADC_CSXPostScanApiPtr();
2165:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** #endif /* (0u != capsense_ADC_CSX_NOISE_METRIC_EN) */
2166:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
2167:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     if(capsense_ADC_NOT_BUSY == (capsense_ADC_dsRam.status & capsense_ADC_SW_STS_BUSY))
2168:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     {
2169:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_CONFIG_PTR, capsense_ADC_DEFAULT_CSD_CONFIG_CFG);
2170:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_CSDCMP_PTR, capsense_ADC_DEFAULT_CSD_CSDCMP_CFG);
2171:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_CSD_IDACA_PTR, capsense_ADC_DEFAULT_CSD_IDACA_CFG);
2172:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     }
2173:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
2174:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     CyIntEnable(capsense_ADC_ISR_NUMBER);
2175:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** }
2176:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
2177:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** /** \}
2178:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \endcond */
2179:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
2180:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** /*******************************************************************************
2181:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * Function Name: capsense_ADC_SsCSXStartSampleExt
2182:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** ****************************************************************************//**
2183:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
2184:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \brief
2185:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *   Starts the HW sequencer to perform the CSX conversion.
2186:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *   specific widget.
2187:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
2188:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** * \details
2189:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *   This function covers the following functionality:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 45


2190:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *      1. Configures the HW sequencer to perform the coarse initialization.
2191:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *      2. Waiting for completion of the coarse initialization.
2192:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *      3. Configures the HW sequencer to perform the normal conversion.
2193:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *      4. Starts the normal conversion
2194:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *
2195:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** *******************************************************************************/
2196:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** static CY_INLINE void capsense_ADC_SsCSXStartSampleExt(void)
2197:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** {
2198:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     uint32 filterDelay;
2199:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     uint32 watchdogCounter;
2200:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #if (capsense_ADC_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ)
2201:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         uint32 sampleClkFreqHz;
2202:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #endif /* (capsense_ADC_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) */
2203:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
2204:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** /* Configure the HW sequencer to perform the coarse initialization. */
2205:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     CY_SET_REG32(capsense_ADC_CONFIG_PTR,           capsense_ADC_DEFAULT_CSD_CONFIG_CFG);
 308              		.loc 1 2205 0
 309 0030 344A     		ldr	r2, .L27+28
 310 0032 354B     		ldr	r3, .L27+32
 311 0034 1A60     		str	r2, [r3]
2206:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     CY_SET_REG32(capsense_ADC_HSCMP_PTR,            capsense_ADC_PRECHARGE_CSD_HSCMP_CFG);
 312              		.loc 1 2206 0
 313 0036 0122     		movs	r2, #1
 314 0038 344B     		ldr	r3, .L27+36
 315 003a 1A60     		str	r2, [r3]
2207:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     CY_SET_REG32(capsense_ADC_SW_HS_P_SEL_PTR,      capsense_ADC_PRECHARGE_CSD_SW_HS_P_SEL_CFG);
 316              		.loc 1 2207 0
 317 003c 1123     		movs	r3, #17
 318 003e 344A     		ldr	r2, .L27+40
 319 0040 1360     		str	r3, [r2]
2208:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     CY_SET_REG32(capsense_ADC_SW_HS_N_SEL_PTR,      capsense_ADC_PRECHARGE_CSD_SW_HS_N_SEL_CFG);
 320              		.loc 1 2208 0
 321 0042 8021     		movs	r1, #128
 322 0044 4904     		lsls	r1, r1, #17
 323 0046 334A     		ldr	r2, .L27+44
 324 0048 1160     		str	r1, [r2]
2209:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     CY_SET_REG32(capsense_ADC_SW_DSI_SEL_PTR,       capsense_ADC_PRECHARGE_CSD_SW_DSI_SEL_CFG);
 325              		.loc 1 2209 0
 326 004a 334A     		ldr	r2, .L27+48
 327 004c 1360     		str	r3, [r2]
2210:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     CY_SET_REG32(capsense_ADC_SW_SHIELD_SEL_PTR,    capsense_ADC_PRECHARGE_CSD_SW_SHIELD_SEL_CFG);
 328              		.loc 1 2210 0
 329 004e 0622     		movs	r2, #6
 330 0050 324B     		ldr	r3, .L27+52
 331 0052 1A60     		str	r2, [r3]
2211:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     CY_SET_REG32(capsense_ADC_SW_FW_MOD_SEL_PTR,    capsense_ADC_PRECHARGE_CSD_SW_FW_MOD_SEL_CFG);
 332              		.loc 1 2211 0
 333 0054 324A     		ldr	r2, .L27+56
 334 0056 334B     		ldr	r3, .L27+60
 335 0058 1A60     		str	r2, [r3]
2212:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     CY_SET_REG32(capsense_ADC_SW_FW_TANK_SEL_PTR,   capsense_ADC_PRECHARGE_CSD_SW_FW_TANK_SEL_CFG);
 336              		.loc 1 2212 0
 337 005a 334A     		ldr	r2, .L27+64
 338 005c 334B     		ldr	r3, .L27+68
 339 005e 1A60     		str	r2, [r3]
2213:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
2214:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #if(capsense_ADC_ENABLE == capsense_ADC_CSDV2) &&\
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 46


2215:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****        (capsense_ADC_ENABLE == capsense_ADC_BLOCK_OFF_AFTER_SCAN_EN) &&\
2216:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****        (capsense_ADC_CSX_ANALOG_STARTUP_DELAY_US > 0uL)
2217:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 CyDelayUs(capsense_ADC_CSX_ANALOG_STARTUP_DELAY_US);
2218:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #endif
2219:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
2220:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     CY_SET_REG32(capsense_ADC_SEQ_START_PTR,        capsense_ADC_PRECHARGE_CSD_SEQ_START_CFG);
 340              		.loc 1 2220 0
 341 0060 334A     		ldr	r2, .L27+72
 342 0062 344B     		ldr	r3, .L27+76
 343 0064 1A60     		str	r2, [r3]
 344              	.LVL46:
2221:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
2222:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     /* Wait for the HSCMP trigger and retutn the sequencer to the IDLE state. */
2223:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     watchdogCounter = capsense_ADC_CSX_PRECHARGE_WATCHDOG_CYCLES_NUM;
 345              		.loc 1 2223 0
 346 0066 F023     		movs	r3, #240
 347 0068 00E0     		b	.L20
 348              	.LVL47:
 349              	.L22:
2224:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     while((0u != (capsense_ADC_SEQ_START_START_MASK & CY_GET_REG32(capsense_ADC_SEQ_START_PTR))) &&
2225:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     {
2226:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         watchdogCounter--;
 350              		.loc 1 2226 0
 351 006a 013B     		subs	r3, r3, #1
 352              	.LVL48:
 353              	.L20:
2224:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     while((0u != (capsense_ADC_SEQ_START_START_MASK & CY_GET_REG32(capsense_ADC_SEQ_START_PTR))) &&
 354              		.loc 1 2224 0
 355 006c 314A     		ldr	r2, .L27+76
 356 006e 1268     		ldr	r2, [r2]
 357 0070 D207     		lsls	r2, r2, #31
 358 0072 01D5     		bpl	.L21
 359 0074 002B     		cmp	r3, #0
 360 0076 F8D1     		bne	.L22
 361              	.L21:
2227:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     }
2228:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
2229:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     /* Reset the sequencer to the IDLE state if HSCMP not triggered till watchdog period is out. */
2230:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     if(0u != (capsense_ADC_SEQ_START_START_MASK & CY_GET_REG32(capsense_ADC_SEQ_START_PTR)))
 362              		.loc 1 2230 0
 363 0078 2E4B     		ldr	r3, .L27+76
 364              	.LVL49:
 365 007a 1B68     		ldr	r3, [r3]
 366 007c DB07     		lsls	r3, r3, #31
 367 007e 03D5     		bpl	.L23
2231:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     {
2232:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_SEQ_START_PTR,  capsense_ADC_DEFAULT_CSD_SEQ_START_CFG);
 368              		.loc 1 2232 0
 369 0080 C222     		movs	r2, #194
 370 0082 9200     		lsls	r2, r2, #2
 371 0084 2B4B     		ldr	r3, .L27+76
 372 0086 1A60     		str	r2, [r3]
 373              	.L23:
2233:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     }
2234:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
2235:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #if (capsense_ADC_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ)
2236:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         sampleClkFreqHz = CYDEV_BCLK__HFCLK__HZ / (uint32)capsense_ADC_dsRam.modCsxClk;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 47


 374              		.loc 1 2236 0
 375 0088 2423     		movs	r3, #36
 376 008a 2B4A     		ldr	r2, .L27+80
 377 008c D15C     		ldrb	r1, [r2, r3]
 378 008e 2B48     		ldr	r0, .L27+84
 379 0090 FFF7FEFF 		bl	__aeabi_uidiv
 380              	.LVL50:
2237:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         if(sampleClkFreqHz <= capsense_ADC_MOD_CSD_CLK_12MHZ)
 381              		.loc 1 2237 0
 382 0094 2A4B     		ldr	r3, .L27+88
 383 0096 9842     		cmp	r0, r3
 384 0098 04D9     		bls	.L25
2238:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         {
2239:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             filterDelay = capsense_ADC_CONFIG_FILTER_DELAY_12MHZ;
2240:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         }
2241:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         else if(sampleClkFreqHz <= capsense_ADC_MOD_CSD_CLK_24MHZ)
 385              		.loc 1 2241 0
 386 009a 284B     		ldr	r3, .L27+84
 387 009c 9842     		cmp	r0, r3
 388 009e 03D8     		bhi	.L26
2242:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         {
2243:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             filterDelay = capsense_ADC_CONFIG_FILTER_DELAY_24MHZ;
 389              		.loc 1 2243 0
 390 00a0 3023     		movs	r3, #48
 391 00a2 02E0     		b	.L24
 392              	.L25:
2239:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         }
 393              		.loc 1 2239 0
 394 00a4 2023     		movs	r3, #32
 395 00a6 00E0     		b	.L24
 396              	.L26:
2244:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         }
2245:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         else
2246:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         {
2247:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             filterDelay = capsense_ADC_CONFIG_FILTER_DELAY_48MHZ;
 397              		.loc 1 2247 0
 398 00a8 4023     		movs	r3, #64
 399              	.L24:
 400              	.LVL51:
2248:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         }
2249:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #else
2250:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         filterDelay = capsense_ADC_CONFIG_FILTER_DELAY_12MHZ;
2251:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #endif /* (capsense_ADC_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) */
2252:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
2253:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     /* Configure the HW sequencer to perform the normal conversion. */
2254:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     CY_SET_REG32(capsense_ADC_CONFIG_PTR, capsense_ADC_PRESCAN_CSD_CONFIG_CFG | filterDelay);
 401              		.loc 1 2254 0
 402 00aa 264A     		ldr	r2, .L27+92
 403 00ac 1343     		orrs	r3, r2
 404              	.LVL52:
 405 00ae 164A     		ldr	r2, .L27+32
 406 00b0 1360     		str	r3, [r2]
2255:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     CY_SET_REG32(capsense_ADC_CSDCMP_PTR, capsense_ADC_PRESCAN_CSD_CSDCMP_CFG);
 407              		.loc 1 2255 0
 408 00b2 254A     		ldr	r2, .L27+96
 409 00b4 254B     		ldr	r3, .L27+100
 410 00b6 1A60     		str	r2, [r3]
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 48


2256:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     CY_SET_REG32(capsense_ADC_HSCMP_PTR, capsense_ADC_DEFAULT_CSD_HSCMP_CFG);
 411              		.loc 1 2256 0
 412 00b8 0023     		movs	r3, #0
 413 00ba 1449     		ldr	r1, .L27+36
 414 00bc 0B60     		str	r3, [r1]
2257:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     CY_SET_REG32(capsense_ADC_SW_HS_P_SEL_PTR, capsense_ADC_DEFAULT_CSD_SW_HS_P_SEL_CFG);
 415              		.loc 1 2257 0
 416 00be 1449     		ldr	r1, .L27+40
 417 00c0 0B60     		str	r3, [r1]
2258:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     CY_SET_REG32(capsense_ADC_SW_HS_N_SEL_PTR, capsense_ADC_DEFAULT_CSD_SW_HS_N_SEL_CFG);
 418              		.loc 1 2258 0
 419 00c2 1449     		ldr	r1, .L27+44
 420 00c4 0B60     		str	r3, [r1]
2259:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     CY_SET_REG32(capsense_ADC_SW_DSI_SEL_PTR, capsense_ADC_DEFAULT_CSD_SW_DSI_SEL_CFG);
 421              		.loc 1 2259 0
 422 00c6 2320     		movs	r0, #35
 423              	.LVL53:
 424 00c8 1349     		ldr	r1, .L27+48
 425 00ca 0860     		str	r0, [r1]
2260:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     CY_SET_REG32(capsense_ADC_SW_SHIELD_SEL_PTR, capsense_ADC_DEFAULT_CSD_SW_SHIELD_SEL_CFG);
 426              		.loc 1 2260 0
 427 00cc 1349     		ldr	r1, .L27+52
 428 00ce 0B60     		str	r3, [r1]
2261:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     CY_SET_REG32(capsense_ADC_SW_FW_MOD_SEL_PTR, capsense_ADC_DEFAULT_CSD_SW_FW_MOD_SEL_CFG);
 429              		.loc 1 2261 0
 430 00d0 1449     		ldr	r1, .L27+60
 431 00d2 0B60     		str	r3, [r1]
2262:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     CY_SET_REG32(capsense_ADC_SW_FW_TANK_SEL_PTR, capsense_ADC_DEFAULT_CSD_SW_FW_TANK_SEL_CFG);
 432              		.loc 1 2262 0
 433 00d4 1549     		ldr	r1, .L27+68
 434 00d6 0B60     		str	r3, [r1]
2263:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
2264:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     /* Clear all pending interrupts of CSD block */
2265:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     CY_SET_REG32(capsense_ADC_INTR_PTR, capsense_ADC_DEFAULT_CSD_INTR_CFG);
 435              		.loc 1 2265 0
 436 00d8 8321     		movs	r1, #131
 437 00da 4900     		lsls	r1, r1, #1
 438 00dc 1C4B     		ldr	r3, .L27+104
 439 00de 1960     		str	r1, [r3]
2266:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
2267:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     /* Start the normal conversion. */
2268:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     CY_SET_REG32(capsense_ADC_SEQ_START_PTR, capsense_ADC_SCAN_CSD_SEQ_START_CFG);
 440              		.loc 1 2268 0
 441 00e0 144B     		ldr	r3, .L27+76
 442 00e2 1A60     		str	r2, [r3]
 443              	.LBE5:
 444              	.LBE4:
1751:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** #else
 445              		.loc 1 1751 0
 446              		@ sp needed
 447 00e4 10BD     		pop	{r4, pc}
 448              	.L28:
 449 00e6 C046     		.align	2
 450              	.L27:
 451 00e8 00000000 		.word	capsense_ADC_curFlashWdgtPtr
 452 00ec 00000000 		.word	capsense_ADC_curRamSnsPtr
 453 00f0 00000000 		.word	capsense_ADC_scanFreqIndex
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 49


 454 00f4 800E0F00 		.word	986752
 455 00f8 00000000 		.word	capsense_ADC_idacGainTable
 456 00fc C0010B40 		.word	1074463168
 457 0100 00000000 		.word	.LANCHOR0
 458 0104 20100480 		.word	-2147217376
 459 0108 00000B40 		.word	1074462720
 460 010c 80010B40 		.word	1074463104
 461 0110 80020B40 		.word	1074463360
 462 0114 84020B40 		.word	1074463364
 463 0118 C0020B40 		.word	1074463424
 464 011c 88020B40 		.word	1074463368
 465 0120 01010100 		.word	65793
 466 0124 B0020B40 		.word	1074463408
 467 0128 10100000 		.word	4112
 468 012c B4020B40 		.word	1074463412
 469 0130 03030000 		.word	771
 470 0134 40030B40 		.word	1074463552
 471 0138 00000000 		.word	capsense_ADC_dsRam
 472 013c 00366E01 		.word	24000000
 473 0140 001BB700 		.word	12000000
 474 0144 00100C80 		.word	-2146693120
 475 0148 01030000 		.word	769
 476 014c 8C010B40 		.word	1074463116
 477 0150 F0000B40 		.word	1074462960
 478              		.cfi_endproc
 479              	.LFE11:
 480              		.size	capsense_ADC_SsCSXStartSample, .-capsense_ADC_SsCSXStartSample
 481              		.section	.text.capsense_ADC_CSXScanISR,"ax",%progbits
 482              		.align	2
 483              		.global	capsense_ADC_CSXScanISR
 484              		.code	16
 485              		.thumb_func
 486              		.type	capsense_ADC_CSXScanISR, %function
 487              	capsense_ADC_CSXScanISR:
 488              	.LFB18:
2126:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** #if(0u != capsense_ADC_CSX_NOISE_METRIC_EN)
 489              		.loc 1 2126 0
 490              		.cfi_startproc
 491              		@ args = 0, pretend = 0, frame = 0
 492              		@ frame_needed = 0, uses_anonymous_args = 0
 493 0000 10B5     		push	{r4, lr}
 494              		.cfi_def_cfa_offset 8
 495              		.cfi_offset 4, -8
 496              		.cfi_offset 14, -4
2134:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 497              		.loc 1 2134 0
 498 0002 0A20     		movs	r0, #10
 499 0004 FFF7FEFF 		bl	CyIntDisable
 500              	.LVL54:
2136:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 501              		.loc 1 2136 0
 502 0008 8322     		movs	r2, #131
 503 000a 5200     		lsls	r2, r2, #1
 504 000c 154B     		ldr	r3, .L32
 505 000e 1A60     		str	r2, [r3]
2138:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                                                          capsense_ADC_RESULT_VAL1_VALUE_MASK);
 506              		.loc 1 2138 0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 50


 507 0010 154B     		ldr	r3, .L32+4
 508 0012 1B68     		ldr	r3, [r3]
 509 0014 9BB2     		uxth	r3, r3
 510 0016 154A     		ldr	r2, .L32+8
 511 0018 5380     		strh	r3, [r2, #2]
2141:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                                                          capsense_ADC_RESULT_VAL2_VALUE_MASK);
 512              		.loc 1 2141 0
 513 001a 154B     		ldr	r3, .L32+12
 514 001c 1B68     		ldr	r3, [r3]
 515 001e 9BB2     		uxth	r3, r3
 516 0020 5188     		ldrh	r1, [r2, #2]
 517 0022 CB18     		adds	r3, r1, r3
 518 0024 9BB2     		uxth	r3, r3
 519 0026 5380     		strh	r3, [r2, #2]
2145:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     {
 520              		.loc 1 2145 0
 521 0028 5188     		ldrh	r1, [r2, #2]
 522 002a 89B2     		uxth	r1, r1
 523 002c 1388     		ldrh	r3, [r2]
 524 002e 9BB2     		uxth	r3, r3
 525 0030 9942     		cmp	r1, r3
 526 0032 02D9     		bls	.L30
2147:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     }
 527              		.loc 1 2147 0
 528 0034 1388     		ldrh	r3, [r2]
 529 0036 9BB2     		uxth	r3, r3
 530 0038 5380     		strh	r3, [r2, #2]
 531              	.L30:
2164:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** #endif /* (0u != capsense_ADC_CSX_NOISE_METRIC_EN) */
 532              		.loc 1 2164 0
 533 003a 0E4B     		ldr	r3, .L32+16
 534 003c 1B68     		ldr	r3, [r3]
 535 003e 9847     		blx	r3
 536              	.LVL55:
2167:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     {
 537              		.loc 1 2167 0
 538 0040 0D4B     		ldr	r3, .L32+20
 539 0042 DB68     		ldr	r3, [r3, #12]
 540 0044 1B06     		lsls	r3, r3, #24
 541 0046 09D4     		bmi	.L31
2169:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_CSDCMP_PTR, capsense_ADC_DEFAULT_CSD_CSDCMP_CFG);
 542              		.loc 1 2169 0
 543 0048 0C4A     		ldr	r2, .L32+24
 544 004a 0D4B     		ldr	r3, .L32+28
 545 004c 1A60     		str	r2, [r3]
2170:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_CSD_IDACA_PTR, capsense_ADC_DEFAULT_CSD_IDACA_CFG);
 546              		.loc 1 2170 0
 547 004e C022     		movs	r2, #192
 548 0050 9200     		lsls	r2, r2, #2
 549 0052 0C4B     		ldr	r3, .L32+32
 550 0054 1A60     		str	r2, [r3]
2171:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     }
 551              		.loc 1 2171 0
 552 0056 0C4A     		ldr	r2, .L32+36
 553 0058 0C4B     		ldr	r3, .L32+40
 554 005a 1A60     		str	r2, [r3]
 555              	.L31:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 51


2174:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** }
 556              		.loc 1 2174 0
 557 005c 0A20     		movs	r0, #10
 558 005e FFF7FEFF 		bl	CyIntEnable
 559              	.LVL56:
2175:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 560              		.loc 1 2175 0
 561              		@ sp needed
 562 0062 10BD     		pop	{r4, pc}
 563              	.L33:
 564              		.align	2
 565              	.L32:
 566 0064 F0000B40 		.word	1074462960
 567 0068 D0000B40 		.word	1074462928
 568 006c 00000000 		.word	.LANCHOR0
 569 0070 D4000B40 		.word	1074462932
 570 0074 00000000 		.word	.LANCHOR1
 571 0078 00000000 		.word	capsense_ADC_dsRam
 572 007c 20100480 		.word	-2147217376
 573 0080 00000B40 		.word	1074462720
 574 0084 8C010B40 		.word	1074463116
 575 0088 800E4F01 		.word	21958272
 576 008c C0010B40 		.word	1074463168
 577              		.cfi_endproc
 578              	.LFE18:
 579              		.size	capsense_ADC_CSXScanISR, .-capsense_ADC_CSXScanISR
 580              		.section	.text.capsense_ADC_CSXInitialize,"ax",%progbits
 581              		.align	2
 582              		.global	capsense_ADC_CSXInitialize
 583              		.code	16
 584              		.thumb_func
 585              		.type	capsense_ADC_CSXInitialize, %function
 586              	capsense_ADC_CSXInitialize:
 587              	.LFB1:
 157:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #if(capsense_ADC_ENABLE == capsense_ADC_CSDV2)
 588              		.loc 1 157 0
 589              		.cfi_startproc
 590              		@ args = 0, pretend = 0, frame = 0
 591              		@ frame_needed = 0, uses_anonymous_args = 0
 592 0000 10B5     		push	{r4, lr}
 593              		.cfi_def_cfa_offset 8
 594              		.cfi_offset 4, -8
 595              		.cfi_offset 14, -4
 163:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         {
 596              		.loc 1 163 0
 597 0002 524B     		ldr	r3, .L36
 598 0004 4722     		movs	r2, #71
 599 0006 9A5C     		ldrb	r2, [r3, r2]
 600 0008 4621     		movs	r1, #70
 601 000a 585C     		ldrb	r0, [r3, r1]
 602 000c 8242     		cmp	r2, r0
 603 000e 06D0     		beq	.L35
 165:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             capsense_ADC_dsRam.scanCurrentISC = capsense_ADC_dsRam.scanCsxISC;
 604              		.loc 1 165 0
 605 0010 FFF7FEFF 		bl	capsense_ADC_SsSetAllIOsState
 606              	.LVL57:
 166:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         }
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 52


 607              		.loc 1 166 0
 608 0014 4D4B     		ldr	r3, .L36
 609 0016 4622     		movs	r2, #70
 610 0018 995C     		ldrb	r1, [r3, r2]
 611 001a 0132     		adds	r2, r2, #1
 612 001c 9954     		strb	r1, [r3, r2]
 613              	.L35:
 169:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_INTR_SET_PTR,         capsense_ADC_DEFAULT_CSD_INTR_SET_CFG);
 614              		.loc 1 169 0
 615 001e 8322     		movs	r2, #131
 616 0020 5200     		lsls	r2, r2, #1
 617 0022 4B4B     		ldr	r3, .L36+4
 618 0024 1A60     		str	r2, [r3]
 170:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_INTR_MASK_PTR,        capsense_ADC_DEFAULT_CSD_INTR_MASK_CFG);
 619              		.loc 1 170 0
 620 0026 0024     		movs	r4, #0
 621 0028 4A4B     		ldr	r3, .L36+8
 622 002a 1C60     		str	r4, [r3]
 171:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_HSCMP_PTR,            capsense_ADC_DEFAULT_CSD_HSCMP_CFG);
 623              		.loc 1 171 0
 624 002c 053A     		subs	r2, r2, #5
 625 002e FF3A     		subs	r2, r2, #255
 626 0030 494B     		ldr	r3, .L36+12
 627 0032 1A60     		str	r2, [r3]
 172:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_AMBUF_PTR,            capsense_ADC_DEFAULT_CSD_AMBUF_CFG);
 628              		.loc 1 172 0
 629 0034 494B     		ldr	r3, .L36+16
 630 0036 1C60     		str	r4, [r3]
 173:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_REFGEN_PTR,           capsense_ADC_DEFAULT_CSD_REFGEN_CFG);
 631              		.loc 1 173 0
 632 0038 494B     		ldr	r3, .L36+20
 633 003a 1C60     		str	r4, [r3]
 174:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_CSDCMP_PTR,           capsense_ADC_DEFAULT_CSD_CSDCMP_CFG);
 634              		.loc 1 174 0
 635 003c 494A     		ldr	r2, .L36+24
 636 003e 4A4B     		ldr	r3, .L36+28
 637 0040 1A60     		str	r2, [r3]
 175:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_CSD_IDACA_PTR,         capsense_ADC_DEFAULT_CSD_IDACA_CFG);
 638              		.loc 1 175 0
 639 0042 C022     		movs	r2, #192
 640 0044 9200     		lsls	r2, r2, #2
 641 0046 494B     		ldr	r3, .L36+32
 642 0048 1A60     		str	r2, [r3]
 176:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 643              		.loc 1 176 0
 644 004a 494A     		ldr	r2, .L36+36
 645 004c 494B     		ldr	r3, .L36+40
 646 004e 1A60     		str	r2, [r3]
 179:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         #endif /* (0u != capsense_ADC_ADC_EN) || (0u != capsense_ADC_CSD_IDAC_COMP_EN) */
 647              		.loc 1 179 0
 648 0050 494B     		ldr	r3, .L36+44
 649 0052 1C60     		str	r4, [r3]
 182:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_SENSE_PERIOD_PTR,     capsense_ADC_DEFAULT_CSD_SENSE_PERIOD_CFG);
 650              		.loc 1 182 0
 651 0054 494A     		ldr	r2, .L36+48
 652 0056 4A4B     		ldr	r3, .L36+52
 653 0058 1A60     		str	r2, [r3]
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 53


 183:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_SENSE_DUTY_PTR,       capsense_ADC_DEFAULT_CSD_SENSE_DUTY_CFG);
 654              		.loc 1 183 0
 655 005a 5022     		movs	r2, #80
 656 005c 494B     		ldr	r3, .L36+56
 657 005e 1A60     		str	r2, [r3]
 184:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_SW_HS_P_SEL_PTR,      capsense_ADC_DEFAULT_CSD_SW_HS_P_SEL_CFG);
 658              		.loc 1 184 0
 659 0060 494B     		ldr	r3, .L36+60
 660 0062 1C60     		str	r4, [r3]
 185:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_SW_HS_N_SEL_PTR,      capsense_ADC_DEFAULT_CSD_SW_HS_N_SEL_CFG);
 661              		.loc 1 185 0
 662 0064 494B     		ldr	r3, .L36+64
 663 0066 1C60     		str	r4, [r3]
 186:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_SW_SHIELD_SEL_PTR,    capsense_ADC_DEFAULT_CSD_SW_SHIELD_SEL_CFG)
 664              		.loc 1 186 0
 665 0068 494B     		ldr	r3, .L36+68
 666 006a 1C60     		str	r4, [r3]
 187:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_SW_AMUXBUF_SEL_PTR,   capsense_ADC_DEFAULT_CSD_SW_AMUXBUF_SEL_CFG
 667              		.loc 1 187 0
 668 006c 494B     		ldr	r3, .L36+72
 669 006e 1C60     		str	r4, [r3]
 188:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 670              		.loc 1 188 0
 671 0070 494B     		ldr	r3, .L36+76
 672 0072 1C60     		str	r4, [r3]
 190:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(capsense_ADC_SW_BYP_SEL_PTR);
 673              		.loc 1 190 0
 674 0074 FFF7FEFF 		bl	CyEnterCriticalSection
 675              	.LVL58:
 191:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         tmpRegVal &= ~(capsense_ADC_SW_BYP_SEL_SW_BYA_MASK);
 676              		.loc 1 191 0
 677 0078 484A     		ldr	r2, .L36+80
 678 007a 1168     		ldr	r1, [r2]
 679              	.LVL59:
 192:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         tmpRegVal |= capsense_ADC_DEFAULT_CSD_SW_BYP_SEL_CFG;
 680              		.loc 1 192 0
 681 007c 484B     		ldr	r3, .L36+84
 682 007e 0B40     		ands	r3, r1
 683              	.LVL60:
 193:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_SW_BYP_SEL_PTR,       tmpRegVal);
 684              		.loc 1 193 0
 685 0080 8021     		movs	r1, #128
 686 0082 4901     		lsls	r1, r1, #5
 687 0084 0B43     		orrs	r3, r1
 688              	.LVL61:
 194:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 689              		.loc 1 194 0
 690 0086 1360     		str	r3, [r2]
 195:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 691              		.loc 1 195 0
 692 0088 FFF7FEFF 		bl	CyExitCriticalSection
 693              	.LVL62:
 197:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_SW_CMP_N_SEL_PTR,     capsense_ADC_DEFAULT_CSD_SW_CMP_N_SEL_CFG);
 694              		.loc 1 197 0
 695 008c 3222     		movs	r2, #50
 696 008e 454B     		ldr	r3, .L36+88
 697 0090 1A60     		str	r2, [r3]
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 54


 198:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 698              		.loc 1 198 0
 699 0092 8022     		movs	r2, #128
 700 0094 5204     		lsls	r2, r2, #17
 701 0096 444B     		ldr	r3, .L36+92
 702 0098 1A60     		str	r2, [r3]
 200:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(capsense_ADC_SW_REFGEN_SEL_PTR);
 703              		.loc 1 200 0
 704 009a FFF7FEFF 		bl	CyEnterCriticalSection
 705              	.LVL63:
 201:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         tmpRegVal &= ~capsense_ADC_SW_REFGEN_SEL_SW_MASK;
 706              		.loc 1 201 0
 707 009e 434A     		ldr	r2, .L36+96
 708 00a0 1168     		ldr	r1, [r2]
 709              	.LVL64:
 202:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         tmpRegVal |= capsense_ADC_DEFAULT_CSD_SW_REFGEN_SEL_CFG;
 710              		.loc 1 202 0
 711 00a2 434B     		ldr	r3, .L36+100
 712 00a4 0B40     		ands	r3, r1
 713              	.LVL65:
 203:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_SW_REFGEN_SEL_PTR,    tmpRegVal);
 714              		.loc 1 203 0
 715 00a6 8021     		movs	r1, #128
 716 00a8 4905     		lsls	r1, r1, #21
 717 00aa 0B43     		orrs	r3, r1
 718              	.LVL66:
 204:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 719              		.loc 1 204 0
 720 00ac 1360     		str	r3, [r2]
 205:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 721              		.loc 1 205 0
 722 00ae FFF7FEFF 		bl	CyExitCriticalSection
 723              	.LVL67:
 207:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_SW_FW_TANK_SEL_PTR,   capsense_ADC_DEFAULT_CSD_SW_FW_TANK_SEL_CFG
 724              		.loc 1 207 0
 725 00b2 404B     		ldr	r3, .L36+104
 726 00b4 1C60     		str	r4, [r3]
 208:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_SW_DSI_SEL_PTR,       capsense_ADC_DEFAULT_CSD_SW_DSI_SEL_CFG);
 727              		.loc 1 208 0
 728 00b6 404B     		ldr	r3, .L36+108
 729 00b8 1C60     		str	r4, [r3]
 209:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_SEQ_TIME_PTR,         capsense_ADC_DEFAULT_CSD_SEQ_TIME_CFG);
 730              		.loc 1 209 0
 731 00ba 2322     		movs	r2, #35
 732 00bc 3F4B     		ldr	r3, .L36+112
 733 00be 1A60     		str	r2, [r3]
 210:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_SEQ_INIT_CNT_PTR,     capsense_ADC_DEFAULT_CSD_SEQ_INIT_CNT_CFG);
 734              		.loc 1 210 0
 735 00c0 143A     		subs	r2, r2, #20
 736 00c2 3F4B     		ldr	r3, .L36+116
 737 00c4 1A60     		str	r2, [r3]
 211:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_SEQ_NORM_CNT_PTR,     capsense_ADC_DEFAULT_CSD_SEQ_NORM_CNT_CFG);
 738              		.loc 1 211 0
 739 00c6 0B3A     		subs	r2, r2, #11
 740 00c8 3E4B     		ldr	r3, .L36+120
 741 00ca 1A60     		str	r2, [r3]
 212:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_ADC_CTL_PTR,          capsense_ADC_DEFAULT_CSD_ADC_CTL_CFG);
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 55


 742              		.loc 1 212 0
 743 00cc 3E4B     		ldr	r3, .L36+124
 744 00ce 1C60     		str	r4, [r3]
 213:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_SEQ_START_PTR,        capsense_ADC_DEFAULT_CSD_SEQ_START_CFG);
 745              		.loc 1 213 0
 746 00d0 3E4B     		ldr	r3, .L36+128
 747 00d2 1C60     		str	r4, [r3]
 214:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_CONFIG_PTR,           capsense_ADC_DEFAULT_CSD_CONFIG_CFG);
 748              		.loc 1 214 0
 749 00d4 C222     		movs	r2, #194
 750 00d6 9200     		lsls	r2, r2, #2
 751 00d8 3D4B     		ldr	r3, .L36+132
 752 00da 1A60     		str	r2, [r3]
 215:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 753              		.loc 1 215 0
 754 00dc 3D4A     		ldr	r2, .L36+136
 755 00de 3E4B     		ldr	r3, .L36+140
 756 00e0 1A60     		str	r2, [r3]
 217:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 757              		.loc 1 217 0
 758 00e2 0120     		movs	r0, #1
 759 00e4 FFF7FEFF 		bl	capsense_ADC_DischargeExtCapacitors
 760              	.LVL68:
 219:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(capsense_ADC_CintA_PC_PTR);
 761              		.loc 1 219 0
 762 00e8 FFF7FEFF 		bl	CyEnterCriticalSection
 763              	.LVL69:
 220:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         tmpRegVal &= (~(capsense_ADC_GPIO_PC_MASK << (capsense_ADC_CintA_SHIFT * capsense_ADC_GPIO_
 764              		.loc 1 220 0
 765 00ec 3B4C     		ldr	r4, .L36+144
 766 00ee 2268     		ldr	r2, [r4]
 767              	.LVL70:
 221:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_CintA_PC_PTR, tmpRegVal);
 768              		.loc 1 221 0
 769 00f0 3B4B     		ldr	r3, .L36+148
 770 00f2 1340     		ands	r3, r2
 771              	.LVL71:
 222:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 772              		.loc 1 222 0
 773 00f4 2360     		str	r3, [r4]
 223:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 774              		.loc 1 223 0
 775 00f6 FFF7FEFF 		bl	CyExitCriticalSection
 776              	.LVL72:
 225:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(capsense_ADC_CintB_PC_PTR);
 777              		.loc 1 225 0
 778 00fa FFF7FEFF 		bl	CyEnterCriticalSection
 779              	.LVL73:
 226:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         tmpRegVal &= (~(capsense_ADC_GPIO_PC_MASK << (capsense_ADC_CintB__SHIFT * capsense_ADC_GPIO
 780              		.loc 1 226 0
 781 00fe 2268     		ldr	r2, [r4]
 782              	.LVL74:
 227:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_CintB_PC_PTR, tmpRegVal);
 783              		.loc 1 227 0
 784 0100 384B     		ldr	r3, .L36+152
 785 0102 1340     		ands	r3, r2
 786              	.LVL75:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 56


 228:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 787              		.loc 1 228 0
 788 0104 2360     		str	r3, [r4]
 229:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 789              		.loc 1 229 0
 790 0106 FFF7FEFF 		bl	CyExitCriticalSection
 791              	.LVL76:
 232:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(capsense_ADC_CintA_HSIOM_PTR);
 792              		.loc 1 232 0
 793 010a FFF7FEFF 		bl	CyEnterCriticalSection
 794              	.LVL77:
 233:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         tmpRegVal &= ~capsense_ADC_CintA_HSIOM_MASK;
 795              		.loc 1 233 0
 796 010e 364C     		ldr	r4, .L36+156
 797 0110 2268     		ldr	r2, [r4]
 798              	.LVL78:
 234:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         tmpRegVal |= (capsense_ADC_HSIOM_SEL_AMUXA << capsense_ADC_CintA_HSIOM_SHIFT);
 799              		.loc 1 234 0
 800 0112 364B     		ldr	r3, .L36+160
 801 0114 1340     		ands	r3, r2
 802              	.LVL79:
 235:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_CintA_HSIOM_PTR, tmpRegVal);
 803              		.loc 1 235 0
 804 0116 C022     		movs	r2, #192
 805 0118 D200     		lsls	r2, r2, #3
 806 011a 1343     		orrs	r3, r2
 807              	.LVL80:
 236:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 808              		.loc 1 236 0
 809 011c 2360     		str	r3, [r4]
 237:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 810              		.loc 1 237 0
 811 011e FFF7FEFF 		bl	CyExitCriticalSection
 812              	.LVL81:
 240:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(capsense_ADC_CintB_HSIOM_PTR);
 813              		.loc 1 240 0
 814 0122 FFF7FEFF 		bl	CyEnterCriticalSection
 815              	.LVL82:
 241:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         tmpRegVal &= ~capsense_ADC_CintB_HSIOM_MASK;
 816              		.loc 1 241 0
 817 0126 2268     		ldr	r2, [r4]
 818              	.LVL83:
 242:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         tmpRegVal |= (capsense_ADC_HSIOM_SEL_AMUXA << capsense_ADC_CintB_HSIOM_SHIFT);
 819              		.loc 1 242 0
 820 0128 314B     		ldr	r3, .L36+164
 821 012a 1340     		ands	r3, r2
 822              	.LVL84:
 243:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_CintB_HSIOM_PTR, tmpRegVal);
 823              		.loc 1 243 0
 824 012c C022     		movs	r2, #192
 825 012e D201     		lsls	r2, r2, #7
 826 0130 1343     		orrs	r3, r2
 827              	.LVL85:
 244:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 828              		.loc 1 244 0
 829 0132 2360     		str	r3, [r4]
 245:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 57


 830              		.loc 1 245 0
 831 0134 FFF7FEFF 		bl	CyExitCriticalSection
 832              	.LVL86:
 247:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 833              		.loc 1 247 0
 834 0138 2423     		movs	r3, #36
 835 013a 044A     		ldr	r2, .L36
 836 013c D05C     		ldrb	r0, [r2, r3]
 837 013e FFF7FEFF 		bl	capsense_ADC_SsSetModClkClockDivider
 838              	.LVL87:
 296:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** }
 839              		.loc 1 296 0
 840 0142 2C48     		ldr	r0, .L36+168
 841 0144 FFF7FEFF 		bl	capsense_ADC_SsIsrInitialize
 842              	.LVL88:
 297:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 843              		.loc 1 297 0
 844              		@ sp needed
 845 0148 10BD     		pop	{r4, pc}
 846              	.L37:
 847 014a C046     		.align	2
 848              	.L36:
 849 014c 00000000 		.word	capsense_ADC_dsRam
 850 0150 F0000B40 		.word	1074462960
 851 0154 F4000B40 		.word	1074462964
 852 0158 F8000B40 		.word	1074462968
 853 015c 80010B40 		.word	1074463104
 854 0160 84010B40 		.word	1074463108
 855 0164 411F0000 		.word	8001
 856 0168 88010B40 		.word	1074463112
 857 016c 8C010B40 		.word	1074463116
 858 0170 800E4F01 		.word	21958272
 859 0174 C0010B40 		.word	1074463168
 860 0178 C4010B40 		.word	1074463172
 861 017c AA000500 		.word	327850
 862 0180 F0010B40 		.word	1074463216
 863 0184 00020B40 		.word	1074463232
 864 0188 04020B40 		.word	1074463236
 865 018c 80020B40 		.word	1074463360
 866 0190 84020B40 		.word	1074463364
 867 0194 88020B40 		.word	1074463368
 868 0198 90020B40 		.word	1074463376
 869 019c 94020B40 		.word	1074463380
 870 01a0 FFEFFFFF 		.word	-4097
 871 01a4 A0020B40 		.word	1074463392
 872 01a8 A4020B40 		.word	1074463396
 873 01ac A8020B40 		.word	1074463400
 874 01b0 EEFFFEEE 		.word	-285278226
 875 01b4 B0020B40 		.word	1074463408
 876 01b8 B4020B40 		.word	1074463412
 877 01bc C0020B40 		.word	1074463424
 878 01c0 00030B40 		.word	1074463488
 879 01c4 10030B40 		.word	1074463504
 880 01c8 14030B40 		.word	1074463508
 881 01cc 20030B40 		.word	1074463520
 882 01d0 40030B40 		.word	1074463552
 883 01d4 20100480 		.word	-2147217376
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 58


 884 01d8 00000B40 		.word	1074462720
 885 01dc 08040440 		.word	1074005000
 886 01e0 3FFEFFFF 		.word	-449
 887 01e4 FFF1FFFF 		.word	-3585
 888 01e8 00040240 		.word	1073873920
 889 01ec FFF0FFFF 		.word	-3841
 890 01f0 FF0FFFFF 		.word	-61441
 891 01f4 00000000 		.word	capsense_ADC_CSXScanISR
 892              		.cfi_endproc
 893              	.LFE1:
 894              		.size	capsense_ADC_CSXInitialize, .-capsense_ADC_CSXInitialize
 895              		.section	.text.capsense_ADC_CSXScanExt,"ax",%progbits
 896              		.align	2
 897              		.global	capsense_ADC_CSXScanExt
 898              		.code	16
 899              		.thumb_func
 900              		.type	capsense_ADC_CSXScanExt, %function
 901              	capsense_ADC_CSXScanExt:
 902              	.LFB6:
 905:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     /* Reset multi-frequency scan channel if enabled */
 903              		.loc 1 905 0
 904              		.cfi_startproc
 905              		@ args = 0, pretend = 0, frame = 0
 906              		@ frame_needed = 0, uses_anonymous_args = 0
 907 0000 10B5     		push	{r4, lr}
 908              		.cfi_def_cfa_offset 8
 909              		.cfi_offset 4, -8
 910              		.cfi_offset 14, -4
 926:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 911              		.loc 1 926 0
 912 0002 054A     		ldr	r2, .L39
 913 0004 D168     		ldr	r1, [r2, #12]
 914 0006 8023     		movs	r3, #128
 915 0008 0B43     		orrs	r3, r1
 916 000a D360     		str	r3, [r2, #12]
 931:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         #endif
 917              		.loc 1 931 0
 918 000c 0A20     		movs	r0, #10
 919 000e FFF7FEFF 		bl	CyDelayUs
 920              	.LVL89:
 933:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #endif /* (capsense_ADC_ENABLE == capsense_ADC_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
 921              		.loc 1 933 0
 922 0012 FFF7FEFF 		bl	capsense_ADC_SsCSXStartSample
 923              	.LVL90:
 935:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 924              		.loc 1 935 0
 925              		@ sp needed
 926 0016 10BD     		pop	{r4, pc}
 927              	.L40:
 928              		.align	2
 929              	.L39:
 930 0018 00000000 		.word	capsense_ADC_dsRam
 931              		.cfi_endproc
 932              	.LFE6:
 933              		.size	capsense_ADC_CSXScanExt, .-capsense_ADC_CSXScanExt
 934              		.section	.text.capsense_ADC_CSXCalibrateWidget,"ax",%progbits
 935              		.align	2
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 59


 936              		.global	capsense_ADC_CSXCalibrateWidget
 937              		.code	16
 938              		.thumb_func
 939              		.type	capsense_ADC_CSXCalibrateWidget, %function
 940              	capsense_ADC_CSXCalibrateWidget:
 941              	.LFB9:
1502:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     /* Variable to calculate raw count target */
 942              		.loc 1 1502 0
 943              		.cfi_startproc
 944              		@ args = 0, pretend = 0, frame = 8
 945              		@ frame_needed = 0, uses_anonymous_args = 0
 946              	.LVL91:
 947 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 948              		.cfi_def_cfa_offset 20
 949              		.cfi_offset 4, -20
 950              		.cfi_offset 5, -16
 951              		.cfi_offset 6, -12
 952              		.cfi_offset 7, -8
 953              		.cfi_offset 14, -4
 954 0002 5F46     		mov	r7, fp
 955 0004 5646     		mov	r6, r10
 956 0006 4546     		mov	r5, r8
 957 0008 E0B4     		push	{r5, r6, r7}
 958              		.cfi_def_cfa_offset 32
 959              		.cfi_offset 8, -32
 960              		.cfi_offset 10, -28
 961              		.cfi_offset 11, -24
 962 000a 82B0     		sub	sp, sp, #8
 963              		.cfi_def_cfa_offset 40
 964 000c 0190     		str	r0, [sp, #4]
 965 000e 8B46     		mov	fp, r1
 966              	.LVL92:
1520:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 967              		.loc 1 1520 0
 968 0010 4301     		lsls	r3, r0, #5
 969 0012 404C     		ldr	r4, .L60
 970 0014 E418     		adds	r4, r4, r3
 971 0016 A368     		ldr	r3, [r4, #8]
 972 0018 9A46     		mov	r10, r3
 973 001a 3F4B     		ldr	r3, .L60+4
 974 001c 5246     		mov	r2, r10
 975 001e 1A60     		str	r2, [r3]
1524:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             (capsense_ADC_RAM_WD_BASE_STRUCT *)capsense_ADC_dsFlash.wdgtArray[widgetId].ptr2WdgtRam
 976              		.loc 1 1524 0
 977 0020 6068     		ldr	r0, [r4, #4]
 978              	.LVL93:
 979 0022 FFF7FEFF 		bl	capsense_ADC_SsCalcCsxScanPeriod
 980              	.LVL94:
 981 0026 3D4B     		ldr	r3, .L60+8
 982 0028 1880     		strh	r0, [r3]
1526:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         rawTarget = (rawTarget * target) / capsense_ADC_PERCENTAGE_100;
 983              		.loc 1 1526 0
 984 002a 1888     		ldrh	r0, [r3]
 985              	.LVL95:
1527:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #endif /* (capsense_ADC_DISABLE == capsense_ADC_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
 986              		.loc 1 1527 0
 987 002c 5B46     		mov	r3, fp
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 60


 988 002e 5843     		muls	r0, r3
 989              	.LVL96:
 990 0030 6421     		movs	r1, #100
 991 0032 FFF7FEFF 		bl	__aeabi_uidiv
 992              	.LVL97:
 993 0036 0600     		movs	r6, r0
 994              	.LVL98:
1532:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 (uint32)capsense_ADC_dsFlash.wdgtArray[widgetId].numRows);
 995              		.loc 1 1532 0
 996 0038 E37E     		ldrb	r3, [r4, #27]
1533:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 997              		.loc 1 1533 0
 998 003a 257F     		ldrb	r5, [r4, #28]
1532:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 (uint32)capsense_ADC_dsFlash.wdgtArray[widgetId].numRows);
 999              		.loc 1 1532 0
 1000 003c 5D43     		muls	r5, r3
 1001              	.LVL99:
1536:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     {
 1002              		.loc 1 1536 0
 1003 003e 0021     		movs	r1, #0
 1004 0040 09E0     		b	.L42
 1005              	.LVL100:
 1006              	.L43:
1538:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         capsense_ADC_curRamSnsPtr->idacComp[capsense_ADC_FREQ_CHANNEL_0] = curIdacMask;
 1007              		.loc 1 1538 0 discriminator 3
 1008 0042 354A     		ldr	r2, .L60+4
 1009 0044 0023     		movs	r3, #0
 1010 0046 1068     		ldr	r0, [r2]
 1011 0048 0380     		strh	r3, [r0]
1539:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         #if (capsense_ADC_ENABLE == capsense_ADC_MULTI_FREQ_SCAN_EN)
 1012              		.loc 1 1539 0 discriminator 3
 1013 004a 1368     		ldr	r3, [r2]
 1014 004c 4020     		movs	r0, #64
 1015 004e 5872     		strb	r0, [r3, #9]
1546:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     }
 1016              		.loc 1 1546 0 discriminator 3
 1017 0050 0A33     		adds	r3, r3, #10
 1018 0052 1360     		str	r3, [r2]
1536:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     {
 1019              		.loc 1 1536 0 discriminator 3
 1020 0054 0131     		adds	r1, r1, #1
 1021              	.LVL101:
 1022              	.L42:
1536:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     {
 1023              		.loc 1 1536 0 is_stmt 0 discriminator 1
 1024 0056 A942     		cmp	r1, r5
 1025 0058 F3D3     		bcc	.L43
 1026 005a 2024     		movs	r4, #32
 1027 005c 4027     		movs	r7, #64
 1028 005e 0023     		movs	r3, #0
 1029 0060 9846     		mov	r8, r3
 1030 0062 00E0     		b	.L51
 1031              	.LVL102:
 1032              	.L57:
1607:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     }
 1033              		.loc 1 1607 0 is_stmt 1
 1034 0064 1C00     		movs	r4, r3
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 61


 1035              	.LVL103:
 1036              	.L51:
1553:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         (void)capsense_ADC_Scan();
 1037              		.loc 1 1553 0
 1038 0066 0198     		ldr	r0, [sp, #4]
 1039 0068 FFF7FEFF 		bl	capsense_ADC_SetupWidget
 1040              	.LVL104:
1554:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 1041              		.loc 1 1554 0
 1042 006c FFF7FEFF 		bl	capsense_ADC_Scan
 1043              	.LVL105:
1556:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         while ((capsense_ADC_dsRam.status & capsense_ADC_SW_STS_BUSY) != 0u)
 1044              		.loc 1 1556 0
 1045 0070 2B4B     		ldr	r3, .L60+12
1557:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         {
 1046              		.loc 1 1557 0
 1047 0072 02E0     		b	.L44
 1048              	.LVL106:
 1049              	.L46:
1559:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             {
 1050              		.loc 1 1559 0
 1051 0074 002B     		cmp	r3, #0
 1052 0076 05D0     		beq	.L56
1564:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         }
 1053              		.loc 1 1564 0
 1054 0078 013B     		subs	r3, r3, #1
 1055              	.LVL107:
 1056              	.L44:
1557:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         {
 1057              		.loc 1 1557 0
 1058 007a 2A4A     		ldr	r2, .L60+16
 1059 007c D268     		ldr	r2, [r2, #12]
 1060 007e 1206     		lsls	r2, r2, #24
 1061 0080 F8D4     		bmi	.L46
 1062 0082 01E0     		b	.L45
 1063              	.L56:
1561:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 break;
 1064              		.loc 1 1561 0
 1065 0084 1023     		movs	r3, #16
 1066              	.LVL108:
 1067 0086 9846     		mov	r8, r3
 1068              	.LVL109:
 1069              	.L45:
1568:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 1070              		.loc 1 1568 0
 1071 0088 234B     		ldr	r3, .L60+4
 1072 008a 5246     		mov	r2, r10
 1073 008c 1A60     		str	r2, [r3]
 1074              	.LVL110:
1571:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         {
 1075              		.loc 1 1571 0
 1076 008e 0021     		movs	r1, #0
 1077 0090 0EE0     		b	.L47
 1078              	.LVL111:
 1079              	.L49:
1582:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             {
 1080              		.loc 1 1582 0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 62


 1081 0092 214B     		ldr	r3, .L60+4
 1082 0094 1B68     		ldr	r3, [r3]
 1083 0096 1A88     		ldrh	r2, [r3]
 1084 0098 9642     		cmp	r6, r2
 1085 009a 02D2     		bcs	.L48
1584:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             }
 1086              		.loc 1 1584 0
 1087 009c 5A7A     		ldrb	r2, [r3, #9]
 1088 009e BA43     		bics	r2, r7
 1089 00a0 5A72     		strb	r2, [r3, #9]
 1090              	.L48:
1586:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 1091              		.loc 1 1586 0 discriminator 2
 1092 00a2 5A7A     		ldrb	r2, [r3, #9]
 1093 00a4 2243     		orrs	r2, r4
 1094 00a6 5A72     		strb	r2, [r3, #9]
1602:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         }
 1095              		.loc 1 1602 0 discriminator 2
 1096 00a8 0A33     		adds	r3, r3, #10
 1097 00aa 1B4A     		ldr	r2, .L60+4
 1098 00ac 1360     		str	r3, [r2]
1571:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         {
 1099              		.loc 1 1571 0 discriminator 2
 1100 00ae 0131     		adds	r1, r1, #1
 1101              	.LVL112:
 1102              	.L47:
1571:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         {
 1103              		.loc 1 1571 0 is_stmt 0 discriminator 1
 1104 00b0 A942     		cmp	r1, r5
 1105 00b2 EED3     		bcc	.L49
 1106              	.LVL113:
1607:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     }
 1107              		.loc 1 1607 0 is_stmt 1
 1108 00b4 6308     		lsrs	r3, r4, #1
 1109 00b6 DBB2     		uxtb	r3, r3
 1110              	.LVL114:
1609:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 1111              		.loc 1 1609 0
 1112 00b8 002C     		cmp	r4, #0
 1113 00ba 03D0     		beq	.L50
1606:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         nextIdacMask = nextIdacMask >> 1u;
 1114              		.loc 1 1606 0 discriminator 1
 1115 00bc 2700     		movs	r7, r4
1609:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 1116              		.loc 1 1609 0 discriminator 1
 1117 00be 4246     		mov	r2, r8
 1118 00c0 002A     		cmp	r2, #0
 1119 00c2 CFD0     		beq	.L57
 1120              	.L50:
1612:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     (void)capsense_ADC_Scan();
 1121              		.loc 1 1612 0
 1122 00c4 0198     		ldr	r0, [sp, #4]
 1123 00c6 FFF7FEFF 		bl	capsense_ADC_SetupWidget
 1124              	.LVL115:
1613:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 1125              		.loc 1 1613 0
 1126 00ca FFF7FEFF 		bl	capsense_ADC_Scan
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 63


 1127              	.LVL116:
1615:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     {
 1128              		.loc 1 1615 0
 1129 00ce 4346     		mov	r3, r8
 1130 00d0 002B     		cmp	r3, #0
 1131 00d2 04D0     		beq	.L58
 1132              	.LVL117:
 1133 00d4 16E0     		b	.L53
 1134              	.LVL118:
 1135              	.L55:
1620:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             {
 1136              		.loc 1 1620 0
 1137 00d6 002B     		cmp	r3, #0
 1138 00d8 07D0     		beq	.L59
1626:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         }
 1139              		.loc 1 1626 0
 1140 00da 013B     		subs	r3, r3, #1
 1141              	.LVL119:
 1142 00dc 00E0     		b	.L52
 1143              	.LVL120:
 1144              	.L58:
 1145 00de 104B     		ldr	r3, .L60+12
 1146              	.LVL121:
 1147              	.L52:
1618:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         {
 1148              		.loc 1 1618 0
 1149 00e0 104A     		ldr	r2, .L60+16
 1150 00e2 D268     		ldr	r2, [r2, #12]
 1151 00e4 1206     		lsls	r2, r2, #24
 1152 00e6 F6D4     		bmi	.L55
 1153 00e8 01E0     		b	.L54
 1154              	.L59:
1622:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 break;
 1155              		.loc 1 1622 0
 1156 00ea 1023     		movs	r3, #16
 1157              	.LVL122:
 1158 00ec 9846     		mov	r8, r3
 1159              	.LVL123:
 1160              	.L54:
1629:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         {
 1161              		.loc 1 1629 0
 1162 00ee 4346     		mov	r3, r8
 1163 00f0 002B     		cmp	r3, #0
 1164 00f2 07D1     		bne	.L53
1631:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         }
 1165              		.loc 1 1631 0
 1166 00f4 094B     		ldr	r3, .L60+8
 1167 00f6 1988     		ldrh	r1, [r3]
 1168 00f8 89B2     		uxth	r1, r1
 1169 00fa 5A46     		mov	r2, fp
 1170 00fc 0198     		ldr	r0, [sp, #4]
 1171 00fe FFF7FEFF 		bl	capsense_ADC_SsCSXCalibrateCheck
 1172              	.LVL124:
 1173 0102 8046     		mov	r8, r0
 1174              	.LVL125:
 1175              	.L53:
1641:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 64


 1176              		.loc 1 1641 0
 1177 0104 4046     		mov	r0, r8
 1178 0106 02B0     		add	sp, sp, #8
 1179              		@ sp needed
 1180              	.LVL126:
 1181              	.LVL127:
 1182              	.LVL128:
 1183              	.LVL129:
 1184 0108 1CBC     		pop	{r2, r3, r4}
 1185 010a 9046     		mov	r8, r2
 1186 010c 9A46     		mov	r10, r3
 1187 010e A346     		mov	fp, r4
 1188 0110 F0BD     		pop	{r4, r5, r6, r7, pc}
 1189              	.L61:
 1190 0112 C046     		.align	2
 1191              	.L60:
 1192 0114 00000000 		.word	capsense_ADC_dsFlash
 1193 0118 00000000 		.word	capsense_ADC_curRamSnsPtr
 1194 011c 00000000 		.word	.LANCHOR0
 1195 0120 00A60E00 		.word	960000
 1196 0124 00000000 		.word	capsense_ADC_dsRam
 1197              		.cfi_endproc
 1198              	.LFE9:
 1199              		.size	capsense_ADC_CSXCalibrateWidget, .-capsense_ADC_CSXCalibrateWidget
 1200              		.section	.text.capsense_ADC_CSXConnectTx,"ax",%progbits
 1201              		.align	2
 1202              		.global	capsense_ADC_CSXConnectTx
 1203              		.code	16
 1204              		.thumb_func
 1205              		.type	capsense_ADC_CSXConnectTx, %function
 1206              	capsense_ADC_CSXConnectTx:
 1207              	.LFB12:
1825:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     capsense_ADC_WriteBitsSafe(txPtr->pcPtr, (uint32)(capsense_ADC_GPIO_PC_MASK << txPtr->shift),
 1208              		.loc 1 1825 0
 1209              		.cfi_startproc
 1210              		@ args = 0, pretend = 0, frame = 0
 1211              		@ frame_needed = 0, uses_anonymous_args = 0
 1212              	.LVL130:
 1213 0000 10B5     		push	{r4, lr}
 1214              		.cfi_def_cfa_offset 8
 1215              		.cfi_offset 4, -8
 1216              		.cfi_offset 14, -4
 1217 0002 0400     		movs	r4, r0
1826:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             (uint32)(capsense_ADC_GPIO_STRGDRV << txPtr->shift));
 1218              		.loc 1 1826 0
 1219 0004 837E     		ldrb	r3, [r0, #26]
 1220 0006 0622     		movs	r2, #6
 1221 0008 9A40     		lsls	r2, r2, r3
 1222 000a 0721     		movs	r1, #7
 1223 000c 9940     		lsls	r1, r1, r3
 1224 000e 4068     		ldr	r0, [r0, #4]
 1225              	.LVL131:
 1226 0010 FFF7FEFF 		bl	capsense_ADC_WriteBitsSafe
 1227              	.LVL132:
1828:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             (uint32)(capsense_ADC_HSIOM_SEL_CSD_SENSE << txPtr->hsiomShift));
 1228              		.loc 1 1828 0
 1229 0014 237E     		ldrb	r3, [r4, #24]
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 65


 1230 0016 0422     		movs	r2, #4
 1231 0018 9A40     		lsls	r2, r2, r3
 1232 001a 0F21     		movs	r1, #15
 1233 001c 9940     		lsls	r1, r1, r3
 1234 001e 2068     		ldr	r0, [r4]
 1235 0020 FFF7FEFF 		bl	capsense_ADC_WriteBitsSafe
 1236              	.LVL133:
1830:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 1237              		.loc 1 1830 0
 1238              		@ sp needed
 1239              	.LVL134:
 1240 0024 10BD     		pop	{r4, pc}
 1241              		.cfi_endproc
 1242              	.LFE12:
 1243              		.size	capsense_ADC_CSXConnectTx, .-capsense_ADC_CSXConnectTx
 1244 0026 C046     		.section	.text.capsense_ADC_CSXConnectRx,"ax",%progbits
 1245              		.align	2
 1246              		.global	capsense_ADC_CSXConnectRx
 1247              		.code	16
 1248              		.thumb_func
 1249              		.type	capsense_ADC_CSXConnectRx, %function
 1250              	capsense_ADC_CSXConnectRx:
 1251              	.LFB13:
1854:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     capsense_ADC_WriteBitsSafe(rxPtr->pcPtr, (uint32)(capsense_ADC_GPIO_PC_MASK << rxPtr->shift), 0
 1252              		.loc 1 1854 0
 1253              		.cfi_startproc
 1254              		@ args = 0, pretend = 0, frame = 0
 1255              		@ frame_needed = 0, uses_anonymous_args = 0
 1256              	.LVL135:
 1257 0000 10B5     		push	{r4, lr}
 1258              		.cfi_def_cfa_offset 8
 1259              		.cfi_offset 4, -8
 1260              		.cfi_offset 14, -4
 1261 0002 0400     		movs	r4, r0
1855:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     capsense_ADC_WriteBitsSafe(rxPtr->hsiomPtr, (capsense_ADC_HSIOM_SEL_MASK << rxPtr->hsiomShift),
 1262              		.loc 1 1855 0
 1263 0004 837E     		ldrb	r3, [r0, #26]
 1264 0006 0721     		movs	r1, #7
 1265 0008 9940     		lsls	r1, r1, r3
 1266 000a 0022     		movs	r2, #0
 1267 000c 4068     		ldr	r0, [r0, #4]
 1268              	.LVL136:
 1269 000e FFF7FEFF 		bl	capsense_ADC_WriteBitsSafe
 1270              	.LVL137:
1856:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** }
 1271              		.loc 1 1856 0
 1272 0012 237E     		ldrb	r3, [r4, #24]
 1273 0014 0622     		movs	r2, #6
 1274 0016 9A40     		lsls	r2, r2, r3
 1275 0018 0F21     		movs	r1, #15
 1276 001a 9940     		lsls	r1, r1, r3
 1277 001c 2068     		ldr	r0, [r4]
 1278 001e FFF7FEFF 		bl	capsense_ADC_WriteBitsSafe
 1279              	.LVL138:
1857:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 1280              		.loc 1 1857 0
 1281              		@ sp needed
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 66


 1282              	.LVL139:
 1283 0022 10BD     		pop	{r4, pc}
 1284              		.cfi_endproc
 1285              	.LFE13:
 1286              		.size	capsense_ADC_CSXConnectRx, .-capsense_ADC_CSXConnectRx
 1287              		.section	.text.capsense_ADC_CSXScan,"ax",%progbits
 1288              		.align	2
 1289              		.global	capsense_ADC_CSXScan
 1290              		.code	16
 1291              		.thumb_func
 1292              		.type	capsense_ADC_CSXScan, %function
 1293              	capsense_ADC_CSXScan:
 1294              	.LFB5:
 664:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #if (capsense_ADC_ENABLE == capsense_ADC_CSX_GANGED_SNS_EN)
 1295              		.loc 1 664 0
 1296              		.cfi_startproc
 1297              		@ args = 0, pretend = 0, frame = 0
 1298              		@ frame_needed = 0, uses_anonymous_args = 0
 1299 0000 10B5     		push	{r4, lr}
 1300              		.cfi_def_cfa_offset 8
 1301              		.cfi_offset 4, -8
 1302              		.cfi_offset 14, -4
 674:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     {
 1303              		.loc 1 674 0
 1304 0002 1A4B     		ldr	r3, .L66
 1305 0004 4722     		movs	r2, #71
 1306 0006 9A5C     		ldrb	r2, [r3, r2]
 1307 0008 4621     		movs	r1, #70
 1308 000a 585C     		ldrb	r0, [r3, r1]
 1309 000c 8242     		cmp	r2, r0
 1310 000e 06D0     		beq	.L65
 676:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         capsense_ADC_dsRam.scanCurrentISC = capsense_ADC_dsRam.scanCsxISC;
 1311              		.loc 1 676 0
 1312 0010 FFF7FEFF 		bl	capsense_ADC_SsSetAllIOsState
 1313              	.LVL140:
 677:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     }
 1314              		.loc 1 677 0
 1315 0014 154B     		ldr	r3, .L66
 1316 0016 4622     		movs	r2, #70
 1317 0018 995C     		ldrb	r1, [r3, r2]
 1318 001a 0132     		adds	r2, r2, #1
 1319 001c 9954     		strb	r1, [r3, r2]
 1320              	.L65:
 680:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 1321              		.loc 1 680 0
 1322 001e 0022     		movs	r2, #0
 1323 0020 134B     		ldr	r3, .L66+4
 1324 0022 1A70     		strb	r2, [r3]
 683:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 1325              		.loc 1 683 0
 1326 0024 134B     		ldr	r3, .L66+8
 1327 0026 1B68     		ldr	r3, [r3]
 1328 0028 134A     		ldr	r2, .L66+12
 1329 002a 9968     		ldr	r1, [r3, #8]
 1330 002c 1160     		str	r1, [r2]
 772:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         capsense_ADC_curWdgtTotalRx  = capsense_ADC_curFlashWdgtPtr->numCols;
 1331              		.loc 1 772 0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 67


 1332 002e 1A7F     		ldrb	r2, [r3, #28]
 1333 0030 124C     		ldr	r4, .L66+16
 1334 0032 A280     		strh	r2, [r4, #4]
 773:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 1335              		.loc 1 773 0
 1336 0034 DA7E     		ldrb	r2, [r3, #27]
 1337 0036 E280     		strh	r2, [r4, #6]
 823:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 capsense_ADC_curTxIOPtr = capsense_ADC_curRxIOPtr;
 1338              		.loc 1 823 0
 1339 0038 1968     		ldr	r1, [r3]
 1340 003a A160     		str	r1, [r4, #8]
 825:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 1341              		.loc 1 825 0
 1342 003c D300     		lsls	r3, r2, #3
 1343 003e 981A     		subs	r0, r3, r2
 1344 0040 8000     		lsls	r0, r0, #2
 1345 0042 0818     		adds	r0, r1, r0
 1346 0044 E060     		str	r0, [r4, #12]
 828:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 capsense_ADC_CSXConnectRx(capsense_ADC_curRxIOPtr);
 1347              		.loc 1 828 0
 1348 0046 FFF7FEFF 		bl	capsense_ADC_CSXConnectTx
 1349              	.LVL141:
 829:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 1350              		.loc 1 829 0
 1351 004a A068     		ldr	r0, [r4, #8]
 1352 004c FFF7FEFF 		bl	capsense_ADC_CSXConnectRx
 1353              	.LVL142:
 832:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             }
 1354              		.loc 1 832 0
 1355 0050 0B4A     		ldr	r2, .L66+20
 1356 0052 0C4B     		ldr	r3, .L66+24
 1357 0054 1A60     		str	r2, [r3]
 841:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 1358              		.loc 1 841 0
 1359 0056 054A     		ldr	r2, .L66
 1360 0058 D168     		ldr	r1, [r2, #12]
 1361 005a 8023     		movs	r3, #128
 1362 005c 0B43     		orrs	r3, r1
 1363 005e D360     		str	r3, [r2, #12]
 846:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         #endif
 1364              		.loc 1 846 0
 1365 0060 0A20     		movs	r0, #10
 1366 0062 FFF7FEFF 		bl	CyDelayUs
 1367              	.LVL143:
 849:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 1368              		.loc 1 849 0
 1369 0066 FFF7FEFF 		bl	capsense_ADC_SsCSXStartSample
 1370              	.LVL144:
 852:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 1371              		.loc 1 852 0
 1372              		@ sp needed
 1373 006a 10BD     		pop	{r4, pc}
 1374              	.L67:
 1375              		.align	2
 1376              	.L66:
 1377 006c 00000000 		.word	capsense_ADC_dsRam
 1378 0070 00000000 		.word	capsense_ADC_sensorIndex
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 68


 1379 0074 00000000 		.word	capsense_ADC_curFlashWdgtPtr
 1380 0078 00000000 		.word	capsense_ADC_curRamSnsPtr
 1381 007c 00000000 		.word	.LANCHOR0
 1382 0080 00000000 		.word	capsense_ADC_SsCSXPostMultiScan
 1383 0084 00000000 		.word	.LANCHOR1
 1384              		.cfi_endproc
 1385              	.LFE5:
 1386              		.size	capsense_ADC_CSXScan, .-capsense_ADC_CSXScan
 1387              		.section	.text.capsense_ADC_CSXDisconnectTx,"ax",%progbits
 1388              		.align	2
 1389              		.global	capsense_ADC_CSXDisconnectTx
 1390              		.code	16
 1391              		.thumb_func
 1392              		.type	capsense_ADC_CSXDisconnectTx, %function
 1393              	capsense_ADC_CSXDisconnectTx:
 1394              	.LFB14:
1882:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     uint32 regValue;
 1395              		.loc 1 1882 0
 1396              		.cfi_startproc
 1397              		@ args = 0, pretend = 0, frame = 0
 1398              		@ frame_needed = 0, uses_anonymous_args = 0
 1399              	.LVL145:
 1400 0000 70B5     		push	{r4, r5, r6, lr}
 1401              		.cfi_def_cfa_offset 16
 1402              		.cfi_offset 4, -16
 1403              		.cfi_offset 5, -12
 1404              		.cfi_offset 6, -8
 1405              		.cfi_offset 14, -4
 1406 0002 0400     		movs	r4, r0
1886:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (txPtr->hsiomPtr);
 1407              		.loc 1 1886 0
 1408 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1409              	.LVL146:
1887:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     regValue &= ~(txPtr->hsiomMask);
 1410              		.loc 1 1887 0
 1411 0008 2268     		ldr	r2, [r4]
 1412 000a 1368     		ldr	r3, [r2]
 1413              	.LVL147:
1888:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     CY_SET_REG32 (txPtr->hsiomPtr, regValue);
 1414              		.loc 1 1888 0
 1415 000c 2169     		ldr	r1, [r4, #16]
 1416 000e 8B43     		bics	r3, r1
 1417              	.LVL148:
1889:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     CyExitCriticalSection(interruptState);
 1418              		.loc 1 1889 0
 1419 0010 1360     		str	r3, [r2]
1890:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 1420              		.loc 1 1890 0
 1421 0012 FFF7FEFF 		bl	CyExitCriticalSection
 1422              	.LVL149:
1892:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     /* Update port configuration register (drive mode) for sensor */
 1423              		.loc 1 1892 0
 1424 0016 FFF7FEFF 		bl	CyEnterCriticalSection
 1425              	.LVL150:
1894:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     regValue &= ~(capsense_ADC_GPIO_PC_MASK << txPtr->shift);
 1426              		.loc 1 1894 0
 1427 001a 6168     		ldr	r1, [r4, #4]
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 69


 1428 001c 0B68     		ldr	r3, [r1]
 1429              	.LVL151:
1895:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 1430              		.loc 1 1895 0
 1431 001e A47E     		ldrb	r4, [r4, #26]
 1432              	.LVL152:
 1433 0020 0722     		movs	r2, #7
 1434 0022 A240     		lsls	r2, r2, r4
 1435 0024 9343     		bics	r3, r2
 1436              	.LVL153:
1897:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     {
 1437              		.loc 1 1897 0
 1438 0026 4722     		movs	r2, #71
 1439 0028 054D     		ldr	r5, .L70
 1440 002a AA5C     		ldrb	r2, [r5, r2]
 1441 002c 002A     		cmp	r2, #0
 1442 002e 02D1     		bne	.L69
1899:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     }
 1443              		.loc 1 1899 0
 1444 0030 0632     		adds	r2, r2, #6
 1445 0032 A240     		lsls	r2, r2, r4
 1446 0034 1343     		orrs	r3, r2
 1447              	.LVL154:
 1448              	.L69:
1906:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     CyExitCriticalSection(interruptState);
 1449              		.loc 1 1906 0
 1450 0036 0B60     		str	r3, [r1]
1907:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** }
 1451              		.loc 1 1907 0
 1452 0038 FFF7FEFF 		bl	CyExitCriticalSection
 1453              	.LVL155:
1908:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 1454              		.loc 1 1908 0
 1455              		@ sp needed
 1456 003c 70BD     		pop	{r4, r5, r6, pc}
 1457              	.L71:
 1458 003e C046     		.align	2
 1459              	.L70:
 1460 0040 00000000 		.word	capsense_ADC_dsRam
 1461              		.cfi_endproc
 1462              	.LFE14:
 1463              		.size	capsense_ADC_CSXDisconnectTx, .-capsense_ADC_CSXDisconnectTx
 1464              		.section	.text.capsense_ADC_CSXDisconnectRx,"ax",%progbits
 1465              		.align	2
 1466              		.global	capsense_ADC_CSXDisconnectRx
 1467              		.code	16
 1468              		.thumb_func
 1469              		.type	capsense_ADC_CSXDisconnectRx, %function
 1470              	capsense_ADC_CSXDisconnectRx:
 1471              	.LFB15:
1933:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     uint32 regValue;
 1472              		.loc 1 1933 0
 1473              		.cfi_startproc
 1474              		@ args = 0, pretend = 0, frame = 0
 1475              		@ frame_needed = 0, uses_anonymous_args = 0
 1476              	.LVL156:
 1477 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 70


 1478              		.cfi_def_cfa_offset 16
 1479              		.cfi_offset 4, -16
 1480              		.cfi_offset 5, -12
 1481              		.cfi_offset 6, -8
 1482              		.cfi_offset 14, -4
 1483 0002 0400     		movs	r4, r0
1937:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (rxPtr->hsiomPtr);
 1484              		.loc 1 1937 0
 1485 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1486              	.LVL157:
1938:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     regValue &= ~(rxPtr->hsiomMask);
 1487              		.loc 1 1938 0
 1488 0008 2268     		ldr	r2, [r4]
 1489 000a 1368     		ldr	r3, [r2]
 1490              	.LVL158:
1939:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->hsiomPtr, regValue);
 1491              		.loc 1 1939 0
 1492 000c 2169     		ldr	r1, [r4, #16]
 1493 000e 8B43     		bics	r3, r1
 1494              	.LVL159:
1940:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     CyExitCriticalSection(interruptState);
 1495              		.loc 1 1940 0
 1496 0010 1360     		str	r3, [r2]
1941:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 1497              		.loc 1 1941 0
 1498 0012 FFF7FEFF 		bl	CyExitCriticalSection
 1499              	.LVL160:
1943:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     /* Update port configuration register (drive mode) for sensor */
 1500              		.loc 1 1943 0
 1501 0016 FFF7FEFF 		bl	CyEnterCriticalSection
 1502              	.LVL161:
1945:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     regValue &= ~(capsense_ADC_GPIO_PC_MASK << rxPtr->shift);
 1503              		.loc 1 1945 0
 1504 001a 6168     		ldr	r1, [r4, #4]
 1505 001c 0B68     		ldr	r3, [r1]
 1506              	.LVL162:
1946:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 1507              		.loc 1 1946 0
 1508 001e A57E     		ldrb	r5, [r4, #26]
 1509 0020 0722     		movs	r2, #7
 1510 0022 AA40     		lsls	r2, r2, r5
 1511 0024 9343     		bics	r3, r2
 1512              	.LVL163:
1948:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     {
 1513              		.loc 1 1948 0
 1514 0026 4722     		movs	r2, #71
 1515 0028 074E     		ldr	r6, .L74
 1516 002a B25C     		ldrb	r2, [r6, r2]
 1517 002c 002A     		cmp	r2, #0
 1518 002e 02D1     		bne	.L73
1950:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     }
 1519              		.loc 1 1950 0
 1520 0030 0632     		adds	r2, r2, #6
 1521 0032 AA40     		lsls	r2, r2, r5
 1522 0034 1343     		orrs	r3, r2
 1523              	.LVL164:
 1524              	.L73:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 71


1957:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     regValue = CY_GET_REG32(rxPtr->drPtr);
 1525              		.loc 1 1957 0
 1526 0036 0B60     		str	r3, [r1]
1958:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     regValue &=  ~(rxPtr->mask);
 1527              		.loc 1 1958 0
 1528 0038 A268     		ldr	r2, [r4, #8]
 1529 003a 1368     		ldr	r3, [r2]
 1530              	.LVL165:
1959:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->drPtr, regValue);
 1531              		.loc 1 1959 0
 1532 003c 6169     		ldr	r1, [r4, #20]
 1533 003e 8B43     		bics	r3, r1
 1534              	.LVL166:
1960:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     CyExitCriticalSection(interruptState);
 1535              		.loc 1 1960 0
 1536 0040 1360     		str	r3, [r2]
1961:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** }
 1537              		.loc 1 1961 0
 1538 0042 FFF7FEFF 		bl	CyExitCriticalSection
 1539              	.LVL167:
1962:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 1540              		.loc 1 1962 0
 1541              		@ sp needed
 1542              	.LVL168:
 1543 0046 70BD     		pop	{r4, r5, r6, pc}
 1544              	.L75:
 1545              		.align	2
 1546              	.L74:
 1547 0048 00000000 		.word	capsense_ADC_dsRam
 1548              		.cfi_endproc
 1549              	.LFE15:
 1550              		.size	capsense_ADC_CSXDisconnectRx, .-capsense_ADC_CSXDisconnectRx
 1551              		.section	.text.capsense_ADC_SsCSXPostMultiScan,"ax",%progbits
 1552              		.align	2
 1553              		.code	16
 1554              		.thumb_func
 1555              		.type	capsense_ADC_SsCSXPostMultiScan, %function
 1556              	capsense_ADC_SsCSXPostMultiScan:
 1557              	.LFB7:
 950:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #ifdef capsense_ADC_ENTRY_CALLBACK
 1558              		.loc 1 950 0
 1559              		.cfi_startproc
 1560              		@ args = 0, pretend = 0, frame = 0
 1561              		@ frame_needed = 0, uses_anonymous_args = 0
 1562 0000 10B5     		push	{r4, lr}
 1563              		.cfi_def_cfa_offset 8
 1564              		.cfi_offset 4, -8
 1565              		.cfi_offset 14, -4
 956:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                              (capsense_ADC_csxScanPeriod - capsense_ADC_csxRawCount);
 1566              		.loc 1 956 0
 1567 0002 2F4B     		ldr	r3, .L81
 1568 0004 1968     		ldr	r1, [r3]
 1569 0006 2F4B     		ldr	r3, .L81+4
 1570 0008 1B78     		ldrb	r3, [r3]
 1571 000a 2F4C     		ldr	r4, .L81+8
 1572 000c 2288     		ldrh	r2, [r4]
 1573 000e 6088     		ldrh	r0, [r4, #2]
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 72


 1574 0010 5B00     		lsls	r3, r3, #1
 1575 0012 121A     		subs	r2, r2, r0
 1576 0014 5A52     		strh	r2, [r3, r1]
1048:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 1577              		.loc 1 1048 0
 1578 0016 E068     		ldr	r0, [r4, #12]
 1579 0018 FFF7FEFF 		bl	capsense_ADC_CSXDisconnectTx
 1580              	.LVL169:
1051:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 1581              		.loc 1 1051 0
 1582 001c 2B4A     		ldr	r2, .L81+12
 1583 001e 1378     		ldrb	r3, [r2]
 1584 0020 0133     		adds	r3, r3, #1
 1585 0022 DBB2     		uxtb	r3, r3
 1586 0024 1370     		strb	r3, [r2]
1057:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 if (capsense_ADC_curWdgtTotalTx > 0u)
 1587              		.loc 1 1057 0
 1588 0026 A388     		ldrh	r3, [r4, #4]
 1589 0028 013B     		subs	r3, r3, #1
 1590 002a 9BB2     		uxth	r3, r3
 1591 002c A380     		strh	r3, [r4, #4]
1058:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 {
 1592              		.loc 1 1058 0
 1593 002e 002B     		cmp	r3, #0
 1594 0030 0CD0     		beq	.L77
1065:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     capsense_ADC_CSXConnectTx (capsense_ADC_curTxIOPtr);
 1595              		.loc 1 1065 0
 1596 0032 254B     		ldr	r3, .L81+8
 1597 0034 D868     		ldr	r0, [r3, #12]
 1598 0036 1C30     		adds	r0, r0, #28
 1599 0038 D860     		str	r0, [r3, #12]
1066:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     capsense_ADC_curRamSnsPtr++;
 1600              		.loc 1 1066 0
 1601 003a FFF7FEFF 		bl	capsense_ADC_CSXConnectTx
 1602              	.LVL170:
1067:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 1603              		.loc 1 1067 0
 1604 003e 204A     		ldr	r2, .L81
 1605 0040 1368     		ldr	r3, [r2]
 1606 0042 0A33     		adds	r3, r3, #10
 1607 0044 1360     		str	r3, [r2]
1070:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                 }
 1608              		.loc 1 1070 0
 1609 0046 FFF7FEFF 		bl	capsense_ADC_SsCSXStartSample
 1610              	.LVL171:
 1611 004a 37E0     		b	.L76
 1612              	.L77:
1076:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     if (capsense_ADC_curWdgtTotalRx > 0u)
 1613              		.loc 1 1076 0
 1614 004c 1E4A     		ldr	r2, .L81+8
 1615 004e D388     		ldrh	r3, [r2, #6]
 1616 0050 013B     		subs	r3, r3, #1
 1617 0052 9BB2     		uxth	r3, r3
 1618 0054 D380     		strh	r3, [r2, #6]
1077:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     {
 1619              		.loc 1 1077 0
 1620 0056 002B     		cmp	r3, #0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 73


 1621 0058 1DD0     		beq	.L79
1086:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         capsense_ADC_curRxIOPtr++;
 1622              		.loc 1 1086 0
 1623 005a 1400     		movs	r4, r2
 1624 005c 9068     		ldr	r0, [r2, #8]
 1625 005e FFF7FEFF 		bl	capsense_ADC_CSXDisconnectRx
 1626              	.LVL172:
1087:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         capsense_ADC_CSXConnectRx(capsense_ADC_curRxIOPtr);
 1627              		.loc 1 1087 0
 1628 0062 A068     		ldr	r0, [r4, #8]
 1629 0064 1C30     		adds	r0, r0, #28
 1630 0066 A060     		str	r0, [r4, #8]
1088:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         capsense_ADC_curWdgtTotalTx  = capsense_ADC_curFlashWdgtPtr->numRows;
 1631              		.loc 1 1088 0
 1632 0068 FFF7FEFF 		bl	capsense_ADC_CSXConnectRx
 1633              	.LVL173:
1089:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         capsense_ADC_curTxIOPtr = (capsense_ADC_FLASH_IO_STRUCT const *)capsense_AD
 1634              		.loc 1 1089 0
 1635 006c 184B     		ldr	r3, .L81+16
 1636 006e 1B68     		ldr	r3, [r3]
 1637 0070 1A7F     		ldrb	r2, [r3, #28]
 1638 0072 A280     		strh	r2, [r4, #4]
1090:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         capsense_ADC_curTxIOPtr = & capsense_ADC_curTxIOPtr[(capsense_ADC_curFlashW
 1639              		.loc 1 1090 0
 1640 0074 1868     		ldr	r0, [r3]
 1641 0076 E060     		str	r0, [r4, #12]
1091:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         capsense_ADC_CSXConnectTx(capsense_ADC_curTxIOPtr);
 1642              		.loc 1 1091 0
 1643 0078 DA7E     		ldrb	r2, [r3, #27]
 1644 007a D300     		lsls	r3, r2, #3
 1645 007c 9A1A     		subs	r2, r3, r2
 1646 007e 9300     		lsls	r3, r2, #2
 1647 0080 C018     		adds	r0, r0, r3
 1648 0082 E060     		str	r0, [r4, #12]
1092:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 1649              		.loc 1 1092 0
 1650 0084 FFF7FEFF 		bl	capsense_ADC_CSXConnectTx
 1651              	.LVL174:
1095:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 1652              		.loc 1 1095 0
 1653 0088 0D4A     		ldr	r2, .L81
 1654 008a 1368     		ldr	r3, [r2]
 1655 008c 0A33     		adds	r3, r3, #10
 1656 008e 1360     		str	r3, [r2]
1098:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                     }
 1657              		.loc 1 1098 0
 1658 0090 FFF7FEFF 		bl	capsense_ADC_SsCSXStartSample
 1659              	.LVL175:
 1660 0094 12E0     		b	.L76
 1661              	.L79:
1103:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 1662              		.loc 1 1103 0
 1663 0096 0C4B     		ldr	r3, .L81+8
 1664 0098 9868     		ldr	r0, [r3, #8]
 1665 009a FFF7FEFF 		bl	capsense_ADC_CSXDisconnectRx
 1666              	.LVL176:
1106:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         {
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 74


 1667              		.loc 1 1106 0
 1668 009e 0D4B     		ldr	r3, .L81+20
 1669 00a0 1B78     		ldrb	r3, [r3]
 1670 00a2 002B     		cmp	r3, #0
 1671 00a4 02D0     		beq	.L80
1108:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         }
 1672              		.loc 1 1108 0
 1673 00a6 FFF7FEFF 		bl	capsense_ADC_SsPostAllWidgetsScan
 1674              	.LVL177:
 1675 00aa 07E0     		b	.L76
 1676              	.L80:
1117:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                             capsense_ADC_dsRam.status &= ~capsense_ADC_SW_STS_BUSY;
 1677              		.loc 1 1117 0
 1678 00ac 0A4B     		ldr	r3, .L81+24
 1679 00ae 1A89     		ldrh	r2, [r3, #8]
 1680 00b0 0132     		adds	r2, r2, #1
 1681 00b2 1A81     		strh	r2, [r3, #8]
1118:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****                         }
 1682              		.loc 1 1118 0
 1683 00b4 DA68     		ldr	r2, [r3, #12]
 1684 00b6 8021     		movs	r1, #128
 1685 00b8 8A43     		bics	r2, r1
 1686 00ba DA60     		str	r2, [r3, #12]
 1687              	.L76:
1128:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 1688              		.loc 1 1128 0
 1689              		@ sp needed
 1690 00bc 10BD     		pop	{r4, pc}
 1691              	.L82:
 1692 00be C046     		.align	2
 1693              	.L81:
 1694 00c0 00000000 		.word	capsense_ADC_curRamSnsPtr
 1695 00c4 00000000 		.word	capsense_ADC_scanFreqIndex
 1696 00c8 00000000 		.word	.LANCHOR0
 1697 00cc 00000000 		.word	capsense_ADC_sensorIndex
 1698 00d0 00000000 		.word	capsense_ADC_curFlashWdgtPtr
 1699 00d4 00000000 		.word	capsense_ADC_requestScanAllWidget
 1700 00d8 00000000 		.word	capsense_ADC_dsRam
 1701              		.cfi_endproc
 1702              	.LFE7:
 1703              		.size	capsense_ADC_SsCSXPostMultiScan, .-capsense_ADC_SsCSXPostMultiScan
 1704              		.section	.text.capsense_ADC_CSXElectrodeCheck,"ax",%progbits
 1705              		.align	2
 1706              		.global	capsense_ADC_CSXElectrodeCheck
 1707              		.code	16
 1708              		.thumb_func
 1709              		.type	capsense_ADC_CSXElectrodeCheck, %function
 1710              	capsense_ADC_CSXElectrodeCheck:
 1711              	.LFB2:
 314:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #if (capsense_ADC_ENABLE == capsense_ADC_CSX_GANGED_SNS_EN)
 1712              		.loc 1 314 0
 1713              		.cfi_startproc
 1714              		@ args = 0, pretend = 0, frame = 0
 1715              		@ frame_needed = 0, uses_anonymous_args = 0
 1716 0000 10B5     		push	{r4, lr}
 1717              		.cfi_def_cfa_offset 8
 1718              		.cfi_offset 4, -8
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 75


 1719              		.cfi_offset 14, -4
 319:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     {
 1720              		.loc 1 319 0
 1721 0002 074B     		ldr	r3, .L85
 1722 0004 1B8A     		ldrh	r3, [r3, #16]
 1723 0006 002B     		cmp	r3, #0
 1724 0008 08D0     		beq	.L83
 358:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             capsense_ADC_CSXDisconnectRx(capsense_ADC_curRxIOPtr);
 1725              		.loc 1 358 0
 1726 000a 054C     		ldr	r4, .L85
 1727 000c E068     		ldr	r0, [r4, #12]
 1728 000e FFF7FEFF 		bl	capsense_ADC_CSXDisconnectTx
 1729              	.LVL178:
 359:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         #endif
 1730              		.loc 1 359 0
 1731 0012 A068     		ldr	r0, [r4, #8]
 1732 0014 FFF7FEFF 		bl	capsense_ADC_CSXDisconnectRx
 1733              	.LVL179:
 361:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     }
 1734              		.loc 1 361 0
 1735 0018 0023     		movs	r3, #0
 1736 001a 2382     		strh	r3, [r4, #16]
 1737              	.L83:
 363:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 1738              		.loc 1 363 0
 1739              		@ sp needed
 1740 001c 10BD     		pop	{r4, pc}
 1741              	.L86:
 1742 001e C046     		.align	2
 1743              	.L85:
 1744 0020 00000000 		.word	.LANCHOR0
 1745              		.cfi_endproc
 1746              	.LFE2:
 1747              		.size	capsense_ADC_CSXElectrodeCheck, .-capsense_ADC_CSXElectrodeCheck
 1748              		.section	.text.capsense_ADC_CSXSetupWidget,"ax",%progbits
 1749              		.align	2
 1750              		.global	capsense_ADC_CSXSetupWidget
 1751              		.code	16
 1752              		.thumb_func
 1753              		.type	capsense_ADC_CSXSetupWidget, %function
 1754              	capsense_ADC_CSXSetupWidget:
 1755              	.LFB3:
 412:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     /* variable to access widget details */
 1756              		.loc 1 412 0
 1757              		.cfi_startproc
 1758              		@ args = 0, pretend = 0, frame = 0
 1759              		@ frame_needed = 0, uses_anonymous_args = 0
 1760              	.LVL180:
 1761 0000 70B5     		push	{r4, r5, r6, lr}
 1762              		.cfi_def_cfa_offset 16
 1763              		.cfi_offset 4, -16
 1764              		.cfi_offset 5, -12
 1765              		.cfi_offset 6, -8
 1766              		.cfi_offset 14, -4
 1767 0002 0400     		movs	r4, r0
 422:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 1768              		.loc 1 422 0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 76


 1769 0004 C2B2     		uxtb	r2, r0
 1770 0006 124B     		ldr	r3, .L88
 1771 0008 1A70     		strb	r2, [r3]
 424:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 1772              		.loc 1 424 0
 1773 000a 0220     		movs	r0, #2
 1774              	.LVL181:
 1775 000c FFF7FEFF 		bl	capsense_ADC_SsSwitchSensingMode
 1776              	.LVL182:
 430:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 1777              		.loc 1 430 0
 1778 0010 FFF7FEFF 		bl	capsense_ADC_CSXElectrodeCheck
 1779              	.LVL183:
 434:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 1780              		.loc 1 434 0
 1781 0014 6001     		lsls	r0, r4, #5
 1782 0016 0F4B     		ldr	r3, .L88+4
 1783 0018 C018     		adds	r0, r0, r3
 1784 001a 0F4B     		ldr	r3, .L88+8
 1785 001c 1860     		str	r0, [r3]
 436:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 1786              		.loc 1 436 0
 1787 001e 4568     		ldr	r5, [r0, #4]
 1788              	.LVL184:
 441:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         #endif /* (capsense_ADC_ENABLE == capsense_ADC_CSX_COMMON_TX_CLK_EN) */
 1789              		.loc 1 441 0
 1790 0020 6C89     		ldrh	r4, [r5, #10]
 1791              	.LVL185:
 444:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         capsense_ADC_csxScanPeriod  = capsense_ADC_SsCalcCsxScanPeriod(curRamWdgtBasePtr);
 1792              		.loc 1 444 0
 1793 0022 2A88     		ldrh	r2, [r5]
 1794 0024 0D4B     		ldr	r3, .L88+12
 1795 0026 1A60     		str	r2, [r3]
 445:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 1796              		.loc 1 445 0
 1797 0028 2800     		movs	r0, r5
 1798 002a FFF7FEFF 		bl	capsense_ADC_SsCalcCsxScanPeriod
 1799              	.LVL186:
 1800 002e 0C4B     		ldr	r3, .L88+16
 1801 0030 1880     		strh	r0, [r3]
 447:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 1802              		.loc 1 447 0
 1803 0032 2B7B     		ldrb	r3, [r5, #12]
 1804              	.LVL187:
 449:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         tmpRegVal = (tmpRegVal << capsense_ADC_SENSE_PERIOD_LFSR_SIZE_SHIFT) | snsClkVal;
 1805              		.loc 1 449 0
 1806 0034 013C     		subs	r4, r4, #1
 1807              	.LVL188:
 1808 0036 2405     		lsls	r4, r4, #20
 1809              	.LVL189:
 1810 0038 240D     		lsrs	r4, r4, #20
 1811              	.LVL190:
 450:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         CY_SET_REG32(capsense_ADC_SENSE_PERIOD_PTR, tmpRegVal);
 1812              		.loc 1 450 0
 1813 003a 1B04     		lsls	r3, r3, #16
 1814              	.LVL191:
 1815 003c 1C43     		orrs	r4, r3
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 77


 1816              	.LVL192:
 451:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         capsense_ADC_SsSetModClkClockDivider((uint32)capsense_ADC_dsRam.modCsxClk);
 1817              		.loc 1 451 0
 1818 003e 094B     		ldr	r3, .L88+20
 1819 0040 1C60     		str	r4, [r3]
 452:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #else
 1820              		.loc 1 452 0
 1821 0042 2423     		movs	r3, #36
 1822 0044 084A     		ldr	r2, .L88+24
 1823 0046 D05C     		ldrb	r0, [r2, r3]
 1824 0048 FFF7FEFF 		bl	capsense_ADC_SsSetModClkClockDivider
 1825              	.LVL193:
 481:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 1826              		.loc 1 481 0
 1827              		@ sp needed
 1828              	.LVL194:
 1829              	.LVL195:
 1830 004c 70BD     		pop	{r4, r5, r6, pc}
 1831              	.L89:
 1832 004e C046     		.align	2
 1833              	.L88:
 1834 0050 00000000 		.word	capsense_ADC_widgetIndex
 1835 0054 00000000 		.word	capsense_ADC_dsFlash
 1836 0058 00000000 		.word	capsense_ADC_curFlashWdgtPtr
 1837 005c 14030B40 		.word	1074463508
 1838 0060 00000000 		.word	.LANCHOR0
 1839 0064 00020B40 		.word	1074463232
 1840 0068 00000000 		.word	capsense_ADC_dsRam
 1841              		.cfi_endproc
 1842              	.LFE3:
 1843              		.size	capsense_ADC_CSXSetupWidget, .-capsense_ADC_CSXSetupWidget
 1844              		.global	__aeabi_uidivmod
 1845              		.section	.text.capsense_ADC_CSXSetupWidgetExt,"ax",%progbits
 1846              		.align	2
 1847              		.global	capsense_ADC_CSXSetupWidgetExt
 1848              		.code	16
 1849              		.thumb_func
 1850              		.type	capsense_ADC_CSXSetupWidgetExt, %function
 1851              	capsense_ADC_CSXSetupWidgetExt:
 1852              	.LFB4:
 529:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     uint32 txIndex;
 1853              		.loc 1 529 0
 1854              		.cfi_startproc
 1855              		@ args = 0, pretend = 0, frame = 0
 1856              		@ frame_needed = 0, uses_anonymous_args = 0
 1857              	.LVL196:
 1858 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1859              		.cfi_def_cfa_offset 24
 1860              		.cfi_offset 3, -24
 1861              		.cfi_offset 4, -20
 1862              		.cfi_offset 5, -16
 1863              		.cfi_offset 6, -12
 1864              		.cfi_offset 7, -8
 1865              		.cfi_offset 14, -4
 1866 0002 0C00     		movs	r4, r1
 538:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     capsense_ADC_sensorIndex = (uint8)sensorId;
 1867              		.loc 1 538 0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 78


 1868 0004 FFF7FEFF 		bl	capsense_ADC_CSXSetupWidget
 1869              	.LVL197:
 539:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 1870              		.loc 1 539 0
 1871 0008 E2B2     		uxtb	r2, r4
 1872 000a 184B     		ldr	r3, .L91
 1873 000c 1A70     		strb	r2, [r3]
 542:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     capsense_ADC_curRamSnsPtr = &capsense_ADC_curRamSnsPtr[sensorId];
 1874              		.loc 1 542 0
 1875 000e 184B     		ldr	r3, .L91+4
 1876 0010 1D68     		ldr	r5, [r3]
 543:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 1877              		.loc 1 543 0
 1878 0012 A300     		lsls	r3, r4, #2
 1879 0014 1B19     		adds	r3, r3, r4
 1880 0016 5B00     		lsls	r3, r3, #1
 1881 0018 AA68     		ldr	r2, [r5, #8]
 1882 001a 9446     		mov	ip, r2
 1883 001c 6344     		add	r3, r3, ip
 1884 001e 154A     		ldr	r2, .L91+8
 1885 0020 1360     		str	r3, [r2]
 555:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     txIndex = sensorId % capsense_ADC_curFlashWdgtPtr->numRows;
 1886              		.loc 1 555 0
 1887 0022 2F7F     		ldrb	r7, [r5, #28]
 1888 0024 3900     		movs	r1, r7
 1889 0026 2000     		movs	r0, r4
 1890 0028 FFF7FEFF 		bl	__aeabi_uidiv
 1891              	.LVL198:
 1892 002c 0600     		movs	r6, r0
 1893              	.LVL199:
 556:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 1894              		.loc 1 556 0
 1895 002e 3900     		movs	r1, r7
 1896 0030 2000     		movs	r0, r4
 1897              	.LVL200:
 1898 0032 FFF7FEFF 		bl	__aeabi_uidivmod
 1899              	.LVL201:
 608:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             capsense_ADC_curRxIOPtr = &capsense_ADC_curRxIOPtr[rxIndex];
 1900              		.loc 1 608 0
 1901 0036 2A68     		ldr	r2, [r5]
 1902 0038 0F4C     		ldr	r4, .L91+12
 1903              	.LVL202:
 609:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 1904              		.loc 1 609 0
 1905 003a F300     		lsls	r3, r6, #3
 1906 003c 9B1B     		subs	r3, r3, r6
 1907 003e 9B00     		lsls	r3, r3, #2
 1908 0040 D318     		adds	r3, r2, r3
 1909 0042 A360     		str	r3, [r4, #8]
 611:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             capsense_ADC_curTxIOPtr = &capsense_ADC_curTxIOPtr[(capsense_ADC_curFlashWdgtPtr->numCo
 1910              		.loc 1 611 0
 1911 0044 E260     		str	r2, [r4, #12]
 612:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 1912              		.loc 1 612 0
 1913 0046 E87E     		ldrb	r0, [r5, #27]
 1914 0048 4118     		adds	r1, r0, r1
 1915              	.LVL203:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 79


 1916 004a CB00     		lsls	r3, r1, #3
 1917 004c 581A     		subs	r0, r3, r1
 1918 004e 8000     		lsls	r0, r0, #2
 1919 0050 1018     		adds	r0, r2, r0
 1920 0052 E060     		str	r0, [r4, #12]
 615:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             capsense_ADC_CSXConnectRx(capsense_ADC_curRxIOPtr);
 1921              		.loc 1 615 0
 1922 0054 FFF7FEFF 		bl	capsense_ADC_CSXConnectTx
 1923              	.LVL204:
 616:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****             capsense_ADC_eleCsxDisconnectFlag = capsense_ADC_DISCONNECT_IO_FLAG;
 1924              		.loc 1 616 0
 1925 0058 A068     		ldr	r0, [r4, #8]
 1926 005a FFF7FEFF 		bl	capsense_ADC_CSXConnectRx
 1927              	.LVL205:
 617:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 1928              		.loc 1 617 0
 1929 005e 0123     		movs	r3, #1
 1930 0060 2382     		strh	r3, [r4, #16]
 620:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         }
 1931              		.loc 1 620 0
 1932 0062 064A     		ldr	r2, .L91+16
 1933 0064 064B     		ldr	r3, .L91+20
 1934 0066 1A60     		str	r2, [r3]
 625:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 1935              		.loc 1 625 0
 1936              		@ sp needed
 1937              	.LVL206:
 1938 0068 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1939              	.L92:
 1940 006a C046     		.align	2
 1941              	.L91:
 1942 006c 00000000 		.word	capsense_ADC_sensorIndex
 1943 0070 00000000 		.word	capsense_ADC_curFlashWdgtPtr
 1944 0074 00000000 		.word	capsense_ADC_curRamSnsPtr
 1945 0078 00000000 		.word	.LANCHOR0
 1946 007c 00000000 		.word	capsense_ADC_SsCSXPostSingleScan
 1947 0080 00000000 		.word	.LANCHOR1
 1948              		.cfi_endproc
 1949              	.LFE4:
 1950              		.size	capsense_ADC_CSXSetupWidgetExt, .-capsense_ADC_CSXSetupWidgetExt
 1951              		.section	.text.capsense_ADC_SsCSXGetTxClkDivider,"ax",%progbits
 1952              		.align	2
 1953              		.global	capsense_ADC_SsCSXGetTxClkDivider
 1954              		.code	16
 1955              		.thumb_func
 1956              		.type	capsense_ADC_SsCSXGetTxClkDivider, %function
 1957              	capsense_ADC_SsCSXGetTxClkDivider:
 1958              	.LFB16:
1986:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     uint32 retVal;
 1959              		.loc 1 1986 0
 1960              		.cfi_startproc
 1961              		@ args = 0, pretend = 0, frame = 0
 1962              		@ frame_needed = 0, uses_anonymous_args = 0
 1963              		@ link register save eliminated.
 1964              	.LVL207:
1993:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****         capsense_ADC_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
 1965              		.loc 1 1993 0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 80


 1966 0000 4001     		lsls	r0, r0, #5
 1967              	.LVL208:
 1968 0002 024B     		ldr	r3, .L94
 1969 0004 1818     		adds	r0, r3, r0
 1970 0006 4368     		ldr	r3, [r0, #4]
 1971              	.LVL209:
1996:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c ****     #else
 1972              		.loc 1 1996 0
 1973 0008 5889     		ldrh	r0, [r3, #10]
 1974              	.LVL210:
2007:Generated_Source\PSoC4/capsense_ADC_SensingCSX_LL.c **** 
 1975              		.loc 1 2007 0
 1976              		@ sp needed
 1977 000a 7047     		bx	lr
 1978              	.L95:
 1979              		.align	2
 1980              	.L94:
 1981 000c 00000000 		.word	capsense_ADC_dsFlash
 1982              		.cfi_endproc
 1983              	.LFE16:
 1984              		.size	capsense_ADC_SsCSXGetTxClkDivider, .-capsense_ADC_SsCSXGetTxClkDivider
 1985              		.global	capsense_ADC_CSXPostScanApiPtr
 1986              		.global	capsense_ADC_csxRawCount
 1987              		.global	capsense_ADC_csxScanPeriod
 1988              		.data
 1989              		.align	2
 1990              		.set	.LANCHOR1,. + 0
 1991              		.type	capsense_ADC_CSXPostScanApiPtr, %object
 1992              		.size	capsense_ADC_CSXPostScanApiPtr, 4
 1993              	capsense_ADC_CSXPostScanApiPtr:
 1994 0000 00000000 		.word	capsense_ADC_SsCSXPostMultiScan
 1995              		.bss
 1996              		.align	2
 1997              		.set	.LANCHOR0,. + 0
 1998              		.type	capsense_ADC_csxScanPeriod, %object
 1999              		.size	capsense_ADC_csxScanPeriod, 2
 2000              	capsense_ADC_csxScanPeriod:
 2001 0000 0000     		.space	2
 2002              		.type	capsense_ADC_csxRawCount, %object
 2003              		.size	capsense_ADC_csxRawCount, 2
 2004              	capsense_ADC_csxRawCount:
 2005 0002 0000     		.space	2
 2006              		.type	capsense_ADC_curWdgtTotalTx, %object
 2007              		.size	capsense_ADC_curWdgtTotalTx, 2
 2008              	capsense_ADC_curWdgtTotalTx:
 2009 0004 0000     		.space	2
 2010              		.type	capsense_ADC_curWdgtTotalRx, %object
 2011              		.size	capsense_ADC_curWdgtTotalRx, 2
 2012              	capsense_ADC_curWdgtTotalRx:
 2013 0006 0000     		.space	2
 2014              		.type	capsense_ADC_curRxIOPtr, %object
 2015              		.size	capsense_ADC_curRxIOPtr, 4
 2016              	capsense_ADC_curRxIOPtr:
 2017 0008 00000000 		.space	4
 2018              		.type	capsense_ADC_curTxIOPtr, %object
 2019              		.size	capsense_ADC_curTxIOPtr, 4
 2020              	capsense_ADC_curTxIOPtr:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 81


 2021 000c 00000000 		.space	4
 2022              		.type	capsense_ADC_eleCsxDisconnectFlag, %object
 2023              		.size	capsense_ADC_eleCsxDisconnectFlag, 2
 2024              	capsense_ADC_eleCsxDisconnectFlag:
 2025 0010 0000     		.space	2
 2026              		.text
 2027              	.Letext0:
 2028              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 2029              		.file 3 "Generated_Source\\PSoC4\\capsense_ADC_Configuration.h"
 2030              		.file 4 "Generated_Source\\PSoC4\\capsense_ADC_Structure.h"
 2031              		.file 5 "Generated_Source\\PSoC4\\capsense_ADC_Sensing.h"
 2032              		.file 6 "Generated_Source\\PSoC4\\CyLib.h"
 2033              		.section	.debug_info,"",%progbits
 2034              	.Ldebug_info0:
 2035 0000 A50F0000 		.4byte	0xfa5
 2036 0004 0400     		.2byte	0x4
 2037 0006 00000000 		.4byte	.Ldebug_abbrev0
 2038 000a 04       		.byte	0x4
 2039 000b 01       		.uleb128 0x1
 2040 000c 89020000 		.4byte	.LASF181
 2041 0010 0C       		.byte	0xc
 2042 0011 E8050000 		.4byte	.LASF182
 2043 0015 D9010000 		.4byte	.LASF183
 2044 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2045 001d 00000000 		.4byte	0
 2046 0021 00000000 		.4byte	.Ldebug_line0
 2047 0025 02       		.uleb128 0x2
 2048 0026 01       		.byte	0x1
 2049 0027 06       		.byte	0x6
 2050 0028 FA0B0000 		.4byte	.LASF0
 2051 002c 02       		.uleb128 0x2
 2052 002d 01       		.byte	0x1
 2053 002e 08       		.byte	0x8
 2054 002f FE0A0000 		.4byte	.LASF1
 2055 0033 02       		.uleb128 0x2
 2056 0034 02       		.byte	0x2
 2057 0035 05       		.byte	0x5
 2058 0036 83090000 		.4byte	.LASF2
 2059 003a 02       		.uleb128 0x2
 2060 003b 02       		.byte	0x2
 2061 003c 07       		.byte	0x7
 2062 003d 0B0C0000 		.4byte	.LASF3
 2063 0041 02       		.uleb128 0x2
 2064 0042 04       		.byte	0x4
 2065 0043 05       		.byte	0x5
 2066 0044 A2090000 		.4byte	.LASF4
 2067 0048 02       		.uleb128 0x2
 2068 0049 04       		.byte	0x4
 2069 004a 07       		.byte	0x7
 2070 004b 9F0A0000 		.4byte	.LASF5
 2071 004f 02       		.uleb128 0x2
 2072 0050 08       		.byte	0x8
 2073 0051 05       		.byte	0x5
 2074 0052 ED060000 		.4byte	.LASF6
 2075 0056 02       		.uleb128 0x2
 2076 0057 08       		.byte	0x8
 2077 0058 07       		.byte	0x7
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 82


 2078 0059 87030000 		.4byte	.LASF7
 2079 005d 03       		.uleb128 0x3
 2080 005e 04       		.byte	0x4
 2081 005f 05       		.byte	0x5
 2082 0060 696E7400 		.ascii	"int\000"
 2083 0064 02       		.uleb128 0x2
 2084 0065 04       		.byte	0x4
 2085 0066 07       		.byte	0x7
 2086 0067 78000000 		.4byte	.LASF8
 2087 006b 04       		.uleb128 0x4
 2088 006c 520C0000 		.4byte	.LASF9
 2089 0070 02       		.byte	0x2
 2090 0071 FC01     		.2byte	0x1fc
 2091 0073 2C000000 		.4byte	0x2c
 2092 0077 04       		.uleb128 0x4
 2093 0078 6D060000 		.4byte	.LASF10
 2094 007c 02       		.byte	0x2
 2095 007d FD01     		.2byte	0x1fd
 2096 007f 3A000000 		.4byte	0x3a
 2097 0083 04       		.uleb128 0x4
 2098 0084 40080000 		.4byte	.LASF11
 2099 0088 02       		.byte	0x2
 2100 0089 FE01     		.2byte	0x1fe
 2101 008b 48000000 		.4byte	0x48
 2102 008f 02       		.uleb128 0x2
 2103 0090 04       		.byte	0x4
 2104 0091 04       		.byte	0x4
 2105 0092 7D020000 		.4byte	.LASF12
 2106 0096 02       		.uleb128 0x2
 2107 0097 08       		.byte	0x8
 2108 0098 04       		.byte	0x4
 2109 0099 580C0000 		.4byte	.LASF13
 2110 009d 02       		.uleb128 0x2
 2111 009e 01       		.byte	0x1
 2112 009f 08       		.byte	0x8
 2113 00a0 2D060000 		.4byte	.LASF14
 2114 00a4 04       		.uleb128 0x4
 2115 00a5 F50A0000 		.4byte	.LASF15
 2116 00a9 02       		.byte	0x2
 2117 00aa 9E02     		.2byte	0x29e
 2118 00ac 48000000 		.4byte	0x48
 2119 00b0 05       		.uleb128 0x5
 2120 00b1 6B000000 		.4byte	0x6b
 2121 00b5 05       		.uleb128 0x5
 2122 00b6 77000000 		.4byte	0x77
 2123 00ba 04       		.uleb128 0x4
 2124 00bb EB080000 		.4byte	.LASF16
 2125 00bf 02       		.byte	0x2
 2126 00c0 A802     		.2byte	0x2a8
 2127 00c2 C6000000 		.4byte	0xc6
 2128 00c6 05       		.uleb128 0x5
 2129 00c7 83000000 		.4byte	0x83
 2130 00cb 06       		.uleb128 0x6
 2131 00cc 04       		.byte	0x4
 2132 00cd D1000000 		.4byte	0xd1
 2133 00d1 07       		.uleb128 0x7
 2134 00d2 02       		.uleb128 0x2
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 83


 2135 00d3 08       		.byte	0x8
 2136 00d4 04       		.byte	0x4
 2137 00d5 D4080000 		.4byte	.LASF17
 2138 00d9 02       		.uleb128 0x2
 2139 00da 04       		.byte	0x4
 2140 00db 07       		.byte	0x7
 2141 00dc 8E0A0000 		.4byte	.LASF18
 2142 00e0 08       		.uleb128 0x8
 2143 00e1 04       		.byte	0x4
 2144 00e2 04       		.uleb128 0x4
 2145 00e3 D8040000 		.4byte	.LASF19
 2146 00e7 03       		.byte	0x3
 2147 00e8 2A01     		.2byte	0x12a
 2148 00ea 77000000 		.4byte	0x77
 2149 00ee 04       		.uleb128 0x4
 2150 00ef 1B030000 		.4byte	.LASF20
 2151 00f3 03       		.byte	0x3
 2152 00f4 2E01     		.2byte	0x12e
 2153 00f6 6B000000 		.4byte	0x6b
 2154 00fa 09       		.uleb128 0x9
 2155 00fb 01       		.byte	0x1
 2156 00fc 2C000000 		.4byte	0x2c
 2157 0100 04       		.byte	0x4
 2158 0101 70       		.byte	0x70
 2159 0102 25010000 		.4byte	0x125
 2160 0106 0A       		.uleb128 0xa
 2161 0107 C3070000 		.4byte	.LASF21
 2162 010b 00       		.byte	0
 2163 010c 0A       		.uleb128 0xa
 2164 010d 45040000 		.4byte	.LASF22
 2165 0111 01       		.byte	0x1
 2166 0112 0A       		.uleb128 0xa
 2167 0113 9E030000 		.4byte	.LASF23
 2168 0117 02       		.byte	0x2
 2169 0118 0A       		.uleb128 0xa
 2170 0119 52030000 		.4byte	.LASF24
 2171 011d 03       		.byte	0x3
 2172 011e 0A       		.uleb128 0xa
 2173 011f 8D010000 		.4byte	.LASF25
 2174 0123 04       		.byte	0x4
 2175 0124 00       		.byte	0
 2176 0125 0B       		.uleb128 0xb
 2177 0126 0E       		.byte	0xe
 2178 0127 04       		.byte	0x4
 2179 0128 AD       		.byte	0xad
 2180 0129 A6010000 		.4byte	0x1a6
 2181 012d 0C       		.uleb128 0xc
 2182 012e 91060000 		.4byte	.LASF26
 2183 0132 04       		.byte	0x4
 2184 0133 B2       		.byte	0xb2
 2185 0134 77000000 		.4byte	0x77
 2186 0138 00       		.byte	0
 2187 0139 0C       		.uleb128 0xc
 2188 013a DA0A0000 		.4byte	.LASF27
 2189 013e 04       		.byte	0x4
 2190 013f B7       		.byte	0xb7
 2191 0140 E2000000 		.4byte	0xe2
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 84


 2192 0144 02       		.byte	0x2
 2193 0145 0C       		.uleb128 0xc
 2194 0146 25060000 		.4byte	.LASF28
 2195 014a 04       		.byte	0x4
 2196 014b BC       		.byte	0xbc
 2197 014c 6B000000 		.4byte	0x6b
 2198 0150 04       		.byte	0x4
 2199 0151 0C       		.uleb128 0xc
 2200 0152 FE070000 		.4byte	.LASF29
 2201 0156 04       		.byte	0x4
 2202 0157 C1       		.byte	0xc1
 2203 0158 6B000000 		.4byte	0x6b
 2204 015c 05       		.byte	0x5
 2205 015d 0C       		.uleb128 0xc
 2206 015e 47080000 		.4byte	.LASF30
 2207 0162 04       		.byte	0x4
 2208 0163 C7       		.byte	0xc7
 2209 0164 6B000000 		.4byte	0x6b
 2210 0168 06       		.byte	0x6
 2211 0169 0C       		.uleb128 0xc
 2212 016a 03070000 		.4byte	.LASF31
 2213 016e 04       		.byte	0x4
 2214 016f CD       		.byte	0xcd
 2215 0170 6B000000 		.4byte	0x6b
 2216 0174 07       		.byte	0x7
 2217 0175 0C       		.uleb128 0xc
 2218 0176 3A050000 		.4byte	.LASF32
 2219 017a 04       		.byte	0x4
 2220 017b D4       		.byte	0xd4
 2221 017c EE000000 		.4byte	0xee
 2222 0180 08       		.byte	0x8
 2223 0181 0C       		.uleb128 0xc
 2224 0182 36020000 		.4byte	.LASF33
 2225 0186 04       		.byte	0x4
 2226 0187 D9       		.byte	0xd9
 2227 0188 6B000000 		.4byte	0x6b
 2228 018c 09       		.byte	0x9
 2229 018d 0C       		.uleb128 0xc
 2230 018e C10B0000 		.4byte	.LASF34
 2231 0192 04       		.byte	0x4
 2232 0193 E1       		.byte	0xe1
 2233 0194 77000000 		.4byte	0x77
 2234 0198 0A       		.byte	0xa
 2235 0199 0C       		.uleb128 0xc
 2236 019a 76090000 		.4byte	.LASF35
 2237 019e 04       		.byte	0x4
 2238 019f E6       		.byte	0xe6
 2239 01a0 6B000000 		.4byte	0x6b
 2240 01a4 0C       		.byte	0xc
 2241 01a5 00       		.byte	0
 2242 01a6 0D       		.uleb128 0xd
 2243 01a7 BF000000 		.4byte	.LASF36
 2244 01ab 04       		.byte	0x4
 2245 01ac E7       		.byte	0xe7
 2246 01ad 25010000 		.4byte	0x125
 2247 01b1 0B       		.uleb128 0xb
 2248 01b2 0E       		.byte	0xe
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 85


 2249 01b3 04       		.byte	0x4
 2250 01b4 EC       		.byte	0xec
 2251 01b5 39020000 		.4byte	0x239
 2252 01b9 0C       		.uleb128 0xc
 2253 01ba 91060000 		.4byte	.LASF26
 2254 01be 04       		.byte	0x4
 2255 01bf F1       		.byte	0xf1
 2256 01c0 77000000 		.4byte	0x77
 2257 01c4 00       		.byte	0
 2258 01c5 0C       		.uleb128 0xc
 2259 01c6 DA0A0000 		.4byte	.LASF27
 2260 01ca 04       		.byte	0x4
 2261 01cb F6       		.byte	0xf6
 2262 01cc E2000000 		.4byte	0xe2
 2263 01d0 02       		.byte	0x2
 2264 01d1 0C       		.uleb128 0xc
 2265 01d2 25060000 		.4byte	.LASF28
 2266 01d6 04       		.byte	0x4
 2267 01d7 FB       		.byte	0xfb
 2268 01d8 6B000000 		.4byte	0x6b
 2269 01dc 04       		.byte	0x4
 2270 01dd 0E       		.uleb128 0xe
 2271 01de FE070000 		.4byte	.LASF29
 2272 01e2 04       		.byte	0x4
 2273 01e3 0001     		.2byte	0x100
 2274 01e5 6B000000 		.4byte	0x6b
 2275 01e9 05       		.byte	0x5
 2276 01ea 0E       		.uleb128 0xe
 2277 01eb 47080000 		.4byte	.LASF30
 2278 01ef 04       		.byte	0x4
 2279 01f0 0601     		.2byte	0x106
 2280 01f2 6B000000 		.4byte	0x6b
 2281 01f6 06       		.byte	0x6
 2282 01f7 0E       		.uleb128 0xe
 2283 01f8 03070000 		.4byte	.LASF31
 2284 01fc 04       		.byte	0x4
 2285 01fd 0C01     		.2byte	0x10c
 2286 01ff 6B000000 		.4byte	0x6b
 2287 0203 07       		.byte	0x7
 2288 0204 0E       		.uleb128 0xe
 2289 0205 3A050000 		.4byte	.LASF32
 2290 0209 04       		.byte	0x4
 2291 020a 1301     		.2byte	0x113
 2292 020c EE000000 		.4byte	0xee
 2293 0210 08       		.byte	0x8
 2294 0211 0E       		.uleb128 0xe
 2295 0212 36020000 		.4byte	.LASF33
 2296 0216 04       		.byte	0x4
 2297 0217 1801     		.2byte	0x118
 2298 0219 6B000000 		.4byte	0x6b
 2299 021d 09       		.byte	0x9
 2300 021e 0E       		.uleb128 0xe
 2301 021f C10B0000 		.4byte	.LASF34
 2302 0223 04       		.byte	0x4
 2303 0224 2001     		.2byte	0x120
 2304 0226 77000000 		.4byte	0x77
 2305 022a 0A       		.byte	0xa
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 86


 2306 022b 0E       		.uleb128 0xe
 2307 022c 76090000 		.4byte	.LASF35
 2308 0230 04       		.byte	0x4
 2309 0231 2501     		.2byte	0x125
 2310 0233 6B000000 		.4byte	0x6b
 2311 0237 0C       		.byte	0xc
 2312 0238 00       		.byte	0
 2313 0239 04       		.uleb128 0x4
 2314 023a DC070000 		.4byte	.LASF37
 2315 023e 04       		.byte	0x4
 2316 023f 2601     		.2byte	0x126
 2317 0241 B1010000 		.4byte	0x1b1
 2318 0245 0F       		.uleb128 0xf
 2319 0246 0E       		.byte	0xe
 2320 0247 04       		.byte	0x4
 2321 0248 2C01     		.2byte	0x12c
 2322 024a 5C020000 		.4byte	0x25c
 2323 024e 0E       		.uleb128 0xe
 2324 024f 99050000 		.4byte	.LASF38
 2325 0253 04       		.byte	0x4
 2326 0254 3101     		.2byte	0x131
 2327 0256 39020000 		.4byte	0x239
 2328 025a 00       		.byte	0
 2329 025b 00       		.byte	0
 2330 025c 04       		.uleb128 0x4
 2331 025d D8090000 		.4byte	.LASF39
 2332 0261 04       		.byte	0x4
 2333 0262 3201     		.2byte	0x132
 2334 0264 45020000 		.4byte	0x245
 2335 0268 0F       		.uleb128 0xf
 2336 0269 0A       		.byte	0xa
 2337 026a 04       		.byte	0x4
 2338 026b 3801     		.2byte	0x138
 2339 026d C0020000 		.4byte	0x2c0
 2340 0271 10       		.uleb128 0x10
 2341 0272 72617700 		.ascii	"raw\000"
 2342 0276 04       		.byte	0x4
 2343 0277 3D01     		.2byte	0x13d
 2344 0279 C0020000 		.4byte	0x2c0
 2345 027d 00       		.byte	0
 2346 027e 0E       		.uleb128 0xe
 2347 027f 060C0000 		.4byte	.LASF40
 2348 0283 04       		.byte	0x4
 2349 0284 4201     		.2byte	0x142
 2350 0286 C0020000 		.4byte	0x2c0
 2351 028a 02       		.byte	0x2
 2352 028b 0E       		.uleb128 0xe
 2353 028c ED0A0000 		.4byte	.LASF41
 2354 0290 04       		.byte	0x4
 2355 0291 4801     		.2byte	0x148
 2356 0293 D0020000 		.4byte	0x2d0
 2357 0297 04       		.byte	0x4
 2358 0298 0E       		.uleb128 0xe
 2359 0299 D3090000 		.4byte	.LASF42
 2360 029d 04       		.byte	0x4
 2361 029e 4D01     		.2byte	0x14d
 2362 02a0 E2000000 		.4byte	0xe2
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 87


 2363 02a4 06       		.byte	0x6
 2364 02a5 0E       		.uleb128 0xe
 2365 02a6 7E0C0000 		.4byte	.LASF43
 2366 02aa 04       		.byte	0x4
 2367 02ab 5201     		.2byte	0x152
 2368 02ad E0020000 		.4byte	0x2e0
 2369 02b1 08       		.byte	0x8
 2370 02b2 0E       		.uleb128 0xe
 2371 02b3 D3060000 		.4byte	.LASF44
 2372 02b7 04       		.byte	0x4
 2373 02b8 5701     		.2byte	0x157
 2374 02ba D0020000 		.4byte	0x2d0
 2375 02be 09       		.byte	0x9
 2376 02bf 00       		.byte	0
 2377 02c0 11       		.uleb128 0x11
 2378 02c1 77000000 		.4byte	0x77
 2379 02c5 D0020000 		.4byte	0x2d0
 2380 02c9 12       		.uleb128 0x12
 2381 02ca D9000000 		.4byte	0xd9
 2382 02ce 00       		.byte	0
 2383 02cf 00       		.byte	0
 2384 02d0 11       		.uleb128 0x11
 2385 02d1 6B000000 		.4byte	0x6b
 2386 02d5 E0020000 		.4byte	0x2e0
 2387 02d9 12       		.uleb128 0x12
 2388 02da D9000000 		.4byte	0xd9
 2389 02de 00       		.byte	0
 2390 02df 00       		.byte	0
 2391 02e0 11       		.uleb128 0x11
 2392 02e1 EE000000 		.4byte	0xee
 2393 02e5 F0020000 		.4byte	0x2f0
 2394 02e9 12       		.uleb128 0x12
 2395 02ea D9000000 		.4byte	0xd9
 2396 02ee 00       		.byte	0
 2397 02ef 00       		.byte	0
 2398 02f0 04       		.uleb128 0x4
 2399 02f1 BE0A0000 		.4byte	.LASF45
 2400 02f5 04       		.byte	0x4
 2401 02f6 5801     		.2byte	0x158
 2402 02f8 68020000 		.4byte	0x268
 2403 02fc 0F       		.uleb128 0xf
 2404 02fd 0A       		.byte	0xa
 2405 02fe 04       		.byte	0x4
 2406 02ff 5E01     		.2byte	0x15e
 2407 0301 13030000 		.4byte	0x313
 2408 0305 0E       		.uleb128 0xe
 2409 0306 99050000 		.4byte	.LASF38
 2410 030a 04       		.byte	0x4
 2411 030b 6301     		.2byte	0x163
 2412 030d 13030000 		.4byte	0x313
 2413 0311 00       		.byte	0
 2414 0312 00       		.byte	0
 2415 0313 11       		.uleb128 0x11
 2416 0314 F0020000 		.4byte	0x2f0
 2417 0318 23030000 		.4byte	0x323
 2418 031c 12       		.uleb128 0x12
 2419 031d D9000000 		.4byte	0xd9
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 88


 2420 0321 00       		.byte	0
 2421 0322 00       		.byte	0
 2422 0323 04       		.uleb128 0x4
 2423 0324 19050000 		.4byte	.LASF46
 2424 0328 04       		.byte	0x4
 2425 0329 6401     		.2byte	0x164
 2426 032b FC020000 		.4byte	0x2fc
 2427 032f 0F       		.uleb128 0xf
 2428 0330 48       		.byte	0x48
 2429 0331 04       		.byte	0x4
 2430 0332 6A01     		.2byte	0x16a
 2431 0334 8B040000 		.4byte	0x48b
 2432 0338 0E       		.uleb128 0xe
 2433 0339 04090000 		.4byte	.LASF47
 2434 033d 04       		.byte	0x4
 2435 033e 7101     		.2byte	0x171
 2436 0340 77000000 		.4byte	0x77
 2437 0344 00       		.byte	0
 2438 0345 0E       		.uleb128 0xe
 2439 0346 A60C0000 		.4byte	.LASF48
 2440 034a 04       		.byte	0x4
 2441 034b 7601     		.2byte	0x176
 2442 034d 77000000 		.4byte	0x77
 2443 0351 02       		.byte	0x2
 2444 0352 0E       		.uleb128 0xe
 2445 0353 9E000000 		.4byte	.LASF49
 2446 0357 04       		.byte	0x4
 2447 0358 7B01     		.2byte	0x17b
 2448 035a 77000000 		.4byte	0x77
 2449 035e 04       		.byte	0x4
 2450 035f 0E       		.uleb128 0xe
 2451 0360 1A0A0000 		.4byte	.LASF50
 2452 0364 04       		.byte	0x4
 2453 0365 8101     		.2byte	0x181
 2454 0367 77000000 		.4byte	0x77
 2455 036b 06       		.byte	0x6
 2456 036c 0E       		.uleb128 0xe
 2457 036d 92000000 		.4byte	.LASF51
 2458 0371 04       		.byte	0x4
 2459 0372 8601     		.2byte	0x186
 2460 0374 77000000 		.4byte	0x77
 2461 0378 08       		.byte	0x8
 2462 0379 0E       		.uleb128 0xe
 2463 037a 9C060000 		.4byte	.LASF52
 2464 037e 04       		.byte	0x4
 2465 037f 8B01     		.2byte	0x18b
 2466 0381 C6000000 		.4byte	0xc6
 2467 0385 0C       		.byte	0xc
 2468 0386 0E       		.uleb128 0xe
 2469 0387 C8090000 		.4byte	.LASF53
 2470 038b 04       		.byte	0x4
 2471 038c 9101     		.2byte	0x191
 2472 038e 8B040000 		.4byte	0x48b
 2473 0392 10       		.byte	0x10
 2474 0393 0E       		.uleb128 0xe
 2475 0394 830A0000 		.4byte	.LASF54
 2476 0398 04       		.byte	0x4
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 89


 2477 0399 9801     		.2byte	0x198
 2478 039b 8B040000 		.4byte	0x48b
 2479 039f 14       		.byte	0x14
 2480 03a0 0E       		.uleb128 0xe
 2481 03a1 52090000 		.4byte	.LASF55
 2482 03a5 04       		.byte	0x4
 2483 03a6 A801     		.2byte	0x1a8
 2484 03a8 D0020000 		.4byte	0x2d0
 2485 03ac 18       		.byte	0x18
 2486 03ad 0E       		.uleb128 0xe
 2487 03ae E30A0000 		.4byte	.LASF56
 2488 03b2 04       		.byte	0x4
 2489 03b3 AE01     		.2byte	0x1ae
 2490 03b5 C0020000 		.4byte	0x2c0
 2491 03b9 1A       		.byte	0x1a
 2492 03ba 0E       		.uleb128 0xe
 2493 03bb 150D0000 		.4byte	.LASF57
 2494 03bf 04       		.byte	0x4
 2495 03c0 B401     		.2byte	0x1b4
 2496 03c2 C0020000 		.4byte	0x2c0
 2497 03c6 1C       		.byte	0x1c
 2498 03c7 0E       		.uleb128 0xe
 2499 03c8 300C0000 		.4byte	.LASF58
 2500 03cc 04       		.byte	0x4
 2501 03cd B901     		.2byte	0x1b9
 2502 03cf B0000000 		.4byte	0xb0
 2503 03d3 1E       		.byte	0x1e
 2504 03d4 0E       		.uleb128 0xe
 2505 03d5 B90B0000 		.4byte	.LASF59
 2506 03d9 04       		.byte	0x4
 2507 03da BE01     		.2byte	0x1be
 2508 03dc 6B000000 		.4byte	0x6b
 2509 03e0 1F       		.byte	0x1f
 2510 03e1 0E       		.uleb128 0xe
 2511 03e2 7B030000 		.4byte	.LASF60
 2512 03e6 04       		.byte	0x4
 2513 03e7 C301     		.2byte	0x1c3
 2514 03e9 6B000000 		.4byte	0x6b
 2515 03ed 20       		.byte	0x20
 2516 03ee 0E       		.uleb128 0xe
 2517 03ef 07080000 		.4byte	.LASF61
 2518 03f3 04       		.byte	0x4
 2519 03f4 C901     		.2byte	0x1c9
 2520 03f6 77000000 		.4byte	0x77
 2521 03fa 22       		.byte	0x22
 2522 03fb 0E       		.uleb128 0xe
 2523 03fc 6C0B0000 		.4byte	.LASF62
 2524 0400 04       		.byte	0x4
 2525 0401 CE01     		.2byte	0x1ce
 2526 0403 6B000000 		.4byte	0x6b
 2527 0407 24       		.byte	0x24
 2528 0408 0E       		.uleb128 0xe
 2529 0409 3A0C0000 		.4byte	.LASF63
 2530 040d 04       		.byte	0x4
 2531 040e D301     		.2byte	0x1d3
 2532 0410 6B000000 		.4byte	0x6b
 2533 0414 25       		.byte	0x25
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 90


 2534 0415 0E       		.uleb128 0xe
 2535 0416 52080000 		.4byte	.LASF64
 2536 041a 04       		.byte	0x4
 2537 041b D801     		.2byte	0x1d8
 2538 041d 6B000000 		.4byte	0x6b
 2539 0421 26       		.byte	0x26
 2540 0422 0E       		.uleb128 0xe
 2541 0423 5E070000 		.4byte	.LASF65
 2542 0427 04       		.byte	0x4
 2543 0428 DD01     		.2byte	0x1dd
 2544 042a 5C020000 		.4byte	0x25c
 2545 042e 28       		.byte	0x28
 2546 042f 0E       		.uleb128 0xe
 2547 0430 73030000 		.4byte	.LASF66
 2548 0434 04       		.byte	0x4
 2549 0435 E201     		.2byte	0x1e2
 2550 0437 23030000 		.4byte	0x323
 2551 043b 36       		.byte	0x36
 2552 043c 0E       		.uleb128 0xe
 2553 043d 1D000000 		.4byte	.LASF67
 2554 0441 04       		.byte	0x4
 2555 0442 E701     		.2byte	0x1e7
 2556 0444 6B000000 		.4byte	0x6b
 2557 0448 40       		.byte	0x40
 2558 0449 0E       		.uleb128 0xe
 2559 044a BE030000 		.4byte	.LASF68
 2560 044e 04       		.byte	0x4
 2561 044f EC01     		.2byte	0x1ec
 2562 0451 6B000000 		.4byte	0x6b
 2563 0455 41       		.byte	0x41
 2564 0456 0E       		.uleb128 0xe
 2565 0457 F1080000 		.4byte	.LASF69
 2566 045b 04       		.byte	0x4
 2567 045c F101     		.2byte	0x1f1
 2568 045e 77000000 		.4byte	0x77
 2569 0462 42       		.byte	0x42
 2570 0463 0E       		.uleb128 0xe
 2571 0464 B3070000 		.4byte	.LASF70
 2572 0468 04       		.byte	0x4
 2573 0469 F601     		.2byte	0x1f6
 2574 046b C0020000 		.4byte	0x2c0
 2575 046f 44       		.byte	0x44
 2576 0470 0E       		.uleb128 0xe
 2577 0471 E0080000 		.4byte	.LASF71
 2578 0475 04       		.byte	0x4
 2579 0476 FB01     		.2byte	0x1fb
 2580 0478 6B000000 		.4byte	0x6b
 2581 047c 46       		.byte	0x46
 2582 047d 0E       		.uleb128 0xe
 2583 047e 760B0000 		.4byte	.LASF72
 2584 0482 04       		.byte	0x4
 2585 0483 0002     		.2byte	0x200
 2586 0485 6B000000 		.4byte	0x6b
 2587 0489 47       		.byte	0x47
 2588 048a 00       		.byte	0
 2589 048b 11       		.uleb128 0x11
 2590 048c 83000000 		.4byte	0x83
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 91


 2591 0490 9B040000 		.4byte	0x49b
 2592 0494 12       		.uleb128 0x12
 2593 0495 D9000000 		.4byte	0xd9
 2594 0499 00       		.byte	0
 2595 049a 00       		.byte	0
 2596 049b 04       		.uleb128 0x4
 2597 049c 75010000 		.4byte	.LASF73
 2598 04a0 04       		.byte	0x4
 2599 04a1 0102     		.2byte	0x201
 2600 04a3 2F030000 		.4byte	0x32f
 2601 04a7 0F       		.uleb128 0xf
 2602 04a8 1C       		.byte	0x1c
 2603 04a9 04       		.byte	0x4
 2604 04aa 0702     		.2byte	0x207
 2605 04ac 26050000 		.4byte	0x526
 2606 04b0 0E       		.uleb128 0xe
 2607 04b1 37080000 		.4byte	.LASF74
 2608 04b5 04       		.byte	0x4
 2609 04b6 0C02     		.2byte	0x20c
 2610 04b8 26050000 		.4byte	0x526
 2611 04bc 00       		.byte	0
 2612 04bd 0E       		.uleb128 0xe
 2613 04be DC060000 		.4byte	.LASF75
 2614 04c2 04       		.byte	0x4
 2615 04c3 1102     		.2byte	0x211
 2616 04c5 26050000 		.4byte	0x526
 2617 04c9 04       		.byte	0x4
 2618 04ca 0E       		.uleb128 0xe
 2619 04cb 6C040000 		.4byte	.LASF76
 2620 04cf 04       		.byte	0x4
 2621 04d0 1602     		.2byte	0x216
 2622 04d2 26050000 		.4byte	0x526
 2623 04d6 08       		.byte	0x8
 2624 04d7 0E       		.uleb128 0xe
 2625 04d8 280A0000 		.4byte	.LASF77
 2626 04dc 04       		.byte	0x4
 2627 04dd 1B02     		.2byte	0x21b
 2628 04df 26050000 		.4byte	0x526
 2629 04e3 0C       		.byte	0xc
 2630 04e4 0E       		.uleb128 0xe
 2631 04e5 990B0000 		.4byte	.LASF78
 2632 04e9 04       		.byte	0x4
 2633 04ea 2002     		.2byte	0x220
 2634 04ec 83000000 		.4byte	0x83
 2635 04f0 10       		.byte	0x10
 2636 04f1 0E       		.uleb128 0xe
 2637 04f2 76080000 		.4byte	.LASF79
 2638 04f6 04       		.byte	0x4
 2639 04f7 2502     		.2byte	0x225
 2640 04f9 83000000 		.4byte	0x83
 2641 04fd 14       		.byte	0x14
 2642 04fe 0E       		.uleb128 0xe
 2643 04ff 62060000 		.4byte	.LASF80
 2644 0503 04       		.byte	0x4
 2645 0504 2A02     		.2byte	0x22a
 2646 0506 6B000000 		.4byte	0x6b
 2647 050a 18       		.byte	0x18
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 92


 2648 050b 0E       		.uleb128 0xe
 2649 050c 970A0000 		.4byte	.LASF81
 2650 0510 04       		.byte	0x4
 2651 0511 2F02     		.2byte	0x22f
 2652 0513 6B000000 		.4byte	0x6b
 2653 0517 19       		.byte	0x19
 2654 0518 0E       		.uleb128 0xe
 2655 0519 83020000 		.4byte	.LASF82
 2656 051d 04       		.byte	0x4
 2657 051e 3402     		.2byte	0x234
 2658 0520 6B000000 		.4byte	0x6b
 2659 0524 1A       		.byte	0x1a
 2660 0525 00       		.byte	0
 2661 0526 06       		.uleb128 0x6
 2662 0527 04       		.byte	0x4
 2663 0528 BA000000 		.4byte	0xba
 2664 052c 04       		.uleb128 0x4
 2665 052d 15040000 		.4byte	.LASF83
 2666 0531 04       		.byte	0x4
 2667 0532 3502     		.2byte	0x235
 2668 0534 A7040000 		.4byte	0x4a7
 2669 0538 0F       		.uleb128 0xf
 2670 0539 20       		.byte	0x20
 2671 053a 04       		.byte	0x4
 2672 053b 6802     		.2byte	0x268
 2673 053d C4050000 		.4byte	0x5c4
 2674 0541 0E       		.uleb128 0xe
 2675 0542 85070000 		.4byte	.LASF84
 2676 0546 04       		.byte	0x4
 2677 0547 7102     		.2byte	0x271
 2678 0549 C4050000 		.4byte	0x5c4
 2679 054d 00       		.byte	0
 2680 054e 0E       		.uleb128 0xe
 2681 054f 850B0000 		.4byte	.LASF85
 2682 0553 04       		.byte	0x4
 2683 0554 7802     		.2byte	0x278
 2684 0556 E0000000 		.4byte	0xe0
 2685 055a 04       		.byte	0x4
 2686 055b 0E       		.uleb128 0xe
 2687 055c 25090000 		.4byte	.LASF86
 2688 0560 04       		.byte	0x4
 2689 0561 7E02     		.2byte	0x27e
 2690 0563 CB050000 		.4byte	0x5cb
 2691 0567 08       		.byte	0x8
 2692 0568 0E       		.uleb128 0xe
 2693 0569 5C080000 		.4byte	.LASF87
 2694 056d 04       		.byte	0x4
 2695 056e 8402     		.2byte	0x284
 2696 0570 E0000000 		.4byte	0xe0
 2697 0574 0C       		.byte	0xc
 2698 0575 0E       		.uleb128 0xe
 2699 0576 81060000 		.4byte	.LASF88
 2700 057a 04       		.byte	0x4
 2701 057b 8B02     		.2byte	0x28b
 2702 057d D1050000 		.4byte	0x5d1
 2703 0581 10       		.byte	0x10
 2704 0582 0E       		.uleb128 0xe
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 93


 2705 0583 5F0B0000 		.4byte	.LASF89
 2706 0587 04       		.byte	0x4
 2707 0588 9002     		.2byte	0x290
 2708 058a 83000000 		.4byte	0x83
 2709 058e 14       		.byte	0x14
 2710 058f 0E       		.uleb128 0xe
 2711 0590 9E050000 		.4byte	.LASF90
 2712 0594 04       		.byte	0x4
 2713 0595 9702     		.2byte	0x297
 2714 0597 77000000 		.4byte	0x77
 2715 059b 18       		.byte	0x18
 2716 059c 0E       		.uleb128 0xe
 2717 059d EF030000 		.4byte	.LASF91
 2718 05a1 04       		.byte	0x4
 2719 05a2 9E02     		.2byte	0x29e
 2720 05a4 6B000000 		.4byte	0x6b
 2721 05a8 1A       		.byte	0x1a
 2722 05a9 0E       		.uleb128 0xe
 2723 05aa FB060000 		.4byte	.LASF92
 2724 05ae 04       		.byte	0x4
 2725 05af A802     		.2byte	0x2a8
 2726 05b1 6B000000 		.4byte	0x6b
 2727 05b5 1B       		.byte	0x1b
 2728 05b6 0E       		.uleb128 0xe
 2729 05b7 910B0000 		.4byte	.LASF93
 2730 05bb 04       		.byte	0x4
 2731 05bc B002     		.2byte	0x2b0
 2732 05be 6B000000 		.4byte	0x6b
 2733 05c2 1C       		.byte	0x1c
 2734 05c3 00       		.byte	0
 2735 05c4 06       		.uleb128 0x6
 2736 05c5 04       		.byte	0x4
 2737 05c6 CA050000 		.4byte	0x5ca
 2738 05ca 13       		.uleb128 0x13
 2739 05cb 06       		.uleb128 0x6
 2740 05cc 04       		.byte	0x4
 2741 05cd F0020000 		.4byte	0x2f0
 2742 05d1 06       		.uleb128 0x6
 2743 05d2 04       		.byte	0x4
 2744 05d3 6B000000 		.4byte	0x6b
 2745 05d7 04       		.uleb128 0x4
 2746 05d8 F8030000 		.4byte	.LASF94
 2747 05dc 04       		.byte	0x4
 2748 05dd B102     		.2byte	0x2b1
 2749 05df 38050000 		.4byte	0x538
 2750 05e3 0F       		.uleb128 0xf
 2751 05e4 20       		.byte	0x20
 2752 05e5 04       		.byte	0x4
 2753 05e6 B702     		.2byte	0x2b7
 2754 05e8 FA050000 		.4byte	0x5fa
 2755 05ec 0E       		.uleb128 0xe
 2756 05ed 1D0D0000 		.4byte	.LASF95
 2757 05f1 04       		.byte	0x4
 2758 05f2 BC02     		.2byte	0x2bc
 2759 05f4 FA050000 		.4byte	0x5fa
 2760 05f8 00       		.byte	0
 2761 05f9 00       		.byte	0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 94


 2762 05fa 11       		.uleb128 0x11
 2763 05fb D7050000 		.4byte	0x5d7
 2764 05ff 0A060000 		.4byte	0x60a
 2765 0603 12       		.uleb128 0x12
 2766 0604 D9000000 		.4byte	0xd9
 2767 0608 00       		.byte	0
 2768 0609 00       		.byte	0
 2769 060a 04       		.uleb128 0x4
 2770 060b 8C0C0000 		.4byte	.LASF96
 2771 060f 04       		.byte	0x4
 2772 0610 BD02     		.2byte	0x2bd
 2773 0612 E3050000 		.4byte	0x5e3
 2774 0616 0B       		.uleb128 0xb
 2775 0617 08       		.byte	0x8
 2776 0618 05       		.byte	0x5
 2777 0619 CF       		.byte	0xcf
 2778 061a 37060000 		.4byte	0x637
 2779 061e 0C       		.uleb128 0xc
 2780 061f 380A0000 		.4byte	.LASF97
 2781 0623 05       		.byte	0x5
 2782 0624 D4       		.byte	0xd4
 2783 0625 83000000 		.4byte	0x83
 2784 0629 00       		.byte	0
 2785 062a 0C       		.uleb128 0xc
 2786 062b 6C080000 		.4byte	.LASF98
 2787 062f 05       		.byte	0x5
 2788 0630 D9       		.byte	0xd9
 2789 0631 83000000 		.4byte	0x83
 2790 0635 04       		.byte	0x4
 2791 0636 00       		.byte	0
 2792 0637 0D       		.uleb128 0xd
 2793 0638 AF0C0000 		.4byte	.LASF99
 2794 063c 05       		.byte	0x5
 2795 063d DA       		.byte	0xda
 2796 063e 16060000 		.4byte	0x616
 2797 0642 14       		.uleb128 0x14
 2798 0643 C7050000 		.4byte	.LASF184
 2799 0647 01       		.byte	0x1
 2800 0648 7F05     		.2byte	0x57f
 2801 064a 00000000 		.4byte	.LFB8
 2802 064e 38000000 		.4byte	.LFE8-.LFB8
 2803 0652 01       		.uleb128 0x1
 2804 0653 9C       		.byte	0x9c
 2805 0654 15       		.uleb128 0x15
 2806 0655 92070000 		.4byte	.LASF111
 2807 0659 01       		.byte	0x1
 2808 065a 8506     		.2byte	0x685
 2809 065c A4000000 		.4byte	0xa4
 2810 0660 00000000 		.4byte	.LFB10
 2811 0664 8C000000 		.4byte	.LFE10-.LFB10
 2812 0668 01       		.uleb128 0x1
 2813 0669 9C       		.byte	0x9c
 2814 066a 1F070000 		.4byte	0x71f
 2815 066e 16       		.uleb128 0x16
 2816 066f D30C0000 		.4byte	.LASF100
 2817 0673 01       		.byte	0x1
 2818 0674 8506     		.2byte	0x685
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 95


 2819 0676 83000000 		.4byte	0x83
 2820 067a 00000000 		.4byte	.LLST0
 2821 067e 16       		.uleb128 0x16
 2822 067f E2060000 		.4byte	.LASF101
 2823 0683 01       		.byte	0x1
 2824 0684 8506     		.2byte	0x685
 2825 0686 83000000 		.4byte	0x83
 2826 068a 42000000 		.4byte	.LLST1
 2827 068e 16       		.uleb128 0x16
 2828 068f 65040000 		.4byte	.LASF102
 2829 0693 01       		.byte	0x1
 2830 0694 8506     		.2byte	0x685
 2831 0696 83000000 		.4byte	0x83
 2832 069a 6E000000 		.4byte	.LLST2
 2833 069e 17       		.uleb128 0x17
 2834 069f 32040000 		.4byte	.LASF103
 2835 06a3 01       		.byte	0x1
 2836 06a4 8706     		.2byte	0x687
 2837 06a6 83000000 		.4byte	0x83
 2838 06aa 9C000000 		.4byte	.LLST3
 2839 06ae 17       		.uleb128 0x17
 2840 06af 96080000 		.4byte	.LASF104
 2841 06b3 01       		.byte	0x1
 2842 06b4 8806     		.2byte	0x688
 2843 06b6 83000000 		.4byte	0x83
 2844 06ba BA000000 		.4byte	.LLST4
 2845 06be 17       		.uleb128 0x17
 2846 06bf 12080000 		.4byte	.LASF105
 2847 06c3 01       		.byte	0x1
 2848 06c4 8906     		.2byte	0x689
 2849 06c6 83000000 		.4byte	0x83
 2850 06ca D9000000 		.4byte	.LLST5
 2851 06ce 17       		.uleb128 0x17
 2852 06cf 0E070000 		.4byte	.LASF106
 2853 06d3 01       		.byte	0x1
 2854 06d4 8A06     		.2byte	0x68a
 2855 06d6 83000000 		.4byte	0x83
 2856 06da 02010000 		.4byte	.LLST6
 2857 06de 17       		.uleb128 0x17
 2858 06df 7B080000 		.4byte	.LASF107
 2859 06e3 01       		.byte	0x1
 2860 06e4 8B06     		.2byte	0x68b
 2861 06e6 83000000 		.4byte	0x83
 2862 06ea 36010000 		.4byte	.LLST7
 2863 06ee 17       		.uleb128 0x17
 2864 06ef 4E070000 		.4byte	.LASF108
 2865 06f3 01       		.byte	0x1
 2866 06f4 8C06     		.2byte	0x68c
 2867 06f6 A4000000 		.4byte	0xa4
 2868 06fa 82010000 		.4byte	.LLST8
 2869 06fe 17       		.uleb128 0x17
 2870 06ff 1D010000 		.4byte	.LASF109
 2871 0703 01       		.byte	0x1
 2872 0704 8E06     		.2byte	0x68e
 2873 0706 1F070000 		.4byte	0x71f
 2874 070a AE010000 		.4byte	.LLST9
 2875 070e 17       		.uleb128 0x17
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 96


 2876 070f 74060000 		.4byte	.LASF110
 2877 0713 01       		.byte	0x1
 2878 0714 8F06     		.2byte	0x68f
 2879 0716 CB050000 		.4byte	0x5cb
 2880 071a C1010000 		.4byte	.LLST10
 2881 071e 00       		.byte	0
 2882 071f 06       		.uleb128 0x6
 2883 0720 04       		.byte	0x4
 2884 0721 25070000 		.4byte	0x725
 2885 0725 18       		.uleb128 0x18
 2886 0726 D7050000 		.4byte	0x5d7
 2887 072a 19       		.uleb128 0x19
 2888 072b 620A0000 		.4byte	.LASF112
 2889 072f 01       		.byte	0x1
 2890 0730 EC07     		.2byte	0x7ec
 2891 0732 77000000 		.4byte	0x77
 2892 0736 00000000 		.4byte	.LFB17
 2893 073a 0C000000 		.4byte	.LFE17-.LFB17
 2894 073e 01       		.uleb128 0x1
 2895 073f 9C       		.byte	0x9c
 2896 0740 65070000 		.4byte	0x765
 2897 0744 16       		.uleb128 0x16
 2898 0745 0C0B0000 		.4byte	.LASF113
 2899 0749 01       		.byte	0x1
 2900 074a EC07     		.2byte	0x7ec
 2901 074c 65070000 		.4byte	0x765
 2902 0750 D4010000 		.4byte	.LLST11
 2903 0754 17       		.uleb128 0x17
 2904 0755 230A0000 		.4byte	.LASF114
 2905 0759 01       		.byte	0x1
 2906 075a EE07     		.2byte	0x7ee
 2907 075c 83000000 		.4byte	0x83
 2908 0760 F5010000 		.4byte	.LLST12
 2909 0764 00       		.byte	0
 2910 0765 06       		.uleb128 0x6
 2911 0766 04       		.byte	0x4
 2912 0767 6B070000 		.4byte	0x76b
 2913 076b 18       		.uleb128 0x18
 2914 076c A6010000 		.4byte	0x1a6
 2915 0770 1A       		.uleb128 0x1a
 2916 0771 F40C0000 		.4byte	.LASF185
 2917 0775 01       		.byte	0x1
 2918 0776 9408     		.2byte	0x894
 2919 0778 03       		.byte	0x3
 2920 0779 A2070000 		.4byte	0x7a2
 2921 077d 1B       		.uleb128 0x1b
 2922 077e A3060000 		.4byte	.LASF115
 2923 0782 01       		.byte	0x1
 2924 0783 9608     		.2byte	0x896
 2925 0785 83000000 		.4byte	0x83
 2926 0789 1B       		.uleb128 0x1b
 2927 078a 3A030000 		.4byte	.LASF116
 2928 078e 01       		.byte	0x1
 2929 078f 9708     		.2byte	0x897
 2930 0791 83000000 		.4byte	0x83
 2931 0795 1B       		.uleb128 0x1b
 2932 0796 86080000 		.4byte	.LASF117
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 97


 2933 079a 01       		.byte	0x1
 2934 079b 9908     		.2byte	0x899
 2935 079d 83000000 		.4byte	0x83
 2936 07a1 00       		.byte	0
 2937 07a2 1C       		.uleb128 0x1c
 2938 07a3 44020000 		.4byte	.LASF136
 2939 07a7 01       		.byte	0x1
 2940 07a8 BD06     		.2byte	0x6bd
 2941 07aa 00000000 		.4byte	.LFB11
 2942 07ae 54010000 		.4byte	.LFE11-.LFB11
 2943 07b2 01       		.uleb128 0x1
 2944 07b3 9C       		.byte	0x9c
 2945 07b4 0F080000 		.4byte	0x80f
 2946 07b8 17       		.uleb128 0x17
 2947 07b9 AF0B0000 		.4byte	.LASF118
 2948 07bd 01       		.byte	0x1
 2949 07be BF06     		.2byte	0x6bf
 2950 07c0 83000000 		.4byte	0x83
 2951 07c4 19020000 		.4byte	.LLST13
 2952 07c8 17       		.uleb128 0x17
 2953 07c9 36020000 		.4byte	.LASF33
 2954 07cd 01       		.byte	0x1
 2955 07ce C006     		.2byte	0x6c0
 2956 07d0 83000000 		.4byte	0x83
 2957 07d4 4B020000 		.4byte	.LLST14
 2958 07d8 1D       		.uleb128 0x1d
 2959 07d9 70070000 		.4byte	0x770
 2960 07dd 30000000 		.4byte	.LBB4
 2961 07e1 B4000000 		.4byte	.LBE4-.LBB4
 2962 07e5 01       		.byte	0x1
 2963 07e6 D606     		.2byte	0x6d6
 2964 07e8 1E       		.uleb128 0x1e
 2965 07e9 30000000 		.4byte	.LBB5
 2966 07ed B4000000 		.4byte	.LBE5-.LBB5
 2967 07f1 1F       		.uleb128 0x1f
 2968 07f2 7D070000 		.4byte	0x77d
 2969 07f6 5E020000 		.4byte	.LLST15
 2970 07fa 1F       		.uleb128 0x1f
 2971 07fb 89070000 		.4byte	0x789
 2972 07ff 71020000 		.4byte	.LLST16
 2973 0803 1F       		.uleb128 0x1f
 2974 0804 95070000 		.4byte	0x795
 2975 0808 91020000 		.4byte	.LLST17
 2976 080c 00       		.byte	0
 2977 080d 00       		.byte	0
 2978 080e 00       		.byte	0
 2979 080f 20       		.uleb128 0x20
 2980 0810 0D090000 		.4byte	.LASF119
 2981 0814 01       		.byte	0x1
 2982 0815 4D08     		.2byte	0x84d
 2983 0817 00000000 		.4byte	.LFB18
 2984 081b 90000000 		.4byte	.LFE18-.LFB18
 2985 081f 01       		.uleb128 0x1
 2986 0820 9C       		.byte	0x9c
 2987 0821 48080000 		.4byte	0x848
 2988 0825 21       		.uleb128 0x21
 2989 0826 08000000 		.4byte	.LVL54
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 98


 2990 082a 0E0F0000 		.4byte	0xf0e
 2991 082e 38080000 		.4byte	0x838
 2992 0832 22       		.uleb128 0x22
 2993 0833 01       		.uleb128 0x1
 2994 0834 50       		.byte	0x50
 2995 0835 01       		.uleb128 0x1
 2996 0836 3A       		.byte	0x3a
 2997 0837 00       		.byte	0
 2998 0838 23       		.uleb128 0x23
 2999 0839 62000000 		.4byte	.LVL56
 3000 083d 190F0000 		.4byte	0xf19
 3001 0841 22       		.uleb128 0x22
 3002 0842 01       		.uleb128 0x1
 3003 0843 50       		.byte	0x50
 3004 0844 01       		.uleb128 0x1
 3005 0845 3A       		.byte	0x3a
 3006 0846 00       		.byte	0
 3007 0847 00       		.byte	0
 3008 0848 24       		.uleb128 0x24
 3009 0849 BD040000 		.4byte	.LASF120
 3010 084d 01       		.byte	0x1
 3011 084e 9C       		.byte	0x9c
 3012 084f 00000000 		.4byte	.LFB1
 3013 0853 F8010000 		.4byte	.LFE1-.LFB1
 3014 0857 01       		.uleb128 0x1
 3015 0858 9C       		.byte	0x9c
 3016 0859 20090000 		.4byte	0x920
 3017 085d 25       		.uleb128 0x25
 3018 085e EE000000 		.4byte	.LASF121
 3019 0862 01       		.byte	0x1
 3020 0863 9F       		.byte	0x9f
 3021 0864 6B000000 		.4byte	0x6b
 3022 0868 A4020000 		.4byte	.LLST18
 3023 086c 25       		.uleb128 0x25
 3024 086d AF0B0000 		.4byte	.LASF118
 3025 0871 01       		.byte	0x1
 3026 0872 A0       		.byte	0xa0
 3027 0873 83000000 		.4byte	0x83
 3028 0877 EE020000 		.4byte	.LLST19
 3029 087b 26       		.uleb128 0x26
 3030 087c 14000000 		.4byte	.LVL57
 3031 0880 240F0000 		.4byte	0xf24
 3032 0884 26       		.uleb128 0x26
 3033 0885 78000000 		.4byte	.LVL58
 3034 0889 2F0F0000 		.4byte	0xf2f
 3035 088d 26       		.uleb128 0x26
 3036 088e 8C000000 		.4byte	.LVL62
 3037 0892 3A0F0000 		.4byte	0xf3a
 3038 0896 26       		.uleb128 0x26
 3039 0897 9E000000 		.4byte	.LVL63
 3040 089b 2F0F0000 		.4byte	0xf2f
 3041 089f 26       		.uleb128 0x26
 3042 08a0 B2000000 		.4byte	.LVL67
 3043 08a4 3A0F0000 		.4byte	0xf3a
 3044 08a8 21       		.uleb128 0x21
 3045 08a9 E8000000 		.4byte	.LVL68
 3046 08ad 450F0000 		.4byte	0xf45
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 99


 3047 08b1 BB080000 		.4byte	0x8bb
 3048 08b5 22       		.uleb128 0x22
 3049 08b6 01       		.uleb128 0x1
 3050 08b7 50       		.byte	0x50
 3051 08b8 01       		.uleb128 0x1
 3052 08b9 31       		.byte	0x31
 3053 08ba 00       		.byte	0
 3054 08bb 26       		.uleb128 0x26
 3055 08bc EC000000 		.4byte	.LVL69
 3056 08c0 2F0F0000 		.4byte	0xf2f
 3057 08c4 26       		.uleb128 0x26
 3058 08c5 FA000000 		.4byte	.LVL72
 3059 08c9 3A0F0000 		.4byte	0xf3a
 3060 08cd 26       		.uleb128 0x26
 3061 08ce FE000000 		.4byte	.LVL73
 3062 08d2 2F0F0000 		.4byte	0xf2f
 3063 08d6 26       		.uleb128 0x26
 3064 08d7 0A010000 		.4byte	.LVL76
 3065 08db 3A0F0000 		.4byte	0xf3a
 3066 08df 26       		.uleb128 0x26
 3067 08e0 0E010000 		.4byte	.LVL77
 3068 08e4 2F0F0000 		.4byte	0xf2f
 3069 08e8 26       		.uleb128 0x26
 3070 08e9 22010000 		.4byte	.LVL81
 3071 08ed 3A0F0000 		.4byte	0xf3a
 3072 08f1 26       		.uleb128 0x26
 3073 08f2 26010000 		.4byte	.LVL82
 3074 08f6 2F0F0000 		.4byte	0xf2f
 3075 08fa 26       		.uleb128 0x26
 3076 08fb 38010000 		.4byte	.LVL86
 3077 08ff 3A0F0000 		.4byte	0xf3a
 3078 0903 26       		.uleb128 0x26
 3079 0904 42010000 		.4byte	.LVL87
 3080 0908 500F0000 		.4byte	0xf50
 3081 090c 23       		.uleb128 0x23
 3082 090d 48010000 		.4byte	.LVL88
 3083 0911 5B0F0000 		.4byte	0xf5b
 3084 0915 22       		.uleb128 0x22
 3085 0916 01       		.uleb128 0x1
 3086 0917 50       		.byte	0x50
 3087 0918 05       		.uleb128 0x5
 3088 0919 03       		.byte	0x3
 3089 091a 00000000 		.4byte	capsense_ADC_CSXScanISR
 3090 091e 00       		.byte	0
 3091 091f 00       		.byte	0
 3092 0920 27       		.uleb128 0x27
 3093 0921 19070000 		.4byte	.LASF122
 3094 0925 01       		.byte	0x1
 3095 0926 8803     		.2byte	0x388
 3096 0928 00000000 		.4byte	.LFB6
 3097 092c 1C000000 		.4byte	.LFE6-.LFB6
 3098 0930 01       		.uleb128 0x1
 3099 0931 9C       		.byte	0x9c
 3100 0932 53090000 		.4byte	0x953
 3101 0936 21       		.uleb128 0x21
 3102 0937 12000000 		.4byte	.LVL89
 3103 093b 660F0000 		.4byte	0xf66
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 100


 3104 093f 49090000 		.4byte	0x949
 3105 0943 22       		.uleb128 0x22
 3106 0944 01       		.uleb128 0x1
 3107 0945 50       		.byte	0x50
 3108 0946 01       		.uleb128 0x1
 3109 0947 3A       		.byte	0x3a
 3110 0948 00       		.byte	0
 3111 0949 26       		.uleb128 0x26
 3112 094a 16000000 		.4byte	.LVL90
 3113 094e A2070000 		.4byte	0x7a2
 3114 0952 00       		.byte	0
 3115 0953 28       		.uleb128 0x28
 3116 0954 2C010000 		.4byte	.LASF146
 3117 0958 01       		.byte	0x1
 3118 0959 DD05     		.2byte	0x5dd
 3119 095b A4000000 		.4byte	0xa4
 3120 095f 00000000 		.4byte	.LFB9
 3121 0963 28010000 		.4byte	.LFE9-.LFB9
 3122 0967 01       		.uleb128 0x1
 3123 0968 9C       		.byte	0x9c
 3124 0969 660A0000 		.4byte	0xa66
 3125 096d 16       		.uleb128 0x16
 3126 096e D30C0000 		.4byte	.LASF100
 3127 0972 01       		.byte	0x1
 3128 0973 DD05     		.2byte	0x5dd
 3129 0975 83000000 		.4byte	0x83
 3130 0979 7A030000 		.4byte	.LLST20
 3131 097d 16       		.uleb128 0x16
 3132 097e 65040000 		.4byte	.LASF102
 3133 0982 01       		.byte	0x1
 3134 0983 DD05     		.2byte	0x5dd
 3135 0985 77000000 		.4byte	0x77
 3136 0989 99030000 		.4byte	.LLST21
 3137 098d 17       		.uleb128 0x17
 3138 098e 2E0A0000 		.4byte	.LASF123
 3139 0992 01       		.byte	0x1
 3140 0993 E005     		.2byte	0x5e0
 3141 0995 83000000 		.4byte	0x83
 3142 0999 BA030000 		.4byte	.LLST22
 3143 099d 17       		.uleb128 0x17
 3144 099e 1C060000 		.4byte	.LASF124
 3145 09a2 01       		.byte	0x1
 3146 09a3 E205     		.2byte	0x5e2
 3147 09a5 83000000 		.4byte	0x83
 3148 09a9 E9030000 		.4byte	.LLST23
 3149 09ad 17       		.uleb128 0x17
 3150 09ae 2F0B0000 		.4byte	.LASF125
 3151 09b2 01       		.byte	0x1
 3152 09b3 E405     		.2byte	0x5e4
 3153 09b5 83000000 		.4byte	0x83
 3154 09b9 FC030000 		.4byte	.LLST24
 3155 09bd 17       		.uleb128 0x17
 3156 09be 3A030000 		.4byte	.LASF116
 3157 09c2 01       		.byte	0x1
 3158 09c3 E605     		.2byte	0x5e6
 3159 09c5 83000000 		.4byte	0x83
 3160 09c9 32040000 		.4byte	.LLST25
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 101


 3161 09cd 17       		.uleb128 0x17
 3162 09ce 4E070000 		.4byte	.LASF108
 3163 09d2 01       		.byte	0x1
 3164 09d3 E805     		.2byte	0x5e8
 3165 09d5 A4000000 		.4byte	0xa4
 3166 09d9 6B040000 		.4byte	.LLST26
 3167 09dd 17       		.uleb128 0x17
 3168 09de 2A020000 		.4byte	.LASF126
 3169 09e2 01       		.byte	0x1
 3170 09e3 EB05     		.2byte	0x5eb
 3171 09e5 6B000000 		.4byte	0x6b
 3172 09e9 CC040000 		.4byte	.LLST27
 3173 09ed 17       		.uleb128 0x17
 3174 09ee 85000000 		.4byte	.LASF127
 3175 09f2 01       		.byte	0x1
 3176 09f3 ED05     		.2byte	0x5ed
 3177 09f5 6B000000 		.4byte	0x6b
 3178 09f9 02050000 		.4byte	.LLST28
 3179 09fd 21       		.uleb128 0x21
 3180 09fe 26000000 		.4byte	.LVL94
 3181 0a02 2A070000 		.4byte	0x72a
 3182 0a06 120A0000 		.4byte	0xa12
 3183 0a0a 22       		.uleb128 0x22
 3184 0a0b 01       		.uleb128 0x1
 3185 0a0c 50       		.byte	0x50
 3186 0a0d 03       		.uleb128 0x3
 3187 0a0e 74       		.byte	0x74
 3188 0a0f 04       		.sleb128 4
 3189 0a10 06       		.byte	0x6
 3190 0a11 00       		.byte	0
 3191 0a12 21       		.uleb128 0x21
 3192 0a13 6C000000 		.4byte	.LVL104
 3193 0a17 710F0000 		.4byte	0xf71
 3194 0a1b 270A0000 		.4byte	0xa27
 3195 0a1f 22       		.uleb128 0x22
 3196 0a20 01       		.uleb128 0x1
 3197 0a21 50       		.byte	0x50
 3198 0a22 03       		.uleb128 0x3
 3199 0a23 91       		.byte	0x91
 3200 0a24 5C       		.sleb128 -36
 3201 0a25 06       		.byte	0x6
 3202 0a26 00       		.byte	0
 3203 0a27 26       		.uleb128 0x26
 3204 0a28 70000000 		.4byte	.LVL105
 3205 0a2c 7C0F0000 		.4byte	0xf7c
 3206 0a30 21       		.uleb128 0x21
 3207 0a31 CA000000 		.4byte	.LVL115
 3208 0a35 710F0000 		.4byte	0xf71
 3209 0a39 450A0000 		.4byte	0xa45
 3210 0a3d 22       		.uleb128 0x22
 3211 0a3e 01       		.uleb128 0x1
 3212 0a3f 50       		.byte	0x50
 3213 0a40 03       		.uleb128 0x3
 3214 0a41 91       		.byte	0x91
 3215 0a42 5C       		.sleb128 -36
 3216 0a43 06       		.byte	0x6
 3217 0a44 00       		.byte	0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 102


 3218 0a45 26       		.uleb128 0x26
 3219 0a46 CE000000 		.4byte	.LVL116
 3220 0a4a 7C0F0000 		.4byte	0xf7c
 3221 0a4e 23       		.uleb128 0x23
 3222 0a4f 02010000 		.4byte	.LVL124
 3223 0a53 54060000 		.4byte	0x654
 3224 0a57 22       		.uleb128 0x22
 3225 0a58 01       		.uleb128 0x1
 3226 0a59 50       		.byte	0x50
 3227 0a5a 03       		.uleb128 0x3
 3228 0a5b 91       		.byte	0x91
 3229 0a5c 5C       		.sleb128 -36
 3230 0a5d 06       		.byte	0x6
 3231 0a5e 22       		.uleb128 0x22
 3232 0a5f 01       		.uleb128 0x1
 3233 0a60 52       		.byte	0x52
 3234 0a61 02       		.uleb128 0x2
 3235 0a62 7B       		.byte	0x7b
 3236 0a63 00       		.sleb128 0
 3237 0a64 00       		.byte	0
 3238 0a65 00       		.byte	0
 3239 0a66 27       		.uleb128 0x27
 3240 0a67 2D000000 		.4byte	.LASF128
 3241 0a6b 01       		.byte	0x1
 3242 0a6c 2007     		.2byte	0x720
 3243 0a6e 00000000 		.4byte	.LFB12
 3244 0a72 26000000 		.4byte	.LFE12-.LFB12
 3245 0a76 01       		.uleb128 0x1
 3246 0a77 9C       		.byte	0x9c
 3247 0a78 9F0A0000 		.4byte	0xa9f
 3248 0a7c 16       		.uleb128 0x16
 3249 0a7d E8000000 		.4byte	.LASF129
 3250 0a81 01       		.byte	0x1
 3251 0a82 2007     		.2byte	0x720
 3252 0a84 9F0A0000 		.4byte	0xa9f
 3253 0a88 47050000 		.4byte	.LLST29
 3254 0a8c 26       		.uleb128 0x26
 3255 0a8d 14000000 		.4byte	.LVL132
 3256 0a91 870F0000 		.4byte	0xf87
 3257 0a95 26       		.uleb128 0x26
 3258 0a96 24000000 		.4byte	.LVL133
 3259 0a9a 870F0000 		.4byte	0xf87
 3260 0a9e 00       		.byte	0
 3261 0a9f 06       		.uleb128 0x6
 3262 0aa0 04       		.byte	0x4
 3263 0aa1 A50A0000 		.4byte	0xaa5
 3264 0aa5 18       		.uleb128 0x18
 3265 0aa6 2C050000 		.4byte	0x52c
 3266 0aaa 27       		.uleb128 0x27
 3267 0aab 5C090000 		.4byte	.LASF130
 3268 0aaf 01       		.byte	0x1
 3269 0ab0 3D07     		.2byte	0x73d
 3270 0ab2 00000000 		.4byte	.LFB13
 3271 0ab6 24000000 		.4byte	.LFE13-.LFB13
 3272 0aba 01       		.uleb128 0x1
 3273 0abb 9C       		.byte	0x9c
 3274 0abc ED0A0000 		.4byte	0xaed
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 103


 3275 0ac0 16       		.uleb128 0x16
 3276 0ac1 B80A0000 		.4byte	.LASF131
 3277 0ac5 01       		.byte	0x1
 3278 0ac6 3D07     		.2byte	0x73d
 3279 0ac8 9F0A0000 		.4byte	0xa9f
 3280 0acc 73050000 		.4byte	.LLST30
 3281 0ad0 21       		.uleb128 0x21
 3282 0ad1 12000000 		.4byte	.LVL137
 3283 0ad5 870F0000 		.4byte	0xf87
 3284 0ad9 E30A0000 		.4byte	0xae3
 3285 0add 22       		.uleb128 0x22
 3286 0ade 01       		.uleb128 0x1
 3287 0adf 52       		.byte	0x52
 3288 0ae0 01       		.uleb128 0x1
 3289 0ae1 30       		.byte	0x30
 3290 0ae2 00       		.byte	0
 3291 0ae3 26       		.uleb128 0x26
 3292 0ae4 22000000 		.4byte	.LVL138
 3293 0ae8 870F0000 		.4byte	0xf87
 3294 0aec 00       		.byte	0
 3295 0aed 27       		.uleb128 0x27
 3296 0aee 47000000 		.4byte	.LASF132
 3297 0af2 01       		.byte	0x1
 3298 0af3 9702     		.2byte	0x297
 3299 0af5 00000000 		.4byte	.LFB5
 3300 0af9 88000000 		.4byte	.LFE5-.LFB5
 3301 0afd 01       		.uleb128 0x1
 3302 0afe 9C       		.byte	0x9c
 3303 0aff 3B0B0000 		.4byte	0xb3b
 3304 0b03 26       		.uleb128 0x26
 3305 0b04 14000000 		.4byte	.LVL140
 3306 0b08 240F0000 		.4byte	0xf24
 3307 0b0c 26       		.uleb128 0x26
 3308 0b0d 4A000000 		.4byte	.LVL141
 3309 0b11 660A0000 		.4byte	0xa66
 3310 0b15 26       		.uleb128 0x26
 3311 0b16 50000000 		.4byte	.LVL142
 3312 0b1a AA0A0000 		.4byte	0xaaa
 3313 0b1e 21       		.uleb128 0x21
 3314 0b1f 66000000 		.4byte	.LVL143
 3315 0b23 660F0000 		.4byte	0xf66
 3316 0b27 310B0000 		.4byte	0xb31
 3317 0b2b 22       		.uleb128 0x22
 3318 0b2c 01       		.uleb128 0x1
 3319 0b2d 50       		.byte	0x50
 3320 0b2e 01       		.uleb128 0x1
 3321 0b2f 3A       		.byte	0x3a
 3322 0b30 00       		.byte	0
 3323 0b31 26       		.uleb128 0x26
 3324 0b32 6A000000 		.4byte	.LVL144
 3325 0b36 A2070000 		.4byte	0x7a2
 3326 0b3a 00       		.byte	0
 3327 0b3b 27       		.uleb128 0x27
 3328 0b3c 31070000 		.4byte	.LASF133
 3329 0b40 01       		.byte	0x1
 3330 0b41 5907     		.2byte	0x759
 3331 0b43 00000000 		.4byte	.LFB14
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 104


 3332 0b47 44000000 		.4byte	.LFE14-.LFB14
 3333 0b4b 01       		.uleb128 0x1
 3334 0b4c 9C       		.byte	0x9c
 3335 0b4d A60B0000 		.4byte	0xba6
 3336 0b51 16       		.uleb128 0x16
 3337 0b52 E8000000 		.4byte	.LASF129
 3338 0b56 01       		.byte	0x1
 3339 0b57 5907     		.2byte	0x759
 3340 0b59 9F0A0000 		.4byte	0xa9f
 3341 0b5d 9F050000 		.4byte	.LLST31
 3342 0b61 17       		.uleb128 0x17
 3343 0b62 DF000000 		.4byte	.LASF134
 3344 0b66 01       		.byte	0x1
 3345 0b67 5B07     		.2byte	0x75b
 3346 0b69 83000000 		.4byte	0x83
 3347 0b6d CB050000 		.4byte	.LLST32
 3348 0b71 17       		.uleb128 0x17
 3349 0b72 EE000000 		.4byte	.LASF121
 3350 0b76 01       		.byte	0x1
 3351 0b77 5C07     		.2byte	0x75c
 3352 0b79 6B000000 		.4byte	0x6b
 3353 0b7d E9050000 		.4byte	.LLST33
 3354 0b81 26       		.uleb128 0x26
 3355 0b82 08000000 		.4byte	.LVL146
 3356 0b86 2F0F0000 		.4byte	0xf2f
 3357 0b8a 26       		.uleb128 0x26
 3358 0b8b 16000000 		.4byte	.LVL149
 3359 0b8f 3A0F0000 		.4byte	0xf3a
 3360 0b93 26       		.uleb128 0x26
 3361 0b94 1A000000 		.4byte	.LVL150
 3362 0b98 2F0F0000 		.4byte	0xf2f
 3363 0b9c 26       		.uleb128 0x26
 3364 0b9d 3C000000 		.4byte	.LVL155
 3365 0ba1 3A0F0000 		.4byte	0xf3a
 3366 0ba5 00       		.byte	0
 3367 0ba6 27       		.uleb128 0x27
 3368 0ba7 AA050000 		.4byte	.LASF135
 3369 0bab 01       		.byte	0x1
 3370 0bac 8C07     		.2byte	0x78c
 3371 0bae 00000000 		.4byte	.LFB15
 3372 0bb2 4C000000 		.4byte	.LFE15-.LFB15
 3373 0bb6 01       		.uleb128 0x1
 3374 0bb7 9C       		.byte	0x9c
 3375 0bb8 110C0000 		.4byte	0xc11
 3376 0bbc 16       		.uleb128 0x16
 3377 0bbd B80A0000 		.4byte	.LASF131
 3378 0bc1 01       		.byte	0x1
 3379 0bc2 8C07     		.2byte	0x78c
 3380 0bc4 9F0A0000 		.4byte	0xa9f
 3381 0bc8 07060000 		.4byte	.LLST34
 3382 0bcc 17       		.uleb128 0x17
 3383 0bcd DF000000 		.4byte	.LASF134
 3384 0bd1 01       		.byte	0x1
 3385 0bd2 8E07     		.2byte	0x78e
 3386 0bd4 83000000 		.4byte	0x83
 3387 0bd8 33060000 		.4byte	.LLST35
 3388 0bdc 17       		.uleb128 0x17
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 105


 3389 0bdd EE000000 		.4byte	.LASF121
 3390 0be1 01       		.byte	0x1
 3391 0be2 8F07     		.2byte	0x78f
 3392 0be4 6B000000 		.4byte	0x6b
 3393 0be8 51060000 		.4byte	.LLST36
 3394 0bec 26       		.uleb128 0x26
 3395 0bed 08000000 		.4byte	.LVL157
 3396 0bf1 2F0F0000 		.4byte	0xf2f
 3397 0bf5 26       		.uleb128 0x26
 3398 0bf6 16000000 		.4byte	.LVL160
 3399 0bfa 3A0F0000 		.4byte	0xf3a
 3400 0bfe 26       		.uleb128 0x26
 3401 0bff 1A000000 		.4byte	.LVL161
 3402 0c03 2F0F0000 		.4byte	0xf2f
 3403 0c07 26       		.uleb128 0x26
 3404 0c08 46000000 		.4byte	.LVL167
 3405 0c0c 3A0F0000 		.4byte	0xf3a
 3406 0c10 00       		.byte	0
 3407 0c11 29       		.uleb128 0x29
 3408 0c12 57050000 		.4byte	.LASF137
 3409 0c16 01       		.byte	0x1
 3410 0c17 B503     		.2byte	0x3b5
 3411 0c19 00000000 		.4byte	.LFB7
 3412 0c1d DC000000 		.4byte	.LFE7-.LFB7
 3413 0c21 01       		.uleb128 0x1
 3414 0c22 9C       		.byte	0x9c
 3415 0c23 790C0000 		.4byte	0xc79
 3416 0c27 26       		.uleb128 0x26
 3417 0c28 1C000000 		.4byte	.LVL169
 3418 0c2c 3B0B0000 		.4byte	0xb3b
 3419 0c30 26       		.uleb128 0x26
 3420 0c31 3E000000 		.4byte	.LVL170
 3421 0c35 660A0000 		.4byte	0xa66
 3422 0c39 26       		.uleb128 0x26
 3423 0c3a 4A000000 		.4byte	.LVL171
 3424 0c3e A2070000 		.4byte	0x7a2
 3425 0c42 26       		.uleb128 0x26
 3426 0c43 62000000 		.4byte	.LVL172
 3427 0c47 A60B0000 		.4byte	0xba6
 3428 0c4b 26       		.uleb128 0x26
 3429 0c4c 6C000000 		.4byte	.LVL173
 3430 0c50 AA0A0000 		.4byte	0xaaa
 3431 0c54 26       		.uleb128 0x26
 3432 0c55 88000000 		.4byte	.LVL174
 3433 0c59 660A0000 		.4byte	0xa66
 3434 0c5d 26       		.uleb128 0x26
 3435 0c5e 94000000 		.4byte	.LVL175
 3436 0c62 A2070000 		.4byte	0x7a2
 3437 0c66 26       		.uleb128 0x26
 3438 0c67 9E000000 		.4byte	.LVL176
 3439 0c6b A60B0000 		.4byte	0xba6
 3440 0c6f 26       		.uleb128 0x26
 3441 0c70 AA000000 		.4byte	.LVL177
 3442 0c74 920F0000 		.4byte	0xf92
 3443 0c78 00       		.byte	0
 3444 0c79 27       		.uleb128 0x27
 3445 0c7a 72040000 		.4byte	.LASF138
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 106


 3446 0c7e 01       		.byte	0x1
 3447 0c7f 3901     		.2byte	0x139
 3448 0c81 00000000 		.4byte	.LFB2
 3449 0c85 24000000 		.4byte	.LFE2-.LFB2
 3450 0c89 01       		.uleb128 0x1
 3451 0c8a 9C       		.byte	0x9c
 3452 0c8b A20C0000 		.4byte	0xca2
 3453 0c8f 26       		.uleb128 0x26
 3454 0c90 12000000 		.4byte	.LVL178
 3455 0c94 3B0B0000 		.4byte	0xb3b
 3456 0c98 26       		.uleb128 0x26
 3457 0c99 18000000 		.4byte	.LVL179
 3458 0c9d A60B0000 		.4byte	0xba6
 3459 0ca1 00       		.byte	0
 3460 0ca2 27       		.uleb128 0x27
 3461 0ca3 9F080000 		.4byte	.LASF139
 3462 0ca7 01       		.byte	0x1
 3463 0ca8 9B01     		.2byte	0x19b
 3464 0caa 00000000 		.4byte	.LFB3
 3465 0cae 6C000000 		.4byte	.LFE3-.LFB3
 3466 0cb2 01       		.uleb128 0x1
 3467 0cb3 9C       		.byte	0x9c
 3468 0cb4 320D0000 		.4byte	0xd32
 3469 0cb8 16       		.uleb128 0x16
 3470 0cb9 D30C0000 		.4byte	.LASF100
 3471 0cbd 01       		.byte	0x1
 3472 0cbe 9B01     		.2byte	0x19b
 3473 0cc0 83000000 		.4byte	0x83
 3474 0cc4 6F060000 		.4byte	.LLST37
 3475 0cc8 17       		.uleb128 0x17
 3476 0cc9 1E0C0000 		.4byte	.LASF140
 3477 0ccd 01       		.byte	0x1
 3478 0cce 9E01     		.2byte	0x19e
 3479 0cd0 320D0000 		.4byte	0xd32
 3480 0cd4 9B060000 		.4byte	.LLST38
 3481 0cd8 17       		.uleb128 0x17
 3482 0cd9 AF0B0000 		.4byte	.LASF118
 3483 0cdd 01       		.byte	0x1
 3484 0cde A101     		.2byte	0x1a1
 3485 0ce0 83000000 		.4byte	0x83
 3486 0ce4 AE060000 		.4byte	.LLST39
 3487 0ce8 17       		.uleb128 0x17
 3488 0ce9 3B040000 		.4byte	.LASF141
 3489 0ced 01       		.byte	0x1
 3490 0cee A201     		.2byte	0x1a2
 3491 0cf0 83000000 		.4byte	0x83
 3492 0cf4 DE060000 		.4byte	.LLST40
 3493 0cf8 21       		.uleb128 0x21
 3494 0cf9 10000000 		.4byte	.LVL182
 3495 0cfd 9D0F0000 		.4byte	0xf9d
 3496 0d01 0B0D0000 		.4byte	0xd0b
 3497 0d05 22       		.uleb128 0x22
 3498 0d06 01       		.uleb128 0x1
 3499 0d07 50       		.byte	0x50
 3500 0d08 01       		.uleb128 0x1
 3501 0d09 32       		.byte	0x32
 3502 0d0a 00       		.byte	0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 107


 3503 0d0b 26       		.uleb128 0x26
 3504 0d0c 14000000 		.4byte	.LVL183
 3505 0d10 790C0000 		.4byte	0xc79
 3506 0d14 21       		.uleb128 0x21
 3507 0d15 2E000000 		.4byte	.LVL186
 3508 0d19 2A070000 		.4byte	0x72a
 3509 0d1d 280D0000 		.4byte	0xd28
 3510 0d21 22       		.uleb128 0x22
 3511 0d22 01       		.uleb128 0x1
 3512 0d23 50       		.byte	0x50
 3513 0d24 02       		.uleb128 0x2
 3514 0d25 75       		.byte	0x75
 3515 0d26 00       		.sleb128 0
 3516 0d27 00       		.byte	0
 3517 0d28 26       		.uleb128 0x26
 3518 0d29 4C000000 		.4byte	.LVL193
 3519 0d2d 500F0000 		.4byte	0xf50
 3520 0d31 00       		.byte	0
 3521 0d32 06       		.uleb128 0x6
 3522 0d33 04       		.byte	0x4
 3523 0d34 A6010000 		.4byte	0x1a6
 3524 0d38 20       		.uleb128 0x20
 3525 0d39 5F0C0000 		.4byte	.LASF142
 3526 0d3d 01       		.byte	0x1
 3527 0d3e 1002     		.2byte	0x210
 3528 0d40 00000000 		.4byte	.LFB4
 3529 0d44 84000000 		.4byte	.LFE4-.LFB4
 3530 0d48 01       		.uleb128 0x1
 3531 0d49 9C       		.byte	0x9c
 3532 0d4a B60D0000 		.4byte	0xdb6
 3533 0d4e 16       		.uleb128 0x16
 3534 0d4f D30C0000 		.4byte	.LASF100
 3535 0d53 01       		.byte	0x1
 3536 0d54 1002     		.2byte	0x210
 3537 0d56 83000000 		.4byte	0x83
 3538 0d5a 09070000 		.4byte	.LLST41
 3539 0d5e 16       		.uleb128 0x16
 3540 0d5f C8010000 		.4byte	.LASF143
 3541 0d63 01       		.byte	0x1
 3542 0d64 1002     		.2byte	0x210
 3543 0d66 83000000 		.4byte	0x83
 3544 0d6a 2A070000 		.4byte	.LLST42
 3545 0d6e 17       		.uleb128 0x17
 3546 0d6f 4A030000 		.4byte	.LASF144
 3547 0d73 01       		.byte	0x1
 3548 0d74 1202     		.2byte	0x212
 3549 0d76 83000000 		.4byte	0x83
 3550 0d7a 56070000 		.4byte	.LLST43
 3551 0d7e 17       		.uleb128 0x17
 3552 0d7f FD000000 		.4byte	.LASF145
 3553 0d83 01       		.byte	0x1
 3554 0d84 1302     		.2byte	0x213
 3555 0d86 83000000 		.4byte	0x83
 3556 0d8a 69070000 		.4byte	.LLST44
 3557 0d8e 21       		.uleb128 0x21
 3558 0d8f 08000000 		.4byte	.LVL197
 3559 0d93 A20C0000 		.4byte	0xca2
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 108


 3560 0d97 A30D0000 		.4byte	0xda3
 3561 0d9b 22       		.uleb128 0x22
 3562 0d9c 01       		.uleb128 0x1
 3563 0d9d 50       		.byte	0x50
 3564 0d9e 03       		.uleb128 0x3
 3565 0d9f F3       		.byte	0xf3
 3566 0da0 01       		.uleb128 0x1
 3567 0da1 50       		.byte	0x50
 3568 0da2 00       		.byte	0
 3569 0da3 26       		.uleb128 0x26
 3570 0da4 58000000 		.4byte	.LVL204
 3571 0da8 660A0000 		.4byte	0xa66
 3572 0dac 26       		.uleb128 0x26
 3573 0dad 5E000000 		.4byte	.LVL205
 3574 0db1 AA0A0000 		.4byte	0xaaa
 3575 0db5 00       		.byte	0
 3576 0db6 2A       		.uleb128 0x2a
 3577 0db7 77050000 		.4byte	.LASF147
 3578 0dbb 01       		.byte	0x1
 3579 0dbc C107     		.2byte	0x7c1
 3580 0dbe 83000000 		.4byte	0x83
 3581 0dc2 00000000 		.4byte	.LFB16
 3582 0dc6 10000000 		.4byte	.LFE16-.LFB16
 3583 0dca 01       		.uleb128 0x1
 3584 0dcb 9C       		.byte	0x9c
 3585 0dcc FD0D0000 		.4byte	0xdfd
 3586 0dd0 16       		.uleb128 0x16
 3587 0dd1 D30C0000 		.4byte	.LASF100
 3588 0dd5 01       		.byte	0x1
 3589 0dd6 C107     		.2byte	0x7c1
 3590 0dd8 83000000 		.4byte	0x83
 3591 0ddc 87070000 		.4byte	.LLST45
 3592 0de0 2B       		.uleb128 0x2b
 3593 0de1 B10A0000 		.4byte	.LASF148
 3594 0de5 01       		.byte	0x1
 3595 0de6 C307     		.2byte	0x7c3
 3596 0de8 83000000 		.4byte	0x83
 3597 0dec 01       		.uleb128 0x1
 3598 0ded 50       		.byte	0x50
 3599 0dee 2B       		.uleb128 0x2b
 3600 0def D1010000 		.4byte	.LASF149
 3601 0df3 01       		.byte	0x1
 3602 0df4 C707     		.2byte	0x7c7
 3603 0df6 320D0000 		.4byte	0xd32
 3604 0dfa 01       		.uleb128 0x1
 3605 0dfb 53       		.byte	0x53
 3606 0dfc 00       		.byte	0
 3607 0dfd 2C       		.uleb128 0x2c
 3608 0dfe 05010000 		.4byte	.LASF150
 3609 0e02 01       		.byte	0x1
 3610 0e03 4D       		.byte	0x4d
 3611 0e04 9F0A0000 		.4byte	0xa9f
 3612 0e08 05       		.uleb128 0x5
 3613 0e09 03       		.byte	0x3
 3614 0e0a 0C000000 		.4byte	capsense_ADC_curTxIOPtr
 3615 0e0e 2C       		.uleb128 0x2c
 3616 0e0f DC0C0000 		.4byte	.LASF151
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 109


 3617 0e13 01       		.byte	0x1
 3618 0e14 4F       		.byte	0x4f
 3619 0e15 9F0A0000 		.4byte	0xa9f
 3620 0e19 05       		.uleb128 0x5
 3621 0e1a 03       		.byte	0x3
 3622 0e1b 08000000 		.4byte	capsense_ADC_curRxIOPtr
 3623 0e1f 2C       		.uleb128 0x2c
 3624 0e20 5C000000 		.4byte	.LASF152
 3625 0e24 01       		.byte	0x1
 3626 0e25 51       		.byte	0x51
 3627 0e26 77000000 		.4byte	0x77
 3628 0e2a 05       		.uleb128 0x5
 3629 0e2b 03       		.byte	0x3
 3630 0e2c 06000000 		.4byte	capsense_ADC_curWdgtTotalRx
 3631 0e30 2C       		.uleb128 0x2c
 3632 0e31 4C010000 		.4byte	.LASF153
 3633 0e35 01       		.byte	0x1
 3634 0e36 53       		.byte	0x53
 3635 0e37 77000000 		.4byte	0x77
 3636 0e3b 05       		.uleb128 0x5
 3637 0e3c 03       		.byte	0x3
 3638 0e3d 04000000 		.4byte	capsense_ADC_curWdgtTotalTx
 3639 0e41 2C       		.uleb128 0x2c
 3640 0e42 400A0000 		.4byte	.LASF154
 3641 0e46 01       		.byte	0x1
 3642 0e47 55       		.byte	0x55
 3643 0e48 77000000 		.4byte	0x77
 3644 0e4c 05       		.uleb128 0x5
 3645 0e4d 03       		.byte	0x3
 3646 0e4e 10000000 		.4byte	capsense_ADC_eleCsxDisconnectFlag
 3647 0e52 2D       		.uleb128 0x2d
 3648 0e53 AA040000 		.4byte	.LASF155
 3649 0e57 04       		.byte	0x4
 3650 0e58 5104     		.2byte	0x451
 3651 0e5a 9B040000 		.4byte	0x49b
 3652 0e5e 2D       		.uleb128 0x2d
 3653 0e5f 8D090000 		.4byte	.LASF156
 3654 0e63 04       		.byte	0x4
 3655 0e64 5204     		.2byte	0x452
 3656 0e66 6A0E0000 		.4byte	0xe6a
 3657 0e6a 18       		.uleb128 0x18
 3658 0e6b 0A060000 		.4byte	0x60a
 3659 0e6f 2E       		.uleb128 0x2e
 3660 0e70 C80B0000 		.4byte	.LASF157
 3661 0e74 01       		.byte	0x1
 3662 0e75 44       		.byte	0x44
 3663 0e76 B5000000 		.4byte	0xb5
 3664 0e7a 05       		.uleb128 0x5
 3665 0e7b 03       		.byte	0x3
 3666 0e7c 00000000 		.4byte	capsense_ADC_csxScanPeriod
 3667 0e80 2E       		.uleb128 0x2e
 3668 0e81 1E080000 		.4byte	.LASF158
 3669 0e85 01       		.byte	0x1
 3670 0e86 46       		.byte	0x46
 3671 0e87 B5000000 		.4byte	0xb5
 3672 0e8b 05       		.uleb128 0x5
 3673 0e8c 03       		.byte	0x3
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 110


 3674 0e8d 00000000 		.4byte	capsense_ADC_csxRawCount
 3675 0e91 2E       		.uleb128 0x2e
 3676 0e92 400B0000 		.4byte	.LASF159
 3677 0e96 01       		.byte	0x1
 3678 0e97 7B       		.byte	0x7b
 3679 0e98 CB000000 		.4byte	0xcb
 3680 0e9c 05       		.uleb128 0x5
 3681 0e9d 03       		.byte	0x3
 3682 0e9e 00000000 		.4byte	capsense_ADC_CSXPostScanApiPtr
 3683 0ea2 2F       		.uleb128 0x2f
 3684 0ea3 91040000 		.4byte	.LASF160
 3685 0ea7 05       		.byte	0x5
 3686 0ea8 B1       		.byte	0xb1
 3687 0ea9 B0000000 		.4byte	0xb0
 3688 0ead 2F       		.uleb128 0x2f
 3689 0eae BB080000 		.4byte	.LASF161
 3690 0eb2 05       		.byte	0x5
 3691 0eb3 B2       		.byte	0xb2
 3692 0eb4 B0000000 		.4byte	0xb0
 3693 0eb8 2F       		.uleb128 0x2f
 3694 0eb9 F8090000 		.4byte	.LASF162
 3695 0ebd 05       		.byte	0x5
 3696 0ebe B3       		.byte	0xb3
 3697 0ebf 6B000000 		.4byte	0x6b
 3698 0ec3 2F       		.uleb128 0x2f
 3699 0ec4 48060000 		.4byte	.LASF163
 3700 0ec8 05       		.byte	0x5
 3701 0ec9 B5       		.byte	0xb5
 3702 0eca CB050000 		.4byte	0x5cb
 3703 0ece 2F       		.uleb128 0x2f
 3704 0ecf 62020000 		.4byte	.LASF164
 3705 0ed3 05       		.byte	0x5
 3706 0ed4 BC       		.byte	0xbc
 3707 0ed5 D90E0000 		.4byte	0xed9
 3708 0ed9 18       		.uleb128 0x18
 3709 0eda 6B000000 		.4byte	0x6b
 3710 0ede 2F       		.uleb128 0x2f
 3711 0edf 00000000 		.4byte	.LASF165
 3712 0ee3 05       		.byte	0x5
 3713 0ee4 C2       		.byte	0xc2
 3714 0ee5 1F070000 		.4byte	0x71f
 3715 0ee9 11       		.uleb128 0x11
 3716 0eea F90E0000 		.4byte	0xef9
 3717 0eee F90E0000 		.4byte	0xef9
 3718 0ef2 12       		.uleb128 0x12
 3719 0ef3 D9000000 		.4byte	0xd9
 3720 0ef7 05       		.byte	0x5
 3721 0ef8 00       		.byte	0
 3722 0ef9 18       		.uleb128 0x18
 3723 0efa 37060000 		.4byte	0x637
 3724 0efe 2F       		.uleb128 0x2f
 3725 0eff AD010000 		.4byte	.LASF166
 3726 0f03 05       		.byte	0x5
 3727 0f04 F5       		.byte	0xf5
 3728 0f05 090F0000 		.4byte	0xf09
 3729 0f09 18       		.uleb128 0x18
 3730 0f0a E90E0000 		.4byte	0xee9
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 111


 3731 0f0e 30       		.uleb128 0x30
 3732 0f0f 68010000 		.4byte	.LASF167
 3733 0f13 68010000 		.4byte	.LASF167
 3734 0f17 06       		.byte	0x6
 3735 0f18 D8       		.byte	0xd8
 3736 0f19 30       		.uleb128 0x30
 3737 0f1a A30B0000 		.4byte	.LASF168
 3738 0f1e A30B0000 		.4byte	.LASF168
 3739 0f22 06       		.byte	0x6
 3740 0f23 D6       		.byte	0xd6
 3741 0f24 30       		.uleb128 0x30
 3742 0f25 67070000 		.4byte	.LASF169
 3743 0f29 67070000 		.4byte	.LASF169
 3744 0f2d 05       		.byte	0x5
 3745 0f2e 84       		.byte	0x84
 3746 0f2f 30       		.uleb128 0x30
 3747 0f30 E30B0000 		.4byte	.LASF170
 3748 0f34 E30B0000 		.4byte	.LASF170
 3749 0f38 06       		.byte	0x6
 3750 0f39 F8       		.byte	0xf8
 3751 0f3a 30       		.uleb128 0x30
 3752 0f3b 32060000 		.4byte	.LASF171
 3753 0f3f 32060000 		.4byte	.LASF171
 3754 0f43 06       		.byte	0x6
 3755 0f44 F9       		.byte	0xf9
 3756 0f45 30       		.uleb128 0x30
 3757 0f46 AF060000 		.4byte	.LASF172
 3758 0f4a AF060000 		.4byte	.LASF172
 3759 0f4e 05       		.byte	0x5
 3760 0f4f A8       		.byte	0xa8
 3761 0f50 30       		.uleb128 0x30
 3762 0f51 F4040000 		.4byte	.LASF173
 3763 0f55 F4040000 		.4byte	.LASF173
 3764 0f59 05       		.byte	0x5
 3765 0f5a 7F       		.byte	0x7f
 3766 0f5b 30       		.uleb128 0x30
 3767 0f5c AB090000 		.4byte	.LASF174
 3768 0f60 AB090000 		.4byte	.LASF174
 3769 0f64 05       		.byte	0x5
 3770 0f65 82       		.byte	0x82
 3771 0f66 30       		.uleb128 0x30
 3772 0f67 480C0000 		.4byte	.LASF175
 3773 0f6b 480C0000 		.4byte	.LASF175
 3774 0f6f 06       		.byte	0x6
 3775 0f70 ED       		.byte	0xed
 3776 0f71 30       		.uleb128 0x30
 3777 0f72 A6000000 		.4byte	.LASF176
 3778 0f76 A6000000 		.4byte	.LASF176
 3779 0f7a 05       		.byte	0x5
 3780 0f7b 57       		.byte	0x57
 3781 0f7c 30       		.uleb128 0x30
 3782 0f7d 45050000 		.4byte	.LASF177
 3783 0f81 45050000 		.4byte	.LASF177
 3784 0f85 05       		.byte	0x5
 3785 0f86 58       		.byte	0x58
 3786 0f87 30       		.uleb128 0x30
 3787 0f88 140B0000 		.4byte	.LASF178
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 112


 3788 0f8c 140B0000 		.4byte	.LASF178
 3789 0f90 05       		.byte	0x5
 3790 0f91 A9       		.byte	0xa9
 3791 0f92 30       		.uleb128 0x30
 3792 0f93 30090000 		.4byte	.LASF179
 3793 0f97 30090000 		.4byte	.LASF179
 3794 0f9b 05       		.byte	0x5
 3795 0f9c 83       		.byte	0x83
 3796 0f9d 30       		.uleb128 0x30
 3797 0f9e CE030000 		.4byte	.LASF180
 3798 0fa2 CE030000 		.4byte	.LASF180
 3799 0fa6 05       		.byte	0x5
 3800 0fa7 85       		.byte	0x85
 3801 0fa8 00       		.byte	0
 3802              		.section	.debug_abbrev,"",%progbits
 3803              	.Ldebug_abbrev0:
 3804 0000 01       		.uleb128 0x1
 3805 0001 11       		.uleb128 0x11
 3806 0002 01       		.byte	0x1
 3807 0003 25       		.uleb128 0x25
 3808 0004 0E       		.uleb128 0xe
 3809 0005 13       		.uleb128 0x13
 3810 0006 0B       		.uleb128 0xb
 3811 0007 03       		.uleb128 0x3
 3812 0008 0E       		.uleb128 0xe
 3813 0009 1B       		.uleb128 0x1b
 3814 000a 0E       		.uleb128 0xe
 3815 000b 55       		.uleb128 0x55
 3816 000c 17       		.uleb128 0x17
 3817 000d 11       		.uleb128 0x11
 3818 000e 01       		.uleb128 0x1
 3819 000f 10       		.uleb128 0x10
 3820 0010 17       		.uleb128 0x17
 3821 0011 00       		.byte	0
 3822 0012 00       		.byte	0
 3823 0013 02       		.uleb128 0x2
 3824 0014 24       		.uleb128 0x24
 3825 0015 00       		.byte	0
 3826 0016 0B       		.uleb128 0xb
 3827 0017 0B       		.uleb128 0xb
 3828 0018 3E       		.uleb128 0x3e
 3829 0019 0B       		.uleb128 0xb
 3830 001a 03       		.uleb128 0x3
 3831 001b 0E       		.uleb128 0xe
 3832 001c 00       		.byte	0
 3833 001d 00       		.byte	0
 3834 001e 03       		.uleb128 0x3
 3835 001f 24       		.uleb128 0x24
 3836 0020 00       		.byte	0
 3837 0021 0B       		.uleb128 0xb
 3838 0022 0B       		.uleb128 0xb
 3839 0023 3E       		.uleb128 0x3e
 3840 0024 0B       		.uleb128 0xb
 3841 0025 03       		.uleb128 0x3
 3842 0026 08       		.uleb128 0x8
 3843 0027 00       		.byte	0
 3844 0028 00       		.byte	0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 113


 3845 0029 04       		.uleb128 0x4
 3846 002a 16       		.uleb128 0x16
 3847 002b 00       		.byte	0
 3848 002c 03       		.uleb128 0x3
 3849 002d 0E       		.uleb128 0xe
 3850 002e 3A       		.uleb128 0x3a
 3851 002f 0B       		.uleb128 0xb
 3852 0030 3B       		.uleb128 0x3b
 3853 0031 05       		.uleb128 0x5
 3854 0032 49       		.uleb128 0x49
 3855 0033 13       		.uleb128 0x13
 3856 0034 00       		.byte	0
 3857 0035 00       		.byte	0
 3858 0036 05       		.uleb128 0x5
 3859 0037 35       		.uleb128 0x35
 3860 0038 00       		.byte	0
 3861 0039 49       		.uleb128 0x49
 3862 003a 13       		.uleb128 0x13
 3863 003b 00       		.byte	0
 3864 003c 00       		.byte	0
 3865 003d 06       		.uleb128 0x6
 3866 003e 0F       		.uleb128 0xf
 3867 003f 00       		.byte	0
 3868 0040 0B       		.uleb128 0xb
 3869 0041 0B       		.uleb128 0xb
 3870 0042 49       		.uleb128 0x49
 3871 0043 13       		.uleb128 0x13
 3872 0044 00       		.byte	0
 3873 0045 00       		.byte	0
 3874 0046 07       		.uleb128 0x7
 3875 0047 15       		.uleb128 0x15
 3876 0048 00       		.byte	0
 3877 0049 27       		.uleb128 0x27
 3878 004a 19       		.uleb128 0x19
 3879 004b 00       		.byte	0
 3880 004c 00       		.byte	0
 3881 004d 08       		.uleb128 0x8
 3882 004e 0F       		.uleb128 0xf
 3883 004f 00       		.byte	0
 3884 0050 0B       		.uleb128 0xb
 3885 0051 0B       		.uleb128 0xb
 3886 0052 00       		.byte	0
 3887 0053 00       		.byte	0
 3888 0054 09       		.uleb128 0x9
 3889 0055 04       		.uleb128 0x4
 3890 0056 01       		.byte	0x1
 3891 0057 0B       		.uleb128 0xb
 3892 0058 0B       		.uleb128 0xb
 3893 0059 49       		.uleb128 0x49
 3894 005a 13       		.uleb128 0x13
 3895 005b 3A       		.uleb128 0x3a
 3896 005c 0B       		.uleb128 0xb
 3897 005d 3B       		.uleb128 0x3b
 3898 005e 0B       		.uleb128 0xb
 3899 005f 01       		.uleb128 0x1
 3900 0060 13       		.uleb128 0x13
 3901 0061 00       		.byte	0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 114


 3902 0062 00       		.byte	0
 3903 0063 0A       		.uleb128 0xa
 3904 0064 28       		.uleb128 0x28
 3905 0065 00       		.byte	0
 3906 0066 03       		.uleb128 0x3
 3907 0067 0E       		.uleb128 0xe
 3908 0068 1C       		.uleb128 0x1c
 3909 0069 0B       		.uleb128 0xb
 3910 006a 00       		.byte	0
 3911 006b 00       		.byte	0
 3912 006c 0B       		.uleb128 0xb
 3913 006d 13       		.uleb128 0x13
 3914 006e 01       		.byte	0x1
 3915 006f 0B       		.uleb128 0xb
 3916 0070 0B       		.uleb128 0xb
 3917 0071 3A       		.uleb128 0x3a
 3918 0072 0B       		.uleb128 0xb
 3919 0073 3B       		.uleb128 0x3b
 3920 0074 0B       		.uleb128 0xb
 3921 0075 01       		.uleb128 0x1
 3922 0076 13       		.uleb128 0x13
 3923 0077 00       		.byte	0
 3924 0078 00       		.byte	0
 3925 0079 0C       		.uleb128 0xc
 3926 007a 0D       		.uleb128 0xd
 3927 007b 00       		.byte	0
 3928 007c 03       		.uleb128 0x3
 3929 007d 0E       		.uleb128 0xe
 3930 007e 3A       		.uleb128 0x3a
 3931 007f 0B       		.uleb128 0xb
 3932 0080 3B       		.uleb128 0x3b
 3933 0081 0B       		.uleb128 0xb
 3934 0082 49       		.uleb128 0x49
 3935 0083 13       		.uleb128 0x13
 3936 0084 38       		.uleb128 0x38
 3937 0085 0B       		.uleb128 0xb
 3938 0086 00       		.byte	0
 3939 0087 00       		.byte	0
 3940 0088 0D       		.uleb128 0xd
 3941 0089 16       		.uleb128 0x16
 3942 008a 00       		.byte	0
 3943 008b 03       		.uleb128 0x3
 3944 008c 0E       		.uleb128 0xe
 3945 008d 3A       		.uleb128 0x3a
 3946 008e 0B       		.uleb128 0xb
 3947 008f 3B       		.uleb128 0x3b
 3948 0090 0B       		.uleb128 0xb
 3949 0091 49       		.uleb128 0x49
 3950 0092 13       		.uleb128 0x13
 3951 0093 00       		.byte	0
 3952 0094 00       		.byte	0
 3953 0095 0E       		.uleb128 0xe
 3954 0096 0D       		.uleb128 0xd
 3955 0097 00       		.byte	0
 3956 0098 03       		.uleb128 0x3
 3957 0099 0E       		.uleb128 0xe
 3958 009a 3A       		.uleb128 0x3a
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 115


 3959 009b 0B       		.uleb128 0xb
 3960 009c 3B       		.uleb128 0x3b
 3961 009d 05       		.uleb128 0x5
 3962 009e 49       		.uleb128 0x49
 3963 009f 13       		.uleb128 0x13
 3964 00a0 38       		.uleb128 0x38
 3965 00a1 0B       		.uleb128 0xb
 3966 00a2 00       		.byte	0
 3967 00a3 00       		.byte	0
 3968 00a4 0F       		.uleb128 0xf
 3969 00a5 13       		.uleb128 0x13
 3970 00a6 01       		.byte	0x1
 3971 00a7 0B       		.uleb128 0xb
 3972 00a8 0B       		.uleb128 0xb
 3973 00a9 3A       		.uleb128 0x3a
 3974 00aa 0B       		.uleb128 0xb
 3975 00ab 3B       		.uleb128 0x3b
 3976 00ac 05       		.uleb128 0x5
 3977 00ad 01       		.uleb128 0x1
 3978 00ae 13       		.uleb128 0x13
 3979 00af 00       		.byte	0
 3980 00b0 00       		.byte	0
 3981 00b1 10       		.uleb128 0x10
 3982 00b2 0D       		.uleb128 0xd
 3983 00b3 00       		.byte	0
 3984 00b4 03       		.uleb128 0x3
 3985 00b5 08       		.uleb128 0x8
 3986 00b6 3A       		.uleb128 0x3a
 3987 00b7 0B       		.uleb128 0xb
 3988 00b8 3B       		.uleb128 0x3b
 3989 00b9 05       		.uleb128 0x5
 3990 00ba 49       		.uleb128 0x49
 3991 00bb 13       		.uleb128 0x13
 3992 00bc 38       		.uleb128 0x38
 3993 00bd 0B       		.uleb128 0xb
 3994 00be 00       		.byte	0
 3995 00bf 00       		.byte	0
 3996 00c0 11       		.uleb128 0x11
 3997 00c1 01       		.uleb128 0x1
 3998 00c2 01       		.byte	0x1
 3999 00c3 49       		.uleb128 0x49
 4000 00c4 13       		.uleb128 0x13
 4001 00c5 01       		.uleb128 0x1
 4002 00c6 13       		.uleb128 0x13
 4003 00c7 00       		.byte	0
 4004 00c8 00       		.byte	0
 4005 00c9 12       		.uleb128 0x12
 4006 00ca 21       		.uleb128 0x21
 4007 00cb 00       		.byte	0
 4008 00cc 49       		.uleb128 0x49
 4009 00cd 13       		.uleb128 0x13
 4010 00ce 2F       		.uleb128 0x2f
 4011 00cf 0B       		.uleb128 0xb
 4012 00d0 00       		.byte	0
 4013 00d1 00       		.byte	0
 4014 00d2 13       		.uleb128 0x13
 4015 00d3 26       		.uleb128 0x26
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 116


 4016 00d4 00       		.byte	0
 4017 00d5 00       		.byte	0
 4018 00d6 00       		.byte	0
 4019 00d7 14       		.uleb128 0x14
 4020 00d8 2E       		.uleb128 0x2e
 4021 00d9 00       		.byte	0
 4022 00da 03       		.uleb128 0x3
 4023 00db 0E       		.uleb128 0xe
 4024 00dc 3A       		.uleb128 0x3a
 4025 00dd 0B       		.uleb128 0xb
 4026 00de 3B       		.uleb128 0x3b
 4027 00df 05       		.uleb128 0x5
 4028 00e0 27       		.uleb128 0x27
 4029 00e1 19       		.uleb128 0x19
 4030 00e2 11       		.uleb128 0x11
 4031 00e3 01       		.uleb128 0x1
 4032 00e4 12       		.uleb128 0x12
 4033 00e5 06       		.uleb128 0x6
 4034 00e6 40       		.uleb128 0x40
 4035 00e7 18       		.uleb128 0x18
 4036 00e8 9742     		.uleb128 0x2117
 4037 00ea 19       		.uleb128 0x19
 4038 00eb 00       		.byte	0
 4039 00ec 00       		.byte	0
 4040 00ed 15       		.uleb128 0x15
 4041 00ee 2E       		.uleb128 0x2e
 4042 00ef 01       		.byte	0x1
 4043 00f0 03       		.uleb128 0x3
 4044 00f1 0E       		.uleb128 0xe
 4045 00f2 3A       		.uleb128 0x3a
 4046 00f3 0B       		.uleb128 0xb
 4047 00f4 3B       		.uleb128 0x3b
 4048 00f5 05       		.uleb128 0x5
 4049 00f6 27       		.uleb128 0x27
 4050 00f7 19       		.uleb128 0x19
 4051 00f8 49       		.uleb128 0x49
 4052 00f9 13       		.uleb128 0x13
 4053 00fa 11       		.uleb128 0x11
 4054 00fb 01       		.uleb128 0x1
 4055 00fc 12       		.uleb128 0x12
 4056 00fd 06       		.uleb128 0x6
 4057 00fe 40       		.uleb128 0x40
 4058 00ff 18       		.uleb128 0x18
 4059 0100 9642     		.uleb128 0x2116
 4060 0102 19       		.uleb128 0x19
 4061 0103 01       		.uleb128 0x1
 4062 0104 13       		.uleb128 0x13
 4063 0105 00       		.byte	0
 4064 0106 00       		.byte	0
 4065 0107 16       		.uleb128 0x16
 4066 0108 05       		.uleb128 0x5
 4067 0109 00       		.byte	0
 4068 010a 03       		.uleb128 0x3
 4069 010b 0E       		.uleb128 0xe
 4070 010c 3A       		.uleb128 0x3a
 4071 010d 0B       		.uleb128 0xb
 4072 010e 3B       		.uleb128 0x3b
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 117


 4073 010f 05       		.uleb128 0x5
 4074 0110 49       		.uleb128 0x49
 4075 0111 13       		.uleb128 0x13
 4076 0112 02       		.uleb128 0x2
 4077 0113 17       		.uleb128 0x17
 4078 0114 00       		.byte	0
 4079 0115 00       		.byte	0
 4080 0116 17       		.uleb128 0x17
 4081 0117 34       		.uleb128 0x34
 4082 0118 00       		.byte	0
 4083 0119 03       		.uleb128 0x3
 4084 011a 0E       		.uleb128 0xe
 4085 011b 3A       		.uleb128 0x3a
 4086 011c 0B       		.uleb128 0xb
 4087 011d 3B       		.uleb128 0x3b
 4088 011e 05       		.uleb128 0x5
 4089 011f 49       		.uleb128 0x49
 4090 0120 13       		.uleb128 0x13
 4091 0121 02       		.uleb128 0x2
 4092 0122 17       		.uleb128 0x17
 4093 0123 00       		.byte	0
 4094 0124 00       		.byte	0
 4095 0125 18       		.uleb128 0x18
 4096 0126 26       		.uleb128 0x26
 4097 0127 00       		.byte	0
 4098 0128 49       		.uleb128 0x49
 4099 0129 13       		.uleb128 0x13
 4100 012a 00       		.byte	0
 4101 012b 00       		.byte	0
 4102 012c 19       		.uleb128 0x19
 4103 012d 2E       		.uleb128 0x2e
 4104 012e 01       		.byte	0x1
 4105 012f 03       		.uleb128 0x3
 4106 0130 0E       		.uleb128 0xe
 4107 0131 3A       		.uleb128 0x3a
 4108 0132 0B       		.uleb128 0xb
 4109 0133 3B       		.uleb128 0x3b
 4110 0134 05       		.uleb128 0x5
 4111 0135 27       		.uleb128 0x27
 4112 0136 19       		.uleb128 0x19
 4113 0137 49       		.uleb128 0x49
 4114 0138 13       		.uleb128 0x13
 4115 0139 11       		.uleb128 0x11
 4116 013a 01       		.uleb128 0x1
 4117 013b 12       		.uleb128 0x12
 4118 013c 06       		.uleb128 0x6
 4119 013d 40       		.uleb128 0x40
 4120 013e 18       		.uleb128 0x18
 4121 013f 9742     		.uleb128 0x2117
 4122 0141 19       		.uleb128 0x19
 4123 0142 01       		.uleb128 0x1
 4124 0143 13       		.uleb128 0x13
 4125 0144 00       		.byte	0
 4126 0145 00       		.byte	0
 4127 0146 1A       		.uleb128 0x1a
 4128 0147 2E       		.uleb128 0x2e
 4129 0148 01       		.byte	0x1
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 118


 4130 0149 03       		.uleb128 0x3
 4131 014a 0E       		.uleb128 0xe
 4132 014b 3A       		.uleb128 0x3a
 4133 014c 0B       		.uleb128 0xb
 4134 014d 3B       		.uleb128 0x3b
 4135 014e 05       		.uleb128 0x5
 4136 014f 27       		.uleb128 0x27
 4137 0150 19       		.uleb128 0x19
 4138 0151 20       		.uleb128 0x20
 4139 0152 0B       		.uleb128 0xb
 4140 0153 01       		.uleb128 0x1
 4141 0154 13       		.uleb128 0x13
 4142 0155 00       		.byte	0
 4143 0156 00       		.byte	0
 4144 0157 1B       		.uleb128 0x1b
 4145 0158 34       		.uleb128 0x34
 4146 0159 00       		.byte	0
 4147 015a 03       		.uleb128 0x3
 4148 015b 0E       		.uleb128 0xe
 4149 015c 3A       		.uleb128 0x3a
 4150 015d 0B       		.uleb128 0xb
 4151 015e 3B       		.uleb128 0x3b
 4152 015f 05       		.uleb128 0x5
 4153 0160 49       		.uleb128 0x49
 4154 0161 13       		.uleb128 0x13
 4155 0162 00       		.byte	0
 4156 0163 00       		.byte	0
 4157 0164 1C       		.uleb128 0x1c
 4158 0165 2E       		.uleb128 0x2e
 4159 0166 01       		.byte	0x1
 4160 0167 03       		.uleb128 0x3
 4161 0168 0E       		.uleb128 0xe
 4162 0169 3A       		.uleb128 0x3a
 4163 016a 0B       		.uleb128 0xb
 4164 016b 3B       		.uleb128 0x3b
 4165 016c 05       		.uleb128 0x5
 4166 016d 27       		.uleb128 0x27
 4167 016e 19       		.uleb128 0x19
 4168 016f 11       		.uleb128 0x11
 4169 0170 01       		.uleb128 0x1
 4170 0171 12       		.uleb128 0x12
 4171 0172 06       		.uleb128 0x6
 4172 0173 40       		.uleb128 0x40
 4173 0174 18       		.uleb128 0x18
 4174 0175 9642     		.uleb128 0x2116
 4175 0177 19       		.uleb128 0x19
 4176 0178 01       		.uleb128 0x1
 4177 0179 13       		.uleb128 0x13
 4178 017a 00       		.byte	0
 4179 017b 00       		.byte	0
 4180 017c 1D       		.uleb128 0x1d
 4181 017d 1D       		.uleb128 0x1d
 4182 017e 01       		.byte	0x1
 4183 017f 31       		.uleb128 0x31
 4184 0180 13       		.uleb128 0x13
 4185 0181 11       		.uleb128 0x11
 4186 0182 01       		.uleb128 0x1
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 119


 4187 0183 12       		.uleb128 0x12
 4188 0184 06       		.uleb128 0x6
 4189 0185 58       		.uleb128 0x58
 4190 0186 0B       		.uleb128 0xb
 4191 0187 59       		.uleb128 0x59
 4192 0188 05       		.uleb128 0x5
 4193 0189 00       		.byte	0
 4194 018a 00       		.byte	0
 4195 018b 1E       		.uleb128 0x1e
 4196 018c 0B       		.uleb128 0xb
 4197 018d 01       		.byte	0x1
 4198 018e 11       		.uleb128 0x11
 4199 018f 01       		.uleb128 0x1
 4200 0190 12       		.uleb128 0x12
 4201 0191 06       		.uleb128 0x6
 4202 0192 00       		.byte	0
 4203 0193 00       		.byte	0
 4204 0194 1F       		.uleb128 0x1f
 4205 0195 34       		.uleb128 0x34
 4206 0196 00       		.byte	0
 4207 0197 31       		.uleb128 0x31
 4208 0198 13       		.uleb128 0x13
 4209 0199 02       		.uleb128 0x2
 4210 019a 17       		.uleb128 0x17
 4211 019b 00       		.byte	0
 4212 019c 00       		.byte	0
 4213 019d 20       		.uleb128 0x20
 4214 019e 2E       		.uleb128 0x2e
 4215 019f 01       		.byte	0x1
 4216 01a0 3F       		.uleb128 0x3f
 4217 01a1 19       		.uleb128 0x19
 4218 01a2 03       		.uleb128 0x3
 4219 01a3 0E       		.uleb128 0xe
 4220 01a4 3A       		.uleb128 0x3a
 4221 01a5 0B       		.uleb128 0xb
 4222 01a6 3B       		.uleb128 0x3b
 4223 01a7 05       		.uleb128 0x5
 4224 01a8 27       		.uleb128 0x27
 4225 01a9 19       		.uleb128 0x19
 4226 01aa 11       		.uleb128 0x11
 4227 01ab 01       		.uleb128 0x1
 4228 01ac 12       		.uleb128 0x12
 4229 01ad 06       		.uleb128 0x6
 4230 01ae 40       		.uleb128 0x40
 4231 01af 18       		.uleb128 0x18
 4232 01b0 9642     		.uleb128 0x2116
 4233 01b2 19       		.uleb128 0x19
 4234 01b3 01       		.uleb128 0x1
 4235 01b4 13       		.uleb128 0x13
 4236 01b5 00       		.byte	0
 4237 01b6 00       		.byte	0
 4238 01b7 21       		.uleb128 0x21
 4239 01b8 898201   		.uleb128 0x4109
 4240 01bb 01       		.byte	0x1
 4241 01bc 11       		.uleb128 0x11
 4242 01bd 01       		.uleb128 0x1
 4243 01be 31       		.uleb128 0x31
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 120


 4244 01bf 13       		.uleb128 0x13
 4245 01c0 01       		.uleb128 0x1
 4246 01c1 13       		.uleb128 0x13
 4247 01c2 00       		.byte	0
 4248 01c3 00       		.byte	0
 4249 01c4 22       		.uleb128 0x22
 4250 01c5 8A8201   		.uleb128 0x410a
 4251 01c8 00       		.byte	0
 4252 01c9 02       		.uleb128 0x2
 4253 01ca 18       		.uleb128 0x18
 4254 01cb 9142     		.uleb128 0x2111
 4255 01cd 18       		.uleb128 0x18
 4256 01ce 00       		.byte	0
 4257 01cf 00       		.byte	0
 4258 01d0 23       		.uleb128 0x23
 4259 01d1 898201   		.uleb128 0x4109
 4260 01d4 01       		.byte	0x1
 4261 01d5 11       		.uleb128 0x11
 4262 01d6 01       		.uleb128 0x1
 4263 01d7 31       		.uleb128 0x31
 4264 01d8 13       		.uleb128 0x13
 4265 01d9 00       		.byte	0
 4266 01da 00       		.byte	0
 4267 01db 24       		.uleb128 0x24
 4268 01dc 2E       		.uleb128 0x2e
 4269 01dd 01       		.byte	0x1
 4270 01de 3F       		.uleb128 0x3f
 4271 01df 19       		.uleb128 0x19
 4272 01e0 03       		.uleb128 0x3
 4273 01e1 0E       		.uleb128 0xe
 4274 01e2 3A       		.uleb128 0x3a
 4275 01e3 0B       		.uleb128 0xb
 4276 01e4 3B       		.uleb128 0x3b
 4277 01e5 0B       		.uleb128 0xb
 4278 01e6 27       		.uleb128 0x27
 4279 01e7 19       		.uleb128 0x19
 4280 01e8 11       		.uleb128 0x11
 4281 01e9 01       		.uleb128 0x1
 4282 01ea 12       		.uleb128 0x12
 4283 01eb 06       		.uleb128 0x6
 4284 01ec 40       		.uleb128 0x40
 4285 01ed 18       		.uleb128 0x18
 4286 01ee 9742     		.uleb128 0x2117
 4287 01f0 19       		.uleb128 0x19
 4288 01f1 01       		.uleb128 0x1
 4289 01f2 13       		.uleb128 0x13
 4290 01f3 00       		.byte	0
 4291 01f4 00       		.byte	0
 4292 01f5 25       		.uleb128 0x25
 4293 01f6 34       		.uleb128 0x34
 4294 01f7 00       		.byte	0
 4295 01f8 03       		.uleb128 0x3
 4296 01f9 0E       		.uleb128 0xe
 4297 01fa 3A       		.uleb128 0x3a
 4298 01fb 0B       		.uleb128 0xb
 4299 01fc 3B       		.uleb128 0x3b
 4300 01fd 0B       		.uleb128 0xb
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 121


 4301 01fe 49       		.uleb128 0x49
 4302 01ff 13       		.uleb128 0x13
 4303 0200 02       		.uleb128 0x2
 4304 0201 17       		.uleb128 0x17
 4305 0202 00       		.byte	0
 4306 0203 00       		.byte	0
 4307 0204 26       		.uleb128 0x26
 4308 0205 898201   		.uleb128 0x4109
 4309 0208 00       		.byte	0
 4310 0209 11       		.uleb128 0x11
 4311 020a 01       		.uleb128 0x1
 4312 020b 31       		.uleb128 0x31
 4313 020c 13       		.uleb128 0x13
 4314 020d 00       		.byte	0
 4315 020e 00       		.byte	0
 4316 020f 27       		.uleb128 0x27
 4317 0210 2E       		.uleb128 0x2e
 4318 0211 01       		.byte	0x1
 4319 0212 3F       		.uleb128 0x3f
 4320 0213 19       		.uleb128 0x19
 4321 0214 03       		.uleb128 0x3
 4322 0215 0E       		.uleb128 0xe
 4323 0216 3A       		.uleb128 0x3a
 4324 0217 0B       		.uleb128 0xb
 4325 0218 3B       		.uleb128 0x3b
 4326 0219 05       		.uleb128 0x5
 4327 021a 27       		.uleb128 0x27
 4328 021b 19       		.uleb128 0x19
 4329 021c 11       		.uleb128 0x11
 4330 021d 01       		.uleb128 0x1
 4331 021e 12       		.uleb128 0x12
 4332 021f 06       		.uleb128 0x6
 4333 0220 40       		.uleb128 0x40
 4334 0221 18       		.uleb128 0x18
 4335 0222 9742     		.uleb128 0x2117
 4336 0224 19       		.uleb128 0x19
 4337 0225 01       		.uleb128 0x1
 4338 0226 13       		.uleb128 0x13
 4339 0227 00       		.byte	0
 4340 0228 00       		.byte	0
 4341 0229 28       		.uleb128 0x28
 4342 022a 2E       		.uleb128 0x2e
 4343 022b 01       		.byte	0x1
 4344 022c 3F       		.uleb128 0x3f
 4345 022d 19       		.uleb128 0x19
 4346 022e 03       		.uleb128 0x3
 4347 022f 0E       		.uleb128 0xe
 4348 0230 3A       		.uleb128 0x3a
 4349 0231 0B       		.uleb128 0xb
 4350 0232 3B       		.uleb128 0x3b
 4351 0233 05       		.uleb128 0x5
 4352 0234 27       		.uleb128 0x27
 4353 0235 19       		.uleb128 0x19
 4354 0236 49       		.uleb128 0x49
 4355 0237 13       		.uleb128 0x13
 4356 0238 11       		.uleb128 0x11
 4357 0239 01       		.uleb128 0x1
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 122


 4358 023a 12       		.uleb128 0x12
 4359 023b 06       		.uleb128 0x6
 4360 023c 40       		.uleb128 0x40
 4361 023d 18       		.uleb128 0x18
 4362 023e 9642     		.uleb128 0x2116
 4363 0240 19       		.uleb128 0x19
 4364 0241 01       		.uleb128 0x1
 4365 0242 13       		.uleb128 0x13
 4366 0243 00       		.byte	0
 4367 0244 00       		.byte	0
 4368 0245 29       		.uleb128 0x29
 4369 0246 2E       		.uleb128 0x2e
 4370 0247 01       		.byte	0x1
 4371 0248 03       		.uleb128 0x3
 4372 0249 0E       		.uleb128 0xe
 4373 024a 3A       		.uleb128 0x3a
 4374 024b 0B       		.uleb128 0xb
 4375 024c 3B       		.uleb128 0x3b
 4376 024d 05       		.uleb128 0x5
 4377 024e 27       		.uleb128 0x27
 4378 024f 19       		.uleb128 0x19
 4379 0250 11       		.uleb128 0x11
 4380 0251 01       		.uleb128 0x1
 4381 0252 12       		.uleb128 0x12
 4382 0253 06       		.uleb128 0x6
 4383 0254 40       		.uleb128 0x40
 4384 0255 18       		.uleb128 0x18
 4385 0256 9742     		.uleb128 0x2117
 4386 0258 19       		.uleb128 0x19
 4387 0259 01       		.uleb128 0x1
 4388 025a 13       		.uleb128 0x13
 4389 025b 00       		.byte	0
 4390 025c 00       		.byte	0
 4391 025d 2A       		.uleb128 0x2a
 4392 025e 2E       		.uleb128 0x2e
 4393 025f 01       		.byte	0x1
 4394 0260 3F       		.uleb128 0x3f
 4395 0261 19       		.uleb128 0x19
 4396 0262 03       		.uleb128 0x3
 4397 0263 0E       		.uleb128 0xe
 4398 0264 3A       		.uleb128 0x3a
 4399 0265 0B       		.uleb128 0xb
 4400 0266 3B       		.uleb128 0x3b
 4401 0267 05       		.uleb128 0x5
 4402 0268 27       		.uleb128 0x27
 4403 0269 19       		.uleb128 0x19
 4404 026a 49       		.uleb128 0x49
 4405 026b 13       		.uleb128 0x13
 4406 026c 11       		.uleb128 0x11
 4407 026d 01       		.uleb128 0x1
 4408 026e 12       		.uleb128 0x12
 4409 026f 06       		.uleb128 0x6
 4410 0270 40       		.uleb128 0x40
 4411 0271 18       		.uleb128 0x18
 4412 0272 9742     		.uleb128 0x2117
 4413 0274 19       		.uleb128 0x19
 4414 0275 01       		.uleb128 0x1
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 123


 4415 0276 13       		.uleb128 0x13
 4416 0277 00       		.byte	0
 4417 0278 00       		.byte	0
 4418 0279 2B       		.uleb128 0x2b
 4419 027a 34       		.uleb128 0x34
 4420 027b 00       		.byte	0
 4421 027c 03       		.uleb128 0x3
 4422 027d 0E       		.uleb128 0xe
 4423 027e 3A       		.uleb128 0x3a
 4424 027f 0B       		.uleb128 0xb
 4425 0280 3B       		.uleb128 0x3b
 4426 0281 05       		.uleb128 0x5
 4427 0282 49       		.uleb128 0x49
 4428 0283 13       		.uleb128 0x13
 4429 0284 02       		.uleb128 0x2
 4430 0285 18       		.uleb128 0x18
 4431 0286 00       		.byte	0
 4432 0287 00       		.byte	0
 4433 0288 2C       		.uleb128 0x2c
 4434 0289 34       		.uleb128 0x34
 4435 028a 00       		.byte	0
 4436 028b 03       		.uleb128 0x3
 4437 028c 0E       		.uleb128 0xe
 4438 028d 3A       		.uleb128 0x3a
 4439 028e 0B       		.uleb128 0xb
 4440 028f 3B       		.uleb128 0x3b
 4441 0290 0B       		.uleb128 0xb
 4442 0291 49       		.uleb128 0x49
 4443 0292 13       		.uleb128 0x13
 4444 0293 02       		.uleb128 0x2
 4445 0294 18       		.uleb128 0x18
 4446 0295 00       		.byte	0
 4447 0296 00       		.byte	0
 4448 0297 2D       		.uleb128 0x2d
 4449 0298 34       		.uleb128 0x34
 4450 0299 00       		.byte	0
 4451 029a 03       		.uleb128 0x3
 4452 029b 0E       		.uleb128 0xe
 4453 029c 3A       		.uleb128 0x3a
 4454 029d 0B       		.uleb128 0xb
 4455 029e 3B       		.uleb128 0x3b
 4456 029f 05       		.uleb128 0x5
 4457 02a0 49       		.uleb128 0x49
 4458 02a1 13       		.uleb128 0x13
 4459 02a2 3F       		.uleb128 0x3f
 4460 02a3 19       		.uleb128 0x19
 4461 02a4 3C       		.uleb128 0x3c
 4462 02a5 19       		.uleb128 0x19
 4463 02a6 00       		.byte	0
 4464 02a7 00       		.byte	0
 4465 02a8 2E       		.uleb128 0x2e
 4466 02a9 34       		.uleb128 0x34
 4467 02aa 00       		.byte	0
 4468 02ab 03       		.uleb128 0x3
 4469 02ac 0E       		.uleb128 0xe
 4470 02ad 3A       		.uleb128 0x3a
 4471 02ae 0B       		.uleb128 0xb
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 124


 4472 02af 3B       		.uleb128 0x3b
 4473 02b0 0B       		.uleb128 0xb
 4474 02b1 49       		.uleb128 0x49
 4475 02b2 13       		.uleb128 0x13
 4476 02b3 3F       		.uleb128 0x3f
 4477 02b4 19       		.uleb128 0x19
 4478 02b5 02       		.uleb128 0x2
 4479 02b6 18       		.uleb128 0x18
 4480 02b7 00       		.byte	0
 4481 02b8 00       		.byte	0
 4482 02b9 2F       		.uleb128 0x2f
 4483 02ba 34       		.uleb128 0x34
 4484 02bb 00       		.byte	0
 4485 02bc 03       		.uleb128 0x3
 4486 02bd 0E       		.uleb128 0xe
 4487 02be 3A       		.uleb128 0x3a
 4488 02bf 0B       		.uleb128 0xb
 4489 02c0 3B       		.uleb128 0x3b
 4490 02c1 0B       		.uleb128 0xb
 4491 02c2 49       		.uleb128 0x49
 4492 02c3 13       		.uleb128 0x13
 4493 02c4 3F       		.uleb128 0x3f
 4494 02c5 19       		.uleb128 0x19
 4495 02c6 3C       		.uleb128 0x3c
 4496 02c7 19       		.uleb128 0x19
 4497 02c8 00       		.byte	0
 4498 02c9 00       		.byte	0
 4499 02ca 30       		.uleb128 0x30
 4500 02cb 2E       		.uleb128 0x2e
 4501 02cc 00       		.byte	0
 4502 02cd 3F       		.uleb128 0x3f
 4503 02ce 19       		.uleb128 0x19
 4504 02cf 3C       		.uleb128 0x3c
 4505 02d0 19       		.uleb128 0x19
 4506 02d1 6E       		.uleb128 0x6e
 4507 02d2 0E       		.uleb128 0xe
 4508 02d3 03       		.uleb128 0x3
 4509 02d4 0E       		.uleb128 0xe
 4510 02d5 3A       		.uleb128 0x3a
 4511 02d6 0B       		.uleb128 0xb
 4512 02d7 3B       		.uleb128 0x3b
 4513 02d8 0B       		.uleb128 0xb
 4514 02d9 00       		.byte	0
 4515 02da 00       		.byte	0
 4516 02db 00       		.byte	0
 4517              		.section	.debug_loc,"",%progbits
 4518              	.Ldebug_loc0:
 4519              	.LLST0:
 4520 0000 00000000 		.4byte	.LVL0
 4521 0004 1A000000 		.4byte	.LVL5
 4522 0008 0100     		.2byte	0x1
 4523 000a 50       		.byte	0x50
 4524 000b 1A000000 		.4byte	.LVL5
 4525 000f 1E000000 		.4byte	.LVL7
 4526 0013 0100     		.2byte	0x1
 4527 0015 55       		.byte	0x55
 4528 0016 1E000000 		.4byte	.LVL7
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 125


 4529 001a 20000000 		.4byte	.LVL8
 4530 001e 0100     		.2byte	0x1
 4531 0020 50       		.byte	0x50
 4532 0021 20000000 		.4byte	.LVL8
 4533 0025 82000000 		.4byte	.LVL31
 4534 0029 0100     		.2byte	0x1
 4535 002b 55       		.byte	0x55
 4536 002c 82000000 		.4byte	.LVL31
 4537 0030 8C000000 		.4byte	.LFE10
 4538 0034 0400     		.2byte	0x4
 4539 0036 F3       		.byte	0xf3
 4540 0037 01       		.uleb128 0x1
 4541 0038 50       		.byte	0x50
 4542 0039 9F       		.byte	0x9f
 4543 003a 00000000 		.4byte	0
 4544 003e 00000000 		.4byte	0
 4545              	.LLST1:
 4546 0042 00000000 		.4byte	.LVL0
 4547 0046 10000000 		.4byte	.LVL2
 4548 004a 0100     		.2byte	0x1
 4549 004c 51       		.byte	0x51
 4550 004d 10000000 		.4byte	.LVL2
 4551 0051 82000000 		.4byte	.LVL34
 4552 0055 0100     		.2byte	0x1
 4553 0057 58       		.byte	0x58
 4554 0058 82000000 		.4byte	.LVL34
 4555 005c 8C000000 		.4byte	.LFE10
 4556 0060 0400     		.2byte	0x4
 4557 0062 F3       		.byte	0xf3
 4558 0063 01       		.uleb128 0x1
 4559 0064 51       		.byte	0x51
 4560 0065 9F       		.byte	0x9f
 4561 0066 00000000 		.4byte	0
 4562 006a 00000000 		.4byte	0
 4563              	.LLST2:
 4564 006e 00000000 		.4byte	.LVL0
 4565 0072 22000000 		.4byte	.LVL9
 4566 0076 0100     		.2byte	0x1
 4567 0078 52       		.byte	0x52
 4568 0079 22000000 		.4byte	.LVL9
 4569 007d 33000000 		.4byte	.LVL14-1
 4570 0081 0300     		.2byte	0x3
 4571 0083 72       		.byte	0x72
 4572 0084 6C       		.sleb128 -20
 4573 0085 9F       		.byte	0x9f
 4574 0086 33000000 		.4byte	.LVL14-1
 4575 008a 8C000000 		.4byte	.LFE10
 4576 008e 0400     		.2byte	0x4
 4577 0090 F3       		.byte	0xf3
 4578 0091 01       		.uleb128 0x1
 4579 0092 52       		.byte	0x52
 4580 0093 9F       		.byte	0x9f
 4581 0094 00000000 		.4byte	0
 4582 0098 00000000 		.4byte	0
 4583              	.LLST3:
 4584 009c 4E000000 		.4byte	.LVL20
 4585 00a0 5A000000 		.4byte	.LVL21
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 126


 4586 00a4 0100     		.2byte	0x1
 4587 00a6 50       		.byte	0x50
 4588 00a7 64000000 		.4byte	.LVL24
 4589 00ab 6E000000 		.4byte	.LVL27
 4590 00af 0100     		.2byte	0x1
 4591 00b1 50       		.byte	0x50
 4592 00b2 00000000 		.4byte	0
 4593 00b6 00000000 		.4byte	0
 4594              	.LLST4:
 4595 00ba 42000000 		.4byte	.LVL18
 4596 00be 4A000000 		.4byte	.LVL19
 4597 00c2 0200     		.2byte	0x2
 4598 00c4 30       		.byte	0x30
 4599 00c5 9F       		.byte	0x9f
 4600 00c6 4A000000 		.4byte	.LVL19
 4601 00ca 82000000 		.4byte	.LVL33
 4602 00ce 0100     		.2byte	0x1
 4603 00d0 57       		.byte	0x57
 4604 00d1 00000000 		.4byte	0
 4605 00d5 00000000 		.4byte	0
 4606              	.LLST5:
 4607 00d9 4A000000 		.4byte	.LVL19
 4608 00dd 5A000000 		.4byte	.LVL21
 4609 00e1 0100     		.2byte	0x1
 4610 00e3 51       		.byte	0x51
 4611 00e4 5C000000 		.4byte	.LVL22
 4612 00e8 5E000000 		.4byte	.LVL23
 4613 00ec 0100     		.2byte	0x1
 4614 00ee 53       		.byte	0x53
 4615 00ef 5E000000 		.4byte	.LVL23
 4616 00f3 72000000 		.4byte	.LVL29
 4617 00f7 0100     		.2byte	0x1
 4618 00f9 51       		.byte	0x51
 4619 00fa 00000000 		.4byte	0
 4620 00fe 00000000 		.4byte	0
 4621              	.LLST6:
 4622 0102 24000000 		.4byte	.LVL10
 4623 0106 2A000000 		.4byte	.LVL11
 4624 010a 0100     		.2byte	0x1
 4625 010c 52       		.byte	0x52
 4626 010d 2A000000 		.4byte	.LVL11
 4627 0111 42000000 		.4byte	.LVL18
 4628 0115 0100     		.2byte	0x1
 4629 0117 57       		.byte	0x57
 4630 0118 42000000 		.4byte	.LVL18
 4631 011c 4A000000 		.4byte	.LVL19
 4632 0120 0100     		.2byte	0x1
 4633 0122 50       		.byte	0x50
 4634 0123 4A000000 		.4byte	.LVL19
 4635 0127 8C000000 		.4byte	.LFE10
 4636 012b 0100     		.2byte	0x1
 4637 012d 52       		.byte	0x52
 4638 012e 00000000 		.4byte	0
 4639 0132 00000000 		.4byte	0
 4640              	.LLST7:
 4641 0136 14000000 		.4byte	.LVL4
 4642 013a 1C000000 		.4byte	.LVL6
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 127


 4643 013e 0200     		.2byte	0x2
 4644 0140 30       		.byte	0x30
 4645 0141 9F       		.byte	0x9f
 4646 0142 1C000000 		.4byte	.LVL6
 4647 0146 1E000000 		.4byte	.LVL7
 4648 014a 0100     		.2byte	0x1
 4649 014c 50       		.byte	0x50
 4650 014d 1E000000 		.4byte	.LVL7
 4651 0151 20000000 		.4byte	.LVL8
 4652 0155 0200     		.2byte	0x2
 4653 0157 30       		.byte	0x30
 4654 0158 9F       		.byte	0x9f
 4655 0159 20000000 		.4byte	.LVL8
 4656 015d 2E000000 		.4byte	.LVL13
 4657 0161 0100     		.2byte	0x1
 4658 0163 50       		.byte	0x50
 4659 0164 36000000 		.4byte	.LVL15
 4660 0168 38000000 		.4byte	.LVL16
 4661 016c 0100     		.2byte	0x1
 4662 016e 50       		.byte	0x50
 4663 016f 38000000 		.4byte	.LVL16
 4664 0173 82000000 		.4byte	.LVL32
 4665 0177 0100     		.2byte	0x1
 4666 0179 56       		.byte	0x56
 4667 017a 00000000 		.4byte	0
 4668 017e 00000000 		.4byte	0
 4669              	.LLST8:
 4670 0182 0C000000 		.4byte	.LVL1
 4671 0186 4A000000 		.4byte	.LVL19
 4672 018a 0200     		.2byte	0x2
 4673 018c 30       		.byte	0x30
 4674 018d 9F       		.byte	0x9f
 4675 018e 4A000000 		.4byte	.LVL19
 4676 0192 68000000 		.4byte	.LVL25
 4677 0196 0200     		.2byte	0x2
 4678 0198 91       		.byte	0x91
 4679 0199 64       		.sleb128 -28
 4680 019a 6A000000 		.4byte	.LVL26
 4681 019e 8C000000 		.4byte	.LFE10
 4682 01a2 0200     		.2byte	0x2
 4683 01a4 91       		.byte	0x91
 4684 01a5 64       		.sleb128 -28
 4685 01a6 00000000 		.4byte	0
 4686 01aa 00000000 		.4byte	0
 4687              	.LLST9:
 4688 01ae 12000000 		.4byte	.LVL3
 4689 01b2 2C000000 		.4byte	.LVL12
 4690 01b6 0100     		.2byte	0x1
 4691 01b8 53       		.byte	0x53
 4692 01b9 00000000 		.4byte	0
 4693 01bd 00000000 		.4byte	0
 4694              	.LLST10:
 4695 01c1 14000000 		.4byte	.LVL4
 4696 01c5 82000000 		.4byte	.LVL30
 4697 01c9 0100     		.2byte	0x1
 4698 01cb 54       		.byte	0x54
 4699 01cc 00000000 		.4byte	0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 128


 4700 01d0 00000000 		.4byte	0
 4701              	.LLST11:
 4702 01d4 00000000 		.4byte	.LVL35
 4703 01d8 06000000 		.4byte	.LVL37
 4704 01dc 0100     		.2byte	0x1
 4705 01de 50       		.byte	0x50
 4706 01df 06000000 		.4byte	.LVL37
 4707 01e3 0C000000 		.4byte	.LFE17
 4708 01e7 0400     		.2byte	0x4
 4709 01e9 F3       		.byte	0xf3
 4710 01ea 01       		.uleb128 0x1
 4711 01eb 50       		.byte	0x50
 4712 01ec 9F       		.byte	0x9f
 4713 01ed 00000000 		.4byte	0
 4714 01f1 00000000 		.4byte	0
 4715              	.LLST12:
 4716 01f5 02000000 		.4byte	.LVL36
 4717 01f9 0A000000 		.4byte	.LVL38
 4718 01fd 0100     		.2byte	0x1
 4719 01ff 53       		.byte	0x53
 4720 0200 0A000000 		.4byte	.LVL38
 4721 0204 0C000000 		.4byte	.LFE17
 4722 0208 0700     		.2byte	0x7
 4723 020a 70       		.byte	0x70
 4724 020b 00       		.sleb128 0
 4725 020c 0A       		.byte	0xa
 4726 020d FFFF     		.2byte	0xffff
 4727 020f 1A       		.byte	0x1a
 4728 0210 9F       		.byte	0x9f
 4729 0211 00000000 		.4byte	0
 4730 0215 00000000 		.4byte	0
 4731              	.LLST13:
 4732 0219 0A000000 		.4byte	.LVL39
 4733 021d 1E000000 		.4byte	.LVL40
 4734 0221 0600     		.2byte	0x6
 4735 0223 0C       		.byte	0xc
 4736 0224 800E0F00 		.4byte	0xf0e80
 4737 0228 9F       		.byte	0x9f
 4738 0229 1E000000 		.4byte	.LVL40
 4739 022d 2E000000 		.4byte	.LVL44
 4740 0231 0100     		.2byte	0x1
 4741 0233 53       		.byte	0x53
 4742 0234 2E000000 		.4byte	.LVL44
 4743 0238 30000000 		.4byte	.LVL45
 4744 023c 0500     		.2byte	0x5
 4745 023e 0C       		.byte	0xc
 4746 023f C0010B40 		.4byte	0x400b01c0
 4747 0243 00000000 		.4byte	0
 4748 0247 00000000 		.4byte	0
 4749              	.LLST14:
 4750 024b 0A000000 		.4byte	.LVL39
 4751 024f 20000000 		.4byte	.LVL41
 4752 0253 0100     		.2byte	0x1
 4753 0255 52       		.byte	0x52
 4754 0256 00000000 		.4byte	0
 4755 025a 00000000 		.4byte	0
 4756              	.LLST15:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 129


 4757 025e AA000000 		.4byte	.LVL51
 4758 0262 AE000000 		.4byte	.LVL52
 4759 0266 0100     		.2byte	0x1
 4760 0268 53       		.byte	0x53
 4761 0269 00000000 		.4byte	0
 4762 026d 00000000 		.4byte	0
 4763              	.LLST16:
 4764 0271 66000000 		.4byte	.LVL46
 4765 0275 6A000000 		.4byte	.LVL47
 4766 0279 0300     		.2byte	0x3
 4767 027b 08       		.byte	0x8
 4768 027c F0       		.byte	0xf0
 4769 027d 9F       		.byte	0x9f
 4770 027e 6A000000 		.4byte	.LVL47
 4771 0282 7A000000 		.4byte	.LVL49
 4772 0286 0100     		.2byte	0x1
 4773 0288 53       		.byte	0x53
 4774 0289 00000000 		.4byte	0
 4775 028d 00000000 		.4byte	0
 4776              	.LLST17:
 4777 0291 94000000 		.4byte	.LVL50
 4778 0295 C8000000 		.4byte	.LVL53
 4779 0299 0100     		.2byte	0x1
 4780 029b 50       		.byte	0x50
 4781 029c 00000000 		.4byte	0
 4782 02a0 00000000 		.4byte	0
 4783              	.LLST18:
 4784 02a4 78000000 		.4byte	.LVL58
 4785 02a8 8B000000 		.4byte	.LVL62-1
 4786 02ac 0100     		.2byte	0x1
 4787 02ae 50       		.byte	0x50
 4788 02af 9E000000 		.4byte	.LVL63
 4789 02b3 B1000000 		.4byte	.LVL67-1
 4790 02b7 0100     		.2byte	0x1
 4791 02b9 50       		.byte	0x50
 4792 02ba EC000000 		.4byte	.LVL69
 4793 02be F9000000 		.4byte	.LVL72-1
 4794 02c2 0100     		.2byte	0x1
 4795 02c4 50       		.byte	0x50
 4796 02c5 FE000000 		.4byte	.LVL73
 4797 02c9 09010000 		.4byte	.LVL76-1
 4798 02cd 0100     		.2byte	0x1
 4799 02cf 50       		.byte	0x50
 4800 02d0 0E010000 		.4byte	.LVL77
 4801 02d4 21010000 		.4byte	.LVL81-1
 4802 02d8 0100     		.2byte	0x1
 4803 02da 50       		.byte	0x50
 4804 02db 26010000 		.4byte	.LVL82
 4805 02df 37010000 		.4byte	.LVL86-1
 4806 02e3 0100     		.2byte	0x1
 4807 02e5 50       		.byte	0x50
 4808 02e6 00000000 		.4byte	0
 4809 02ea 00000000 		.4byte	0
 4810              	.LLST19:
 4811 02ee 7C000000 		.4byte	.LVL59
 4812 02f2 80000000 		.4byte	.LVL60
 4813 02f6 0100     		.2byte	0x1
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 130


 4814 02f8 51       		.byte	0x51
 4815 02f9 80000000 		.4byte	.LVL60
 4816 02fd 8B000000 		.4byte	.LVL62-1
 4817 0301 0100     		.2byte	0x1
 4818 0303 53       		.byte	0x53
 4819 0304 A2000000 		.4byte	.LVL64
 4820 0308 A6000000 		.4byte	.LVL65
 4821 030c 0100     		.2byte	0x1
 4822 030e 51       		.byte	0x51
 4823 030f A6000000 		.4byte	.LVL65
 4824 0313 B1000000 		.4byte	.LVL67-1
 4825 0317 0100     		.2byte	0x1
 4826 0319 53       		.byte	0x53
 4827 031a F0000000 		.4byte	.LVL70
 4828 031e F4000000 		.4byte	.LVL71
 4829 0322 0100     		.2byte	0x1
 4830 0324 52       		.byte	0x52
 4831 0325 F4000000 		.4byte	.LVL71
 4832 0329 F9000000 		.4byte	.LVL72-1
 4833 032d 0100     		.2byte	0x1
 4834 032f 53       		.byte	0x53
 4835 0330 00010000 		.4byte	.LVL74
 4836 0334 04010000 		.4byte	.LVL75
 4837 0338 0100     		.2byte	0x1
 4838 033a 52       		.byte	0x52
 4839 033b 04010000 		.4byte	.LVL75
 4840 033f 09010000 		.4byte	.LVL76-1
 4841 0343 0100     		.2byte	0x1
 4842 0345 53       		.byte	0x53
 4843 0346 12010000 		.4byte	.LVL78
 4844 034a 16010000 		.4byte	.LVL79
 4845 034e 0100     		.2byte	0x1
 4846 0350 52       		.byte	0x52
 4847 0351 16010000 		.4byte	.LVL79
 4848 0355 21010000 		.4byte	.LVL81-1
 4849 0359 0100     		.2byte	0x1
 4850 035b 53       		.byte	0x53
 4851 035c 28010000 		.4byte	.LVL83
 4852 0360 2C010000 		.4byte	.LVL84
 4853 0364 0100     		.2byte	0x1
 4854 0366 52       		.byte	0x52
 4855 0367 2C010000 		.4byte	.LVL84
 4856 036b 37010000 		.4byte	.LVL86-1
 4857 036f 0100     		.2byte	0x1
 4858 0371 53       		.byte	0x53
 4859 0372 00000000 		.4byte	0
 4860 0376 00000000 		.4byte	0
 4861              	.LLST20:
 4862 037a 00000000 		.4byte	.LVL91
 4863 037e 22000000 		.4byte	.LVL93
 4864 0382 0100     		.2byte	0x1
 4865 0384 50       		.byte	0x50
 4866 0385 22000000 		.4byte	.LVL93
 4867 0389 28010000 		.4byte	.LFE9
 4868 038d 0200     		.2byte	0x2
 4869 038f 91       		.byte	0x91
 4870 0390 5C       		.sleb128 -36
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 131


 4871 0391 00000000 		.4byte	0
 4872 0395 00000000 		.4byte	0
 4873              	.LLST21:
 4874 0399 00000000 		.4byte	.LVL91
 4875 039d 25000000 		.4byte	.LVL94-1
 4876 03a1 0100     		.2byte	0x1
 4877 03a3 51       		.byte	0x51
 4878 03a4 25000000 		.4byte	.LVL94-1
 4879 03a8 28010000 		.4byte	.LFE9
 4880 03ac 0400     		.2byte	0x4
 4881 03ae F3       		.byte	0xf3
 4882 03af 01       		.uleb128 0x1
 4883 03b0 51       		.byte	0x51
 4884 03b1 9F       		.byte	0x9f
 4885 03b2 00000000 		.4byte	0
 4886 03b6 00000000 		.4byte	0
 4887              	.LLST22:
 4888 03ba 2C000000 		.4byte	.LVL95
 4889 03be 30000000 		.4byte	.LVL96
 4890 03c2 0700     		.2byte	0x7
 4891 03c4 70       		.byte	0x70
 4892 03c5 00       		.sleb128 0
 4893 03c6 0A       		.byte	0xa
 4894 03c7 FFFF     		.2byte	0xffff
 4895 03c9 1A       		.byte	0x1a
 4896 03ca 9F       		.byte	0x9f
 4897 03cb 38000000 		.4byte	.LVL98
 4898 03cf 42000000 		.4byte	.LVL100
 4899 03d3 0100     		.2byte	0x1
 4900 03d5 50       		.byte	0x50
 4901 03d6 42000000 		.4byte	.LVL100
 4902 03da 08010000 		.4byte	.LVL128
 4903 03de 0100     		.2byte	0x1
 4904 03e0 56       		.byte	0x56
 4905 03e1 00000000 		.4byte	0
 4906 03e5 00000000 		.4byte	0
 4907              	.LLST23:
 4908 03e9 3E000000 		.4byte	.LVL99
 4909 03ed 08010000 		.4byte	.LVL127
 4910 03f1 0100     		.2byte	0x1
 4911 03f3 55       		.byte	0x55
 4912 03f4 00000000 		.4byte	0
 4913 03f8 00000000 		.4byte	0
 4914              	.LLST24:
 4915 03fc 3E000000 		.4byte	.LVL99
 4916 0400 42000000 		.4byte	.LVL100
 4917 0404 0200     		.2byte	0x2
 4918 0406 30       		.byte	0x30
 4919 0407 9F       		.byte	0x9f
 4920 0408 42000000 		.4byte	.LVL100
 4921 040c 6B000000 		.4byte	.LVL104-1
 4922 0410 0100     		.2byte	0x1
 4923 0412 51       		.byte	0x51
 4924 0413 8E000000 		.4byte	.LVL110
 4925 0417 92000000 		.4byte	.LVL111
 4926 041b 0200     		.2byte	0x2
 4927 041d 30       		.byte	0x30
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 132


 4928 041e 9F       		.byte	0x9f
 4929 041f 92000000 		.4byte	.LVL111
 4930 0423 C9000000 		.4byte	.LVL115-1
 4931 0427 0100     		.2byte	0x1
 4932 0429 51       		.byte	0x51
 4933 042a 00000000 		.4byte	0
 4934 042e 00000000 		.4byte	0
 4935              	.LLST25:
 4936 0432 70000000 		.4byte	.LVL105
 4937 0436 74000000 		.4byte	.LVL106
 4938 043a 0600     		.2byte	0x6
 4939 043c 0C       		.byte	0xc
 4940 043d 00A60E00 		.4byte	0xea600
 4941 0441 9F       		.byte	0x9f
 4942 0442 74000000 		.4byte	.LVL106
 4943 0446 86000000 		.4byte	.LVL108
 4944 044a 0100     		.2byte	0x1
 4945 044c 53       		.byte	0x53
 4946 044d D6000000 		.4byte	.LVL118
 4947 0451 DE000000 		.4byte	.LVL120
 4948 0455 0100     		.2byte	0x1
 4949 0457 53       		.byte	0x53
 4950 0458 E0000000 		.4byte	.LVL121
 4951 045c EC000000 		.4byte	.LVL122
 4952 0460 0100     		.2byte	0x1
 4953 0462 53       		.byte	0x53
 4954 0463 00000000 		.4byte	0
 4955 0467 00000000 		.4byte	0
 4956              	.LLST26:
 4957 046b 10000000 		.4byte	.LVL92
 4958 046f 64000000 		.4byte	.LVL102
 4959 0473 0200     		.2byte	0x2
 4960 0475 30       		.byte	0x30
 4961 0476 9F       		.byte	0x9f
 4962 0477 64000000 		.4byte	.LVL102
 4963 047b 66000000 		.4byte	.LVL103
 4964 047f 0100     		.2byte	0x1
 4965 0481 52       		.byte	0x52
 4966 0482 66000000 		.4byte	.LVL103
 4967 0486 D4000000 		.4byte	.LVL117
 4968 048a 0100     		.2byte	0x1
 4969 048c 58       		.byte	0x58
 4970 048d D4000000 		.4byte	.LVL117
 4971 0491 D6000000 		.4byte	.LVL118
 4972 0495 0100     		.2byte	0x1
 4973 0497 53       		.byte	0x53
 4974 0498 D6000000 		.4byte	.LVL118
 4975 049c DE000000 		.4byte	.LVL120
 4976 04a0 0100     		.2byte	0x1
 4977 04a2 58       		.byte	0x58
 4978 04a3 DE000000 		.4byte	.LVL120
 4979 04a7 E0000000 		.4byte	.LVL121
 4980 04ab 0100     		.2byte	0x1
 4981 04ad 53       		.byte	0x53
 4982 04ae E0000000 		.4byte	.LVL121
 4983 04b2 08010000 		.4byte	.LVL129
 4984 04b6 0100     		.2byte	0x1
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 133


 4985 04b8 58       		.byte	0x58
 4986 04b9 08010000 		.4byte	.LVL129
 4987 04bd 28010000 		.4byte	.LFE9
 4988 04c1 0100     		.2byte	0x1
 4989 04c3 50       		.byte	0x50
 4990 04c4 00000000 		.4byte	0
 4991 04c8 00000000 		.4byte	0
 4992              	.LLST27:
 4993 04cc 10000000 		.4byte	.LVL92
 4994 04d0 64000000 		.4byte	.LVL102
 4995 04d4 0300     		.2byte	0x3
 4996 04d6 08       		.byte	0x8
 4997 04d7 40       		.byte	0x40
 4998 04d8 9F       		.byte	0x9f
 4999 04d9 64000000 		.4byte	.LVL102
 5000 04dd 66000000 		.4byte	.LVL103
 5001 04e1 0100     		.2byte	0x1
 5002 04e3 54       		.byte	0x54
 5003 04e4 66000000 		.4byte	.LVL103
 5004 04e8 B4000000 		.4byte	.LVL113
 5005 04ec 0100     		.2byte	0x1
 5006 04ee 57       		.byte	0x57
 5007 04ef B4000000 		.4byte	.LVL113
 5008 04f3 08010000 		.4byte	.LVL126
 5009 04f7 0100     		.2byte	0x1
 5010 04f9 54       		.byte	0x54
 5011 04fa 00000000 		.4byte	0
 5012 04fe 00000000 		.4byte	0
 5013              	.LLST28:
 5014 0502 10000000 		.4byte	.LVL92
 5015 0506 64000000 		.4byte	.LVL102
 5016 050a 0300     		.2byte	0x3
 5017 050c 08       		.byte	0x8
 5018 050d 20       		.byte	0x20
 5019 050e 9F       		.byte	0x9f
 5020 050f 64000000 		.4byte	.LVL102
 5021 0513 66000000 		.4byte	.LVL103
 5022 0517 0100     		.2byte	0x1
 5023 0519 53       		.byte	0x53
 5024 051a 66000000 		.4byte	.LVL103
 5025 051e B8000000 		.4byte	.LVL114
 5026 0522 0100     		.2byte	0x1
 5027 0524 54       		.byte	0x54
 5028 0525 B8000000 		.4byte	.LVL114
 5029 0529 C9000000 		.4byte	.LVL115-1
 5030 052d 0100     		.2byte	0x1
 5031 052f 53       		.byte	0x53
 5032 0530 C9000000 		.4byte	.LVL115-1
 5033 0534 08010000 		.4byte	.LVL126
 5034 0538 0500     		.2byte	0x5
 5035 053a 74       		.byte	0x74
 5036 053b 00       		.sleb128 0
 5037 053c 31       		.byte	0x31
 5038 053d 25       		.byte	0x25
 5039 053e 9F       		.byte	0x9f
 5040 053f 00000000 		.4byte	0
 5041 0543 00000000 		.4byte	0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 134


 5042              	.LLST29:
 5043 0547 00000000 		.4byte	.LVL130
 5044 054b 10000000 		.4byte	.LVL131
 5045 054f 0100     		.2byte	0x1
 5046 0551 50       		.byte	0x50
 5047 0552 10000000 		.4byte	.LVL131
 5048 0556 24000000 		.4byte	.LVL134
 5049 055a 0100     		.2byte	0x1
 5050 055c 54       		.byte	0x54
 5051 055d 24000000 		.4byte	.LVL134
 5052 0561 26000000 		.4byte	.LFE12
 5053 0565 0400     		.2byte	0x4
 5054 0567 F3       		.byte	0xf3
 5055 0568 01       		.uleb128 0x1
 5056 0569 50       		.byte	0x50
 5057 056a 9F       		.byte	0x9f
 5058 056b 00000000 		.4byte	0
 5059 056f 00000000 		.4byte	0
 5060              	.LLST30:
 5061 0573 00000000 		.4byte	.LVL135
 5062 0577 0E000000 		.4byte	.LVL136
 5063 057b 0100     		.2byte	0x1
 5064 057d 50       		.byte	0x50
 5065 057e 0E000000 		.4byte	.LVL136
 5066 0582 22000000 		.4byte	.LVL139
 5067 0586 0100     		.2byte	0x1
 5068 0588 54       		.byte	0x54
 5069 0589 22000000 		.4byte	.LVL139
 5070 058d 24000000 		.4byte	.LFE13
 5071 0591 0400     		.2byte	0x4
 5072 0593 F3       		.byte	0xf3
 5073 0594 01       		.uleb128 0x1
 5074 0595 50       		.byte	0x50
 5075 0596 9F       		.byte	0x9f
 5076 0597 00000000 		.4byte	0
 5077 059b 00000000 		.4byte	0
 5078              	.LLST31:
 5079 059f 00000000 		.4byte	.LVL145
 5080 05a3 07000000 		.4byte	.LVL146-1
 5081 05a7 0100     		.2byte	0x1
 5082 05a9 50       		.byte	0x50
 5083 05aa 07000000 		.4byte	.LVL146-1
 5084 05ae 20000000 		.4byte	.LVL152
 5085 05b2 0100     		.2byte	0x1
 5086 05b4 54       		.byte	0x54
 5087 05b5 20000000 		.4byte	.LVL152
 5088 05b9 44000000 		.4byte	.LFE14
 5089 05bd 0400     		.2byte	0x4
 5090 05bf F3       		.byte	0xf3
 5091 05c0 01       		.uleb128 0x1
 5092 05c1 50       		.byte	0x50
 5093 05c2 9F       		.byte	0x9f
 5094 05c3 00000000 		.4byte	0
 5095 05c7 00000000 		.4byte	0
 5096              	.LLST32:
 5097 05cb 0C000000 		.4byte	.LVL147
 5098 05cf 15000000 		.4byte	.LVL149-1
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 135


 5099 05d3 0100     		.2byte	0x1
 5100 05d5 53       		.byte	0x53
 5101 05d6 1E000000 		.4byte	.LVL151
 5102 05da 3B000000 		.4byte	.LVL155-1
 5103 05de 0100     		.2byte	0x1
 5104 05e0 53       		.byte	0x53
 5105 05e1 00000000 		.4byte	0
 5106 05e5 00000000 		.4byte	0
 5107              	.LLST33:
 5108 05e9 08000000 		.4byte	.LVL146
 5109 05ed 15000000 		.4byte	.LVL149-1
 5110 05f1 0100     		.2byte	0x1
 5111 05f3 50       		.byte	0x50
 5112 05f4 1A000000 		.4byte	.LVL150
 5113 05f8 3B000000 		.4byte	.LVL155-1
 5114 05fc 0100     		.2byte	0x1
 5115 05fe 50       		.byte	0x50
 5116 05ff 00000000 		.4byte	0
 5117 0603 00000000 		.4byte	0
 5118              	.LLST34:
 5119 0607 00000000 		.4byte	.LVL156
 5120 060b 07000000 		.4byte	.LVL157-1
 5121 060f 0100     		.2byte	0x1
 5122 0611 50       		.byte	0x50
 5123 0612 07000000 		.4byte	.LVL157-1
 5124 0616 46000000 		.4byte	.LVL168
 5125 061a 0100     		.2byte	0x1
 5126 061c 54       		.byte	0x54
 5127 061d 46000000 		.4byte	.LVL168
 5128 0621 4C000000 		.4byte	.LFE15
 5129 0625 0400     		.2byte	0x4
 5130 0627 F3       		.byte	0xf3
 5131 0628 01       		.uleb128 0x1
 5132 0629 50       		.byte	0x50
 5133 062a 9F       		.byte	0x9f
 5134 062b 00000000 		.4byte	0
 5135 062f 00000000 		.4byte	0
 5136              	.LLST35:
 5137 0633 0C000000 		.4byte	.LVL158
 5138 0637 15000000 		.4byte	.LVL160-1
 5139 063b 0100     		.2byte	0x1
 5140 063d 53       		.byte	0x53
 5141 063e 1E000000 		.4byte	.LVL162
 5142 0642 45000000 		.4byte	.LVL167-1
 5143 0646 0100     		.2byte	0x1
 5144 0648 53       		.byte	0x53
 5145 0649 00000000 		.4byte	0
 5146 064d 00000000 		.4byte	0
 5147              	.LLST36:
 5148 0651 08000000 		.4byte	.LVL157
 5149 0655 15000000 		.4byte	.LVL160-1
 5150 0659 0100     		.2byte	0x1
 5151 065b 50       		.byte	0x50
 5152 065c 1A000000 		.4byte	.LVL161
 5153 0660 45000000 		.4byte	.LVL167-1
 5154 0664 0100     		.2byte	0x1
 5155 0666 50       		.byte	0x50
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 136


 5156 0667 00000000 		.4byte	0
 5157 066b 00000000 		.4byte	0
 5158              	.LLST37:
 5159 066f 00000000 		.4byte	.LVL180
 5160 0673 0C000000 		.4byte	.LVL181
 5161 0677 0100     		.2byte	0x1
 5162 0679 50       		.byte	0x50
 5163 067a 0C000000 		.4byte	.LVL181
 5164 067e 22000000 		.4byte	.LVL185
 5165 0682 0100     		.2byte	0x1
 5166 0684 54       		.byte	0x54
 5167 0685 22000000 		.4byte	.LVL185
 5168 0689 6C000000 		.4byte	.LFE3
 5169 068d 0400     		.2byte	0x4
 5170 068f F3       		.byte	0xf3
 5171 0690 01       		.uleb128 0x1
 5172 0691 50       		.byte	0x50
 5173 0692 9F       		.byte	0x9f
 5174 0693 00000000 		.4byte	0
 5175 0697 00000000 		.4byte	0
 5176              	.LLST38:
 5177 069b 20000000 		.4byte	.LVL184
 5178 069f 4C000000 		.4byte	.LVL195
 5179 06a3 0100     		.2byte	0x1
 5180 06a5 55       		.byte	0x55
 5181 06a6 00000000 		.4byte	0
 5182 06aa 00000000 		.4byte	0
 5183              	.LLST39:
 5184 06ae 34000000 		.4byte	.LVL187
 5185 06b2 3C000000 		.4byte	.LVL191
 5186 06b6 0100     		.2byte	0x1
 5187 06b8 53       		.byte	0x53
 5188 06b9 3C000000 		.4byte	.LVL191
 5189 06bd 3E000000 		.4byte	.LVL192
 5190 06c1 0800     		.2byte	0x8
 5191 06c3 75       		.byte	0x75
 5192 06c4 0C       		.sleb128 12
 5193 06c5 94       		.byte	0x94
 5194 06c6 01       		.byte	0x1
 5195 06c7 08       		.byte	0x8
 5196 06c8 FF       		.byte	0xff
 5197 06c9 1A       		.byte	0x1a
 5198 06ca 9F       		.byte	0x9f
 5199 06cb 3E000000 		.4byte	.LVL192
 5200 06cf 4C000000 		.4byte	.LVL194
 5201 06d3 0100     		.2byte	0x1
 5202 06d5 54       		.byte	0x54
 5203 06d6 00000000 		.4byte	0
 5204 06da 00000000 		.4byte	0
 5205              	.LLST40:
 5206 06de 22000000 		.4byte	.LVL185
 5207 06e2 36000000 		.4byte	.LVL188
 5208 06e6 0100     		.2byte	0x1
 5209 06e8 54       		.byte	0x54
 5210 06e9 36000000 		.4byte	.LVL188
 5211 06ed 38000000 		.4byte	.LVL189
 5212 06f1 0300     		.2byte	0x3
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 137


 5213 06f3 74       		.byte	0x74
 5214 06f4 01       		.sleb128 1
 5215 06f5 9F       		.byte	0x9f
 5216 06f6 3A000000 		.4byte	.LVL190
 5217 06fa 3E000000 		.4byte	.LVL192
 5218 06fe 0100     		.2byte	0x1
 5219 0700 54       		.byte	0x54
 5220 0701 00000000 		.4byte	0
 5221 0705 00000000 		.4byte	0
 5222              	.LLST41:
 5223 0709 00000000 		.4byte	.LVL196
 5224 070d 07000000 		.4byte	.LVL197-1
 5225 0711 0100     		.2byte	0x1
 5226 0713 50       		.byte	0x50
 5227 0714 07000000 		.4byte	.LVL197-1
 5228 0718 84000000 		.4byte	.LFE4
 5229 071c 0400     		.2byte	0x4
 5230 071e F3       		.byte	0xf3
 5231 071f 01       		.uleb128 0x1
 5232 0720 50       		.byte	0x50
 5233 0721 9F       		.byte	0x9f
 5234 0722 00000000 		.4byte	0
 5235 0726 00000000 		.4byte	0
 5236              	.LLST42:
 5237 072a 00000000 		.4byte	.LVL196
 5238 072e 07000000 		.4byte	.LVL197-1
 5239 0732 0100     		.2byte	0x1
 5240 0734 51       		.byte	0x51
 5241 0735 07000000 		.4byte	.LVL197-1
 5242 0739 3A000000 		.4byte	.LVL202
 5243 073d 0100     		.2byte	0x1
 5244 073f 54       		.byte	0x54
 5245 0740 3A000000 		.4byte	.LVL202
 5246 0744 84000000 		.4byte	.LFE4
 5247 0748 0400     		.2byte	0x4
 5248 074a F3       		.byte	0xf3
 5249 074b 01       		.uleb128 0x1
 5250 074c 51       		.byte	0x51
 5251 074d 9F       		.byte	0x9f
 5252 074e 00000000 		.4byte	0
 5253 0752 00000000 		.4byte	0
 5254              	.LLST43:
 5255 0756 36000000 		.4byte	.LVL201
 5256 075a 4A000000 		.4byte	.LVL203
 5257 075e 0100     		.2byte	0x1
 5258 0760 51       		.byte	0x51
 5259 0761 00000000 		.4byte	0
 5260 0765 00000000 		.4byte	0
 5261              	.LLST44:
 5262 0769 2E000000 		.4byte	.LVL199
 5263 076d 32000000 		.4byte	.LVL200
 5264 0771 0100     		.2byte	0x1
 5265 0773 50       		.byte	0x50
 5266 0774 32000000 		.4byte	.LVL200
 5267 0778 68000000 		.4byte	.LVL206
 5268 077c 0100     		.2byte	0x1
 5269 077e 56       		.byte	0x56
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 138


 5270 077f 00000000 		.4byte	0
 5271 0783 00000000 		.4byte	0
 5272              	.LLST45:
 5273 0787 00000000 		.4byte	.LVL207
 5274 078b 02000000 		.4byte	.LVL208
 5275 078f 0100     		.2byte	0x1
 5276 0791 50       		.byte	0x50
 5277 0792 02000000 		.4byte	.LVL208
 5278 0796 10000000 		.4byte	.LFE16
 5279 079a 0400     		.2byte	0x4
 5280 079c F3       		.byte	0xf3
 5281 079d 01       		.uleb128 0x1
 5282 079e 50       		.byte	0x50
 5283 079f 9F       		.byte	0x9f
 5284 07a0 00000000 		.4byte	0
 5285 07a4 00000000 		.4byte	0
 5286              		.section	.debug_aranges,"",%progbits
 5287 0000 A4000000 		.4byte	0xa4
 5288 0004 0200     		.2byte	0x2
 5289 0006 00000000 		.4byte	.Ldebug_info0
 5290 000a 04       		.byte	0x4
 5291 000b 00       		.byte	0
 5292 000c 0000     		.2byte	0
 5293 000e 0000     		.2byte	0
 5294 0010 00000000 		.4byte	.LFB8
 5295 0014 38000000 		.4byte	.LFE8-.LFB8
 5296 0018 00000000 		.4byte	.LFB10
 5297 001c 8C000000 		.4byte	.LFE10-.LFB10
 5298 0020 00000000 		.4byte	.LFB17
 5299 0024 0C000000 		.4byte	.LFE17-.LFB17
 5300 0028 00000000 		.4byte	.LFB11
 5301 002c 54010000 		.4byte	.LFE11-.LFB11
 5302 0030 00000000 		.4byte	.LFB18
 5303 0034 90000000 		.4byte	.LFE18-.LFB18
 5304 0038 00000000 		.4byte	.LFB1
 5305 003c F8010000 		.4byte	.LFE1-.LFB1
 5306 0040 00000000 		.4byte	.LFB6
 5307 0044 1C000000 		.4byte	.LFE6-.LFB6
 5308 0048 00000000 		.4byte	.LFB9
 5309 004c 28010000 		.4byte	.LFE9-.LFB9
 5310 0050 00000000 		.4byte	.LFB12
 5311 0054 26000000 		.4byte	.LFE12-.LFB12
 5312 0058 00000000 		.4byte	.LFB13
 5313 005c 24000000 		.4byte	.LFE13-.LFB13
 5314 0060 00000000 		.4byte	.LFB5
 5315 0064 88000000 		.4byte	.LFE5-.LFB5
 5316 0068 00000000 		.4byte	.LFB14
 5317 006c 44000000 		.4byte	.LFE14-.LFB14
 5318 0070 00000000 		.4byte	.LFB15
 5319 0074 4C000000 		.4byte	.LFE15-.LFB15
 5320 0078 00000000 		.4byte	.LFB7
 5321 007c DC000000 		.4byte	.LFE7-.LFB7
 5322 0080 00000000 		.4byte	.LFB2
 5323 0084 24000000 		.4byte	.LFE2-.LFB2
 5324 0088 00000000 		.4byte	.LFB3
 5325 008c 6C000000 		.4byte	.LFE3-.LFB3
 5326 0090 00000000 		.4byte	.LFB4
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 139


 5327 0094 84000000 		.4byte	.LFE4-.LFB4
 5328 0098 00000000 		.4byte	.LFB16
 5329 009c 10000000 		.4byte	.LFE16-.LFB16
 5330 00a0 00000000 		.4byte	0
 5331 00a4 00000000 		.4byte	0
 5332              		.section	.debug_ranges,"",%progbits
 5333              	.Ldebug_ranges0:
 5334 0000 00000000 		.4byte	.LFB8
 5335 0004 38000000 		.4byte	.LFE8
 5336 0008 00000000 		.4byte	.LFB10
 5337 000c 8C000000 		.4byte	.LFE10
 5338 0010 00000000 		.4byte	.LFB17
 5339 0014 0C000000 		.4byte	.LFE17
 5340 0018 00000000 		.4byte	.LFB11
 5341 001c 54010000 		.4byte	.LFE11
 5342 0020 00000000 		.4byte	.LFB18
 5343 0024 90000000 		.4byte	.LFE18
 5344 0028 00000000 		.4byte	.LFB1
 5345 002c F8010000 		.4byte	.LFE1
 5346 0030 00000000 		.4byte	.LFB6
 5347 0034 1C000000 		.4byte	.LFE6
 5348 0038 00000000 		.4byte	.LFB9
 5349 003c 28010000 		.4byte	.LFE9
 5350 0040 00000000 		.4byte	.LFB12
 5351 0044 26000000 		.4byte	.LFE12
 5352 0048 00000000 		.4byte	.LFB13
 5353 004c 24000000 		.4byte	.LFE13
 5354 0050 00000000 		.4byte	.LFB5
 5355 0054 88000000 		.4byte	.LFE5
 5356 0058 00000000 		.4byte	.LFB14
 5357 005c 44000000 		.4byte	.LFE14
 5358 0060 00000000 		.4byte	.LFB15
 5359 0064 4C000000 		.4byte	.LFE15
 5360 0068 00000000 		.4byte	.LFB7
 5361 006c DC000000 		.4byte	.LFE7
 5362 0070 00000000 		.4byte	.LFB2
 5363 0074 24000000 		.4byte	.LFE2
 5364 0078 00000000 		.4byte	.LFB3
 5365 007c 6C000000 		.4byte	.LFE3
 5366 0080 00000000 		.4byte	.LFB4
 5367 0084 84000000 		.4byte	.LFE4
 5368 0088 00000000 		.4byte	.LFB16
 5369 008c 10000000 		.4byte	.LFE16
 5370 0090 00000000 		.4byte	0
 5371 0094 00000000 		.4byte	0
 5372              		.section	.debug_line,"",%progbits
 5373              	.Ldebug_line0:
 5374 0000 B1030000 		.section	.debug_str,"MS",%progbits,1
 5374      0200B800 
 5374      00000201 
 5374      FB0E0D00 
 5374      01010101 
 5375              	.LASF165:
 5376 0000 63617073 		.ascii	"capsense_ADC_curFlashWdgtPtr\000"
 5376      656E7365 
 5376      5F414443 
 5376      5F637572 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 140


 5376      466C6173 
 5377              	.LASF67:
 5378 001d 736E7254 		.ascii	"snrTestWidgetId\000"
 5378      65737457 
 5378      69646765 
 5378      74496400 
 5379              	.LASF128:
 5380 002d 63617073 		.ascii	"capsense_ADC_CSXConnectTx\000"
 5380      656E7365 
 5380      5F414443 
 5380      5F435358 
 5380      436F6E6E 
 5381              	.LASF132:
 5382 0047 63617073 		.ascii	"capsense_ADC_CSXScan\000"
 5382      656E7365 
 5382      5F414443 
 5382      5F435358 
 5382      5363616E 
 5383              	.LASF152:
 5384 005c 63617073 		.ascii	"capsense_ADC_curWdgtTotalRx\000"
 5384      656E7365 
 5384      5F414443 
 5384      5F637572 
 5384      57646774 
 5385              	.LASF8:
 5386 0078 756E7369 		.ascii	"unsigned int\000"
 5386      676E6564 
 5386      20696E74 
 5386      00
 5387              	.LASF127:
 5388 0085 6E657874 		.ascii	"nextIdacMask\000"
 5388      49646163 
 5388      4D61736B 
 5388      00
 5389              	.LASF51:
 5390 0092 7363616E 		.ascii	"scanCounter\000"
 5390      436F756E 
 5390      74657200 
 5391              	.LASF49:
 5392 009e 6877436C 		.ascii	"hwClock\000"
 5392      6F636B00 
 5393              	.LASF176:
 5394 00a6 63617073 		.ascii	"capsense_ADC_SetupWidget\000"
 5394      656E7365 
 5394      5F414443 
 5394      5F536574 
 5394      75705769 
 5395              	.LASF36:
 5396 00bf 63617073 		.ascii	"capsense_ADC_RAM_WD_BASE_STRUCT\000"
 5396      656E7365 
 5396      5F414443 
 5396      5F52414D 
 5396      5F57445F 
 5397              	.LASF134:
 5398 00df 72656756 		.ascii	"regValue\000"
 5398      616C7565 
 5398      00
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 141


 5399              	.LASF129:
 5400 00e8 74785074 		.ascii	"txPtr\000"
 5400      7200
 5401              	.LASF121:
 5402 00ee 696E7465 		.ascii	"interruptState\000"
 5402      72727570 
 5402      74537461 
 5402      746500
 5403              	.LASF145:
 5404 00fd 7278496E 		.ascii	"rxIndex\000"
 5404      64657800 
 5405              	.LASF150:
 5406 0105 63617073 		.ascii	"capsense_ADC_curTxIOPtr\000"
 5406      656E7365 
 5406      5F414443 
 5406      5F637572 
 5406      5478494F 
 5407              	.LASF109:
 5408 011d 70747246 		.ascii	"ptrFlashWidget\000"
 5408      6C617368 
 5408      57696467 
 5408      657400
 5409              	.LASF146:
 5410 012c 63617073 		.ascii	"capsense_ADC_CSXCalibrateWidget\000"
 5410      656E7365 
 5410      5F414443 
 5410      5F435358 
 5410      43616C69 
 5411              	.LASF153:
 5412 014c 63617073 		.ascii	"capsense_ADC_curWdgtTotalTx\000"
 5412      656E7365 
 5412      5F414443 
 5412      5F637572 
 5412      57646774 
 5413              	.LASF167:
 5414 0168 4379496E 		.ascii	"CyIntDisable\000"
 5414      74446973 
 5414      61626C65 
 5414      00
 5415              	.LASF73:
 5416 0175 63617073 		.ascii	"capsense_ADC_RAM_STRUCT\000"
 5416      656E7365 
 5416      5F414443 
 5416      5F52414D 
 5416      5F535452 
 5417              	.LASF25:
 5418 018d 63617073 		.ascii	"capsense_ADC_SENSE_METHOD_ISX_E\000"
 5418      656E7365 
 5418      5F414443 
 5418      5F53454E 
 5418      53455F4D 
 5419              	.LASF166:
 5420 01ad 63617073 		.ascii	"capsense_ADC_idacGainTable\000"
 5420      656E7365 
 5420      5F414443 
 5420      5F696461 
 5420      63476169 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 142


 5421              	.LASF143:
 5422 01c8 73656E73 		.ascii	"sensorId\000"
 5422      6F724964 
 5422      00
 5423              	.LASF149:
 5424 01d1 70747257 		.ascii	"ptrWdgt\000"
 5424      64677400 
 5425              	.LASF183:
 5426 01d9 433A5C61 		.ascii	"C:\\aixt\\aixt\\ports\\Cypress\\CY8CKIT-145-40XX\\e"
 5426      6978745C 
 5426      61697874 
 5426      5C706F72 
 5426      74735C43 
 5427 0206 78616D70 		.ascii	"xamples\\CY8CKIT-145-40XX-adc1.cydsn\000"
 5427      6C65735C 
 5427      43593843 
 5427      4B49542D 
 5427      3134352D 
 5428              	.LASF126:
 5429 022a 63757249 		.ascii	"curIdacMask\000"
 5429      6461634D 
 5429      61736B00 
 5430              	.LASF33:
 5431 0236 69646163 		.ascii	"idacGainIndex\000"
 5431      4761696E 
 5431      496E6465 
 5431      7800
 5432              	.LASF136:
 5433 0244 63617073 		.ascii	"capsense_ADC_SsCSXStartSample\000"
 5433      656E7365 
 5433      5F414443 
 5433      5F537343 
 5433      53585374 
 5434              	.LASF164:
 5435 0262 63617073 		.ascii	"capsense_ADC_scanFreqIndex\000"
 5435      656E7365 
 5435      5F414443 
 5435      5F736361 
 5435      6E467265 
 5436              	.LASF12:
 5437 027d 666C6F61 		.ascii	"float\000"
 5437      7400
 5438              	.LASF82:
 5439 0283 73686966 		.ascii	"shift\000"
 5439      7400
 5440              	.LASF181:
 5441 0289 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5441      43313120 
 5441      352E342E 
 5441      31203230 
 5441      31363036 
 5442 02bc 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 5442      20726576 
 5442      6973696F 
 5442      6E203233 
 5442      37373135 
 5443 02ef 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 143


 5443      67202D66 
 5443      66756E63 
 5443      74696F6E 
 5443      2D736563 
 5444              	.LASF20:
 5445 031b 63617073 		.ascii	"capsense_ADC_LOW_BSLN_RST_TYPE\000"
 5445      656E7365 
 5445      5F414443 
 5445      5F4C4F57 
 5445      5F42534C 
 5446              	.LASF116:
 5447 033a 77617463 		.ascii	"watchdogCounter\000"
 5447      68646F67 
 5447      436F756E 
 5447      74657200 
 5448              	.LASF144:
 5449 034a 7478496E 		.ascii	"txIndex\000"
 5449      64657800 
 5450              	.LASF24:
 5451 0352 63617073 		.ascii	"capsense_ADC_SENSE_METHOD_BIST_E\000"
 5451      656E7365 
 5451      5F414443 
 5451      5F53454E 
 5451      53455F4D 
 5452              	.LASF66:
 5453 0373 736E734C 		.ascii	"snsList\000"
 5453      69737400 
 5454              	.LASF60:
 5455 037b 61646341 		.ascii	"adcActiveCh\000"
 5455      63746976 
 5455      65436800 
 5456              	.LASF7:
 5457 0387 6C6F6E67 		.ascii	"long long unsigned int\000"
 5457      206C6F6E 
 5457      6720756E 
 5457      7369676E 
 5457      65642069 
 5458              	.LASF23:
 5459 039e 63617073 		.ascii	"capsense_ADC_SENSE_METHOD_CSX_E\000"
 5459      656E7365 
 5459      5F414443 
 5459      5F53454E 
 5459      53455F4D 
 5460              	.LASF68:
 5461 03be 736E7254 		.ascii	"snrTestSensorId\000"
 5461      65737453 
 5461      656E736F 
 5461      72496400 
 5462              	.LASF180:
 5463 03ce 63617073 		.ascii	"capsense_ADC_SsSwitchSensingMode\000"
 5463      656E7365 
 5463      5F414443 
 5463      5F537353 
 5463      77697463 
 5464              	.LASF91:
 5465 03ef 77646774 		.ascii	"wdgtType\000"
 5465      54797065 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 144


 5465      00
 5466              	.LASF94:
 5467 03f8 63617073 		.ascii	"capsense_ADC_FLASH_WD_STRUCT\000"
 5467      656E7365 
 5467      5F414443 
 5467      5F464C41 
 5467      53485F57 
 5468              	.LASF83:
 5469 0415 63617073 		.ascii	"capsense_ADC_FLASH_IO_STRUCT\000"
 5469      656E7365 
 5469      5F414443 
 5469      5F464C41 
 5469      53485F49 
 5470              	.LASF103:
 5471 0432 72617763 		.ascii	"rawcount\000"
 5471      6F756E74 
 5471      00
 5472              	.LASF141:
 5473 043b 736E7343 		.ascii	"snsClkVal\000"
 5473      6C6B5661 
 5473      6C00
 5474              	.LASF22:
 5475 0445 63617073 		.ascii	"capsense_ADC_SENSE_METHOD_CSD_E\000"
 5475      656E7365 
 5475      5F414443 
 5475      5F53454E 
 5475      53455F4D 
 5476              	.LASF102:
 5477 0465 74617267 		.ascii	"target\000"
 5477      657400
 5478              	.LASF76:
 5479 046c 64725074 		.ascii	"drPtr\000"
 5479      7200
 5480              	.LASF138:
 5481 0472 63617073 		.ascii	"capsense_ADC_CSXElectrodeCheck\000"
 5481      656E7365 
 5481      5F414443 
 5481      5F435358 
 5481      456C6563 
 5482              	.LASF160:
 5483 0491 63617073 		.ascii	"capsense_ADC_widgetIndex\000"
 5483      656E7365 
 5483      5F414443 
 5483      5F776964 
 5483      67657449 
 5484              	.LASF155:
 5485 04aa 63617073 		.ascii	"capsense_ADC_dsRam\000"
 5485      656E7365 
 5485      5F414443 
 5485      5F647352 
 5485      616D00
 5486              	.LASF120:
 5487 04bd 63617073 		.ascii	"capsense_ADC_CSXInitialize\000"
 5487      656E7365 
 5487      5F414443 
 5487      5F435358 
 5487      496E6974 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 145


 5488              	.LASF19:
 5489 04d8 63617073 		.ascii	"capsense_ADC_THRESHOLD_TYPE\000"
 5489      656E7365 
 5489      5F414443 
 5489      5F544852 
 5489      4553484F 
 5490              	.LASF173:
 5491 04f4 63617073 		.ascii	"capsense_ADC_SsSetModClkClockDivider\000"
 5491      656E7365 
 5491      5F414443 
 5491      5F537353 
 5491      65744D6F 
 5492              	.LASF46:
 5493 0519 63617073 		.ascii	"capsense_ADC_RAM_SNS_LIST_STRUCT\000"
 5493      656E7365 
 5493      5F414443 
 5493      5F52414D 
 5493      5F534E53 
 5494              	.LASF32:
 5495 053a 6C6F7742 		.ascii	"lowBslnRst\000"
 5495      736C6E52 
 5495      737400
 5496              	.LASF177:
 5497 0545 63617073 		.ascii	"capsense_ADC_Scan\000"
 5497      656E7365 
 5497      5F414443 
 5497      5F536361 
 5497      6E00
 5498              	.LASF137:
 5499 0557 63617073 		.ascii	"capsense_ADC_SsCSXPostMultiScan\000"
 5499      656E7365 
 5499      5F414443 
 5499      5F537343 
 5499      5358506F 
 5500              	.LASF147:
 5501 0577 63617073 		.ascii	"capsense_ADC_SsCSXGetTxClkDivider\000"
 5501      656E7365 
 5501      5F414443 
 5501      5F537343 
 5501      53584765 
 5502              	.LASF38:
 5503 0599 62746E32 		.ascii	"btn2\000"
 5503      00
 5504              	.LASF90:
 5505 059e 746F7461 		.ascii	"totalNumSns\000"
 5505      6C4E756D 
 5505      536E7300 
 5506              	.LASF135:
 5507 05aa 63617073 		.ascii	"capsense_ADC_CSXDisconnectRx\000"
 5507      656E7365 
 5507      5F414443 
 5507      5F435358 
 5507      44697363 
 5508              	.LASF184:
 5509 05c7 63617073 		.ascii	"capsense_ADC_SsCSXPostSingleScan\000"
 5509      656E7365 
 5509      5F414443 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 146


 5509      5F537343 
 5509      5358506F 
 5510              	.LASF182:
 5511 05e8 47656E65 		.ascii	"Generated_Source\\PSoC4\\capsense_ADC_SensingCSX_LL"
 5511      72617465 
 5511      645F536F 
 5511      75726365 
 5511      5C50536F 
 5512 0619 2E6300   		.ascii	".c\000"
 5513              	.LASF124:
 5514 061c 746F7461 		.ascii	"totalSns\000"
 5514      6C536E73 
 5514      00
 5515              	.LASF28:
 5516 0625 6E6F6973 		.ascii	"noiseTh\000"
 5516      65546800 
 5517              	.LASF14:
 5518 062d 63686172 		.ascii	"char\000"
 5518      00
 5519              	.LASF171:
 5520 0632 43794578 		.ascii	"CyExitCriticalSection\000"
 5520      69744372 
 5520      69746963 
 5520      616C5365 
 5520      6374696F 
 5521              	.LASF163:
 5522 0648 63617073 		.ascii	"capsense_ADC_curRamSnsPtr\000"
 5522      656E7365 
 5522      5F414443 
 5522      5F637572 
 5522      52616D53 
 5523              	.LASF80:
 5524 0662 6873696F 		.ascii	"hsiomShift\000"
 5524      6D536869 
 5524      667400
 5525              	.LASF10:
 5526 066d 75696E74 		.ascii	"uint16\000"
 5526      313600
 5527              	.LASF110:
 5528 0674 70747252 		.ascii	"ptrRamSensor\000"
 5528      616D5365 
 5528      6E736F72 
 5528      00
 5529              	.LASF88:
 5530 0681 70747232 		.ascii	"ptr2DebounceArr\000"
 5530      4465626F 
 5530      756E6365 
 5530      41727200 
 5531              	.LASF26:
 5532 0691 7265736F 		.ascii	"resolution\000"
 5532      6C757469 
 5532      6F6E00
 5533              	.LASF52:
 5534 069c 73746174 		.ascii	"status\000"
 5534      757300
 5535              	.LASF115:
 5536 06a3 66696C74 		.ascii	"filterDelay\000"
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 147


 5536      65724465 
 5536      6C617900 
 5537              	.LASF172:
 5538 06af 63617073 		.ascii	"capsense_ADC_DischargeExtCapacitors\000"
 5538      656E7365 
 5538      5F414443 
 5538      5F446973 
 5538      63686172 
 5539              	.LASF44:
 5540 06d3 69646163 		.ascii	"idacComp\000"
 5540      436F6D70 
 5540      00
 5541              	.LASF75:
 5542 06dc 70635074 		.ascii	"pcPtr\000"
 5542      7200
 5543              	.LASF101:
 5544 06e2 7363616E 		.ascii	"scanPeriod\000"
 5544      50657269 
 5544      6F6400
 5545              	.LASF6:
 5546 06ed 6C6F6E67 		.ascii	"long long int\000"
 5546      206C6F6E 
 5546      6720696E 
 5546      7400
 5547              	.LASF92:
 5548 06fb 6E756D43 		.ascii	"numCols\000"
 5548      6F6C7300 
 5549              	.LASF31:
 5550 0703 6F6E4465 		.ascii	"onDebounce\000"
 5550      626F756E 
 5550      636500
 5551              	.LASF106:
 5552 070e 75707065 		.ascii	"upperLimit\000"
 5552      724C696D 
 5552      697400
 5553              	.LASF122:
 5554 0719 63617073 		.ascii	"capsense_ADC_CSXScanExt\000"
 5554      656E7365 
 5554      5F414443 
 5554      5F435358 
 5554      5363616E 
 5555              	.LASF133:
 5556 0731 63617073 		.ascii	"capsense_ADC_CSXDisconnectTx\000"
 5556      656E7365 
 5556      5F414443 
 5556      5F435358 
 5556      44697363 
 5557              	.LASF108:
 5558 074e 63616C69 		.ascii	"calibrateStatus\000"
 5558      62726174 
 5558      65537461 
 5558      74757300 
 5559              	.LASF65:
 5560 075e 77646774 		.ascii	"wdgtList\000"
 5560      4C697374 
 5560      00
 5561              	.LASF169:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 148


 5562 0767 63617073 		.ascii	"capsense_ADC_SsSetAllIOsState\000"
 5562      656E7365 
 5562      5F414443 
 5562      5F537353 
 5562      6574416C 
 5563              	.LASF84:
 5564 0785 70747232 		.ascii	"ptr2SnsFlash\000"
 5564      536E7346 
 5564      6C617368 
 5564      00
 5565              	.LASF111:
 5566 0792 63617073 		.ascii	"capsense_ADC_SsCSXCalibrateCheck\000"
 5566      656E7365 
 5566      5F414443 
 5566      5F537343 
 5566      53584361 
 5567              	.LASF70:
 5568 07b3 736E7254 		.ascii	"snrTestRawCount\000"
 5568      65737452 
 5568      6177436F 
 5568      756E7400 
 5569              	.LASF21:
 5570 07c3 63617073 		.ascii	"capsense_ADC_UNDEFINED_E\000"
 5570      656E7365 
 5570      5F414443 
 5570      5F554E44 
 5570      4546494E 
 5571              	.LASF37:
 5572 07dc 63617073 		.ascii	"capsense_ADC_RAM_WD_BUTTON_STRUCT\000"
 5572      656E7365 
 5572      5F414443 
 5572      5F52414D 
 5572      5F57445F 
 5573              	.LASF29:
 5574 07fe 6E4E6F69 		.ascii	"nNoiseTh\000"
 5574      73655468 
 5574      00
 5575              	.LASF61:
 5576 0807 63736430 		.ascii	"csd0Config\000"
 5576      436F6E66 
 5576      696700
 5577              	.LASF105:
 5578 0812 66726571 		.ascii	"freqChannel\000"
 5578      4368616E 
 5578      6E656C00 
 5579              	.LASF158:
 5580 081e 63617073 		.ascii	"capsense_ADC_csxRawCount\000"
 5580      656E7365 
 5580      5F414443 
 5580      5F637378 
 5580      52617743 
 5581              	.LASF74:
 5582 0837 6873696F 		.ascii	"hsiomPtr\000"
 5582      6D507472 
 5582      00
 5583              	.LASF11:
 5584 0840 75696E74 		.ascii	"uint32\000"
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 149


 5584      333200
 5585              	.LASF30:
 5586 0847 68797374 		.ascii	"hysteresis\000"
 5586      65726573 
 5586      697300
 5587              	.LASF64:
 5588 0852 61646341 		.ascii	"adcAzTime\000"
 5588      7A54696D 
 5588      6500
 5589              	.LASF87:
 5590 085c 70747232 		.ascii	"ptr2FltrHistory\000"
 5590      466C7472 
 5590      48697374 
 5590      6F727900 
 5591              	.LASF98:
 5592 086c 6761696E 		.ascii	"gainValue\000"
 5592      56616C75 
 5592      6500
 5593              	.LASF79:
 5594 0876 6D61736B 		.ascii	"mask\000"
 5594      00
 5595              	.LASF107:
 5596 087b 6C6F7765 		.ascii	"lowerLimit\000"
 5596      724C696D 
 5596      697400
 5597              	.LASF117:
 5598 0886 73616D70 		.ascii	"sampleClkFreqHz\000"
 5598      6C65436C 
 5598      6B467265 
 5598      71487A00 
 5599              	.LASF104:
 5600 0896 736E7349 		.ascii	"snsIndex\000"
 5600      6E646578 
 5600      00
 5601              	.LASF139:
 5602 089f 63617073 		.ascii	"capsense_ADC_CSXSetupWidget\000"
 5602      656E7365 
 5602      5F414443 
 5602      5F435358 
 5602      53657475 
 5603              	.LASF161:
 5604 08bb 63617073 		.ascii	"capsense_ADC_sensorIndex\000"
 5604      656E7365 
 5604      5F414443 
 5604      5F73656E 
 5604      736F7249 
 5605              	.LASF17:
 5606 08d4 6C6F6E67 		.ascii	"long double\000"
 5606      20646F75 
 5606      626C6500 
 5607              	.LASF71:
 5608 08e0 7363616E 		.ascii	"scanCsxISC\000"
 5608      43737849 
 5608      534300
 5609              	.LASF16:
 5610 08eb 72656733 		.ascii	"reg32\000"
 5610      3200
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 150


 5611              	.LASF69:
 5612 08f1 736E7254 		.ascii	"snrTestScanCounter\000"
 5612      65737453 
 5612      63616E43 
 5612      6F756E74 
 5612      657200
 5613              	.LASF47:
 5614 0904 636F6E66 		.ascii	"configId\000"
 5614      69674964 
 5614      00
 5615              	.LASF119:
 5616 090d 63617073 		.ascii	"capsense_ADC_CSXScanISR\000"
 5616      656E7365 
 5616      5F414443 
 5616      5F435358 
 5616      5363616E 
 5617              	.LASF86:
 5618 0925 70747232 		.ascii	"ptr2SnsRam\000"
 5618      536E7352 
 5618      616D00
 5619              	.LASF179:
 5620 0930 63617073 		.ascii	"capsense_ADC_SsPostAllWidgetsScan\000"
 5620      656E7365 
 5620      5F414443 
 5620      5F537350 
 5620      6F737441 
 5621              	.LASF55:
 5622 0952 736E7353 		.ascii	"snsStatus\000"
 5622      74617475 
 5622      7300
 5623              	.LASF130:
 5624 095c 63617073 		.ascii	"capsense_ADC_CSXConnectRx\000"
 5624      656E7365 
 5624      5F414443 
 5624      5F435358 
 5624      436F6E6E 
 5625              	.LASF35:
 5626 0976 736E7343 		.ascii	"snsClkSource\000"
 5626      6C6B536F 
 5626      75726365 
 5626      00
 5627              	.LASF2:
 5628 0983 73686F72 		.ascii	"short int\000"
 5628      7420696E 
 5628      7400
 5629              	.LASF156:
 5630 098d 63617073 		.ascii	"capsense_ADC_dsFlash\000"
 5630      656E7365 
 5630      5F414443 
 5630      5F647346 
 5630      6C617368 
 5631              	.LASF4:
 5632 09a2 6C6F6E67 		.ascii	"long int\000"
 5632      20696E74 
 5632      00
 5633              	.LASF174:
 5634 09ab 63617073 		.ascii	"capsense_ADC_SsIsrInitialize\000"
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 151


 5634      656E7365 
 5634      5F414443 
 5634      5F537349 
 5634      7372496E 
 5635              	.LASF53:
 5636 09c8 77646774 		.ascii	"wdgtEnable\000"
 5636      456E6162 
 5636      6C6500
 5637              	.LASF42:
 5638 09d3 64696666 		.ascii	"diff\000"
 5638      00
 5639              	.LASF39:
 5640 09d8 63617073 		.ascii	"capsense_ADC_RAM_WD_LIST_STRUCT\000"
 5640      656E7365 
 5640      5F414443 
 5640      5F52414D 
 5640      5F57445F 
 5641              	.LASF162:
 5642 09f8 63617073 		.ascii	"capsense_ADC_requestScanAllWidget\000"
 5642      656E7365 
 5642      5F414443 
 5642      5F726571 
 5642      75657374 
 5643              	.LASF50:
 5644 0a1a 74756E65 		.ascii	"tunerCmd\000"
 5644      72436D64 
 5644      00
 5645              	.LASF114:
 5646 0a23 74656D70 		.ascii	"temp\000"
 5646      00
 5647              	.LASF77:
 5648 0a28 70735074 		.ascii	"psPtr\000"
 5648      7200
 5649              	.LASF123:
 5650 0a2e 72617754 		.ascii	"rawTarget\000"
 5650      61726765 
 5650      7400
 5651              	.LASF97:
 5652 0a38 6761696E 		.ascii	"gainReg\000"
 5652      52656700 
 5653              	.LASF154:
 5654 0a40 63617073 		.ascii	"capsense_ADC_eleCsxDisconnectFlag\000"
 5654      656E7365 
 5654      5F414443 
 5654      5F656C65 
 5654      43737844 
 5655              	.LASF112:
 5656 0a62 63617073 		.ascii	"capsense_ADC_SsCalcCsxScanPeriod\000"
 5656      656E7365 
 5656      5F414443 
 5656      5F537343 
 5656      616C6343 
 5657              	.LASF54:
 5658 0a83 77646774 		.ascii	"wdgtStatus\000"
 5658      53746174 
 5658      757300
 5659              	.LASF18:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 152


 5660 0a8e 73697A65 		.ascii	"sizetype\000"
 5660      74797065 
 5660      00
 5661              	.LASF81:
 5662 0a97 64725368 		.ascii	"drShift\000"
 5662      69667400 
 5663              	.LASF5:
 5664 0a9f 6C6F6E67 		.ascii	"long unsigned int\000"
 5664      20756E73 
 5664      69676E65 
 5664      6420696E 
 5664      7400
 5665              	.LASF148:
 5666 0ab1 72657456 		.ascii	"retVal\000"
 5666      616C00
 5667              	.LASF131:
 5668 0ab8 72785074 		.ascii	"rxPtr\000"
 5668      7200
 5669              	.LASF45:
 5670 0abe 63617073 		.ascii	"capsense_ADC_RAM_SNS_STRUCT\000"
 5670      656E7365 
 5670      5F414443 
 5670      5F52414D 
 5670      5F534E53 
 5671              	.LASF27:
 5672 0ada 66696E67 		.ascii	"fingerTh\000"
 5672      65725468 
 5672      00
 5673              	.LASF56:
 5674 0ae3 61646352 		.ascii	"adcResult\000"
 5674      6573756C 
 5674      7400
 5675              	.LASF41:
 5676 0aed 62736C6E 		.ascii	"bslnExt\000"
 5676      45787400 
 5677              	.LASF15:
 5678 0af5 63797374 		.ascii	"cystatus\000"
 5678      61747573 
 5678      00
 5679              	.LASF1:
 5680 0afe 756E7369 		.ascii	"unsigned char\000"
 5680      676E6564 
 5680      20636861 
 5680      7200
 5681              	.LASF113:
 5682 0b0c 77646774 		.ascii	"wdgtPtr\000"
 5682      50747200 
 5683              	.LASF178:
 5684 0b14 63617073 		.ascii	"capsense_ADC_WriteBitsSafe\000"
 5684      656E7365 
 5684      5F414443 
 5684      5F577269 
 5684      74654269 
 5685              	.LASF125:
 5686 0b2f 63616C69 		.ascii	"calibrationIndex\000"
 5686      62726174 
 5686      696F6E49 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 153


 5686      6E646578 
 5686      00
 5687              	.LASF159:
 5688 0b40 63617073 		.ascii	"capsense_ADC_CSXPostScanApiPtr\000"
 5688      656E7365 
 5688      5F414443 
 5688      5F435358 
 5688      506F7374 
 5689              	.LASF89:
 5690 0b5f 73746174 		.ascii	"staticConfig\000"
 5690      6963436F 
 5690      6E666967 
 5690      00
 5691              	.LASF62:
 5692 0b6c 6D6F6443 		.ascii	"modCsxClk\000"
 5692      7378436C 
 5692      6B00
 5693              	.LASF72:
 5694 0b76 7363616E 		.ascii	"scanCurrentISC\000"
 5694      43757272 
 5694      656E7449 
 5694      534300
 5695              	.LASF85:
 5696 0b85 70747232 		.ascii	"ptr2WdgtRam\000"
 5696      57646774 
 5696      52616D00 
 5697              	.LASF93:
 5698 0b91 6E756D52 		.ascii	"numRows\000"
 5698      6F777300 
 5699              	.LASF78:
 5700 0b99 6873696F 		.ascii	"hsiomMask\000"
 5700      6D4D6173 
 5700      6B00
 5701              	.LASF168:
 5702 0ba3 4379496E 		.ascii	"CyIntEnable\000"
 5702      74456E61 
 5702      626C6500 
 5703              	.LASF118:
 5704 0baf 746D7052 		.ascii	"tmpRegVal\000"
 5704      65675661 
 5704      6C00
 5705              	.LASF59:
 5706 0bb9 61646349 		.ascii	"adcIdac\000"
 5706      64616300 
 5707              	.LASF34:
 5708 0bc1 736E7343 		.ascii	"snsClk\000"
 5708      6C6B00
 5709              	.LASF157:
 5710 0bc8 63617073 		.ascii	"capsense_ADC_csxScanPeriod\000"
 5710      656E7365 
 5710      5F414443 
 5710      5F637378 
 5710      5363616E 
 5711              	.LASF170:
 5712 0be3 4379456E 		.ascii	"CyEnterCriticalSection\000"
 5712      74657243 
 5712      72697469 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 154


 5712      63616C53 
 5712      65637469 
 5713              	.LASF0:
 5714 0bfa 7369676E 		.ascii	"signed char\000"
 5714      65642063 
 5714      68617200 
 5715              	.LASF40:
 5716 0c06 62736C6E 		.ascii	"bsln\000"
 5716      00
 5717              	.LASF3:
 5718 0c0b 73686F72 		.ascii	"short unsigned int\000"
 5718      7420756E 
 5718      7369676E 
 5718      65642069 
 5718      6E7400
 5719              	.LASF140:
 5720 0c1e 63757252 		.ascii	"curRamWdgtBasePtr\000"
 5720      616D5764 
 5720      67744261 
 5720      73655074 
 5720      7200
 5721              	.LASF58:
 5722 0c30 61646353 		.ascii	"adcStatus\000"
 5722      74617475 
 5722      7300
 5723              	.LASF63:
 5724 0c3a 61646352 		.ascii	"adcResolution\000"
 5724      65736F6C 
 5724      7574696F 
 5724      6E00
 5725              	.LASF175:
 5726 0c48 43794465 		.ascii	"CyDelayUs\000"
 5726      6C617955 
 5726      7300
 5727              	.LASF9:
 5728 0c52 75696E74 		.ascii	"uint8\000"
 5728      3800
 5729              	.LASF13:
 5730 0c58 646F7562 		.ascii	"double\000"
 5730      6C6500
 5731              	.LASF142:
 5732 0c5f 63617073 		.ascii	"capsense_ADC_CSXSetupWidgetExt\000"
 5732      656E7365 
 5732      5F414443 
 5732      5F435358 
 5732      53657475 
 5733              	.LASF43:
 5734 0c7e 6E656742 		.ascii	"negBslnRstCnt\000"
 5734      736C6E52 
 5734      7374436E 
 5734      7400
 5735              	.LASF96:
 5736 0c8c 63617073 		.ascii	"capsense_ADC_FLASH_STRUCT\000"
 5736      656E7365 
 5736      5F414443 
 5736      5F464C41 
 5736      53485F53 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccMQlHVT.s 			page 155


 5737              	.LASF48:
 5738 0ca6 64657669 		.ascii	"deviceId\000"
 5738      63654964 
 5738      00
 5739              	.LASF99:
 5740 0caf 63617073 		.ascii	"capsense_ADC_IDAC_GAIN_TABLE_STRUCT\000"
 5740      656E7365 
 5740      5F414443 
 5740      5F494441 
 5740      435F4741 
 5741              	.LASF100:
 5742 0cd3 77696467 		.ascii	"widgetId\000"
 5742      65744964 
 5742      00
 5743              	.LASF151:
 5744 0cdc 63617073 		.ascii	"capsense_ADC_curRxIOPtr\000"
 5744      656E7365 
 5744      5F414443 
 5744      5F637572 
 5744      5278494F 
 5745              	.LASF185:
 5746 0cf4 63617073 		.ascii	"capsense_ADC_SsCSXStartSampleExt\000"
 5746      656E7365 
 5746      5F414443 
 5746      5F537343 
 5746      53585374 
 5747              	.LASF57:
 5748 0d15 61646343 		.ascii	"adcCode\000"
 5748      6F646500 
 5749              	.LASF95:
 5750 0d1d 77646774 		.ascii	"wdgtArray\000"
 5750      41727261 
 5750      7900
 5751              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
