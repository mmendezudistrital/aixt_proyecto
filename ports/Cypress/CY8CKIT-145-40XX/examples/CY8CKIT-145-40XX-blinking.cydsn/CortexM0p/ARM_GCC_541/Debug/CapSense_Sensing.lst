ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"capsense_Sensing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	__aeabi_uidivmod
  20              		.section	.text.capsense_SsCalcLfsrSize,"ax",%progbits
  21              		.align	2
  22              		.code	16
  23              		.thumb_func
  24              		.type	capsense_SsCalcLfsrSize, %function
  25              	capsense_SsCalcLfsrSize:
  26              	.LFB23:
  27              		.file 1 "Generated_Source\\PSoC4\\capsense_Sensing.c"
   1:Generated_Source\PSoC4/capsense_Sensing.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/capsense_Sensing.c **** * \file capsense_Sensing.c
   3:Generated_Source\PSoC4/capsense_Sensing.c **** * \version 7.10
   4:Generated_Source\PSoC4/capsense_Sensing.c **** *
   5:Generated_Source\PSoC4/capsense_Sensing.c **** * \brief
   6:Generated_Source\PSoC4/capsense_Sensing.c **** *   This file contains the source of functions common for
   7:Generated_Source\PSoC4/capsense_Sensing.c **** *   different sensing methods.
   8:Generated_Source\PSoC4/capsense_Sensing.c **** *
   9:Generated_Source\PSoC4/capsense_Sensing.c **** * \see capsense v7.10 Datasheet
  10:Generated_Source\PSoC4/capsense_Sensing.c **** *
  11:Generated_Source\PSoC4/capsense_Sensing.c **** *//*****************************************************************************
  12:Generated_Source\PSoC4/capsense_Sensing.c **** * Copyright (2016-2019), Cypress Semiconductor Corporation.
  13:Generated_Source\PSoC4/capsense_Sensing.c **** ********************************************************************************
  14:Generated_Source\PSoC4/capsense_Sensing.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  15:Generated_Source\PSoC4/capsense_Sensing.c **** * protected by and subject to worldwide patent protection (United States and
  16:Generated_Source\PSoC4/capsense_Sensing.c **** * foreign), United States copyright laws and international treaty provisions.
  17:Generated_Source\PSoC4/capsense_Sensing.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  18:Generated_Source\PSoC4/capsense_Sensing.c **** * license to copy, use, modify, create derivative works of, and compile the
  19:Generated_Source\PSoC4/capsense_Sensing.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  20:Generated_Source\PSoC4/capsense_Sensing.c **** * custom software in support of licensee product to be used only in conjunction
  21:Generated_Source\PSoC4/capsense_Sensing.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  22:Generated_Source\PSoC4/capsense_Sensing.c **** * Any reproduction, modification, translation, compilation, or representation of
  23:Generated_Source\PSoC4/capsense_Sensing.c **** * this software except as specified above is prohibited without the express
  24:Generated_Source\PSoC4/capsense_Sensing.c **** * written permission of Cypress.
  25:Generated_Source\PSoC4/capsense_Sensing.c **** *
  26:Generated_Source\PSoC4/capsense_Sensing.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  27:Generated_Source\PSoC4/capsense_Sensing.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  28:Generated_Source\PSoC4/capsense_Sensing.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  29:Generated_Source\PSoC4/capsense_Sensing.c **** * Cypress reserves the right to make changes without further notice to the
  30:Generated_Source\PSoC4/capsense_Sensing.c **** * materials described herein. Cypress does not assume any liability arising out
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 2


  31:Generated_Source\PSoC4/capsense_Sensing.c **** * of the application or use of any product or circuit described herein. Cypress
  32:Generated_Source\PSoC4/capsense_Sensing.c **** * does not authorize its products for use as critical components in life-support
  33:Generated_Source\PSoC4/capsense_Sensing.c **** * systems where a malfunction or failure may reasonably be expected to result in
  34:Generated_Source\PSoC4/capsense_Sensing.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  35:Generated_Source\PSoC4/capsense_Sensing.c **** * support systems application implies that the manufacturer assumes all risk of
  36:Generated_Source\PSoC4/capsense_Sensing.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  37:Generated_Source\PSoC4/capsense_Sensing.c **** * limited by and subject to the applicable Cypress software license agreement.
  38:Generated_Source\PSoC4/capsense_Sensing.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/capsense_Sensing.c **** 
  40:Generated_Source\PSoC4/capsense_Sensing.c **** #include "cyfitter.h"
  41:Generated_Source\PSoC4/capsense_Sensing.c **** #include "capsense_Configuration.h"
  42:Generated_Source\PSoC4/capsense_Sensing.c **** #include "capsense_Structure.h"
  43:Generated_Source\PSoC4/capsense_Sensing.c **** #include "capsense_Sensing.h"
  44:Generated_Source\PSoC4/capsense_Sensing.c **** #if (capsense_ENABLE == capsense_CSX_EN)
  45:Generated_Source\PSoC4/capsense_Sensing.c ****     #include "capsense_SensingCSX_LL.h"
  46:Generated_Source\PSoC4/capsense_Sensing.c **** #endif
  47:Generated_Source\PSoC4/capsense_Sensing.c **** #if (capsense_ENABLE == capsense_ISX_EN)
  48:Generated_Source\PSoC4/capsense_Sensing.c ****     #include "capsense_SensingISX_LL.h"
  49:Generated_Source\PSoC4/capsense_Sensing.c **** #endif
  50:Generated_Source\PSoC4/capsense_Sensing.c **** #if (capsense_ENABLE == capsense_CSD_EN)
  51:Generated_Source\PSoC4/capsense_Sensing.c ****     #include "capsense_SensingCSD_LL.h"
  52:Generated_Source\PSoC4/capsense_Sensing.c **** #endif
  53:Generated_Source\PSoC4/capsense_Sensing.c **** #if (capsense_CSD_SS_DIS != capsense_CSD_AUTOTUNE)
  54:Generated_Source\PSoC4/capsense_Sensing.c ****     #include "capsense_SmartSense_LL.h"
  55:Generated_Source\PSoC4/capsense_Sensing.c **** #endif
  56:Generated_Source\PSoC4/capsense_Sensing.c **** #if (capsense_ENABLE == capsense_ADC_EN)
  57:Generated_Source\PSoC4/capsense_Sensing.c ****     #include "capsense_Adc.h"
  58:Generated_Source\PSoC4/capsense_Sensing.c **** #endif
  59:Generated_Source\PSoC4/capsense_Sensing.c **** #if (capsense_ENABLE == capsense_SELF_TEST_EN)
  60:Generated_Source\PSoC4/capsense_Sensing.c ****     #include "capsense_SelfTest.h"
  61:Generated_Source\PSoC4/capsense_Sensing.c **** #endif
  62:Generated_Source\PSoC4/capsense_Sensing.c **** 
  63:Generated_Source\PSoC4/capsense_Sensing.c **** #if (0u != capsense_ISX_EN)
  64:Generated_Source\PSoC4/capsense_Sensing.c ****     #include "capsense_DigPrt2.h"
  65:Generated_Source\PSoC4/capsense_Sensing.c ****     #if (capsense_USES_PORT_3)
  66:Generated_Source\PSoC4/capsense_Sensing.c ****         #include "capsense_DigPrt3.h"
  67:Generated_Source\PSoC4/capsense_Sensing.c ****     #endif
  68:Generated_Source\PSoC4/capsense_Sensing.c **** #endif
  69:Generated_Source\PSoC4/capsense_Sensing.c **** 
  70:Generated_Source\PSoC4/capsense_Sensing.c **** /***************************************
  71:Generated_Source\PSoC4/capsense_Sensing.c **** * API Constants
  72:Generated_Source\PSoC4/capsense_Sensing.c **** ***************************************/
  73:Generated_Source\PSoC4/capsense_Sensing.c **** 
  74:Generated_Source\PSoC4/capsense_Sensing.c **** #define capsense_IMO_FREQUENCY_OFFSET_MIN               (0u)
  75:Generated_Source\PSoC4/capsense_Sensing.c **** #define capsense_IMO_FREQUENCY_OFFSET_MAX               (255u)
  76:Generated_Source\PSoC4/capsense_Sensing.c **** #define capsense_AUTOTUNE_CALIBRATION_RESOLUTION        (12u)
  77:Generated_Source\PSoC4/capsense_Sensing.c **** #define capsense_AUTOTUNE_CALIBRATION_FREQ_KHZ          (1500u)
  78:Generated_Source\PSoC4/capsense_Sensing.c **** #define capsense_AUTOTUNE_CAL_LEVEL                     (capsense_CSD_RAWCOUNT_CAL_LEVEL)
  79:Generated_Source\PSoC4/capsense_Sensing.c **** #define capsense_AUTOTUNE_CAL_UNITS                     (1000u)
  80:Generated_Source\PSoC4/capsense_Sensing.c **** #define capsense_AUTOTUNE_CP_MAX                        (69000Lu)
  81:Generated_Source\PSoC4/capsense_Sensing.c **** #define capsense_CLK_SOURCE_LFSR_SCALE_OFFSET           (4u)
  82:Generated_Source\PSoC4/capsense_Sensing.c **** 
  83:Generated_Source\PSoC4/capsense_Sensing.c **** /* HW IP Block limitation */
  84:Generated_Source\PSoC4/capsense_Sensing.c **** #if (capsense_ENABLE == capsense_CSDV2)
  85:Generated_Source\PSoC4/capsense_Sensing.c ****     #define capsense_CSD_SNS_FREQ_KHZ_MAX               (6000u)
  86:Generated_Source\PSoC4/capsense_Sensing.c **** #else
  87:Generated_Source\PSoC4/capsense_Sensing.c ****     #define capsense_CSD_SNS_FREQ_KHZ_MAX               (12600u)
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 3


  88:Generated_Source\PSoC4/capsense_Sensing.c **** #endif /* (capsense_ENABLE == capsense_CSDV2) */
  89:Generated_Source\PSoC4/capsense_Sensing.c **** 
  90:Generated_Source\PSoC4/capsense_Sensing.c **** #define capsense_FLIP_FLOP_DIV                          (1u)
  91:Generated_Source\PSoC4/capsense_Sensing.c **** 
  92:Generated_Source\PSoC4/capsense_Sensing.c **** #define capsense_MOD_CSD_CLK_12000KHZ                   (12000uL)
  93:Generated_Source\PSoC4/capsense_Sensing.c **** #define capsense_MOD_CSD_CLK_24000KHZ                   (24000uL)
  94:Generated_Source\PSoC4/capsense_Sensing.c **** #define capsense_MOD_CSD_CLK_48000KHZ                   (48000uL)
  95:Generated_Source\PSoC4/capsense_Sensing.c **** 
  96:Generated_Source\PSoC4/capsense_Sensing.c **** /*****************************************************************************/
  97:Generated_Source\PSoC4/capsense_Sensing.c **** /* Enumeration types definition                                              */
  98:Generated_Source\PSoC4/capsense_Sensing.c **** /*****************************************************************************/
  99:Generated_Source\PSoC4/capsense_Sensing.c **** 
 100:Generated_Source\PSoC4/capsense_Sensing.c **** typedef enum
 101:Generated_Source\PSoC4/capsense_Sensing.c **** {
 102:Generated_Source\PSoC4/capsense_Sensing.c ****     capsense_RES_PULLUP_E   = 0x02u,
 103:Generated_Source\PSoC4/capsense_Sensing.c ****     capsense_RES_PULLDOWN_E = 0x03u
 104:Generated_Source\PSoC4/capsense_Sensing.c **** } capsense_PORT_TEST_DM;
 105:Generated_Source\PSoC4/capsense_Sensing.c **** 
 106:Generated_Source\PSoC4/capsense_Sensing.c **** typedef enum
 107:Generated_Source\PSoC4/capsense_Sensing.c **** {
 108:Generated_Source\PSoC4/capsense_Sensing.c ****     capsense_STS_RESET      = 0x01u,
 109:Generated_Source\PSoC4/capsense_Sensing.c ****     capsense_STS_NO_RESET   = 0x02u
 110:Generated_Source\PSoC4/capsense_Sensing.c **** } capsense_TEST_TYPE;
 111:Generated_Source\PSoC4/capsense_Sensing.c **** 
 112:Generated_Source\PSoC4/capsense_Sensing.c **** 
 113:Generated_Source\PSoC4/capsense_Sensing.c **** /*******************************************************************************
 114:Generated_Source\PSoC4/capsense_Sensing.c **** * Static Function Prototypes
 115:Generated_Source\PSoC4/capsense_Sensing.c **** *******************************************************************************/
 116:Generated_Source\PSoC4/capsense_Sensing.c **** /**
 117:Generated_Source\PSoC4/capsense_Sensing.c **** * \cond SECTION_C_INTERNAL
 118:Generated_Source\PSoC4/capsense_Sensing.c **** * \addtogroup group_c_internal
 119:Generated_Source\PSoC4/capsense_Sensing.c **** * \{
 120:Generated_Source\PSoC4/capsense_Sensing.c **** */
 121:Generated_Source\PSoC4/capsense_Sensing.c **** 
 122:Generated_Source\PSoC4/capsense_Sensing.c **** #if (capsense_DISABLE == capsense_CSDV2)
 123:Generated_Source\PSoC4/capsense_Sensing.c ****     static void capsense_SsTrimIdacs(void);
 124:Generated_Source\PSoC4/capsense_Sensing.c ****     #if ((capsense_ENABLE == capsense_CSX_EN) || \
 125:Generated_Source\PSoC4/capsense_Sensing.c ****          (capsense_ENABLE == capsense_ISX_EN) || \
 126:Generated_Source\PSoC4/capsense_Sensing.c ****          (capsense_IDAC_SINKING == capsense_CSD_IDAC_CONFIG))
 127:Generated_Source\PSoC4/capsense_Sensing.c ****         static void capsense_SsTrimIdacsSinking(void);
 128:Generated_Source\PSoC4/capsense_Sensing.c ****     #endif /* ((capsense_ENABLE == capsense_CSX_EN) || \
 129:Generated_Source\PSoC4/capsense_Sensing.c ****                (capsense_IDAC_SINKING == capsense_CSD_IDAC_CONFIG)) */
 130:Generated_Source\PSoC4/capsense_Sensing.c ****     #if ((capsense_ENABLE == capsense_CSX_EN) || \
 131:Generated_Source\PSoC4/capsense_Sensing.c ****          (capsense_ENABLE == capsense_ISX_EN) || \
 132:Generated_Source\PSoC4/capsense_Sensing.c ****          (capsense_IDAC_SOURCING == capsense_CSD_IDAC_CONFIG))
 133:Generated_Source\PSoC4/capsense_Sensing.c ****         static void capsense_SsTrimIdacsSourcing(void);
 134:Generated_Source\PSoC4/capsense_Sensing.c ****     #endif /* ((capsense_ENABLE == capsense_CSX_EN) || \
 135:Generated_Source\PSoC4/capsense_Sensing.c ****                (capsense_IDAC_SOURCING == capsense_CSD_IDAC_CONFIG)) */
 136:Generated_Source\PSoC4/capsense_Sensing.c **** #endif /* (capsense_ENABLE == capsense_CSDV2) */
 137:Generated_Source\PSoC4/capsense_Sensing.c **** 
 138:Generated_Source\PSoC4/capsense_Sensing.c **** #if (capsense_ENABLE == capsense_CSD_EN)
 139:Generated_Source\PSoC4/capsense_Sensing.c ****     static void capsense_SsCSDDisableMode(void);
 140:Generated_Source\PSoC4/capsense_Sensing.c **** #endif /* (capsense_ENABLE == capsense_CSD_EN) */
 141:Generated_Source\PSoC4/capsense_Sensing.c **** #if (capsense_ENABLE == capsense_CSX_EN)
 142:Generated_Source\PSoC4/capsense_Sensing.c ****     static void capsense_SsDisableCSXMode(void);
 143:Generated_Source\PSoC4/capsense_Sensing.c **** #endif /* (capsense_ENABLE == capsense_CSX_EN) */
 144:Generated_Source\PSoC4/capsense_Sensing.c **** #if (capsense_ENABLE == capsense_ISX_EN)
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 4


 145:Generated_Source\PSoC4/capsense_Sensing.c ****     static void capsense_SsDisableISXMode(void);
 146:Generated_Source\PSoC4/capsense_Sensing.c **** #endif /* (capsense_ENABLE == capsense_ISX_EN) */
 147:Generated_Source\PSoC4/capsense_Sensing.c **** 
 148:Generated_Source\PSoC4/capsense_Sensing.c **** #if(((capsense_ENABLE == capsense_CSX_EN) && \
 149:Generated_Source\PSoC4/capsense_Sensing.c ****      (capsense_ENABLE == capsense_CSDV2) && \
 150:Generated_Source\PSoC4/capsense_Sensing.c ****      (capsense_CLK_SOURCE_PRSAUTO == capsense_CSX_TX_CLK_SOURCE) && \
 151:Generated_Source\PSoC4/capsense_Sensing.c ****      (capsense_DISABLE == capsense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)) ||\
 152:Generated_Source\PSoC4/capsense_Sensing.c ****     ((capsense_ENABLE == capsense_CSD_EN) && \
 153:Generated_Source\PSoC4/capsense_Sensing.c ****      (capsense_ENABLE == capsense_CSDV2) && \
 154:Generated_Source\PSoC4/capsense_Sensing.c ****      (capsense_CLK_SOURCE_PRSAUTO == capsense_CSD_SNS_CLK_SOURCE)))
 155:Generated_Source\PSoC4/capsense_Sensing.c ****     static uint8 capsense_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum);
 156:Generated_Source\PSoC4/capsense_Sensing.c ****     static uint8 capsense_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize);
 157:Generated_Source\PSoC4/capsense_Sensing.c **** #endif
 158:Generated_Source\PSoC4/capsense_Sensing.c **** 
 159:Generated_Source\PSoC4/capsense_Sensing.c **** #if (capsense_ENABLE == capsense_CSD_EN)
 160:Generated_Source\PSoC4/capsense_Sensing.c ****     static void capsense_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, capsense_RAM_WD_BASE_STRUCT * ptr
 161:Generated_Source\PSoC4/capsense_Sensing.c **** #endif
 162:Generated_Source\PSoC4/capsense_Sensing.c **** 
 163:Generated_Source\PSoC4/capsense_Sensing.c **** #if ((capsense_ENABLE == capsense_CSX_EN) && (capsense_ENABLE == capsense_CSDV2))
 164:Generated_Source\PSoC4/capsense_Sensing.c ****     static void capsense_SsSetWidgetTxClkSrc(uint32 wdgtIndex, capsense_RAM_WD_BASE_STRUCT * ptrWdg
 165:Generated_Source\PSoC4/capsense_Sensing.c **** #endif
 166:Generated_Source\PSoC4/capsense_Sensing.c **** 
 167:Generated_Source\PSoC4/capsense_Sensing.c **** 
 168:Generated_Source\PSoC4/capsense_Sensing.c **** /** \}
 169:Generated_Source\PSoC4/capsense_Sensing.c **** * \endcond */
 170:Generated_Source\PSoC4/capsense_Sensing.c **** 
 171:Generated_Source\PSoC4/capsense_Sensing.c **** /*******************************************************************************
 172:Generated_Source\PSoC4/capsense_Sensing.c **** * Defines module variables
 173:Generated_Source\PSoC4/capsense_Sensing.c **** *******************************************************************************/
 174:Generated_Source\PSoC4/capsense_Sensing.c **** 
 175:Generated_Source\PSoC4/capsense_Sensing.c **** capsense_SENSE_METHOD_ENUM capsense_currentSenseMethod = capsense_UNDEFINED_E;
 176:Generated_Source\PSoC4/capsense_Sensing.c **** 
 177:Generated_Source\PSoC4/capsense_Sensing.c **** #if(capsense_ENABLE == capsense_MULTI_FREQ_SCAN_EN)
 178:Generated_Source\PSoC4/capsense_Sensing.c ****     /* Module variable keep track of multi-frequency scan channel index */
 179:Generated_Source\PSoC4/capsense_Sensing.c ****     uint8 capsense_scanFreqIndex = 0u;
 180:Generated_Source\PSoC4/capsense_Sensing.c ****     /* Variable keep frequency offsets */
 181:Generated_Source\PSoC4/capsense_Sensing.c ****     uint8 capsense_immunity[capsense_NUM_SCAN_FREQS] = {0u, 0u, 0u};
 182:Generated_Source\PSoC4/capsense_Sensing.c **** #else
 183:Generated_Source\PSoC4/capsense_Sensing.c ****     /* const allows C-compiler to do optimization */
 184:Generated_Source\PSoC4/capsense_Sensing.c ****     const uint8 capsense_scanFreqIndex = 0u;
 185:Generated_Source\PSoC4/capsense_Sensing.c **** #endif
 186:Generated_Source\PSoC4/capsense_Sensing.c **** 
 187:Generated_Source\PSoC4/capsense_Sensing.c **** /* Global software variables */
 188:Generated_Source\PSoC4/capsense_Sensing.c **** volatile uint8 capsense_widgetIndex = 0u;    /* Index of the scanning widget */
 189:Generated_Source\PSoC4/capsense_Sensing.c **** volatile uint8 capsense_sensorIndex = 0u;    /* Index of the scanning sensor */
 190:Generated_Source\PSoC4/capsense_Sensing.c **** uint8 capsense_requestScanAllWidget = 0u;
 191:Generated_Source\PSoC4/capsense_Sensing.c **** 
 192:Generated_Source\PSoC4/capsense_Sensing.c **** /* Pointer to RAM_SNS_STRUCT structure */
 193:Generated_Source\PSoC4/capsense_Sensing.c **** capsense_RAM_SNS_STRUCT *capsense_curRamSnsPtr;
 194:Generated_Source\PSoC4/capsense_Sensing.c **** 
 195:Generated_Source\PSoC4/capsense_Sensing.c **** #if ((capsense_ENABLE == capsense_CSD_GANGED_SNS_EN) || \
 196:Generated_Source\PSoC4/capsense_Sensing.c ****      (capsense_ENABLE == capsense_CSX_EN) || \
 197:Generated_Source\PSoC4/capsense_Sensing.c ****      (capsense_ENABLE == capsense_ISX_EN))
 198:Generated_Source\PSoC4/capsense_Sensing.c ****     /* Pointer to Flash structure holding configuration of widget to be scanned */
 199:Generated_Source\PSoC4/capsense_Sensing.c ****     capsense_FLASH_WD_STRUCT const *capsense_curFlashWdgtPtr = 0u;
 200:Generated_Source\PSoC4/capsense_Sensing.c **** #endif
 201:Generated_Source\PSoC4/capsense_Sensing.c **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 5


 202:Generated_Source\PSoC4/capsense_Sensing.c **** #if (capsense_ENABLE == capsense_CSD_GANGED_SNS_EN)
 203:Generated_Source\PSoC4/capsense_Sensing.c ****     /* Pointer to Flash structure holding info of sensor to be scanned */
 204:Generated_Source\PSoC4/capsense_Sensing.c ****     capsense_FLASH_SNS_STRUCT const *capsense_curFlashSnsPtr = 0u;
 205:Generated_Source\PSoC4/capsense_Sensing.c **** #endif
 206:Generated_Source\PSoC4/capsense_Sensing.c **** 
 207:Generated_Source\PSoC4/capsense_Sensing.c **** /* Pointer to Flash structure to hold Sns electrode that was connected previously */
 208:Generated_Source\PSoC4/capsense_Sensing.c **** capsense_FLASH_IO_STRUCT const *capsense_curSnsIOPtr;
 209:Generated_Source\PSoC4/capsense_Sensing.c **** 
 210:Generated_Source\PSoC4/capsense_Sensing.c **** capsense_IDAC_GAIN_TABLE_STRUCT const capsense_idacGainTable[capsense_IDAC_GAIN_NUMBER] = capsense_
 211:Generated_Source\PSoC4/capsense_Sensing.c **** 
 212:Generated_Source\PSoC4/capsense_Sensing.c **** 
 213:Generated_Source\PSoC4/capsense_Sensing.c **** /*******************************************************************************
 214:Generated_Source\PSoC4/capsense_Sensing.c **** * Function Name: capsense_IsBusy
 215:Generated_Source\PSoC4/capsense_Sensing.c **** ****************************************************************************//**
 216:Generated_Source\PSoC4/capsense_Sensing.c **** *
 217:Generated_Source\PSoC4/capsense_Sensing.c **** * \brief
 218:Generated_Source\PSoC4/capsense_Sensing.c **** *  Returns the current status of the Component (Scan is completed or Scan is in
 219:Generated_Source\PSoC4/capsense_Sensing.c **** *  progress).
 220:Generated_Source\PSoC4/capsense_Sensing.c **** *
 221:Generated_Source\PSoC4/capsense_Sensing.c **** * \details
 222:Generated_Source\PSoC4/capsense_Sensing.c **** *  This function returns a status of the hardware block whether a scan is
 223:Generated_Source\PSoC4/capsense_Sensing.c **** *  currently in progress or not. If the Component is busy, no new scan or Widget
 224:Generated_Source\PSoC4/capsense_Sensing.c **** *  setup is made. The critical section (i.e. disable global interrupt)
 225:Generated_Source\PSoC4/capsense_Sensing.c **** *  is recommended for the application when the device transitions from
 226:Generated_Source\PSoC4/capsense_Sensing.c **** *  the active mode to sleep or deep sleep modes.
 227:Generated_Source\PSoC4/capsense_Sensing.c **** *
 228:Generated_Source\PSoC4/capsense_Sensing.c **** * \return
 229:Generated_Source\PSoC4/capsense_Sensing.c **** *  Returns the current status of the Component:
 230:Generated_Source\PSoC4/capsense_Sensing.c **** *    - capsense_NOT_BUSY - No scan is in progress and a next scan
 231:Generated_Source\PSoC4/capsense_Sensing.c **** *      can be initiated.
 232:Generated_Source\PSoC4/capsense_Sensing.c **** *    - capsense_SW_STS_BUSY - The previous scanning is not completed
 233:Generated_Source\PSoC4/capsense_Sensing.c **** *      and the hardware block is busy.
 234:Generated_Source\PSoC4/capsense_Sensing.c **** *
 235:Generated_Source\PSoC4/capsense_Sensing.c **** *******************************************************************************/
 236:Generated_Source\PSoC4/capsense_Sensing.c **** uint32 capsense_IsBusy(void)
 237:Generated_Source\PSoC4/capsense_Sensing.c **** {
 238:Generated_Source\PSoC4/capsense_Sensing.c ****     return (capsense_dsRam.status & capsense_SW_STS_BUSY);
 239:Generated_Source\PSoC4/capsense_Sensing.c **** }
 240:Generated_Source\PSoC4/capsense_Sensing.c **** 
 241:Generated_Source\PSoC4/capsense_Sensing.c **** /*******************************************************************************
 242:Generated_Source\PSoC4/capsense_Sensing.c **** * Function Name: capsense_SetupWidget
 243:Generated_Source\PSoC4/capsense_Sensing.c **** ****************************************************************************//**
 244:Generated_Source\PSoC4/capsense_Sensing.c **** *
 245:Generated_Source\PSoC4/capsense_Sensing.c **** * \brief
 246:Generated_Source\PSoC4/capsense_Sensing.c **** *  Performs the initialization required to scan the specified widget.
 247:Generated_Source\PSoC4/capsense_Sensing.c **** *
 248:Generated_Source\PSoC4/capsense_Sensing.c **** * \details
 249:Generated_Source\PSoC4/capsense_Sensing.c **** *  This function prepares the Component to scan all the sensors in the specified
 250:Generated_Source\PSoC4/capsense_Sensing.c **** *  widget by executing the following tasks:
 251:Generated_Source\PSoC4/capsense_Sensing.c **** *    1. Re-initialize the hardware if it is not configured to perform the
 252:Generated_Source\PSoC4/capsense_Sensing.c **** *       sensing method used by the specified widget, this happens only if multiple
 253:Generated_Source\PSoC4/capsense_Sensing.c **** *       sensing methods are used in the Component.
 254:Generated_Source\PSoC4/capsense_Sensing.c **** *    2. Initialize the hardware with specific sensing configuration (e.g.
 255:Generated_Source\PSoC4/capsense_Sensing.c **** *       sensor clock, scan resolution) used by the widget.
 256:Generated_Source\PSoC4/capsense_Sensing.c **** *    3. Disconnect all previously connected electrodes, if the electrodes
 257:Generated_Source\PSoC4/capsense_Sensing.c **** *       connected by the lower level SetupWidgetExt() or ConnectSns() functions
 258:Generated_Source\PSoC4/capsense_Sensing.c ****         and not disconnected.
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 6


 259:Generated_Source\PSoC4/capsense_Sensing.c **** *
 260:Generated_Source\PSoC4/capsense_Sensing.c **** *  This function does not start sensor scanning, the capsense_Scan()
 261:Generated_Source\PSoC4/capsense_Sensing.c **** *  function must be called to start the scan sensors in the widget. If this
 262:Generated_Source\PSoC4/capsense_Sensing.c **** *  function is called more than once, it does not break the Component operation,
 263:Generated_Source\PSoC4/capsense_Sensing.c **** *  but only the last initialized widget is in effect.
 264:Generated_Source\PSoC4/capsense_Sensing.c **** *
 265:Generated_Source\PSoC4/capsense_Sensing.c **** * \param widgetId
 266:Generated_Source\PSoC4/capsense_Sensing.c **** *  Specifies the ID number of the widget to be initialized for scanning.
 267:Generated_Source\PSoC4/capsense_Sensing.c **** *  A macro for the widget ID can be found in the
 268:Generated_Source\PSoC4/capsense_Sensing.c **** *  capsense Configuration header file defined as
 269:Generated_Source\PSoC4/capsense_Sensing.c **** *  capsense_<WidgetName>_WDGT_ID.
 270:Generated_Source\PSoC4/capsense_Sensing.c **** *
 271:Generated_Source\PSoC4/capsense_Sensing.c **** * \return
 272:Generated_Source\PSoC4/capsense_Sensing.c **** *  Returns the status of the widget setting up operation:
 273:Generated_Source\PSoC4/capsense_Sensing.c **** *    - CYRET_SUCCESS - The operation is successfully completed.
 274:Generated_Source\PSoC4/capsense_Sensing.c **** *    - CYRET_BAD_PARAM - The widget is invalid or if the specified widget is
 275:Generated_Source\PSoC4/capsense_Sensing.c **** *      disabled
 276:Generated_Source\PSoC4/capsense_Sensing.c **** *    - CYRET_INVALID_STATE - The previous scanning is not completed and the
 277:Generated_Source\PSoC4/capsense_Sensing.c **** *      hardware block is busy.
 278:Generated_Source\PSoC4/capsense_Sensing.c **** *    - CYRET_UNKNOWN - An unknown sensing method is used by the widget or any
 279:Generated_Source\PSoC4/capsense_Sensing.c **** *      other spurious error occurred.
 280:Generated_Source\PSoC4/capsense_Sensing.c **** *
 281:Generated_Source\PSoC4/capsense_Sensing.c **** **********************************************************************************/
 282:Generated_Source\PSoC4/capsense_Sensing.c **** cystatus capsense_SetupWidget(uint32 widgetId)
 283:Generated_Source\PSoC4/capsense_Sensing.c **** {
 284:Generated_Source\PSoC4/capsense_Sensing.c ****     cystatus widgetStatus;
 285:Generated_Source\PSoC4/capsense_Sensing.c **** 
 286:Generated_Source\PSoC4/capsense_Sensing.c ****     if (capsense_WDGT_SW_STS_BUSY == (capsense_dsRam.status & capsense_WDGT_SW_STS_BUSY))
 287:Generated_Source\PSoC4/capsense_Sensing.c ****     {
 288:Generated_Source\PSoC4/capsense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 289:Generated_Source\PSoC4/capsense_Sensing.c ****         widgetStatus = CYRET_INVALID_STATE;
 290:Generated_Source\PSoC4/capsense_Sensing.c ****     }
 291:Generated_Source\PSoC4/capsense_Sensing.c ****     /*
 292:Generated_Source\PSoC4/capsense_Sensing.c ****      *  Check if widget id is valid, specified widget is enabled and widget did not
 293:Generated_Source\PSoC4/capsense_Sensing.c ****      *  detect any fault conditions if BIST is enabled. If all conditions are met,
 294:Generated_Source\PSoC4/capsense_Sensing.c ****      *  set widgetStatus as good, if not, set widgetStatus as bad.
 295:Generated_Source\PSoC4/capsense_Sensing.c ****      */
 296:Generated_Source\PSoC4/capsense_Sensing.c ****     else if ((capsense_TOTAL_WIDGETS > widgetId) &&
 297:Generated_Source\PSoC4/capsense_Sensing.c ****         (0uL != capsense_GET_WIDGET_EN_STATUS(widgetId)))
 298:Generated_Source\PSoC4/capsense_Sensing.c **** 
 299:Generated_Source\PSoC4/capsense_Sensing.c ****     {
 300:Generated_Source\PSoC4/capsense_Sensing.c ****         widgetStatus = CYRET_SUCCESS;
 301:Generated_Source\PSoC4/capsense_Sensing.c ****     }
 302:Generated_Source\PSoC4/capsense_Sensing.c ****     else
 303:Generated_Source\PSoC4/capsense_Sensing.c ****     {
 304:Generated_Source\PSoC4/capsense_Sensing.c ****         widgetStatus = CYRET_BAD_PARAM;
 305:Generated_Source\PSoC4/capsense_Sensing.c ****     }
 306:Generated_Source\PSoC4/capsense_Sensing.c **** 
 307:Generated_Source\PSoC4/capsense_Sensing.c ****     /*
 308:Generated_Source\PSoC4/capsense_Sensing.c ****      * Check widgetStatus flag that is set earlier, if flag is good, then set up only
 309:Generated_Source\PSoC4/capsense_Sensing.c ****      * widget
 310:Generated_Source\PSoC4/capsense_Sensing.c ****      */
 311:Generated_Source\PSoC4/capsense_Sensing.c ****     if (CYRET_SUCCESS == widgetStatus)
 312:Generated_Source\PSoC4/capsense_Sensing.c ****     {
 313:Generated_Source\PSoC4/capsense_Sensing.c ****         switch (capsense_GET_SENSE_METHOD(&capsense_dsFlash.wdgtArray[widgetId]))
 314:Generated_Source\PSoC4/capsense_Sensing.c ****         {
 315:Generated_Source\PSoC4/capsense_Sensing.c ****         #if (capsense_ENABLE == capsense_CSX_EN)
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 7


 316:Generated_Source\PSoC4/capsense_Sensing.c ****             case capsense_SENSE_METHOD_CSX_E:
 317:Generated_Source\PSoC4/capsense_Sensing.c ****                 /* Set up widget for CSX scan */
 318:Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_CSXSetupWidget(widgetId);
 319:Generated_Source\PSoC4/capsense_Sensing.c ****                 break;
 320:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif
 321:Generated_Source\PSoC4/capsense_Sensing.c ****         #if (capsense_ENABLE == capsense_CSD_EN)
 322:Generated_Source\PSoC4/capsense_Sensing.c ****             case capsense_SENSE_METHOD_CSD_E:
 323:Generated_Source\PSoC4/capsense_Sensing.c ****                 /* Set up widget for CSD scan */
 324:Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_CSDSetupWidget(widgetId);
 325:Generated_Source\PSoC4/capsense_Sensing.c ****                 break;
 326:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif
 327:Generated_Source\PSoC4/capsense_Sensing.c ****         #if (capsense_ENABLE == capsense_ISX_EN)
 328:Generated_Source\PSoC4/capsense_Sensing.c ****             case capsense_SENSE_METHOD_ISX_E:
 329:Generated_Source\PSoC4/capsense_Sensing.c ****                 /* Set up widget for ISX scan */
 330:Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_ISXSetupWidget(widgetId);
 331:Generated_Source\PSoC4/capsense_Sensing.c ****                 break;
 332:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif
 333:Generated_Source\PSoC4/capsense_Sensing.c ****         default:
 334:Generated_Source\PSoC4/capsense_Sensing.c ****             /* Sensing method is invalid, return error to caller */
 335:Generated_Source\PSoC4/capsense_Sensing.c ****             widgetStatus = CYRET_UNKNOWN;
 336:Generated_Source\PSoC4/capsense_Sensing.c ****             break;
 337:Generated_Source\PSoC4/capsense_Sensing.c ****         }
 338:Generated_Source\PSoC4/capsense_Sensing.c ****     }
 339:Generated_Source\PSoC4/capsense_Sensing.c ****     return (widgetStatus);
 340:Generated_Source\PSoC4/capsense_Sensing.c **** }
 341:Generated_Source\PSoC4/capsense_Sensing.c **** 
 342:Generated_Source\PSoC4/capsense_Sensing.c **** 
 343:Generated_Source\PSoC4/capsense_Sensing.c **** /*******************************************************************************
 344:Generated_Source\PSoC4/capsense_Sensing.c **** * Function Name: capsense_Scan
 345:Generated_Source\PSoC4/capsense_Sensing.c **** ****************************************************************************//**
 346:Generated_Source\PSoC4/capsense_Sensing.c **** *
 347:Generated_Source\PSoC4/capsense_Sensing.c **** * \brief
 348:Generated_Source\PSoC4/capsense_Sensing.c **** *  Initiates scanning of all the sensors in the widget initialized by
 349:Generated_Source\PSoC4/capsense_Sensing.c **** *  capsense_SetupWidget(), if no scan is in progress.
 350:Generated_Source\PSoC4/capsense_Sensing.c **** *
 351:Generated_Source\PSoC4/capsense_Sensing.c **** * \details
 352:Generated_Source\PSoC4/capsense_Sensing.c **** *  This function is called only after the capsense_SetupWidget()
 353:Generated_Source\PSoC4/capsense_Sensing.c **** *  function is called to start the scanning of the sensors in the widget. The
 354:Generated_Source\PSoC4/capsense_Sensing.c **** *  status of a sensor scan must be checked using the capsense_IsBusy()
 355:Generated_Source\PSoC4/capsense_Sensing.c **** *  API prior to starting a next scan or setting up another widget.
 356:Generated_Source\PSoC4/capsense_Sensing.c **** *
 357:Generated_Source\PSoC4/capsense_Sensing.c **** * \return
 358:Generated_Source\PSoC4/capsense_Sensing.c **** *  Returns the status of the scan initiation operation:
 359:Generated_Source\PSoC4/capsense_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 360:Generated_Source\PSoC4/capsense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the
 361:Generated_Source\PSoC4/capsense_Sensing.c **** *    hardware block is busy.
 362:Generated_Source\PSoC4/capsense_Sensing.c **** *  - CYRET_UNKNOWN - An unknown sensing method is used by the widget.
 363:Generated_Source\PSoC4/capsense_Sensing.c **** *
 364:Generated_Source\PSoC4/capsense_Sensing.c **** ********************************************************************************/
 365:Generated_Source\PSoC4/capsense_Sensing.c **** cystatus capsense_Scan(void)
 366:Generated_Source\PSoC4/capsense_Sensing.c **** {
 367:Generated_Source\PSoC4/capsense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 368:Generated_Source\PSoC4/capsense_Sensing.c **** 
 369:Generated_Source\PSoC4/capsense_Sensing.c ****     if (capsense_WDGT_SW_STS_BUSY == (capsense_dsRam.status & capsense_WDGT_SW_STS_BUSY))
 370:Generated_Source\PSoC4/capsense_Sensing.c ****     {
 371:Generated_Source\PSoC4/capsense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 372:Generated_Source\PSoC4/capsense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 8


 373:Generated_Source\PSoC4/capsense_Sensing.c ****     }
 374:Generated_Source\PSoC4/capsense_Sensing.c ****     else
 375:Generated_Source\PSoC4/capsense_Sensing.c ****     {
 376:Generated_Source\PSoC4/capsense_Sensing.c ****         switch (capsense_currentSenseMethod)
 377:Generated_Source\PSoC4/capsense_Sensing.c ****         {
 378:Generated_Source\PSoC4/capsense_Sensing.c ****         #if (capsense_ENABLE == capsense_CSX_EN)
 379:Generated_Source\PSoC4/capsense_Sensing.c ****             case capsense_SENSE_METHOD_CSX_E:
 380:Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_CSXScan();
 381:Generated_Source\PSoC4/capsense_Sensing.c ****                 break;
 382:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif
 383:Generated_Source\PSoC4/capsense_Sensing.c ****         #if (capsense_ENABLE == capsense_CSD_EN)
 384:Generated_Source\PSoC4/capsense_Sensing.c ****             case capsense_SENSE_METHOD_CSD_E:
 385:Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_CSDScan();
 386:Generated_Source\PSoC4/capsense_Sensing.c ****                 break;
 387:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif
 388:Generated_Source\PSoC4/capsense_Sensing.c ****         #if (capsense_ENABLE == capsense_ISX_EN)
 389:Generated_Source\PSoC4/capsense_Sensing.c ****             case capsense_SENSE_METHOD_ISX_E:
 390:Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_ISXScan();
 391:Generated_Source\PSoC4/capsense_Sensing.c ****                 break;
 392:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif
 393:Generated_Source\PSoC4/capsense_Sensing.c ****         default:
 394:Generated_Source\PSoC4/capsense_Sensing.c ****             scanStatus = CYRET_UNKNOWN;
 395:Generated_Source\PSoC4/capsense_Sensing.c ****             break;
 396:Generated_Source\PSoC4/capsense_Sensing.c ****         }
 397:Generated_Source\PSoC4/capsense_Sensing.c ****     }
 398:Generated_Source\PSoC4/capsense_Sensing.c ****     return (scanStatus);
 399:Generated_Source\PSoC4/capsense_Sensing.c **** }
 400:Generated_Source\PSoC4/capsense_Sensing.c **** 
 401:Generated_Source\PSoC4/capsense_Sensing.c **** 
 402:Generated_Source\PSoC4/capsense_Sensing.c **** /*******************************************************************************
 403:Generated_Source\PSoC4/capsense_Sensing.c **** * Function Name: capsense_ScanAllWidgets
 404:Generated_Source\PSoC4/capsense_Sensing.c **** ****************************************************************************//**
 405:Generated_Source\PSoC4/capsense_Sensing.c **** *
 406:Generated_Source\PSoC4/capsense_Sensing.c **** * \brief
 407:Generated_Source\PSoC4/capsense_Sensing.c **** *  Initializes the first enabled widget and scanning of all the sensors in the
 408:Generated_Source\PSoC4/capsense_Sensing.c **** *  widget, then the same process is repeated for all the widgets in the Component,
 409:Generated_Source\PSoC4/capsense_Sensing.c **** *  i.e. scanning of all the widgets in the Component.
 410:Generated_Source\PSoC4/capsense_Sensing.c **** *
 411:Generated_Source\PSoC4/capsense_Sensing.c **** * \details
 412:Generated_Source\PSoC4/capsense_Sensing.c **** *  This function initializes a widget and scans all the sensors in the widget,
 413:Generated_Source\PSoC4/capsense_Sensing.c **** *  and then repeats the same for all the widgets in the Component. The tasks of
 414:Generated_Source\PSoC4/capsense_Sensing.c **** *  the capsense_SetupWidget() and capsense_Scan() functions are
 415:Generated_Source\PSoC4/capsense_Sensing.c **** *  executed by these functions. The status of a sensor scan must be checked
 416:Generated_Source\PSoC4/capsense_Sensing.c **** *  using the capsense_IsBusy() API prior to starting a next scan
 417:Generated_Source\PSoC4/capsense_Sensing.c **** *  or setting up another widget.
 418:Generated_Source\PSoC4/capsense_Sensing.c **** *
 419:Generated_Source\PSoC4/capsense_Sensing.c **** * \return
 420:Generated_Source\PSoC4/capsense_Sensing.c **** *  Returns the status of the operation:
 421:Generated_Source\PSoC4/capsense_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 422:Generated_Source\PSoC4/capsense_Sensing.c **** *  - CYRET_BAD_PARAM - All the widgets are disabled.
 423:Generated_Source\PSoC4/capsense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the HW block is busy.
 424:Generated_Source\PSoC4/capsense_Sensing.c **** *  - CYRET_UNKNOWN - There are unknown errors.
 425:Generated_Source\PSoC4/capsense_Sensing.c **** *
 426:Generated_Source\PSoC4/capsense_Sensing.c **** *******************************************************************************/
 427:Generated_Source\PSoC4/capsense_Sensing.c **** cystatus capsense_ScanAllWidgets(void)
 428:Generated_Source\PSoC4/capsense_Sensing.c **** {
 429:Generated_Source\PSoC4/capsense_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 9


 430:Generated_Source\PSoC4/capsense_Sensing.c **** 
 431:Generated_Source\PSoC4/capsense_Sensing.c ****     uint32 wdgtIndex;
 432:Generated_Source\PSoC4/capsense_Sensing.c **** 
 433:Generated_Source\PSoC4/capsense_Sensing.c ****     if (capsense_SW_STS_BUSY == (capsense_dsRam.status & capsense_SW_STS_BUSY))
 434:Generated_Source\PSoC4/capsense_Sensing.c ****     {
 435:Generated_Source\PSoC4/capsense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 436:Generated_Source\PSoC4/capsense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 437:Generated_Source\PSoC4/capsense_Sensing.c ****     }
 438:Generated_Source\PSoC4/capsense_Sensing.c ****     else
 439:Generated_Source\PSoC4/capsense_Sensing.c ****     {
 440:Generated_Source\PSoC4/capsense_Sensing.c ****         /*
 441:Generated_Source\PSoC4/capsense_Sensing.c ****          *  Set up widget first widget.
 442:Generated_Source\PSoC4/capsense_Sensing.c ****          *  If widget returned error, set up next, continue same until widget does not return error
 443:Generated_Source\PSoC4/capsense_Sensing.c ****          */
 444:Generated_Source\PSoC4/capsense_Sensing.c ****         for (wdgtIndex = 0u;
 445:Generated_Source\PSoC4/capsense_Sensing.c ****              wdgtIndex < capsense_TOTAL_WIDGETS;
 446:Generated_Source\PSoC4/capsense_Sensing.c ****              wdgtIndex++)
 447:Generated_Source\PSoC4/capsense_Sensing.c ****         {
 448:Generated_Source\PSoC4/capsense_Sensing.c **** 
 449:Generated_Source\PSoC4/capsense_Sensing.c ****             scanStatus = capsense_SetupWidget(wdgtIndex);
 450:Generated_Source\PSoC4/capsense_Sensing.c **** 
 451:Generated_Source\PSoC4/capsense_Sensing.c ****             if (CYRET_SUCCESS == scanStatus)
 452:Generated_Source\PSoC4/capsense_Sensing.c ****             {
 453:Generated_Source\PSoC4/capsense_Sensing.c ****                 #if (0u != (capsense_TOTAL_WIDGETS - 1u))
 454:Generated_Source\PSoC4/capsense_Sensing.c ****                     /* If there are more than one widget to be scanned, request callback to scan ne
 455:Generated_Source\PSoC4/capsense_Sensing.c ****                     if ((capsense_TOTAL_WIDGETS - 1u) > wdgtIndex)
 456:Generated_Source\PSoC4/capsense_Sensing.c ****                     {
 457:Generated_Source\PSoC4/capsense_Sensing.c ****                          /* Request callback to scan next widget in ISR */
 458:Generated_Source\PSoC4/capsense_Sensing.c ****                         capsense_requestScanAllWidget = capsense_ENABLE;
 459:Generated_Source\PSoC4/capsense_Sensing.c ****                     }
 460:Generated_Source\PSoC4/capsense_Sensing.c ****                     else
 461:Generated_Source\PSoC4/capsense_Sensing.c ****                     {
 462:Generated_Source\PSoC4/capsense_Sensing.c ****                         /* Request to exit in ISR (Do not scan the next widgets) */
 463:Generated_Source\PSoC4/capsense_Sensing.c ****                         capsense_requestScanAllWidget = capsense_DISABLE;
 464:Generated_Source\PSoC4/capsense_Sensing.c ****                     }
 465:Generated_Source\PSoC4/capsense_Sensing.c ****                 #else
 466:Generated_Source\PSoC4/capsense_Sensing.c ****                     {
 467:Generated_Source\PSoC4/capsense_Sensing.c ****                         /* Request to exit in ISR (We have only one widget) */
 468:Generated_Source\PSoC4/capsense_Sensing.c ****                         capsense_requestScanAllWidget = capsense_DISABLE;
 469:Generated_Source\PSoC4/capsense_Sensing.c ****                     }
 470:Generated_Source\PSoC4/capsense_Sensing.c ****                 #endif  /* (0u != (capsense_TOTAL_WIDGETS - 1u)) */
 471:Generated_Source\PSoC4/capsense_Sensing.c **** 
 472:Generated_Source\PSoC4/capsense_Sensing.c ****                 /* Initiate scan and quit loop */
 473:Generated_Source\PSoC4/capsense_Sensing.c ****                 scanStatus = capsense_Scan();
 474:Generated_Source\PSoC4/capsense_Sensing.c **** 
 475:Generated_Source\PSoC4/capsense_Sensing.c ****                 break;
 476:Generated_Source\PSoC4/capsense_Sensing.c ****             }
 477:Generated_Source\PSoC4/capsense_Sensing.c ****         }
 478:Generated_Source\PSoC4/capsense_Sensing.c ****     }
 479:Generated_Source\PSoC4/capsense_Sensing.c **** 
 480:Generated_Source\PSoC4/capsense_Sensing.c ****     return (scanStatus);
 481:Generated_Source\PSoC4/capsense_Sensing.c **** }
 482:Generated_Source\PSoC4/capsense_Sensing.c **** 
 483:Generated_Source\PSoC4/capsense_Sensing.c **** 
 484:Generated_Source\PSoC4/capsense_Sensing.c **** /*******************************************************************************
 485:Generated_Source\PSoC4/capsense_Sensing.c **** * Function Name: capsense_SetupWidgetExt
 486:Generated_Source\PSoC4/capsense_Sensing.c **** ****************************************************************************//**
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 10


 487:Generated_Source\PSoC4/capsense_Sensing.c **** *
 488:Generated_Source\PSoC4/capsense_Sensing.c **** * \brief
 489:Generated_Source\PSoC4/capsense_Sensing.c **** *  Performs extended initialization for the specified widget and also performs
 490:Generated_Source\PSoC4/capsense_Sensing.c **** *  initialization required for a specific sensor in the widget. This function
 491:Generated_Source\PSoC4/capsense_Sensing.c **** *  requires using the capsense_ScanExt() function to initiate a scan.
 492:Generated_Source\PSoC4/capsense_Sensing.c **** *
 493:Generated_Source\PSoC4/capsense_Sensing.c **** * \details
 494:Generated_Source\PSoC4/capsense_Sensing.c **** *  This function does the same as capsense_SetupWidget() and also
 495:Generated_Source\PSoC4/capsense_Sensing.c **** *  does the following tasks:
 496:Generated_Source\PSoC4/capsense_Sensing.c **** *    1. Connects the first sensor of the widget.
 497:Generated_Source\PSoC4/capsense_Sensing.c **** *    2. Configures the CSD HW block to perform a scan of the specified sensor.
 498:Generated_Source\PSoC4/capsense_Sensing.c **** *
 499:Generated_Source\PSoC4/capsense_Sensing.c **** *  Once this function is called to initialize a widget and a sensor, the
 500:Generated_Source\PSoC4/capsense_Sensing.c **** *  capsense_ScanExt() function is called to scan the sensor.
 501:Generated_Source\PSoC4/capsense_Sensing.c **** *
 502:Generated_Source\PSoC4/capsense_Sensing.c **** *  This function is called when no scanning is in progress. I.e.
 503:Generated_Source\PSoC4/capsense_Sensing.c **** *  capsense_IsBusy() returns a non-busy status.
 504:Generated_Source\PSoC4/capsense_Sensing.c **** *
 505:Generated_Source\PSoC4/capsense_Sensing.c **** *  Calling this function directly from the application layer is not
 506:Generated_Source\PSoC4/capsense_Sensing.c **** *  recommended. This function is used to implement only the user's specific
 507:Generated_Source\PSoC4/capsense_Sensing.c **** *  use cases (for faster execution time or pipeline scanning for example).
 508:Generated_Source\PSoC4/capsense_Sensing.c **** *
 509:Generated_Source\PSoC4/capsense_Sensing.c **** * \param widgetId
 510:Generated_Source\PSoC4/capsense_Sensing.c **** *  Specifies the ID number of the widget to perform hardware and firmware
 511:Generated_Source\PSoC4/capsense_Sensing.c **** *  initialization required for scanning the specific sensor in the specific
 512:Generated_Source\PSoC4/capsense_Sensing.c **** *  widget.
 513:Generated_Source\PSoC4/capsense_Sensing.c **** *  A macro for the widget ID can be found in the capsense
 514:Generated_Source\PSoC4/capsense_Sensing.c **** *  Configuration header file defined as capsense_<WidgetName>_WDGT_ID.
 515:Generated_Source\PSoC4/capsense_Sensing.c **** *
 516:Generated_Source\PSoC4/capsense_Sensing.c **** * \param sensorId
 517:Generated_Source\PSoC4/capsense_Sensing.c **** *  Specifies the ID number of the sensor within the widget to perform hardware
 518:Generated_Source\PSoC4/capsense_Sensing.c **** *  and firmware initialization required for scanning a specific sensor in a
 519:Generated_Source\PSoC4/capsense_Sensing.c **** *  specific widget.
 520:Generated_Source\PSoC4/capsense_Sensing.c **** *  A macro for the sensor ID within a specified widget can be found in the
 521:Generated_Source\PSoC4/capsense_Sensing.c **** *  capsense Configuration header file defined as
 522:Generated_Source\PSoC4/capsense_Sensing.c **** *  capsense_<WidgetName>_SNS<SensorNumber>_ID
 523:Generated_Source\PSoC4/capsense_Sensing.c **** *
 524:Generated_Source\PSoC4/capsense_Sensing.c **** * \return
 525:Generated_Source\PSoC4/capsense_Sensing.c **** *  Returns the status of the operation:
 526:Generated_Source\PSoC4/capsense_Sensing.c **** *  - CYRET_SUCCESS - The operation is successfully completed.
 527:Generated_Source\PSoC4/capsense_Sensing.c **** *  - CYRET_BAD_PARAM - The widget is invalid or if the specified widget is
 528:Generated_Source\PSoC4/capsense_Sensing.c **** *    disabled
 529:Generated_Source\PSoC4/capsense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the
 530:Generated_Source\PSoC4/capsense_Sensing.c **** *    hardware block is busy.
 531:Generated_Source\PSoC4/capsense_Sensing.c **** *  - CYRET_UNKNOWN - An unknown sensing method is used by the widget or any
 532:Generated_Source\PSoC4/capsense_Sensing.c **** *    other spurious error occurred.
 533:Generated_Source\PSoC4/capsense_Sensing.c **** *
 534:Generated_Source\PSoC4/capsense_Sensing.c **** *******************************************************************************/
 535:Generated_Source\PSoC4/capsense_Sensing.c **** cystatus capsense_SetupWidgetExt(uint32 widgetId, uint32 sensorId)
 536:Generated_Source\PSoC4/capsense_Sensing.c **** {
 537:Generated_Source\PSoC4/capsense_Sensing.c ****     cystatus widgetStatus;
 538:Generated_Source\PSoC4/capsense_Sensing.c **** 
 539:Generated_Source\PSoC4/capsense_Sensing.c ****     if (capsense_WDGT_SW_STS_BUSY == (capsense_dsRam.status & capsense_WDGT_SW_STS_BUSY))
 540:Generated_Source\PSoC4/capsense_Sensing.c ****     {
 541:Generated_Source\PSoC4/capsense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 542:Generated_Source\PSoC4/capsense_Sensing.c ****         widgetStatus = CYRET_INVALID_STATE;
 543:Generated_Source\PSoC4/capsense_Sensing.c ****     }
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 11


 544:Generated_Source\PSoC4/capsense_Sensing.c ****     /*
 545:Generated_Source\PSoC4/capsense_Sensing.c ****      *  Check if widget id is valid, specified widget is enabled and widget did not
 546:Generated_Source\PSoC4/capsense_Sensing.c ****      *  detect any fault conditions if BIST is enabled. If all conditions are met,
 547:Generated_Source\PSoC4/capsense_Sensing.c ****      *  set widgetStatus as good, if not, set widgetStatus as bad.
 548:Generated_Source\PSoC4/capsense_Sensing.c ****      */
 549:Generated_Source\PSoC4/capsense_Sensing.c ****     else if ((capsense_TOTAL_WIDGETS > widgetId) &&
 550:Generated_Source\PSoC4/capsense_Sensing.c ****         (0uL != capsense_GET_WIDGET_EN_STATUS(widgetId)) &&
 551:Generated_Source\PSoC4/capsense_Sensing.c ****         (sensorId < capsense_GET_SENSOR_COUNT(widgetId)))
 552:Generated_Source\PSoC4/capsense_Sensing.c **** 
 553:Generated_Source\PSoC4/capsense_Sensing.c ****     {
 554:Generated_Source\PSoC4/capsense_Sensing.c ****         widgetStatus = CYRET_SUCCESS;
 555:Generated_Source\PSoC4/capsense_Sensing.c ****     }
 556:Generated_Source\PSoC4/capsense_Sensing.c ****     else
 557:Generated_Source\PSoC4/capsense_Sensing.c ****     {
 558:Generated_Source\PSoC4/capsense_Sensing.c ****         widgetStatus = CYRET_BAD_PARAM;
 559:Generated_Source\PSoC4/capsense_Sensing.c ****     }
 560:Generated_Source\PSoC4/capsense_Sensing.c **** 
 561:Generated_Source\PSoC4/capsense_Sensing.c ****     /*
 562:Generated_Source\PSoC4/capsense_Sensing.c ****      * Check widgetStatus flag that is set earlier, if flag is good, then set up only
 563:Generated_Source\PSoC4/capsense_Sensing.c ****      * widget
 564:Generated_Source\PSoC4/capsense_Sensing.c ****      */
 565:Generated_Source\PSoC4/capsense_Sensing.c ****     if (CYRET_SUCCESS == widgetStatus)
 566:Generated_Source\PSoC4/capsense_Sensing.c ****     {
 567:Generated_Source\PSoC4/capsense_Sensing.c ****         switch (capsense_GET_SENSE_METHOD(&capsense_dsFlash.wdgtArray[widgetId]))
 568:Generated_Source\PSoC4/capsense_Sensing.c ****         {
 569:Generated_Source\PSoC4/capsense_Sensing.c ****         #if (capsense_ENABLE == capsense_CSX_EN)
 570:Generated_Source\PSoC4/capsense_Sensing.c ****             case capsense_SENSE_METHOD_CSX_E:
 571:Generated_Source\PSoC4/capsense_Sensing.c ****                 /* Set up widget for CSX scan */
 572:Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_CSXSetupWidgetExt(widgetId, sensorId);
 573:Generated_Source\PSoC4/capsense_Sensing.c ****                 break;
 574:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif
 575:Generated_Source\PSoC4/capsense_Sensing.c ****         #if (capsense_ENABLE == capsense_CSD_EN)
 576:Generated_Source\PSoC4/capsense_Sensing.c ****             case capsense_SENSE_METHOD_CSD_E:
 577:Generated_Source\PSoC4/capsense_Sensing.c ****                 /* Set up widget for CSD scan */
 578:Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_CSDSetupWidgetExt(widgetId, sensorId);
 579:Generated_Source\PSoC4/capsense_Sensing.c ****                 break;
 580:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif
 581:Generated_Source\PSoC4/capsense_Sensing.c ****         #if (capsense_ENABLE == capsense_ISX_EN)
 582:Generated_Source\PSoC4/capsense_Sensing.c ****             case capsense_SENSE_METHOD_ISX_E:
 583:Generated_Source\PSoC4/capsense_Sensing.c ****                 /* Set up widget for ISX scan */
 584:Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_ISXSetupWidgetExt(widgetId, sensorId);
 585:Generated_Source\PSoC4/capsense_Sensing.c ****                 break;
 586:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif
 587:Generated_Source\PSoC4/capsense_Sensing.c ****         default:
 588:Generated_Source\PSoC4/capsense_Sensing.c ****             /* Sensing method is invalid, return error to caller */
 589:Generated_Source\PSoC4/capsense_Sensing.c ****             widgetStatus = CYRET_UNKNOWN;
 590:Generated_Source\PSoC4/capsense_Sensing.c ****             break;
 591:Generated_Source\PSoC4/capsense_Sensing.c ****         }
 592:Generated_Source\PSoC4/capsense_Sensing.c ****     }
 593:Generated_Source\PSoC4/capsense_Sensing.c ****     return (widgetStatus);
 594:Generated_Source\PSoC4/capsense_Sensing.c **** }
 595:Generated_Source\PSoC4/capsense_Sensing.c **** 
 596:Generated_Source\PSoC4/capsense_Sensing.c **** 
 597:Generated_Source\PSoC4/capsense_Sensing.c **** /*******************************************************************************
 598:Generated_Source\PSoC4/capsense_Sensing.c **** * Function Name: capsense_ScanExt
 599:Generated_Source\PSoC4/capsense_Sensing.c **** ****************************************************************************//**
 600:Generated_Source\PSoC4/capsense_Sensing.c **** *
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 12


 601:Generated_Source\PSoC4/capsense_Sensing.c **** * \brief
 602:Generated_Source\PSoC4/capsense_Sensing.c **** *  Starts a conversion on the pre-configured sensor. This function requires
 603:Generated_Source\PSoC4/capsense_Sensing.c **** *  using the capsense_SetupWidgetExt() function to set up the a
 604:Generated_Source\PSoC4/capsense_Sensing.c **** *  widget.
 605:Generated_Source\PSoC4/capsense_Sensing.c **** *
 606:Generated_Source\PSoC4/capsense_Sensing.c **** * \details
 607:Generated_Source\PSoC4/capsense_Sensing.c **** *  This function performs single scanning of one sensor in the widget configured
 608:Generated_Source\PSoC4/capsense_Sensing.c **** *  by the capsense_SetupWidgetExt() function.
 609:Generated_Source\PSoC4/capsense_Sensing.c **** *
 610:Generated_Source\PSoC4/capsense_Sensing.c **** *  Calling this function directly from the application layer is not
 611:Generated_Source\PSoC4/capsense_Sensing.c **** *  recommended. This function is used to implement only the user's specific
 612:Generated_Source\PSoC4/capsense_Sensing.c **** *  use cases (for faster execution time or pipeline scanning for example).
 613:Generated_Source\PSoC4/capsense_Sensing.c **** *  This function is called when no scanning is in progress. I.e.
 614:Generated_Source\PSoC4/capsense_Sensing.c **** *  capsense_IsBusy() returns a non-busy status.
 615:Generated_Source\PSoC4/capsense_Sensing.c **** *
 616:Generated_Source\PSoC4/capsense_Sensing.c **** *  The sensor must be preconfigured by using the
 617:Generated_Source\PSoC4/capsense_Sensing.c **** *  capsense_SetupWidgetExt() API prior to calling this function.
 618:Generated_Source\PSoC4/capsense_Sensing.c **** *  The sensor remains ready for a next scan if a previous scan was triggered
 619:Generated_Source\PSoC4/capsense_Sensing.c **** *  by using the capsense_ScanExt() function. In this case, calling
 620:Generated_Source\PSoC4/capsense_Sensing.c **** *  capsense_SetupWidgetExt() is not required every time before the
 621:Generated_Source\PSoC4/capsense_Sensing.c **** *  capsense_ScanExt() function. If a previous scan was triggered in
 622:Generated_Source\PSoC4/capsense_Sensing.c **** *  any other way - capsense_Scan(), capsense_ScanAllWidgets() or
 623:Generated_Source\PSoC4/capsense_Sensing.c **** *  capsense_RunTuner() - (see the capsense_RunTuner() function
 624:Generated_Source\PSoC4/capsense_Sensing.c **** *  description for more details), the sensor must be preconfigured again by
 625:Generated_Source\PSoC4/capsense_Sensing.c **** *  using the capsense_SetupWidgetExt() API prior to calling the
 626:Generated_Source\PSoC4/capsense_Sensing.c **** *  capsense_ScanExt() function.
 627:Generated_Source\PSoC4/capsense_Sensing.c **** *
 628:Generated_Source\PSoC4/capsense_Sensing.c **** *  If disconnection of the sensors is required after calling
 629:Generated_Source\PSoC4/capsense_Sensing.c **** *  capsense_ScanExt(), the capsense_CSDDisconnectSns() or
 630:Generated_Source\PSoC4/capsense_Sensing.c **** *  capsense_CSXDisconnectTx() or capsense_CSXDisconnectRx()
 631:Generated_Source\PSoC4/capsense_Sensing.c **** *  functions can be used.
 632:Generated_Source\PSoC4/capsense_Sensing.c **** *
 633:Generated_Source\PSoC4/capsense_Sensing.c **** * \return
 634:Generated_Source\PSoC4/capsense_Sensing.c **** *  Returns the status of the scan initiation operation:
 635:Generated_Source\PSoC4/capsense_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 636:Generated_Source\PSoC4/capsense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the
 637:Generated_Source\PSoC4/capsense_Sensing.c **** *    hardware block is busy.
 638:Generated_Source\PSoC4/capsense_Sensing.c **** *  - CYRET_UNKNOWN - An unknown sensing method is used by the widget.
 639:Generated_Source\PSoC4/capsense_Sensing.c **** *
 640:Generated_Source\PSoC4/capsense_Sensing.c **** *******************************************************************************/
 641:Generated_Source\PSoC4/capsense_Sensing.c **** cystatus capsense_ScanExt(void)
 642:Generated_Source\PSoC4/capsense_Sensing.c **** {
 643:Generated_Source\PSoC4/capsense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 644:Generated_Source\PSoC4/capsense_Sensing.c **** 
 645:Generated_Source\PSoC4/capsense_Sensing.c ****     if (capsense_WDGT_SW_STS_BUSY == (capsense_dsRam.status & capsense_WDGT_SW_STS_BUSY))
 646:Generated_Source\PSoC4/capsense_Sensing.c ****     {
 647:Generated_Source\PSoC4/capsense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 648:Generated_Source\PSoC4/capsense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 649:Generated_Source\PSoC4/capsense_Sensing.c ****     }
 650:Generated_Source\PSoC4/capsense_Sensing.c ****     else
 651:Generated_Source\PSoC4/capsense_Sensing.c ****     {
 652:Generated_Source\PSoC4/capsense_Sensing.c ****         switch (capsense_currentSenseMethod)
 653:Generated_Source\PSoC4/capsense_Sensing.c ****         {
 654:Generated_Source\PSoC4/capsense_Sensing.c ****         #if (capsense_ENABLE == capsense_CSX_EN)
 655:Generated_Source\PSoC4/capsense_Sensing.c ****             case capsense_SENSE_METHOD_CSX_E:
 656:Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_CSXScanExt();
 657:Generated_Source\PSoC4/capsense_Sensing.c ****                 break;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 13


 658:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif
 659:Generated_Source\PSoC4/capsense_Sensing.c ****         #if (capsense_ENABLE == capsense_CSD_EN)
 660:Generated_Source\PSoC4/capsense_Sensing.c ****             case capsense_SENSE_METHOD_CSD_E:
 661:Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_CSDScanExt();
 662:Generated_Source\PSoC4/capsense_Sensing.c ****                 break;
 663:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif
 664:Generated_Source\PSoC4/capsense_Sensing.c ****         #if (capsense_ENABLE == capsense_ISX_EN)
 665:Generated_Source\PSoC4/capsense_Sensing.c ****             case capsense_SENSE_METHOD_ISX_E:
 666:Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_ISXScanExt();
 667:Generated_Source\PSoC4/capsense_Sensing.c ****                 break;
 668:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif
 669:Generated_Source\PSoC4/capsense_Sensing.c ****         default:
 670:Generated_Source\PSoC4/capsense_Sensing.c ****             scanStatus = CYRET_UNKNOWN;
 671:Generated_Source\PSoC4/capsense_Sensing.c ****             break;
 672:Generated_Source\PSoC4/capsense_Sensing.c ****         }
 673:Generated_Source\PSoC4/capsense_Sensing.c ****     }
 674:Generated_Source\PSoC4/capsense_Sensing.c ****     return (scanStatus);
 675:Generated_Source\PSoC4/capsense_Sensing.c **** }
 676:Generated_Source\PSoC4/capsense_Sensing.c **** 
 677:Generated_Source\PSoC4/capsense_Sensing.c **** 
 678:Generated_Source\PSoC4/capsense_Sensing.c **** /*******************************************************************************
 679:Generated_Source\PSoC4/capsense_Sensing.c **** * Function Name: capsense_SsInitialize
 680:Generated_Source\PSoC4/capsense_Sensing.c **** ****************************************************************************//**
 681:Generated_Source\PSoC4/capsense_Sensing.c **** *
 682:Generated_Source\PSoC4/capsense_Sensing.c **** * \brief
 683:Generated_Source\PSoC4/capsense_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 684:Generated_Source\PSoC4/capsense_Sensing.c **** *  of the capsense Component. This function is called from
 685:Generated_Source\PSoC4/capsense_Sensing.c **** *  the capsense_Start() API prior to calling any other APIs of the Component.
 686:Generated_Source\PSoC4/capsense_Sensing.c **** *
 687:Generated_Source\PSoC4/capsense_Sensing.c **** * \details
 688:Generated_Source\PSoC4/capsense_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 689:Generated_Source\PSoC4/capsense_Sensing.c **** *  of the capsense Component. This function is called from
 690:Generated_Source\PSoC4/capsense_Sensing.c **** *  the capsense_Start() API prior to calling any other APIs of the Component.
 691:Generated_Source\PSoC4/capsense_Sensing.c **** *  1. Depending on the configuration, the function initializes the CSD block
 692:Generated_Source\PSoC4/capsense_Sensing.c **** *     for the corresponding sensing mode.
 693:Generated_Source\PSoC4/capsense_Sensing.c **** *  2. The function updates the dsRam.wdgtWorking variable with 1 when Self-test
 694:Generated_Source\PSoC4/capsense_Sensing.c **** *     is enabled.
 695:Generated_Source\PSoC4/capsense_Sensing.c **** *
 696:Generated_Source\PSoC4/capsense_Sensing.c **** *  Calling the capsense_Start API is the recommended method to initialize
 697:Generated_Source\PSoC4/capsense_Sensing.c **** *  the capsense Component at power-up. The capsense_SsInitialize()
 698:Generated_Source\PSoC4/capsense_Sensing.c **** *  API should not be used for initialization, resume, or wake-up operations.
 699:Generated_Source\PSoC4/capsense_Sensing.c **** *  The dsRam.wdgtWorking variable is updated.
 700:Generated_Source\PSoC4/capsense_Sensing.c **** *
 701:Generated_Source\PSoC4/capsense_Sensing.c **** * \return status
 702:Generated_Source\PSoC4/capsense_Sensing.c **** *  Returns status of operation:
 703:Generated_Source\PSoC4/capsense_Sensing.c **** *  - Zero        - Indicates successful initialization.
 704:Generated_Source\PSoC4/capsense_Sensing.c **** *  - Non-zero    - One or more errors occurred in the initialization process.
 705:Generated_Source\PSoC4/capsense_Sensing.c **** *
 706:Generated_Source\PSoC4/capsense_Sensing.c **** *******************************************************************************/
 707:Generated_Source\PSoC4/capsense_Sensing.c **** cystatus capsense_SsInitialize(void)
 708:Generated_Source\PSoC4/capsense_Sensing.c **** {
 709:Generated_Source\PSoC4/capsense_Sensing.c ****     cystatus initStatus;
 710:Generated_Source\PSoC4/capsense_Sensing.c **** 
 711:Generated_Source\PSoC4/capsense_Sensing.c ****     #if ((capsense_ENABLE == capsense_MULTI_FREQ_SCAN_EN) &&\
 712:Generated_Source\PSoC4/capsense_Sensing.c ****          (capsense_MFS_IMO == capsense_MFS_METHOD))
 713:Generated_Source\PSoC4/capsense_Sensing.c ****         uint8 centerFreqTrim;
 714:Generated_Source\PSoC4/capsense_Sensing.c **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 14


 715:Generated_Source\PSoC4/capsense_Sensing.c ****         centerFreqTrim = (uint8)CY_GET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR);
 716:Generated_Source\PSoC4/capsense_Sensing.c ****         capsense_immunity[capsense_FREQ_CHANNEL_0] = centerFreqTrim;
 717:Generated_Source\PSoC4/capsense_Sensing.c **** 
 718:Generated_Source\PSoC4/capsense_Sensing.c ****         if (centerFreqTrim < capsense_IMO_FREQUENCY_OFFSET_F1)
 719:Generated_Source\PSoC4/capsense_Sensing.c ****         {
 720:Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_immunity[capsense_FREQ_CHANNEL_1] = centerFreqTrim + capsense_IMO_FREQUENCY_OF
 721:Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_immunity[capsense_FREQ_CHANNEL_2] = centerFreqTrim + (capsense_IMO_FREQUENCY_O
 722:Generated_Source\PSoC4/capsense_Sensing.c ****                                                                                            capsense
 723:Generated_Source\PSoC4/capsense_Sensing.c ****         }
 724:Generated_Source\PSoC4/capsense_Sensing.c ****         else if (centerFreqTrim > (capsense_IMO_FREQUENCY_OFFSET_MAX - capsense_IMO_FREQUENCY_OFFSE
 725:Generated_Source\PSoC4/capsense_Sensing.c ****         {
 726:Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_immunity[capsense_FREQ_CHANNEL_1] = centerFreqTrim - capsense_IMO_FREQUENCY_OF
 727:Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_immunity[capsense_FREQ_CHANNEL_2] = centerFreqTrim - (capsense_IMO_FREQUENCY_O
 728:Generated_Source\PSoC4/capsense_Sensing.c ****                                                                                            capsense
 729:Generated_Source\PSoC4/capsense_Sensing.c ****         }
 730:Generated_Source\PSoC4/capsense_Sensing.c ****         else
 731:Generated_Source\PSoC4/capsense_Sensing.c ****         {
 732:Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_immunity[capsense_FREQ_CHANNEL_1] = centerFreqTrim - capsense_IMO_FREQUENCY_OF
 733:Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_immunity[capsense_FREQ_CHANNEL_2] = centerFreqTrim + capsense_IMO_FREQUENCY_OF
 734:Generated_Source\PSoC4/capsense_Sensing.c ****         }
 735:Generated_Source\PSoC4/capsense_Sensing.c **** 
 736:Generated_Source\PSoC4/capsense_Sensing.c ****     #endif /* ((capsense_ENABLE == capsense_MULTI_FREQ_SCAN_EN) &&\
 737:Generated_Source\PSoC4/capsense_Sensing.c ****                (capsense_MFS_IMO == capsense_MFS_METHOD)) */
 738:Generated_Source\PSoC4/capsense_Sensing.c **** 
 739:Generated_Source\PSoC4/capsense_Sensing.c ****     initStatus = CYRET_SUCCESS;
 740:Generated_Source\PSoC4/capsense_Sensing.c **** 
 741:Generated_Source\PSoC4/capsense_Sensing.c ****     #if (capsense_DISABLE == capsense_CSDV2)
 742:Generated_Source\PSoC4/capsense_Sensing.c ****         capsense_SsTrimIdacs();
 743:Generated_Source\PSoC4/capsense_Sensing.c ****     #endif /* (capsense_ENABLE == capsense_CSDV2) */
 744:Generated_Source\PSoC4/capsense_Sensing.c **** 
 745:Generated_Source\PSoC4/capsense_Sensing.c ****     #if((capsense_ENABLE == capsense_CSD_EN) ||\
 746:Generated_Source\PSoC4/capsense_Sensing.c ****     ((capsense_ENABLE == capsense_CSX_EN) && (capsense_ENABLE == capsense_CSDV2)))
 747:Generated_Source\PSoC4/capsense_Sensing.c ****         capsense_SsInitializeSourceSenseClk();
 748:Generated_Source\PSoC4/capsense_Sensing.c ****     #endif /* ((capsense_ENABLE == capsense_CSD_EN) ||\
 749:Generated_Source\PSoC4/capsense_Sensing.c ****               ((capsense_ENABLE == capsense_CSX_EN) && (capsense_ENABLE == capsense_CSDV2))) */
 750:Generated_Source\PSoC4/capsense_Sensing.c **** 
 751:Generated_Source\PSoC4/capsense_Sensing.c ****     /* Set all IO states to the default state */
 752:Generated_Source\PSoC4/capsense_Sensing.c ****     capsense_SsSetAllIOsState((uint32)capsense_SNS_CONNECTION_GROUND);
 753:Generated_Source\PSoC4/capsense_Sensing.c ****     capsense_dsRam.scanCurrentISC = capsense_SNS_CONNECTION_GROUND;
 754:Generated_Source\PSoC4/capsense_Sensing.c **** 
 755:Generated_Source\PSoC4/capsense_Sensing.c ****     capsense_SsSwitchSensingMode(capsense_UNDEFINED_E);
 756:Generated_Source\PSoC4/capsense_Sensing.c ****     #if (capsense_ENABLE == capsense_MANY_SENSE_MODES_EN)
 757:Generated_Source\PSoC4/capsense_Sensing.c ****     #elif (capsense_ENABLE == capsense_CSD_EN)
 758:Generated_Source\PSoC4/capsense_Sensing.c ****         capsense_SsSwitchSensingMode(capsense_SENSE_METHOD_CSD_E);
 759:Generated_Source\PSoC4/capsense_Sensing.c ****     #elif (capsense_ENABLE == capsense_CSX_EN)
 760:Generated_Source\PSoC4/capsense_Sensing.c ****         capsense_SsSwitchSensingMode(capsense_SENSE_METHOD_CSX_E);
 761:Generated_Source\PSoC4/capsense_Sensing.c ****     #elif (capsense_ENABLE == capsense_ISX_EN)
 762:Generated_Source\PSoC4/capsense_Sensing.c ****         capsense_SsSwitchSensingMode(capsense_SENSE_METHOD_ISX_E);
 763:Generated_Source\PSoC4/capsense_Sensing.c ****     #else
 764:Generated_Source\PSoC4/capsense_Sensing.c ****         #error "No sensing method enabled, Component cannot work in this mode"
 765:Generated_Source\PSoC4/capsense_Sensing.c ****         initStatus = CYRET_UNKNOWN;
 766:Generated_Source\PSoC4/capsense_Sensing.c ****     #endif
 767:Generated_Source\PSoC4/capsense_Sensing.c **** 
 768:Generated_Source\PSoC4/capsense_Sensing.c ****     return (initStatus);
 769:Generated_Source\PSoC4/capsense_Sensing.c **** }
 770:Generated_Source\PSoC4/capsense_Sensing.c **** 
 771:Generated_Source\PSoC4/capsense_Sensing.c **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 15


 772:Generated_Source\PSoC4/capsense_Sensing.c **** /*******************************************************************************
 773:Generated_Source\PSoC4/capsense_Sensing.c **** * Function Name: capsense_SetPinState
 774:Generated_Source\PSoC4/capsense_Sensing.c **** ****************************************************************************//**
 775:Generated_Source\PSoC4/capsense_Sensing.c **** *
 776:Generated_Source\PSoC4/capsense_Sensing.c **** * \brief
 777:Generated_Source\PSoC4/capsense_Sensing.c **** *  Sets the state (drive mode and output state) of the port pin used by a sensor.
 778:Generated_Source\PSoC4/capsense_Sensing.c **** *  The possible states are GND, Shield, High-Z, Tx or Rx, Sensor. If the sensor
 779:Generated_Source\PSoC4/capsense_Sensing.c **** *  specified in the input parameter is a ganged sensor, then the state of all pins
 780:Generated_Source\PSoC4/capsense_Sensing.c **** *  associated with the ganged sensor is updated.
 781:Generated_Source\PSoC4/capsense_Sensing.c **** *
 782:Generated_Source\PSoC4/capsense_Sensing.c **** * \details
 783:Generated_Source\PSoC4/capsense_Sensing.c **** *  This function sets a specified state for a specified sensor element. For the
 784:Generated_Source\PSoC4/capsense_Sensing.c **** *  CSD widgets, sensor element is a sensor ID, for the CSX widgets, it is either
 785:Generated_Source\PSoC4/capsense_Sensing.c **** *  an Rx or Tx electrode ID. If the specified sensor is a ganged sensor, then
 786:Generated_Source\PSoC4/capsense_Sensing.c **** *  the specified state is set for all the electrodes belong to the sensor.
 787:Generated_Source\PSoC4/capsense_Sensing.c **** *  This function must not be called while the Component is in the busy state.
 788:Generated_Source\PSoC4/capsense_Sensing.c **** *
 789:Generated_Source\PSoC4/capsense_Sensing.c **** *  This function accepts the capsense_SHIELD and
 790:Generated_Source\PSoC4/capsense_Sensing.c **** *  capsense_SENSOR states as an input only if there is at least
 791:Generated_Source\PSoC4/capsense_Sensing.c **** *  one CSD widget. Similarly, this function accepts the capsense_TX_PIN
 792:Generated_Source\PSoC4/capsense_Sensing.c **** *  and capsense_RX_PIN states as an input only if there is at least
 793:Generated_Source\PSoC4/capsense_Sensing.c **** *  one CSX widget in the project.
 794:Generated_Source\PSoC4/capsense_Sensing.c **** 
 795:Generated_Source\PSoC4/capsense_Sensing.c **** *  Calling this function directly from the application layer is not
 796:Generated_Source\PSoC4/capsense_Sensing.c **** *  recommended. This function is used to implement only the custom-specific
 797:Generated_Source\PSoC4/capsense_Sensing.c **** *  use cases. Functions that perform a setup and scan of a sensor/widget
 798:Generated_Source\PSoC4/capsense_Sensing.c **** *  automatically set the required pin states. They ignore changes
 799:Generated_Source\PSoC4/capsense_Sensing.c **** *  in the design made by the capsense_SetPinState() function.
 800:Generated_Source\PSoC4/capsense_Sensing.c **** *  This function neither check wdgtIndex nor sensorElement for the correctness.
 801:Generated_Source\PSoC4/capsense_Sensing.c **** *
 802:Generated_Source\PSoC4/capsense_Sensing.c **** * \param widgetId
 803:Generated_Source\PSoC4/capsense_Sensing.c **** *  Specifies the ID of the widget to change the pin state of the specified
 804:Generated_Source\PSoC4/capsense_Sensing.c **** *  sensor.
 805:Generated_Source\PSoC4/capsense_Sensing.c **** *  A macro for the widget ID can be found in the capsense Configuration
 806:Generated_Source\PSoC4/capsense_Sensing.c **** *  header file defined as capsense_<WidgetName>_WDGT_ID.
 807:Generated_Source\PSoC4/capsense_Sensing.c **** *
 808:Generated_Source\PSoC4/capsense_Sensing.c **** * \param sensorElement
 809:Generated_Source\PSoC4/capsense_Sensing.c **** *  Specifies the ID of the sensor element within the widget to change
 810:Generated_Source\PSoC4/capsense_Sensing.c **** *  its pin state.
 811:Generated_Source\PSoC4/capsense_Sensing.c **** *  \if SECTION_C_LOW_LEVEL
 812:Generated_Source\PSoC4/capsense_Sensing.c **** *  For the CSD widgets, sensorElement is the sensor ID and can be found in the
 813:Generated_Source\PSoC4/capsense_Sensing.c **** *  capsense Configuration header file defined as
 814:Generated_Source\PSoC4/capsense_Sensing.c **** *  - capsense_<WidgetName>_SNS<SensorNumber>_ID.
 815:Generated_Source\PSoC4/capsense_Sensing.c **** *  For the CSX widgets, sensorElement is defined either as Rx ID or Tx ID.
 816:Generated_Source\PSoC4/capsense_Sensing.c **** *  The first Rx in a widget corresponds to sensorElement = 0, the second
 817:Generated_Source\PSoC4/capsense_Sensing.c **** *  Rx in a widget corresponds to sensorElement = 1, and so on.
 818:Generated_Source\PSoC4/capsense_Sensing.c **** *  The last Tx in a widget corresponds to sensorElement = (RxNum + TxNum).
 819:Generated_Source\PSoC4/capsense_Sensing.c **** *  \endif
 820:Generated_Source\PSoC4/capsense_Sensing.c **** *  Macros for Rx and Tx IDs can be found in the
 821:Generated_Source\PSoC4/capsense_Sensing.c **** *  capsense Configuration header file defined as:
 822:Generated_Source\PSoC4/capsense_Sensing.c **** *  - capsense_<WidgetName>_RX<RXNumber>_ID
 823:Generated_Source\PSoC4/capsense_Sensing.c **** *  - capsense_<WidgetName>_TX<TXNumber>_ID.
 824:Generated_Source\PSoC4/capsense_Sensing.c **** *
 825:Generated_Source\PSoC4/capsense_Sensing.c **** * \param state
 826:Generated_Source\PSoC4/capsense_Sensing.c **** *  Specifies the state of the sensor to be set:
 827:Generated_Source\PSoC4/capsense_Sensing.c **** *     1. capsense_GROUND - The pin is connected to the ground.
 828:Generated_Source\PSoC4/capsense_Sensing.c **** *     2. capsense_HIGHZ - The drive mode of the pin is set to High-Z
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 16


 829:Generated_Source\PSoC4/capsense_Sensing.c **** *        Analog.
 830:Generated_Source\PSoC4/capsense_Sensing.c **** *     3. capsense_SHIELD - The shield signal is routed to the pin
 831:Generated_Source\PSoC4/capsense_Sensing.c **** *        (available only if CSD sensing method with shield electrode is enabled).
 832:Generated_Source\PSoC4/capsense_Sensing.c **** *     4. capsense_SENSOR - The pin is connected to the scanning bus
 833:Generated_Source\PSoC4/capsense_Sensing.c **** *        (available only if CSD sensing method is enabled).
 834:Generated_Source\PSoC4/capsense_Sensing.c **** *     5. capsense_TX_PIN - The Tx or Lx signal is routed to the sensor
 835:Generated_Source\PSoC4/capsense_Sensing.c **** *        (available only if CSX or ISX sensing method is enabled).
 836:Generated_Source\PSoC4/capsense_Sensing.c **** *     6. capsense_RX_PIN - The pin is connected to the scanning bus
 837:Generated_Source\PSoC4/capsense_Sensing.c **** *        (available only if CSX or ISX sensing method is enabled).
 838:Generated_Source\PSoC4/capsense_Sensing.c **** *
 839:Generated_Source\PSoC4/capsense_Sensing.c **** *******************************************************************************/
 840:Generated_Source\PSoC4/capsense_Sensing.c **** void capsense_SetPinState(uint32 widgetId, uint32 sensorElement, uint32 state)
 841:Generated_Source\PSoC4/capsense_Sensing.c **** {
 842:Generated_Source\PSoC4/capsense_Sensing.c ****     uint32 eltdNum;
 843:Generated_Source\PSoC4/capsense_Sensing.c ****     uint32 eltdIndex;
 844:Generated_Source\PSoC4/capsense_Sensing.c ****     uint8  interruptState;
 845:Generated_Source\PSoC4/capsense_Sensing.c ****     capsense_FLASH_IO_STRUCT const *ioPtr;
 846:Generated_Source\PSoC4/capsense_Sensing.c ****     #if (capsense_ENABLE == capsense_GANGED_SNS_EN)
 847:Generated_Source\PSoC4/capsense_Sensing.c ****         capsense_FLASH_SNS_STRUCT const *curFlashSnsPtr;
 848:Generated_Source\PSoC4/capsense_Sensing.c ****     #endif
 849:Generated_Source\PSoC4/capsense_Sensing.c **** 
 850:Generated_Source\PSoC4/capsense_Sensing.c ****     /* Getting sensor element pointer and number of electrodes */
 851:Generated_Source\PSoC4/capsense_Sensing.c ****     #if (capsense_ENABLE == capsense_GANGED_SNS_EN)
 852:Generated_Source\PSoC4/capsense_Sensing.c ****         /* Check the ganged sns flag */
 853:Generated_Source\PSoC4/capsense_Sensing.c ****         if (capsense_GANGED_SNS_MASK == (capsense_dsFlash.wdgtArray[widgetId].staticConfig & capsen
 854:Generated_Source\PSoC4/capsense_Sensing.c ****         {
 855:Generated_Source\PSoC4/capsense_Sensing.c ****             curFlashSnsPtr = capsense_dsFlash.wdgtArray[widgetId].ptr2SnsFlash;
 856:Generated_Source\PSoC4/capsense_Sensing.c ****             curFlashSnsPtr += sensorElement;
 857:Generated_Source\PSoC4/capsense_Sensing.c ****             ioPtr = &capsense_ioList[curFlashSnsPtr->firstPinId];
 858:Generated_Source\PSoC4/capsense_Sensing.c ****             eltdNum = curFlashSnsPtr->numPins;
 859:Generated_Source\PSoC4/capsense_Sensing.c ****         }
 860:Generated_Source\PSoC4/capsense_Sensing.c ****         else
 861:Generated_Source\PSoC4/capsense_Sensing.c ****         {
 862:Generated_Source\PSoC4/capsense_Sensing.c ****             ioPtr = (capsense_FLASH_IO_STRUCT const *)capsense_dsFlash.wdgtArray[widgetId].ptr2SnsF
 863:Generated_Source\PSoC4/capsense_Sensing.c ****             eltdNum = 1u;
 864:Generated_Source\PSoC4/capsense_Sensing.c ****         }
 865:Generated_Source\PSoC4/capsense_Sensing.c ****     #else
 866:Generated_Source\PSoC4/capsense_Sensing.c ****         ioPtr = (capsense_FLASH_IO_STRUCT const *)capsense_dsFlash.wdgtArray[widgetId].ptr2SnsFlash
 867:Generated_Source\PSoC4/capsense_Sensing.c ****         eltdNum = 1u;
 868:Generated_Source\PSoC4/capsense_Sensing.c ****     #endif
 869:Generated_Source\PSoC4/capsense_Sensing.c **** 
 870:Generated_Source\PSoC4/capsense_Sensing.c ****     /* Loop through all electrodes of the specified sensor element */
 871:Generated_Source\PSoC4/capsense_Sensing.c ****     for (eltdIndex = 0u; eltdIndex < eltdNum; eltdIndex++)
 872:Generated_Source\PSoC4/capsense_Sensing.c ****     {
 873:Generated_Source\PSoC4/capsense_Sensing.c ****         /* Reset HSIOM and PC registers */
 874:Generated_Source\PSoC4/capsense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 875:Generated_Source\PSoC4/capsense_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(capsense_HSIOM_SEL_MASK << 
 876:Generated_Source\PSoC4/capsense_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(capsense_GPIO_PC_MASK << ioPtr->s
 877:Generated_Source\PSoC4/capsense_Sensing.c ****         CyExitCriticalSection(interruptState);
 878:Generated_Source\PSoC4/capsense_Sensing.c **** 
 879:Generated_Source\PSoC4/capsense_Sensing.c ****         switch (state)
 880:Generated_Source\PSoC4/capsense_Sensing.c ****         {
 881:Generated_Source\PSoC4/capsense_Sensing.c ****         case capsense_GROUND:
 882:Generated_Source\PSoC4/capsense_Sensing.c **** 
 883:Generated_Source\PSoC4/capsense_Sensing.c ****             interruptState = CyEnterCriticalSection();
 884:Generated_Source\PSoC4/capsense_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (capsense_SNS_GROUND_CONNECT <<
 885:Generated_Source\PSoC4/capsense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 17


 886:Generated_Source\PSoC4/capsense_Sensing.c ****             CyExitCriticalSection(interruptState);
 887:Generated_Source\PSoC4/capsense_Sensing.c ****             break;
 888:Generated_Source\PSoC4/capsense_Sensing.c **** 
 889:Generated_Source\PSoC4/capsense_Sensing.c ****         case capsense_HIGHZ:
 890:Generated_Source\PSoC4/capsense_Sensing.c ****             interruptState = CyEnterCriticalSection();
 891:Generated_Source\PSoC4/capsense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 892:Generated_Source\PSoC4/capsense_Sensing.c ****             CyExitCriticalSection(interruptState);
 893:Generated_Source\PSoC4/capsense_Sensing.c ****             break;
 894:Generated_Source\PSoC4/capsense_Sensing.c **** 
 895:Generated_Source\PSoC4/capsense_Sensing.c ****         #if (capsense_ENABLE == capsense_CSD_EN)
 896:Generated_Source\PSoC4/capsense_Sensing.c ****             case capsense_SENSOR:
 897:Generated_Source\PSoC4/capsense_Sensing.c ****                 /* Enable sensor */
 898:Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_CSDConnectSns(ioPtr);
 899:Generated_Source\PSoC4/capsense_Sensing.c ****                 break;
 900:Generated_Source\PSoC4/capsense_Sensing.c **** 
 901:Generated_Source\PSoC4/capsense_Sensing.c ****             #if (capsense_ENABLE == capsense_CSD_SHIELD_EN)
 902:Generated_Source\PSoC4/capsense_Sensing.c ****                 case capsense_SHIELD:
 903:Generated_Source\PSoC4/capsense_Sensing.c ****                     /* Set appropriate bit in HSIOM register to configure pin to shield mode */
 904:Generated_Source\PSoC4/capsense_Sensing.c ****                     interruptState = CyEnterCriticalSection();
 905:Generated_Source\PSoC4/capsense_Sensing.c ****                     CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (capsense_HSIOM_S
 906:Generated_Source\PSoC4/capsense_Sensing.c ****                     CyExitCriticalSection(interruptState);
 907:Generated_Source\PSoC4/capsense_Sensing.c ****                     break;
 908:Generated_Source\PSoC4/capsense_Sensing.c ****             #endif /* (capsense_ENABLE == capsense_CSD_SHIELD_EN) */
 909:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif /* (capsense_ENABLE == capsense_CSD_EN) */
 910:Generated_Source\PSoC4/capsense_Sensing.c **** 
 911:Generated_Source\PSoC4/capsense_Sensing.c ****         #if ((capsense_ENABLE == capsense_CSX_EN) || \
 912:Generated_Source\PSoC4/capsense_Sensing.c ****              (capsense_ENABLE == capsense_ISX_EN))
 913:Generated_Source\PSoC4/capsense_Sensing.c ****             case capsense_TX_PIN:
 914:Generated_Source\PSoC4/capsense_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 915:Generated_Source\PSoC4/capsense_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (capsense_HSIOM_SEL_C
 916:Generated_Source\PSoC4/capsense_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (capsense_GPIO_STRGDRV << i
 917:Generated_Source\PSoC4/capsense_Sensing.c ****                 CyExitCriticalSection(interruptState);
 918:Generated_Source\PSoC4/capsense_Sensing.c ****                 break;
 919:Generated_Source\PSoC4/capsense_Sensing.c **** 
 920:Generated_Source\PSoC4/capsense_Sensing.c ****             case capsense_RX_PIN:
 921:Generated_Source\PSoC4/capsense_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 922:Generated_Source\PSoC4/capsense_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (capsense_HSIOM_SEL_A
 923:Generated_Source\PSoC4/capsense_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(capsense_GPIO_PC_MASK << 
 924:Generated_Source\PSoC4/capsense_Sensing.c ****                 CyExitCriticalSection(interruptState);
 925:Generated_Source\PSoC4/capsense_Sensing.c ****                 break;
 926:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif
 927:Generated_Source\PSoC4/capsense_Sensing.c **** 
 928:Generated_Source\PSoC4/capsense_Sensing.c ****         default:
 929:Generated_Source\PSoC4/capsense_Sensing.c ****             /* Wrong state */
 930:Generated_Source\PSoC4/capsense_Sensing.c ****             break;
 931:Generated_Source\PSoC4/capsense_Sensing.c ****         }
 932:Generated_Source\PSoC4/capsense_Sensing.c **** 
 933:Generated_Source\PSoC4/capsense_Sensing.c ****         ioPtr++;
 934:Generated_Source\PSoC4/capsense_Sensing.c ****     }
 935:Generated_Source\PSoC4/capsense_Sensing.c **** }
 936:Generated_Source\PSoC4/capsense_Sensing.c **** 
 937:Generated_Source\PSoC4/capsense_Sensing.c **** #if (capsense_ENABLE == capsense_CSD_EN)
 938:Generated_Source\PSoC4/capsense_Sensing.c ****     /*******************************************************************************
 939:Generated_Source\PSoC4/capsense_Sensing.c ****     * Function Name: capsense_SsCSDDisableMode
 940:Generated_Source\PSoC4/capsense_Sensing.c ****     ****************************************************************************//**
 941:Generated_Source\PSoC4/capsense_Sensing.c ****     *
 942:Generated_Source\PSoC4/capsense_Sensing.c ****     * \brief
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 18


 943:Generated_Source\PSoC4/capsense_Sensing.c ****     *  This function disables CSD mode.
 944:Generated_Source\PSoC4/capsense_Sensing.c ****     *
 945:Generated_Source\PSoC4/capsense_Sensing.c ****     * \details
 946:Generated_Source\PSoC4/capsense_Sensing.c ****     *  To disable CSD mode the following tasks are performed:
 947:Generated_Source\PSoC4/capsense_Sensing.c ****     *  1. Disconnect Cmod from AMUXBUS-A.
 948:Generated_Source\PSoC4/capsense_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 949:Generated_Source\PSoC4/capsense_Sensing.c ****     *  3. Disconnect Csh from AMUXBUS-B.
 950:Generated_Source\PSoC4/capsense_Sensing.c ****     *  4. Disable Shield Electrodes.
 951:Generated_Source\PSoC4/capsense_Sensing.c ****     *
 952:Generated_Source\PSoC4/capsense_Sensing.c ****     *******************************************************************************/
 953:Generated_Source\PSoC4/capsense_Sensing.c ****     static void capsense_SsCSDDisableMode(void)
 954:Generated_Source\PSoC4/capsense_Sensing.c ****     {
 955:Generated_Source\PSoC4/capsense_Sensing.c ****         #if ((capsense_ENABLE == capsense_CSDV2) && \
 956:Generated_Source\PSoC4/capsense_Sensing.c ****              (capsense_ENABLE == capsense_CSD_IDAC_COMP_EN))
 957:Generated_Source\PSoC4/capsense_Sensing.c **** 
 958:Generated_Source\PSoC4/capsense_Sensing.c ****             uint32 newRegValue;
 959:Generated_Source\PSoC4/capsense_Sensing.c **** 
 960:Generated_Source\PSoC4/capsense_Sensing.c ****             /* Disconnect IDACA and IDACB */
 961:Generated_Source\PSoC4/capsense_Sensing.c ****             newRegValue = CY_GET_REG32(capsense_SW_REFGEN_SEL_PTR);
 962:Generated_Source\PSoC4/capsense_Sensing.c ****             newRegValue &= (uint32)(~capsense_SW_REFGEN_SEL_SW_IAIB_MASK);
 963:Generated_Source\PSoC4/capsense_Sensing.c ****             CY_SET_REG32(capsense_SW_REFGEN_SEL_PTR, newRegValue);
 964:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif /* ((capsense_ENABLE == capsense_CSDV2) && \
 965:Generated_Source\PSoC4/capsense_Sensing.c ****                    (capsense_ENABLE == capsense_CSD_IDAC_COMP_EN)) */
 966:Generated_Source\PSoC4/capsense_Sensing.c **** 
 967:Generated_Source\PSoC4/capsense_Sensing.c ****         /* Disconnect Cmod from AMUXBUS-A using HSIOM registers */
 968:Generated_Source\PSoC4/capsense_Sensing.c ****         capsense_WriteBitsSafe(capsense_CMOD_HSIOM_PTR, capsense_CMOD_HSIOM_MASK, 0u);
 969:Generated_Source\PSoC4/capsense_Sensing.c **** 
 970:Generated_Source\PSoC4/capsense_Sensing.c ****         /* Disconnect previous CSD electrode if it has been connected */
 971:Generated_Source\PSoC4/capsense_Sensing.c ****         capsense_SsCSDElectrodeCheck();
 972:Generated_Source\PSoC4/capsense_Sensing.c **** 
 973:Generated_Source\PSoC4/capsense_Sensing.c ****         /* Disconnect Csh from AMUXBUS-B */
 974:Generated_Source\PSoC4/capsense_Sensing.c ****         #if ((capsense_ENABLE == capsense_CSD_SHIELD_EN) && \
 975:Generated_Source\PSoC4/capsense_Sensing.c ****              (capsense_ENABLE == capsense_CSD_SHIELD_TANK_EN))
 976:Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_WriteBitsSafe(capsense_CSH_HSIOM_PTR, capsense_CSH_HSIOM_MASK, 0u);
 977:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif
 978:Generated_Source\PSoC4/capsense_Sensing.c **** 
 979:Generated_Source\PSoC4/capsense_Sensing.c ****         #if ((capsense_ENABLE == capsense_CSD_SHIELD_EN) && \
 980:Generated_Source\PSoC4/capsense_Sensing.c ****              (0u != capsense_CSD_TOTAL_SHIELD_COUNT))
 981:Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_SsCSDDisableShieldElectrodes();
 982:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif
 983:Generated_Source\PSoC4/capsense_Sensing.c ****     }
 984:Generated_Source\PSoC4/capsense_Sensing.c **** #endif /* (capsense_ENABLE == capsense_CSD_EN) */
 985:Generated_Source\PSoC4/capsense_Sensing.c **** 
 986:Generated_Source\PSoC4/capsense_Sensing.c **** 
 987:Generated_Source\PSoC4/capsense_Sensing.c **** #if (capsense_ENABLE == capsense_CSX_EN)
 988:Generated_Source\PSoC4/capsense_Sensing.c ****     /*******************************************************************************
 989:Generated_Source\PSoC4/capsense_Sensing.c ****     * Function Name: capsense_SsDisableCSXMode
 990:Generated_Source\PSoC4/capsense_Sensing.c ****     ****************************************************************************//**
 991:Generated_Source\PSoC4/capsense_Sensing.c ****     *
 992:Generated_Source\PSoC4/capsense_Sensing.c ****     * \brief
 993:Generated_Source\PSoC4/capsense_Sensing.c ****     *  This function disables CSX mode.
 994:Generated_Source\PSoC4/capsense_Sensing.c ****     *
 995:Generated_Source\PSoC4/capsense_Sensing.c ****     * \details
 996:Generated_Source\PSoC4/capsense_Sensing.c ****     *  To disable CSX mode the following tasks are performed:
 997:Generated_Source\PSoC4/capsense_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A.
 998:Generated_Source\PSoC4/capsense_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 999:Generated_Source\PSoC4/capsense_Sensing.c ****     *
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 19


1000:Generated_Source\PSoC4/capsense_Sensing.c ****     *******************************************************************************/
1001:Generated_Source\PSoC4/capsense_Sensing.c ****     static void capsense_SsDisableCSXMode(void)
1002:Generated_Source\PSoC4/capsense_Sensing.c ****     {
1003:Generated_Source\PSoC4/capsense_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers */
1004:Generated_Source\PSoC4/capsense_Sensing.c ****         capsense_WriteBitsSafe(capsense_CintA_HSIOM_PTR, capsense_CintA_HSIOM_MASK, 0u);
1005:Generated_Source\PSoC4/capsense_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers */
1006:Generated_Source\PSoC4/capsense_Sensing.c ****         capsense_WriteBitsSafe(capsense_CintB_HSIOM_PTR, capsense_CintB_HSIOM_MASK, 0u);
1007:Generated_Source\PSoC4/capsense_Sensing.c ****         /* Disconnect previous CSX electrode if it has been connected */
1008:Generated_Source\PSoC4/capsense_Sensing.c ****         capsense_CSXElectrodeCheck();
1009:Generated_Source\PSoC4/capsense_Sensing.c ****     }
1010:Generated_Source\PSoC4/capsense_Sensing.c **** #endif /* (capsense_ENABLE == capsense_CSX_EN) */
1011:Generated_Source\PSoC4/capsense_Sensing.c **** 
1012:Generated_Source\PSoC4/capsense_Sensing.c **** 
1013:Generated_Source\PSoC4/capsense_Sensing.c **** #if (capsense_ENABLE == capsense_ISX_EN)
1014:Generated_Source\PSoC4/capsense_Sensing.c ****     /*******************************************************************************
1015:Generated_Source\PSoC4/capsense_Sensing.c ****     * Function Name: capsense_SsDisableISXMode
1016:Generated_Source\PSoC4/capsense_Sensing.c ****     ****************************************************************************//**
1017:Generated_Source\PSoC4/capsense_Sensing.c ****     *
1018:Generated_Source\PSoC4/capsense_Sensing.c ****     * \brief
1019:Generated_Source\PSoC4/capsense_Sensing.c ****     *  This function disables ISX mode.
1020:Generated_Source\PSoC4/capsense_Sensing.c ****     *
1021:Generated_Source\PSoC4/capsense_Sensing.c ****     * \details
1022:Generated_Source\PSoC4/capsense_Sensing.c ****     *  To disable ISX mode the following tasks are performed:
1023:Generated_Source\PSoC4/capsense_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A
1024:Generated_Source\PSoC4/capsense_Sensing.c ****     *  2. Disconnect previous ISX electrode if it has been connected
1025:Generated_Source\PSoC4/capsense_Sensing.c ****     *
1026:Generated_Source\PSoC4/capsense_Sensing.c ****     *******************************************************************************/
1027:Generated_Source\PSoC4/capsense_Sensing.c ****     static void capsense_SsDisableISXMode(void)
1028:Generated_Source\PSoC4/capsense_Sensing.c ****     {
1029:Generated_Source\PSoC4/capsense_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers */
1030:Generated_Source\PSoC4/capsense_Sensing.c ****         capsense_WriteBitsSafe(capsense_CintA_HSIOM_PTR, capsense_CintA_HSIOM_MASK, 0u);
1031:Generated_Source\PSoC4/capsense_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers */
1032:Generated_Source\PSoC4/capsense_Sensing.c ****         capsense_WriteBitsSafe(capsense_CintB_HSIOM_PTR, capsense_CintB_HSIOM_MASK, 0u);
1033:Generated_Source\PSoC4/capsense_Sensing.c ****         /* Disconnect previous ISX electrode if it has been connected */
1034:Generated_Source\PSoC4/capsense_Sensing.c ****         capsense_ISXElectrodeCheck();
1035:Generated_Source\PSoC4/capsense_Sensing.c ****         capsense_DigPrt2_Stop();
1036:Generated_Source\PSoC4/capsense_Sensing.c ****         #if (capsense_USES_PORT_3)
1037:Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_DigPrt3_Stop();
1038:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif
1039:Generated_Source\PSoC4/capsense_Sensing.c ****     }
1040:Generated_Source\PSoC4/capsense_Sensing.c **** #endif /* (capsense_ENABLE == capsense_ISX_EN) */
1041:Generated_Source\PSoC4/capsense_Sensing.c **** 
1042:Generated_Source\PSoC4/capsense_Sensing.c **** 
1043:Generated_Source\PSoC4/capsense_Sensing.c **** /*******************************************************************************
1044:Generated_Source\PSoC4/capsense_Sensing.c **** * Function Name: capsense_SsSwitchSensingMode
1045:Generated_Source\PSoC4/capsense_Sensing.c **** ****************************************************************************//**
1046:Generated_Source\PSoC4/capsense_Sensing.c **** *
1047:Generated_Source\PSoC4/capsense_Sensing.c **** * \brief
1048:Generated_Source\PSoC4/capsense_Sensing.c **** *  This function changes the Сomponent settings for operation in a specified
1049:Generated_Source\PSoC4/capsense_Sensing.c **** *  sensing mode.
1050:Generated_Source\PSoC4/capsense_Sensing.c **** *
1051:Generated_Source\PSoC4/capsense_Sensing.c **** * \details
1052:Generated_Source\PSoC4/capsense_Sensing.c **** *  This function performs following tasks:
1053:Generated_Source\PSoC4/capsense_Sensing.c **** *  1. Releasing the CSD HW block.
1054:Generated_Source\PSoC4/capsense_Sensing.c **** *  2. Disconnecting external capacitors.
1055:Generated_Source\PSoC4/capsense_Sensing.c **** *  3. Setting new mode.
1056:Generated_Source\PSoC4/capsense_Sensing.c **** *  4. Configuring HW to the new sensing mode.
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 20


1057:Generated_Source\PSoC4/capsense_Sensing.c **** *
1058:Generated_Source\PSoC4/capsense_Sensing.c **** * \param mode
1059:Generated_Source\PSoC4/capsense_Sensing.c **** *  Specifies the scan mode:
1060:Generated_Source\PSoC4/capsense_Sensing.c **** *  - capsense_SENSE_METHOD_CSD_E
1061:Generated_Source\PSoC4/capsense_Sensing.c **** *  - capsense_SENSE_METHOD_CSX_E
1062:Generated_Source\PSoC4/capsense_Sensing.c **** *  - capsense_SENSE_METHOD_ISX_E
1063:Generated_Source\PSoC4/capsense_Sensing.c **** *  - capsense_SENSE_METHOD_BIST_E
1064:Generated_Source\PSoC4/capsense_Sensing.c **** *  - capsense_UNDEFINED_E
1065:Generated_Source\PSoC4/capsense_Sensing.c **** *
1066:Generated_Source\PSoC4/capsense_Sensing.c **** *******************************************************************************/
1067:Generated_Source\PSoC4/capsense_Sensing.c **** void capsense_SsSwitchSensingMode(capsense_SENSE_METHOD_ENUM mode)
1068:Generated_Source\PSoC4/capsense_Sensing.c **** {
1069:Generated_Source\PSoC4/capsense_Sensing.c ****     if (capsense_currentSenseMethod != mode)
1070:Generated_Source\PSoC4/capsense_Sensing.c ****     {
1071:Generated_Source\PSoC4/capsense_Sensing.c ****         /* The requested mode differs to the current one. Disable the current mode */
1072:Generated_Source\PSoC4/capsense_Sensing.c ****         if (capsense_SENSE_METHOD_CSD_E == capsense_currentSenseMethod)
1073:Generated_Source\PSoC4/capsense_Sensing.c ****         {
1074:Generated_Source\PSoC4/capsense_Sensing.c ****             #if (capsense_ENABLE == capsense_CSD_EN)
1075:Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_SsCSDDisableMode();
1076:Generated_Source\PSoC4/capsense_Sensing.c ****             #endif /* (capsense_ENABLE == capsense_CSD_EN) */
1077:Generated_Source\PSoC4/capsense_Sensing.c ****         }
1078:Generated_Source\PSoC4/capsense_Sensing.c ****         else if (capsense_SENSE_METHOD_CSX_E == capsense_currentSenseMethod)
1079:Generated_Source\PSoC4/capsense_Sensing.c ****         {
1080:Generated_Source\PSoC4/capsense_Sensing.c ****             #if (capsense_ENABLE == capsense_CSX_EN)
1081:Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_SsDisableCSXMode();
1082:Generated_Source\PSoC4/capsense_Sensing.c ****             #endif /* (capsense_ENABLE == capsense_CSX_EN) */
1083:Generated_Source\PSoC4/capsense_Sensing.c ****         }
1084:Generated_Source\PSoC4/capsense_Sensing.c ****         else if (capsense_SENSE_METHOD_ISX_E == capsense_currentSenseMethod)
1085:Generated_Source\PSoC4/capsense_Sensing.c ****         {
1086:Generated_Source\PSoC4/capsense_Sensing.c ****             #if (capsense_ENABLE == capsense_ISX_EN)
1087:Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_SsDisableISXMode();
1088:Generated_Source\PSoC4/capsense_Sensing.c ****             #endif /* (capsense_ENABLE == capsense_ISX_EN) */
1089:Generated_Source\PSoC4/capsense_Sensing.c ****         }
1090:Generated_Source\PSoC4/capsense_Sensing.c ****         else if (capsense_SENSE_METHOD_BIST_E == capsense_currentSenseMethod)
1091:Generated_Source\PSoC4/capsense_Sensing.c ****         {
1092:Generated_Source\PSoC4/capsense_Sensing.c ****             #if (capsense_ENABLE == capsense_SELF_TEST_EN)
1093:Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_BistDisableMode();
1094:Generated_Source\PSoC4/capsense_Sensing.c ****             #endif /* (capsense_ENABLE == capsense_SELF_TEST_EN) */
1095:Generated_Source\PSoC4/capsense_Sensing.c ****         }
1096:Generated_Source\PSoC4/capsense_Sensing.c ****         else
1097:Generated_Source\PSoC4/capsense_Sensing.c ****         {
1098:Generated_Source\PSoC4/capsense_Sensing.c ****             #if (capsense_ENABLE == capsense_ADC_EN)
1099:Generated_Source\PSoC4/capsense_Sensing.c ****                 /* Release ADC resources */
1100:Generated_Source\PSoC4/capsense_Sensing.c ****                 (void)capsense_AdcReleaseResources();
1101:Generated_Source\PSoC4/capsense_Sensing.c ****             #endif /* (capsense_ENABLE == capsense_ADC_EN) */
1102:Generated_Source\PSoC4/capsense_Sensing.c ****         }
1103:Generated_Source\PSoC4/capsense_Sensing.c **** 
1104:Generated_Source\PSoC4/capsense_Sensing.c ****         /* Enable the specified mode */
1105:Generated_Source\PSoC4/capsense_Sensing.c ****         if (capsense_SENSE_METHOD_CSD_E == mode)
1106:Generated_Source\PSoC4/capsense_Sensing.c ****         {
1107:Generated_Source\PSoC4/capsense_Sensing.c ****             #if (capsense_ENABLE == capsense_CSD_EN)
1108:Generated_Source\PSoC4/capsense_Sensing.c ****                 /* Initialize CSD mode to guarantee configured CSD mode */
1109:Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_SsCSDInitialize();
1110:Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_currentSenseMethod = capsense_SENSE_METHOD_CSD_E;
1111:Generated_Source\PSoC4/capsense_Sensing.c ****             #endif /* (capsense_ENABLE == capsense_CSD_EN) */
1112:Generated_Source\PSoC4/capsense_Sensing.c ****         }
1113:Generated_Source\PSoC4/capsense_Sensing.c ****         else if (capsense_SENSE_METHOD_CSX_E == mode)
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 21


1114:Generated_Source\PSoC4/capsense_Sensing.c ****         {
1115:Generated_Source\PSoC4/capsense_Sensing.c ****             #if (capsense_ENABLE == capsense_CSX_EN)
1116:Generated_Source\PSoC4/capsense_Sensing.c ****                 /* Initialize CSX mode to guarantee configured CSX mode */
1117:Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_CSXInitialize();
1118:Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_currentSenseMethod = capsense_SENSE_METHOD_CSX_E;
1119:Generated_Source\PSoC4/capsense_Sensing.c ****             #endif /* (capsense_ENABLE == capsense_CSX_EN) */
1120:Generated_Source\PSoC4/capsense_Sensing.c ****         }
1121:Generated_Source\PSoC4/capsense_Sensing.c ****         else if (capsense_SENSE_METHOD_ISX_E == mode)
1122:Generated_Source\PSoC4/capsense_Sensing.c ****         {
1123:Generated_Source\PSoC4/capsense_Sensing.c ****             #if (capsense_ENABLE == capsense_ISX_EN)
1124:Generated_Source\PSoC4/capsense_Sensing.c ****                 /* Initialize ISX mode to guarantee configured ISX mode */
1125:Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_ISXInitialize();
1126:Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_currentSenseMethod = capsense_SENSE_METHOD_ISX_E;
1127:Generated_Source\PSoC4/capsense_Sensing.c ****             #endif /* (capsense_ENABLE == capsense_ISX_EN) */
1128:Generated_Source\PSoC4/capsense_Sensing.c ****         }
1129:Generated_Source\PSoC4/capsense_Sensing.c ****         else if (capsense_SENSE_METHOD_BIST_E == mode)
1130:Generated_Source\PSoC4/capsense_Sensing.c ****         {
1131:Generated_Source\PSoC4/capsense_Sensing.c ****             #if (capsense_ENABLE == capsense_SELF_TEST_EN)
1132:Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_BistInitialize();
1133:Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_currentSenseMethod = capsense_SENSE_METHOD_BIST_E;
1134:Generated_Source\PSoC4/capsense_Sensing.c ****             #endif /* (capsense_ENABLE == capsense_SELF_TEST_EN) */
1135:Generated_Source\PSoC4/capsense_Sensing.c ****         }
1136:Generated_Source\PSoC4/capsense_Sensing.c ****         else
1137:Generated_Source\PSoC4/capsense_Sensing.c ****         {
1138:Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_currentSenseMethod = capsense_UNDEFINED_E;
1139:Generated_Source\PSoC4/capsense_Sensing.c ****         }
1140:Generated_Source\PSoC4/capsense_Sensing.c ****     }
1141:Generated_Source\PSoC4/capsense_Sensing.c **** }
1142:Generated_Source\PSoC4/capsense_Sensing.c **** 
1143:Generated_Source\PSoC4/capsense_Sensing.c **** 
1144:Generated_Source\PSoC4/capsense_Sensing.c **** /*******************************************************************************
1145:Generated_Source\PSoC4/capsense_Sensing.c **** * Function Name: capsense_SsSetAllIOsState
1146:Generated_Source\PSoC4/capsense_Sensing.c **** ****************************************************************************//**
1147:Generated_Source\PSoC4/capsense_Sensing.c **** *
1148:Generated_Source\PSoC4/capsense_Sensing.c **** * \brief
1149:Generated_Source\PSoC4/capsense_Sensing.c **** *  Sets all electrodes into a default state.
1150:Generated_Source\PSoC4/capsense_Sensing.c **** *
1151:Generated_Source\PSoC4/capsense_Sensing.c **** * \details
1152:Generated_Source\PSoC4/capsense_Sensing.c **** *  Sets all the CSD/CSX IOs into a default state:
1153:Generated_Source\PSoC4/capsense_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
1154:Generated_Source\PSoC4/capsense_Sensing.c **** *  - DM      - Strong drive.
1155:Generated_Source\PSoC4/capsense_Sensing.c **** *  - State   - Zero.
1156:Generated_Source\PSoC4/capsense_Sensing.c **** *
1157:Generated_Source\PSoC4/capsense_Sensing.c **** *  Sets all the ADC channels into a default state:
1158:Generated_Source\PSoC4/capsense_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
1159:Generated_Source\PSoC4/capsense_Sensing.c **** *  - DM      - HiZ-Analog.
1160:Generated_Source\PSoC4/capsense_Sensing.c **** *  - State   - Zero.
1161:Generated_Source\PSoC4/capsense_Sensing.c **** *
1162:Generated_Source\PSoC4/capsense_Sensing.c **** *  It is not recommended to call this function directly from the application
1163:Generated_Source\PSoC4/capsense_Sensing.c **** *  layer.
1164:Generated_Source\PSoC4/capsense_Sensing.c **** *
1165:Generated_Source\PSoC4/capsense_Sensing.c **** *******************************************************************************/
1166:Generated_Source\PSoC4/capsense_Sensing.c **** void capsense_SsSetAllIOsState(uint32 state)
1167:Generated_Source\PSoC4/capsense_Sensing.c **** {
1168:Generated_Source\PSoC4/capsense_Sensing.c ****     uint8  interruptState;
1169:Generated_Source\PSoC4/capsense_Sensing.c **** 
1170:Generated_Source\PSoC4/capsense_Sensing.c ****     uint32 loopIndex;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 22


1171:Generated_Source\PSoC4/capsense_Sensing.c **** 
1172:Generated_Source\PSoC4/capsense_Sensing.c ****     uint32 newPinPcVal;
1173:Generated_Source\PSoC4/capsense_Sensing.c ****     uint32 newPinHsiomVal;
1174:Generated_Source\PSoC4/capsense_Sensing.c **** 
1175:Generated_Source\PSoC4/capsense_Sensing.c ****     uint32 tmpPcDrRegValue;
1176:Generated_Source\PSoC4/capsense_Sensing.c ****     uint32 tmpHsiomRegValue;
1177:Generated_Source\PSoC4/capsense_Sensing.c **** 
1178:Generated_Source\PSoC4/capsense_Sensing.c ****     capsense_FLASH_IO_STRUCT const *snsIoPtr;
1179:Generated_Source\PSoC4/capsense_Sensing.c **** 
1180:Generated_Source\PSoC4/capsense_Sensing.c ****     switch(state)
1181:Generated_Source\PSoC4/capsense_Sensing.c ****     {
1182:Generated_Source\PSoC4/capsense_Sensing.c ****         case capsense_SNS_CONNECTION_GROUND:
1183:Generated_Source\PSoC4/capsense_Sensing.c ****             newPinPcVal = CY_SYS_PINS_DM_STRONG;
1184:Generated_Source\PSoC4/capsense_Sensing.c ****             newPinHsiomVal = capsense_HSIOM_SEL_GPIO;
1185:Generated_Source\PSoC4/capsense_Sensing.c ****             break;
1186:Generated_Source\PSoC4/capsense_Sensing.c ****         case capsense_SNS_CONNECTION_HIGHZ:
1187:Generated_Source\PSoC4/capsense_Sensing.c ****             newPinPcVal = CY_SYS_PINS_DM_ALG_HIZ;
1188:Generated_Source\PSoC4/capsense_Sensing.c ****             newPinHsiomVal = capsense_HSIOM_SEL_GPIO;
1189:Generated_Source\PSoC4/capsense_Sensing.c ****             break;
1190:Generated_Source\PSoC4/capsense_Sensing.c ****         case capsense_SNS_CONNECTION_SHIELD:
1191:Generated_Source\PSoC4/capsense_Sensing.c ****             newPinPcVal = CY_SYS_PINS_DM_ALG_HIZ;
1192:Generated_Source\PSoC4/capsense_Sensing.c ****             newPinHsiomVal = capsense_HSIOM_SEL_CSD_SHIELD;
1193:Generated_Source\PSoC4/capsense_Sensing.c ****             break;
1194:Generated_Source\PSoC4/capsense_Sensing.c ****         default:
1195:Generated_Source\PSoC4/capsense_Sensing.c ****             newPinPcVal = CY_SYS_PINS_DM_STRONG;
1196:Generated_Source\PSoC4/capsense_Sensing.c ****             newPinHsiomVal = capsense_HSIOM_SEL_GPIO;
1197:Generated_Source\PSoC4/capsense_Sensing.c ****             break;
1198:Generated_Source\PSoC4/capsense_Sensing.c ****     }
1199:Generated_Source\PSoC4/capsense_Sensing.c **** 
1200:Generated_Source\PSoC4/capsense_Sensing.c ****     /* Loop through all electrodes */
1201:Generated_Source\PSoC4/capsense_Sensing.c ****     snsIoPtr = &capsense_ioList[0u];
1202:Generated_Source\PSoC4/capsense_Sensing.c ****     for (loopIndex = 0u; loopIndex < capsense_TOTAL_ELECTRODES; loopIndex++)
1203:Generated_Source\PSoC4/capsense_Sensing.c ****     {
1204:Generated_Source\PSoC4/capsense_Sensing.c ****         interruptState = CyEnterCriticalSection();
1205:Generated_Source\PSoC4/capsense_Sensing.c **** 
1206:Generated_Source\PSoC4/capsense_Sensing.c ****         tmpHsiomRegValue = CY_GET_REG32 (snsIoPtr->hsiomPtr);
1207:Generated_Source\PSoC4/capsense_Sensing.c ****         tmpHsiomRegValue &= ~(snsIoPtr->hsiomMask);
1208:Generated_Source\PSoC4/capsense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->hsiomPtr, tmpHsiomRegValue);
1209:Generated_Source\PSoC4/capsense_Sensing.c **** 
1210:Generated_Source\PSoC4/capsense_Sensing.c ****         tmpPcDrRegValue = CY_GET_REG32 (snsIoPtr->pcPtr);
1211:Generated_Source\PSoC4/capsense_Sensing.c ****         tmpPcDrRegValue &= ~(capsense_GPIO_PC_MASK << snsIoPtr->shift);
1212:Generated_Source\PSoC4/capsense_Sensing.c ****         tmpPcDrRegValue |=  (newPinPcVal << snsIoPtr->shift);
1213:Generated_Source\PSoC4/capsense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->pcPtr, tmpPcDrRegValue);
1214:Generated_Source\PSoC4/capsense_Sensing.c **** 
1215:Generated_Source\PSoC4/capsense_Sensing.c ****         tmpHsiomRegValue |=  (newPinHsiomVal << snsIoPtr->hsiomShift);
1216:Generated_Source\PSoC4/capsense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->hsiomPtr, tmpHsiomRegValue);
1217:Generated_Source\PSoC4/capsense_Sensing.c **** 
1218:Generated_Source\PSoC4/capsense_Sensing.c ****         tmpPcDrRegValue = CY_GET_REG32 (snsIoPtr->drPtr);
1219:Generated_Source\PSoC4/capsense_Sensing.c ****         tmpPcDrRegValue &= ~(snsIoPtr->mask);
1220:Generated_Source\PSoC4/capsense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->drPtr, tmpPcDrRegValue);
1221:Generated_Source\PSoC4/capsense_Sensing.c **** 
1222:Generated_Source\PSoC4/capsense_Sensing.c ****         CyExitCriticalSection(interruptState);
1223:Generated_Source\PSoC4/capsense_Sensing.c **** 
1224:Generated_Source\PSoC4/capsense_Sensing.c ****         /* Get next electrode */
1225:Generated_Source\PSoC4/capsense_Sensing.c ****         snsIoPtr++;
1226:Generated_Source\PSoC4/capsense_Sensing.c ****     }
1227:Generated_Source\PSoC4/capsense_Sensing.c **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 23


1228:Generated_Source\PSoC4/capsense_Sensing.c ****     #if ((capsense_ENABLE == capsense_CSD_EN) &&\
1229:Generated_Source\PSoC4/capsense_Sensing.c ****          (capsense_ENABLE == capsense_CSD_SHIELD_EN) &&\
1230:Generated_Source\PSoC4/capsense_Sensing.c ****          (0u != capsense_CSD_TOTAL_SHIELD_COUNT))
1231:Generated_Source\PSoC4/capsense_Sensing.c ****         capsense_SsCSDSetShieldElectrodesState(state);
1232:Generated_Source\PSoC4/capsense_Sensing.c ****     #endif
1233:Generated_Source\PSoC4/capsense_Sensing.c **** 
1234:Generated_Source\PSoC4/capsense_Sensing.c ****     #if(capsense_ENABLE == capsense_ADC_EN)
1235:Generated_Source\PSoC4/capsense_Sensing.c ****         capsense_ClearAdcChannels();
1236:Generated_Source\PSoC4/capsense_Sensing.c ****     #endif
1237:Generated_Source\PSoC4/capsense_Sensing.c **** 
1238:Generated_Source\PSoC4/capsense_Sensing.c **** }
1239:Generated_Source\PSoC4/capsense_Sensing.c **** 
1240:Generated_Source\PSoC4/capsense_Sensing.c **** #if (capsense_ENABLE == capsense_ADC_EN)
1241:Generated_Source\PSoC4/capsense_Sensing.c **** /*******************************************************************************
1242:Generated_Source\PSoC4/capsense_Sensing.c **** * Function Name: capsense_SsReleaseResources()
1243:Generated_Source\PSoC4/capsense_Sensing.c **** ****************************************************************************//**
1244:Generated_Source\PSoC4/capsense_Sensing.c **** *
1245:Generated_Source\PSoC4/capsense_Sensing.c **** * \brief
1246:Generated_Source\PSoC4/capsense_Sensing.c **** *  This function sets the resources that do not belong to the sensing HW block to
1247:Generated_Source\PSoC4/capsense_Sensing.c **** *  default state.
1248:Generated_Source\PSoC4/capsense_Sensing.c **** *
1249:Generated_Source\PSoC4/capsense_Sensing.c **** * \details
1250:Generated_Source\PSoC4/capsense_Sensing.c **** *  The function performs following tasks:
1251:Generated_Source\PSoC4/capsense_Sensing.c **** *  1. Checks if CSD block busy and returns error if it is busy
1252:Generated_Source\PSoC4/capsense_Sensing.c **** *  2. Disconnects integration capacitors (CintA, CintB for CSX mode and
1253:Generated_Source\PSoC4/capsense_Sensing.c **** *     Cmod for CSD mode)
1254:Generated_Source\PSoC4/capsense_Sensing.c **** *  3. Disconnect electroded if they have been connected.
1255:Generated_Source\PSoC4/capsense_Sensing.c **** *
1256:Generated_Source\PSoC4/capsense_Sensing.c **** * \return
1257:Generated_Source\PSoC4/capsense_Sensing.c **** *  Returns the status of the operation:
1258:Generated_Source\PSoC4/capsense_Sensing.c **** *  - Zero        - Resources released successfully.
1259:Generated_Source\PSoC4/capsense_Sensing.c **** *  - Non-zero    - One or more errors occurred in releasing process.
1260:Generated_Source\PSoC4/capsense_Sensing.c **** *
1261:Generated_Source\PSoC4/capsense_Sensing.c **** *******************************************************************************/
1262:Generated_Source\PSoC4/capsense_Sensing.c **** cystatus capsense_SsReleaseResources(void)
1263:Generated_Source\PSoC4/capsense_Sensing.c **** {
1264:Generated_Source\PSoC4/capsense_Sensing.c ****     cystatus busyStatus = CYRET_SUCCESS;
1265:Generated_Source\PSoC4/capsense_Sensing.c **** 
1266:Generated_Source\PSoC4/capsense_Sensing.c ****     if (capsense_SW_STS_BUSY == (capsense_dsRam.status & capsense_SW_STS_BUSY))
1267:Generated_Source\PSoC4/capsense_Sensing.c ****     {
1268:Generated_Source\PSoC4/capsense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
1269:Generated_Source\PSoC4/capsense_Sensing.c ****         busyStatus = CYRET_INVALID_STATE;
1270:Generated_Source\PSoC4/capsense_Sensing.c ****     }
1271:Generated_Source\PSoC4/capsense_Sensing.c ****     else
1272:Generated_Source\PSoC4/capsense_Sensing.c ****     {
1273:Generated_Source\PSoC4/capsense_Sensing.c ****         #if (capsense_ENABLE == capsense_CSX_EN)
1274:Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_SsDisableCSXMode();
1275:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif /* (capsense_ENABLE == capsense_CSX_EN) */
1276:Generated_Source\PSoC4/capsense_Sensing.c **** 
1277:Generated_Source\PSoC4/capsense_Sensing.c ****         #if (capsense_ENABLE == capsense_ISX_EN)
1278:Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_SsDisableISXMode();
1279:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif /* (capsense_ENABLE == capsense_ISX_EN) */
1280:Generated_Source\PSoC4/capsense_Sensing.c **** 
1281:Generated_Source\PSoC4/capsense_Sensing.c ****         #if (capsense_ENABLE == capsense_CSD_EN)
1282:Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_SsCSDDisableMode();
1283:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif /* (capsense_ENABLE == capsense_CSD_EN) */
1284:Generated_Source\PSoC4/capsense_Sensing.c **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 24


1285:Generated_Source\PSoC4/capsense_Sensing.c ****         #if (capsense_ENABLE == capsense_SELF_TEST_EN)
1286:Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_BistDisableMode();
1287:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif /* (capsense_ENABLE == capsense_SELF_TEST_EN) */
1288:Generated_Source\PSoC4/capsense_Sensing.c **** 
1289:Generated_Source\PSoC4/capsense_Sensing.c ****         capsense_SsSetAllIOsState((uint32)capsense_SNS_CONNECTION_GROUND);
1290:Generated_Source\PSoC4/capsense_Sensing.c **** 
1291:Generated_Source\PSoC4/capsense_Sensing.c ****         /*
1292:Generated_Source\PSoC4/capsense_Sensing.c ****          * Reset of the currentSenseMethod variable to make sure that the next
1293:Generated_Source\PSoC4/capsense_Sensing.c ****          * call of SetupWidget() API setups the correct widget mode
1294:Generated_Source\PSoC4/capsense_Sensing.c ****          */
1295:Generated_Source\PSoC4/capsense_Sensing.c ****         capsense_currentSenseMethod = capsense_UNDEFINED_E;
1296:Generated_Source\PSoC4/capsense_Sensing.c ****     }
1297:Generated_Source\PSoC4/capsense_Sensing.c **** 
1298:Generated_Source\PSoC4/capsense_Sensing.c ****     return busyStatus;
1299:Generated_Source\PSoC4/capsense_Sensing.c **** }
1300:Generated_Source\PSoC4/capsense_Sensing.c **** #endif /* (capsense_ENABLE == capsense_ADC_EN) */
1301:Generated_Source\PSoC4/capsense_Sensing.c **** 
1302:Generated_Source\PSoC4/capsense_Sensing.c **** 
1303:Generated_Source\PSoC4/capsense_Sensing.c **** /*******************************************************************************
1304:Generated_Source\PSoC4/capsense_Sensing.c **** * Function Name: capsense_SsPostAllWidgetsScan
1305:Generated_Source\PSoC4/capsense_Sensing.c **** ****************************************************************************//**
1306:Generated_Source\PSoC4/capsense_Sensing.c **** *
1307:Generated_Source\PSoC4/capsense_Sensing.c **** * \brief
1308:Generated_Source\PSoC4/capsense_Sensing.c **** *  The ISR function for multiple widget scanning implementation.
1309:Generated_Source\PSoC4/capsense_Sensing.c **** *
1310:Generated_Source\PSoC4/capsense_Sensing.c **** * \details
1311:Generated_Source\PSoC4/capsense_Sensing.c **** *  This is the function used by the capsense ISR to implement multiple widget
1312:Generated_Source\PSoC4/capsense_Sensing.c **** *  scanning.
1313:Generated_Source\PSoC4/capsense_Sensing.c **** *  Should not be used by the application layer.
1314:Generated_Source\PSoC4/capsense_Sensing.c **** *
1315:Generated_Source\PSoC4/capsense_Sensing.c **** *******************************************************************************/
1316:Generated_Source\PSoC4/capsense_Sensing.c **** void capsense_SsPostAllWidgetsScan(void)
1317:Generated_Source\PSoC4/capsense_Sensing.c **** {
1318:Generated_Source\PSoC4/capsense_Sensing.c ****     /*
1319:Generated_Source\PSoC4/capsense_Sensing.c ****     *  1. Increment widget index
1320:Generated_Source\PSoC4/capsense_Sensing.c ****     *  2. Check if all the widgets are scanned
1321:Generated_Source\PSoC4/capsense_Sensing.c ****     *  3. If all the widgets are not scanned, set up and scan next widget
1322:Generated_Source\PSoC4/capsense_Sensing.c ****     */
1323:Generated_Source\PSoC4/capsense_Sensing.c ****     #if (1u != capsense_TOTAL_WIDGETS)
1324:Generated_Source\PSoC4/capsense_Sensing.c ****         cystatus postScanStatus;
1325:Generated_Source\PSoC4/capsense_Sensing.c **** 
1326:Generated_Source\PSoC4/capsense_Sensing.c ****         do
1327:Generated_Source\PSoC4/capsense_Sensing.c ****         {
1328:Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_widgetIndex++;
1329:Generated_Source\PSoC4/capsense_Sensing.c **** 
1330:Generated_Source\PSoC4/capsense_Sensing.c ****             postScanStatus = capsense_SetupWidget((uint32)capsense_widgetIndex);
1331:Generated_Source\PSoC4/capsense_Sensing.c **** 
1332:Generated_Source\PSoC4/capsense_Sensing.c ****             if (CYRET_SUCCESS == postScanStatus)
1333:Generated_Source\PSoC4/capsense_Sensing.c ****             {
1334:Generated_Source\PSoC4/capsense_Sensing.c ****                 if((capsense_TOTAL_WIDGETS - 1u) == capsense_widgetIndex)
1335:Generated_Source\PSoC4/capsense_Sensing.c ****                 {
1336:Generated_Source\PSoC4/capsense_Sensing.c ****                     /* The last widget will be scanned. Reset flag to skip configuring the next wid
1337:Generated_Source\PSoC4/capsense_Sensing.c ****                     capsense_requestScanAllWidget = capsense_DISABLE;
1338:Generated_Source\PSoC4/capsense_Sensing.c ****                 }
1339:Generated_Source\PSoC4/capsense_Sensing.c ****                 (void)capsense_Scan();
1340:Generated_Source\PSoC4/capsense_Sensing.c ****             }
1341:Generated_Source\PSoC4/capsense_Sensing.c ****             else if((capsense_TOTAL_WIDGETS - 1u) == capsense_widgetIndex)
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 25


1342:Generated_Source\PSoC4/capsense_Sensing.c ****             {
1343:Generated_Source\PSoC4/capsense_Sensing.c ****                 #if ((capsense_ENABLE == capsense_BLOCK_OFF_AFTER_SCAN_EN) && \
1344:Generated_Source\PSoC4/capsense_Sensing.c ****                      (capsense_ENABLE == capsense_CSD_EN))
1345:Generated_Source\PSoC4/capsense_Sensing.c ****                     if (capsense_SENSE_METHOD_CSD_E ==
1346:Generated_Source\PSoC4/capsense_Sensing.c ****                         capsense_GET_SENSE_METHOD(&capsense_dsFlash.wdgtArray[capsense_widgetIndex]
1347:Generated_Source\PSoC4/capsense_Sensing.c ****                     {
1348:Generated_Source\PSoC4/capsense_Sensing.c ****                         /* Disable the CSD block */
1349:Generated_Source\PSoC4/capsense_Sensing.c ****                         CY_SET_REG32(capsense_CONFIG_PTR, capsense_configCsd);
1350:Generated_Source\PSoC4/capsense_Sensing.c ****                     }
1351:Generated_Source\PSoC4/capsense_Sensing.c ****                 #endif /* ((capsense_ENABLE == capsense_BLOCK_OFF_AFTER_SCAN_EN) && \
1352:Generated_Source\PSoC4/capsense_Sensing.c ****                            (capsense_ENABLE == capsense_CSD_EN)) */
1353:Generated_Source\PSoC4/capsense_Sensing.c **** 
1354:Generated_Source\PSoC4/capsense_Sensing.c ****                 /* Update scan Counter */
1355:Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_dsRam.scanCounter++;
1356:Generated_Source\PSoC4/capsense_Sensing.c ****                 /* All widgets are totally processed. Reset BUSY flag */
1357:Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_dsRam.status &= ~capsense_SW_STS_BUSY;
1358:Generated_Source\PSoC4/capsense_Sensing.c **** 
1359:Generated_Source\PSoC4/capsense_Sensing.c ****                 /* Update status with with the failure */
1360:Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_dsRam.status &= ~capsense_STATUS_ERR_MASK;
1361:Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_dsRam.status |= ((postScanStatus & capsense_STATUS_ERR_SIZE) << capsense_S
1362:Generated_Source\PSoC4/capsense_Sensing.c **** 
1363:Generated_Source\PSoC4/capsense_Sensing.c ****                 /* Set postScanStatus to exit the while loop */
1364:Generated_Source\PSoC4/capsense_Sensing.c ****                 postScanStatus = CYRET_SUCCESS;
1365:Generated_Source\PSoC4/capsense_Sensing.c ****             }
1366:Generated_Source\PSoC4/capsense_Sensing.c ****             else
1367:Generated_Source\PSoC4/capsense_Sensing.c ****             {
1368:Generated_Source\PSoC4/capsense_Sensing.c ****                 /* Update status with with the failure. Configure the next widget in while() loop *
1369:Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_dsRam.status &= ~capsense_STATUS_ERR_MASK;
1370:Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_dsRam.status |= ((postScanStatus & capsense_STATUS_ERR_SIZE) << capsense_S
1371:Generated_Source\PSoC4/capsense_Sensing.c ****             }
1372:Generated_Source\PSoC4/capsense_Sensing.c ****         } while (CYRET_SUCCESS != postScanStatus);
1373:Generated_Source\PSoC4/capsense_Sensing.c ****     #endif /* (1u != capsense_TOTAL_WIDGETS) */
1374:Generated_Source\PSoC4/capsense_Sensing.c **** }
1375:Generated_Source\PSoC4/capsense_Sensing.c **** 
1376:Generated_Source\PSoC4/capsense_Sensing.c **** 
1377:Generated_Source\PSoC4/capsense_Sensing.c **** /*******************************************************************************
1378:Generated_Source\PSoC4/capsense_Sensing.c **** * Function Name: capsense_SsIsrInitialize
1379:Generated_Source\PSoC4/capsense_Sensing.c **** ****************************************************************************//**
1380:Generated_Source\PSoC4/capsense_Sensing.c **** *
1381:Generated_Source\PSoC4/capsense_Sensing.c **** * \brief
1382:Generated_Source\PSoC4/capsense_Sensing.c **** *  Enables and initializes for the function pointer for a callback for the ISR.
1383:Generated_Source\PSoC4/capsense_Sensing.c **** *
1384:Generated_Source\PSoC4/capsense_Sensing.c **** * \details
1385:Generated_Source\PSoC4/capsense_Sensing.c **** *  The "address" is a special type cyisraddress defined by Cylib. This function
1386:Generated_Source\PSoC4/capsense_Sensing.c **** *  is used by Component APIs and should not be used by an application program for
1387:Generated_Source\PSoC4/capsense_Sensing.c **** *  proper working of the Component.
1388:Generated_Source\PSoC4/capsense_Sensing.c **** *
1389:Generated_Source\PSoC4/capsense_Sensing.c **** * \param address
1390:Generated_Source\PSoC4/capsense_Sensing.c **** *  The address of the function to be called when interrupt is fired.
1391:Generated_Source\PSoC4/capsense_Sensing.c **** *
1392:Generated_Source\PSoC4/capsense_Sensing.c **** *******************************************************************************/
1393:Generated_Source\PSoC4/capsense_Sensing.c **** void capsense_SsIsrInitialize(cyisraddress address)
1394:Generated_Source\PSoC4/capsense_Sensing.c **** {
1395:Generated_Source\PSoC4/capsense_Sensing.c ****     capsense_ISR_StartEx(address);
1396:Generated_Source\PSoC4/capsense_Sensing.c **** }
1397:Generated_Source\PSoC4/capsense_Sensing.c **** 
1398:Generated_Source\PSoC4/capsense_Sensing.c **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 26


1399:Generated_Source\PSoC4/capsense_Sensing.c **** /*******************************************************************************
1400:Generated_Source\PSoC4/capsense_Sensing.c **** * Function Name: capsense_SsSetModClkClockDivider
1401:Generated_Source\PSoC4/capsense_Sensing.c **** ****************************************************************************//**
1402:Generated_Source\PSoC4/capsense_Sensing.c **** *
1403:Generated_Source\PSoC4/capsense_Sensing.c **** * \brief
1404:Generated_Source\PSoC4/capsense_Sensing.c **** *  Sets the divider values for the modulator clock and then starts
1405:Generated_Source\PSoC4/capsense_Sensing.c **** *  the modulator clock.
1406:Generated_Source\PSoC4/capsense_Sensing.c **** *
1407:Generated_Source\PSoC4/capsense_Sensing.c **** * \details
1408:Generated_Source\PSoC4/capsense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1409:Generated_Source\PSoC4/capsense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1410:Generated_Source\PSoC4/capsense_Sensing.c **** *  enable the clocks.
1411:Generated_Source\PSoC4/capsense_Sensing.c **** *
1412:Generated_Source\PSoC4/capsense_Sensing.c **** * \param modClk
1413:Generated_Source\PSoC4/capsense_Sensing.c **** *  The divider value for the modulator clock.
1414:Generated_Source\PSoC4/capsense_Sensing.c **** *
1415:Generated_Source\PSoC4/capsense_Sensing.c **** *******************************************************************************/
1416:Generated_Source\PSoC4/capsense_Sensing.c **** void capsense_SsSetModClkClockDivider(uint32 modClk)
1417:Generated_Source\PSoC4/capsense_Sensing.c **** {
1418:Generated_Source\PSoC4/capsense_Sensing.c **** #if (capsense_ENABLE == capsense_IS_M0S8PERI_BLOCK)
1419:Generated_Source\PSoC4/capsense_Sensing.c ****     /* Stop modulator clock */
1420:Generated_Source\PSoC4/capsense_Sensing.c ****     CY_SET_REG32(capsense_MODCLK_CMD_PTR,
1421:Generated_Source\PSoC4/capsense_Sensing.c ****                  ((uint32)capsense_ModClk__DIV_ID <<
1422:Generated_Source\PSoC4/capsense_Sensing.c ****                  capsense_MODCLK_CMD_DIV_SHIFT)|
1423:Generated_Source\PSoC4/capsense_Sensing.c ****                  ((uint32)capsense_MODCLK_CMD_DISABLE_MASK));
1424:Generated_Source\PSoC4/capsense_Sensing.c **** 
1425:Generated_Source\PSoC4/capsense_Sensing.c ****     /*
1426:Generated_Source\PSoC4/capsense_Sensing.c ****      * Set divider value for sense modClk.
1427:Generated_Source\PSoC4/capsense_Sensing.c ****      * 1u is subtracted from modClk because Divider register value 0 corresponds
1428:Generated_Source\PSoC4/capsense_Sensing.c ****      * to dividing by 1.
1429:Generated_Source\PSoC4/capsense_Sensing.c ****      */
1430:Generated_Source\PSoC4/capsense_Sensing.c ****     CY_SET_REG32(capsense_MODCLK_DIV_PTR, ((modClk - 1u) << 8u));
1431:Generated_Source\PSoC4/capsense_Sensing.c **** 
1432:Generated_Source\PSoC4/capsense_Sensing.c ****     /* Check whether previous modulator clock start command has finished. */
1433:Generated_Source\PSoC4/capsense_Sensing.c ****     while(0u != (CY_GET_REG32(capsense_MODCLK_CMD_PTR) & capsense_MODCLK_CMD_ENABLE_MASK))
1434:Generated_Source\PSoC4/capsense_Sensing.c ****     {
1435:Generated_Source\PSoC4/capsense_Sensing.c ****         /* Wait until previous modulator clock start command has finished */
1436:Generated_Source\PSoC4/capsense_Sensing.c ****     }
1437:Generated_Source\PSoC4/capsense_Sensing.c **** 
1438:Generated_Source\PSoC4/capsense_Sensing.c ****     /* Start modulator clock, aligned to HFCLK */
1439:Generated_Source\PSoC4/capsense_Sensing.c ****     CY_SET_REG32(capsense_MODCLK_CMD_PTR,
1440:Generated_Source\PSoC4/capsense_Sensing.c ****                  (uint32)(((uint32)capsense_ModClk__DIV_ID << capsense_MODCLK_CMD_DIV_SHIFT) |
1441:Generated_Source\PSoC4/capsense_Sensing.c ****                   ((uint32)capsense_ModClk__PA_DIV_ID << capsense_MODCLK_CMD_PA_DIV_SHIFT) |
1442:Generated_Source\PSoC4/capsense_Sensing.c ****                   capsense_MODCLK_CMD_ENABLE_MASK));
1443:Generated_Source\PSoC4/capsense_Sensing.c **** #else
1444:Generated_Source\PSoC4/capsense_Sensing.c ****     uint32 newRegValue;
1445:Generated_Source\PSoC4/capsense_Sensing.c **** 
1446:Generated_Source\PSoC4/capsense_Sensing.c ****     /* Clear bit to disable ModClk clock. */
1447:Generated_Source\PSoC4/capsense_Sensing.c ****     CY_SET_REG32(capsense_MODCLK_CMD_PTR,
1448:Generated_Source\PSoC4/capsense_Sensing.c ****                  CY_GET_REG32(capsense_MODCLK_CMD_PTR) &
1449:Generated_Source\PSoC4/capsense_Sensing.c ****                  (uint32)(~capsense_ModClk__ENABLE_MASK));
1450:Generated_Source\PSoC4/capsense_Sensing.c **** 
1451:Generated_Source\PSoC4/capsense_Sensing.c ****     /*
1452:Generated_Source\PSoC4/capsense_Sensing.c ****      * Update ModClk clock divider.
1453:Generated_Source\PSoC4/capsense_Sensing.c ****      * 1u is subtracted from modClk because Divider register value has range (0-65535).
1454:Generated_Source\PSoC4/capsense_Sensing.c ****      */
1455:Generated_Source\PSoC4/capsense_Sensing.c ****     newRegValue = CY_GET_REG32(capsense_MODCLK_DIV_PTR) & (uint32)(~(uint32)capsense_ModClk__DIVIDE
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 27


1456:Generated_Source\PSoC4/capsense_Sensing.c ****     newRegValue |= (modClk - 1u);
1457:Generated_Source\PSoC4/capsense_Sensing.c ****     CY_SET_REG32(capsense_MODCLK_DIV_PTR, newRegValue);
1458:Generated_Source\PSoC4/capsense_Sensing.c **** 
1459:Generated_Source\PSoC4/capsense_Sensing.c ****     /* Set bit to enable ModClk clock. */
1460:Generated_Source\PSoC4/capsense_Sensing.c ****     CY_SET_REG32(capsense_MODCLK_CMD_PTR,
1461:Generated_Source\PSoC4/capsense_Sensing.c ****                  CY_GET_REG32(capsense_MODCLK_CMD_PTR) |
1462:Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_ModClk__ENABLE_MASK);
1463:Generated_Source\PSoC4/capsense_Sensing.c **** #endif /* (capsense_ENABLE == capsense_IS_M0S8PERI_BLOCK) */
1464:Generated_Source\PSoC4/capsense_Sensing.c **** }
1465:Generated_Source\PSoC4/capsense_Sensing.c **** 
1466:Generated_Source\PSoC4/capsense_Sensing.c **** 
1467:Generated_Source\PSoC4/capsense_Sensing.c **** /*******************************************************************************
1468:Generated_Source\PSoC4/capsense_Sensing.c **** * Function Name: capsense_SsSetSnsClockDivider
1469:Generated_Source\PSoC4/capsense_Sensing.c **** ****************************************************************************//**
1470:Generated_Source\PSoC4/capsense_Sensing.c **** *
1471:Generated_Source\PSoC4/capsense_Sensing.c **** * \brief
1472:Generated_Source\PSoC4/capsense_Sensing.c **** *  Sets the divider values for the sense clock and then starts
1473:Generated_Source\PSoC4/capsense_Sensing.c **** *  the sense clock.
1474:Generated_Source\PSoC4/capsense_Sensing.c **** *
1475:Generated_Source\PSoC4/capsense_Sensing.c **** * \details
1476:Generated_Source\PSoC4/capsense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1477:Generated_Source\PSoC4/capsense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1478:Generated_Source\PSoC4/capsense_Sensing.c **** *  enable the clocks.
1479:Generated_Source\PSoC4/capsense_Sensing.c **** *
1480:Generated_Source\PSoC4/capsense_Sensing.c **** * \param
1481:Generated_Source\PSoC4/capsense_Sensing.c **** *  snsClk The divider value for the sense clock.
1482:Generated_Source\PSoC4/capsense_Sensing.c **** *
1483:Generated_Source\PSoC4/capsense_Sensing.c **** *******************************************************************************/
1484:Generated_Source\PSoC4/capsense_Sensing.c **** void capsense_SsSetSnsClockDivider(uint32 snsClk)
1485:Generated_Source\PSoC4/capsense_Sensing.c **** {
1486:Generated_Source\PSoC4/capsense_Sensing.c **** #if (capsense_ENABLE == capsense_CSDV2)
1487:Generated_Source\PSoC4/capsense_Sensing.c ****     uint32 newRegValue;
1488:Generated_Source\PSoC4/capsense_Sensing.c **** 
1489:Generated_Source\PSoC4/capsense_Sensing.c ****     /*
1490:Generated_Source\PSoC4/capsense_Sensing.c ****      * Set divider value for sense clock.
1491:Generated_Source\PSoC4/capsense_Sensing.c ****      * 1u is subtracted from snsClk because SENSE_DIV value 0 corresponds
1492:Generated_Source\PSoC4/capsense_Sensing.c ****      * to dividing by 1.
1493:Generated_Source\PSoC4/capsense_Sensing.c ****      */
1494:Generated_Source\PSoC4/capsense_Sensing.c ****     newRegValue = CY_GET_REG32(capsense_SENSE_PERIOD_PTR);
1495:Generated_Source\PSoC4/capsense_Sensing.c ****     newRegValue &= (uint32)(~capsense_SENSE_PERIOD_SENSE_DIV_MASK);
1496:Generated_Source\PSoC4/capsense_Sensing.c ****     newRegValue |= snsClk - 1u;
1497:Generated_Source\PSoC4/capsense_Sensing.c ****     CY_SET_REG32(capsense_SENSE_PERIOD_PTR, newRegValue);
1498:Generated_Source\PSoC4/capsense_Sensing.c **** #else
1499:Generated_Source\PSoC4/capsense_Sensing.c ****     #if (capsense_ENABLE == capsense_IS_M0S8PERI_BLOCK)
1500:Generated_Source\PSoC4/capsense_Sensing.c ****         /* Stop sense clock clock   */
1501:Generated_Source\PSoC4/capsense_Sensing.c ****         CY_SET_REG32(capsense_SNSCLK_CMD_PTR,
1502:Generated_Source\PSoC4/capsense_Sensing.c ****                      ((uint32)capsense_SnsClk__DIV_ID <<
1503:Generated_Source\PSoC4/capsense_Sensing.c ****                      capsense_SNSCLK_CMD_DIV_SHIFT)|
1504:Generated_Source\PSoC4/capsense_Sensing.c ****                      ((uint32)capsense_SNSCLK_CMD_DISABLE_MASK));
1505:Generated_Source\PSoC4/capsense_Sensing.c **** 
1506:Generated_Source\PSoC4/capsense_Sensing.c ****         /*
1507:Generated_Source\PSoC4/capsense_Sensing.c ****          * Set divider value for sense clock.
1508:Generated_Source\PSoC4/capsense_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value 0 corresponds
1509:Generated_Source\PSoC4/capsense_Sensing.c ****          * to dividing by 1.
1510:Generated_Source\PSoC4/capsense_Sensing.c ****          */
1511:Generated_Source\PSoC4/capsense_Sensing.c ****         CY_SET_REG32(capsense_SNSCLK_DIV_PTR, ((snsClk - 1u) << 8u));
1512:Generated_Source\PSoC4/capsense_Sensing.c **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 28


1513:Generated_Source\PSoC4/capsense_Sensing.c ****         /* Check whether previous sense clock start command has finished. */
1514:Generated_Source\PSoC4/capsense_Sensing.c ****         while(0u != (CY_GET_REG32(capsense_SNSCLK_CMD_PTR) & capsense_SNSCLK_CMD_ENABLE_MASK))
1515:Generated_Source\PSoC4/capsense_Sensing.c ****         {
1516:Generated_Source\PSoC4/capsense_Sensing.c ****             /* Wait until previous sense clock start command has finished. */
1517:Generated_Source\PSoC4/capsense_Sensing.c ****         }
1518:Generated_Source\PSoC4/capsense_Sensing.c **** 
1519:Generated_Source\PSoC4/capsense_Sensing.c ****         /* Start sense clock aligned to previously started modulator clock. */
1520:Generated_Source\PSoC4/capsense_Sensing.c ****         CY_SET_REG32(capsense_SNSCLK_CMD_PTR,
1521:Generated_Source\PSoC4/capsense_Sensing.c ****                      (uint32)(((uint32)capsense_SnsClk__DIV_ID << capsense_SNSCLK_CMD_DIV_SHIFT) |
1522:Generated_Source\PSoC4/capsense_Sensing.c ****                       ((uint32)capsense_ModClk__PA_DIV_ID << capsense_SNSCLK_CMD_PA_DIV_SHIFT) |
1523:Generated_Source\PSoC4/capsense_Sensing.c ****                       capsense_SNSCLK_CMD_ENABLE_MASK));
1524:Generated_Source\PSoC4/capsense_Sensing.c ****     #else
1525:Generated_Source\PSoC4/capsense_Sensing.c ****         uint32 newRegValue;
1526:Generated_Source\PSoC4/capsense_Sensing.c **** 
1527:Generated_Source\PSoC4/capsense_Sensing.c ****         /* Clear bit to disable SnsClk clock. */
1528:Generated_Source\PSoC4/capsense_Sensing.c ****         CY_SET_REG32(capsense_SNSCLK_CMD_PTR,
1529:Generated_Source\PSoC4/capsense_Sensing.c ****                      CY_GET_REG32(capsense_SNSCLK_CMD_PTR) &
1530:Generated_Source\PSoC4/capsense_Sensing.c ****                      (uint32)(~(uint32)capsense_SnsClk__ENABLE_MASK));
1531:Generated_Source\PSoC4/capsense_Sensing.c **** 
1532:Generated_Source\PSoC4/capsense_Sensing.c ****         /*
1533:Generated_Source\PSoC4/capsense_Sensing.c ****          * Update snsClk clock divider.
1534:Generated_Source\PSoC4/capsense_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value has range (0-65535).
1535:Generated_Source\PSoC4/capsense_Sensing.c ****          */
1536:Generated_Source\PSoC4/capsense_Sensing.c ****         newRegValue = CY_GET_REG32(capsense_SNSCLK_DIV_PTR) & (uint32)(~(uint32)capsense_SnsClk__DI
1537:Generated_Source\PSoC4/capsense_Sensing.c ****         newRegValue |= (snsClk - 1u);
1538:Generated_Source\PSoC4/capsense_Sensing.c ****         CY_SET_REG32(capsense_SNSCLK_DIV_PTR, newRegValue);
1539:Generated_Source\PSoC4/capsense_Sensing.c **** 
1540:Generated_Source\PSoC4/capsense_Sensing.c ****         /* Set bit to enable SnsClk clock. */
1541:Generated_Source\PSoC4/capsense_Sensing.c ****         CY_SET_REG32(capsense_SNSCLK_CMD_PTR,
1542:Generated_Source\PSoC4/capsense_Sensing.c ****                      CY_GET_REG32(capsense_SNSCLK_CMD_PTR) |
1543:Generated_Source\PSoC4/capsense_Sensing.c ****                     capsense_SnsClk__ENABLE_MASK);
1544:Generated_Source\PSoC4/capsense_Sensing.c ****     #endif /* (capsense_ENABLE == capsense_IS_M0S8PERI_BLOCK) */
1545:Generated_Source\PSoC4/capsense_Sensing.c **** #endif /* (capsense_ENABLE == capsense_CSDV2) */
1546:Generated_Source\PSoC4/capsense_Sensing.c **** }
1547:Generated_Source\PSoC4/capsense_Sensing.c **** 
1548:Generated_Source\PSoC4/capsense_Sensing.c **** 
1549:Generated_Source\PSoC4/capsense_Sensing.c **** /*******************************************************************************
1550:Generated_Source\PSoC4/capsense_Sensing.c **** * Function Name: capsense_SsSetClockDividers
1551:Generated_Source\PSoC4/capsense_Sensing.c **** ****************************************************************************//**
1552:Generated_Source\PSoC4/capsense_Sensing.c **** *
1553:Generated_Source\PSoC4/capsense_Sensing.c **** * \brief
1554:Generated_Source\PSoC4/capsense_Sensing.c **** *  Sets the divider values for sense and modulator clocks and then starts
1555:Generated_Source\PSoC4/capsense_Sensing.c **** *  a modulator clock-phase aligned to HFCLK and sense clock-phase aligned to
1556:Generated_Source\PSoC4/capsense_Sensing.c **** *  the modulator clock.
1557:Generated_Source\PSoC4/capsense_Sensing.c **** *
1558:Generated_Source\PSoC4/capsense_Sensing.c **** * \details
1559:Generated_Source\PSoC4/capsense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1560:Generated_Source\PSoC4/capsense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1561:Generated_Source\PSoC4/capsense_Sensing.c **** *  enable the clocks.
1562:Generated_Source\PSoC4/capsense_Sensing.c **** *
1563:Generated_Source\PSoC4/capsense_Sensing.c **** * \param
1564:Generated_Source\PSoC4/capsense_Sensing.c **** *  snsClk The divider value for the sense clock.
1565:Generated_Source\PSoC4/capsense_Sensing.c **** *  modClk The divider value for the modulator clock.
1566:Generated_Source\PSoC4/capsense_Sensing.c **** *
1567:Generated_Source\PSoC4/capsense_Sensing.c **** *******************************************************************************/
1568:Generated_Source\PSoC4/capsense_Sensing.c **** void capsense_SsSetClockDividers(uint32 snsClk, uint32 modClk)
1569:Generated_Source\PSoC4/capsense_Sensing.c **** {
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 29


1570:Generated_Source\PSoC4/capsense_Sensing.c ****     /* Configure Mod clock */
1571:Generated_Source\PSoC4/capsense_Sensing.c ****     capsense_SsSetModClkClockDivider(modClk);
1572:Generated_Source\PSoC4/capsense_Sensing.c **** 
1573:Generated_Source\PSoC4/capsense_Sensing.c ****     /* Configure Sns clock */
1574:Generated_Source\PSoC4/capsense_Sensing.c ****     capsense_SsSetSnsClockDivider(snsClk);
1575:Generated_Source\PSoC4/capsense_Sensing.c **** }
1576:Generated_Source\PSoC4/capsense_Sensing.c **** 
1577:Generated_Source\PSoC4/capsense_Sensing.c **** 
1578:Generated_Source\PSoC4/capsense_Sensing.c **** #if (capsense_ANYMODE_AUTOCAL)
1579:Generated_Source\PSoC4/capsense_Sensing.c ****     /*******************************************************************************
1580:Generated_Source\PSoC4/capsense_Sensing.c ****     * Function Name: capsense_CalibrateWidget
1581:Generated_Source\PSoC4/capsense_Sensing.c ****     ****************************************************************************//**
1582:Generated_Source\PSoC4/capsense_Sensing.c ****     *
1583:Generated_Source\PSoC4/capsense_Sensing.c ****     * \brief
1584:Generated_Source\PSoC4/capsense_Sensing.c ****     *  Calibrates the IDACs for all the sensors in the specified widget to the default
1585:Generated_Source\PSoC4/capsense_Sensing.c ****     *  target, this function detects the sensing method used by the
1586:Generated_Source\PSoC4/capsense_Sensing.c ****     *  widget prior to calibration.
1587:Generated_Source\PSoC4/capsense_Sensing.c ****     *
1588:Generated_Source\PSoC4/capsense_Sensing.c ****     * \details
1589:Generated_Source\PSoC4/capsense_Sensing.c ****     *  This function performs exactly the same tasks as
1590:Generated_Source\PSoC4/capsense_Sensing.c ****     *  capsense_CalibrateAllWidgets, but only for a specified widget.
1591:Generated_Source\PSoC4/capsense_Sensing.c ****     *  This function detects the sensing method used by the widgets and uses
1592:Generated_Source\PSoC4/capsense_Sensing.c ****     *  the Enable compensation IDAC parameter.
1593:Generated_Source\PSoC4/capsense_Sensing.c ****     *  \if SECTION_I_REP
1594:Generated_Source\PSoC4/capsense_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1595:Generated_Source\PSoC4/capsense_Sensing.c ****     *  \endif
1596:Generated_Source\PSoC4/capsense_Sensing.c ****     *
1597:Generated_Source\PSoC4/capsense_Sensing.c ****     *  \if SECTION_C_LOW_LEVEL
1598:Generated_Source\PSoC4/capsense_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1599:Generated_Source\PSoC4/capsense_Sensing.c ****     *  auto-calibration parameter is enabled.
1600:Generated_Source\PSoC4/capsense_Sensing.c ****     *  \endif
1601:Generated_Source\PSoC4/capsense_Sensing.c ****     *  \if SECTION_I_REP
1602:Generated_Source\PSoC4/capsense_Sensing.c ****     *  This function is available when the ISX Enable auto-calibration parameter
1603:Generated_Source\PSoC4/capsense_Sensing.c ****     *  is enabled.
1604:Generated_Source\PSoC4/capsense_Sensing.c ****     *  \endif
1605:Generated_Source\PSoC4/capsense_Sensing.c ****     *
1606:Generated_Source\PSoC4/capsense_Sensing.c ****     * \param widgetId
1607:Generated_Source\PSoC4/capsense_Sensing.c ****     *  Specifies the ID number of the widget to calibrate its raw count.
1608:Generated_Source\PSoC4/capsense_Sensing.c ****     *  A macro for the widget ID can be found in the
1609:Generated_Source\PSoC4/capsense_Sensing.c ****     *  capsense Configuration header file defined as
1610:Generated_Source\PSoC4/capsense_Sensing.c ****     *  capsense_<WidgetName>_WDGT_ID.
1611:Generated_Source\PSoC4/capsense_Sensing.c ****     *
1612:Generated_Source\PSoC4/capsense_Sensing.c ****     * \return
1613:Generated_Source\PSoC4/capsense_Sensing.c ****     *  Returns the status of the specified widget calibration:
1614:Generated_Source\PSoC4/capsense_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1615:Generated_Source\PSoC4/capsense_Sensing.c ****     *  - CYRET_BAD_PARAM - The input parameter is invalid.
1616:Generated_Source\PSoC4/capsense_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1617:Generated_Source\PSoC4/capsense_Sensing.c ****     *    operate as expected.
1618:Generated_Source\PSoC4/capsense_Sensing.c ****     *
1619:Generated_Source\PSoC4/capsense_Sensing.c ****     *******************************************************************************/
1620:Generated_Source\PSoC4/capsense_Sensing.c ****     cystatus capsense_CalibrateWidget(uint32 widgetId)
1621:Generated_Source\PSoC4/capsense_Sensing.c ****     {
1622:Generated_Source\PSoC4/capsense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1623:Generated_Source\PSoC4/capsense_Sensing.c **** 
1624:Generated_Source\PSoC4/capsense_Sensing.c ****         do
1625:Generated_Source\PSoC4/capsense_Sensing.c ****         {
1626:Generated_Source\PSoC4/capsense_Sensing.c ****             if (capsense_TOTAL_WIDGETS <= widgetId)
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 30


1627:Generated_Source\PSoC4/capsense_Sensing.c ****             {
1628:Generated_Source\PSoC4/capsense_Sensing.c ****                 calibrateStatus = CYRET_BAD_PARAM;
1629:Generated_Source\PSoC4/capsense_Sensing.c ****             }
1630:Generated_Source\PSoC4/capsense_Sensing.c **** 
1631:Generated_Source\PSoC4/capsense_Sensing.c ****             /*
1632:Generated_Source\PSoC4/capsense_Sensing.c ****              *  Check if widget id is valid, specified widget did not
1633:Generated_Source\PSoC4/capsense_Sensing.c ****              *  detect any faults conditions if BIST is enabled.
1634:Generated_Source\PSoC4/capsense_Sensing.c ****              */
1635:Generated_Source\PSoC4/capsense_Sensing.c ****             #if (capsense_ENABLE == capsense_SELF_TEST_EN)
1636:Generated_Source\PSoC4/capsense_Sensing.c ****                 if (0u != capsense_GET_WIDGET_EN_STATUS(widgetId))
1637:Generated_Source\PSoC4/capsense_Sensing.c ****                 {
1638:Generated_Source\PSoC4/capsense_Sensing.c ****                     calibrateStatus = CYRET_SUCCESS;
1639:Generated_Source\PSoC4/capsense_Sensing.c ****                 }
1640:Generated_Source\PSoC4/capsense_Sensing.c ****                 else
1641:Generated_Source\PSoC4/capsense_Sensing.c ****                 {
1642:Generated_Source\PSoC4/capsense_Sensing.c ****                     calibrateStatus = CYRET_INVALID_STATE;
1643:Generated_Source\PSoC4/capsense_Sensing.c ****                 }
1644:Generated_Source\PSoC4/capsense_Sensing.c ****             #endif  /* (capsense_ENABLE == capsense_SELF_TEST_EN) */
1645:Generated_Source\PSoC4/capsense_Sensing.c **** 
1646:Generated_Source\PSoC4/capsense_Sensing.c ****             if (CYRET_SUCCESS != calibrateStatus)
1647:Generated_Source\PSoC4/capsense_Sensing.c ****             {
1648:Generated_Source\PSoC4/capsense_Sensing.c ****                 /* Exit from the loop because of a fail */
1649:Generated_Source\PSoC4/capsense_Sensing.c ****                 break;
1650:Generated_Source\PSoC4/capsense_Sensing.c ****             }
1651:Generated_Source\PSoC4/capsense_Sensing.c **** 
1652:Generated_Source\PSoC4/capsense_Sensing.c ****             /* If both CSD and CSX are enabled, calibrate widget using sensing method */
1653:Generated_Source\PSoC4/capsense_Sensing.c ****             #if (capsense_ENABLE == capsense_MANY_WIDGET_METHODS_EN)
1654:Generated_Source\PSoC4/capsense_Sensing.c ****                 /* Check widget sensing method and call appropriate APIs */
1655:Generated_Source\PSoC4/capsense_Sensing.c ****                 #if (capsense_ENABLE == capsense_ISX_IDAC_AUTOCAL_EN)
1656:Generated_Source\PSoC4/capsense_Sensing.c ****                     if (capsense_SENSE_METHOD_ISX_E ==
1657:Generated_Source\PSoC4/capsense_Sensing.c ****                         capsense_GET_SENSE_METHOD(&capsense_dsFlash.wdgtArray[widgetId]))
1658:Generated_Source\PSoC4/capsense_Sensing.c ****                     {
1659:Generated_Source\PSoC4/capsense_Sensing.c ****                         /* Calibrate CSX widget */
1660:Generated_Source\PSoC4/capsense_Sensing.c ****                        capsense_ISXCalibrateWidget(widgetId, capsense_ISX_RAWCOUNT_CAL_LEVEL);
1661:Generated_Source\PSoC4/capsense_Sensing.c ****                     }
1662:Generated_Source\PSoC4/capsense_Sensing.c ****                 #endif  /* (capsense_ENABLE == capsense_ISX_IDAC_AUTOCAL_EN) */
1663:Generated_Source\PSoC4/capsense_Sensing.c **** 
1664:Generated_Source\PSoC4/capsense_Sensing.c ****                 /* Check widget sensing method and call appropriate APIs */
1665:Generated_Source\PSoC4/capsense_Sensing.c ****                 #if (capsense_ENABLE == capsense_CSX_IDAC_AUTOCAL_EN)
1666:Generated_Source\PSoC4/capsense_Sensing.c ****                     if (capsense_SENSE_METHOD_CSX_E ==
1667:Generated_Source\PSoC4/capsense_Sensing.c ****                         capsense_GET_SENSE_METHOD(&capsense_dsFlash.wdgtArray[widgetId]))
1668:Generated_Source\PSoC4/capsense_Sensing.c ****                     {
1669:Generated_Source\PSoC4/capsense_Sensing.c ****                         /* Calibrate CSX widget */
1670:Generated_Source\PSoC4/capsense_Sensing.c ****                        calibrateStatus = capsense_CSXCalibrateWidget(widgetId, capsense_CSX_RAWCOUN
1671:Generated_Source\PSoC4/capsense_Sensing.c ****                     }
1672:Generated_Source\PSoC4/capsense_Sensing.c ****                 #endif  /* (capsense_ENABLE == capsense_CSX_IDAC_AUTOCAL_EN) */
1673:Generated_Source\PSoC4/capsense_Sensing.c **** 
1674:Generated_Source\PSoC4/capsense_Sensing.c ****                 #if (capsense_ENABLE == capsense_CSD_IDAC_AUTOCAL_EN)
1675:Generated_Source\PSoC4/capsense_Sensing.c ****                     if (capsense_SENSE_METHOD_CSD_E ==
1676:Generated_Source\PSoC4/capsense_Sensing.c ****                         capsense_GET_SENSE_METHOD(&capsense_dsFlash.wdgtArray[widgetId]))
1677:Generated_Source\PSoC4/capsense_Sensing.c ****                     {
1678:Generated_Source\PSoC4/capsense_Sensing.c ****                         /* Calibrate CSD widget */
1679:Generated_Source\PSoC4/capsense_Sensing.c ****                         calibrateStatus = capsense_CSDCalibrateWidget(widgetId, capsense_CSD_RAWCOU
1680:Generated_Source\PSoC4/capsense_Sensing.c ****                     }
1681:Generated_Source\PSoC4/capsense_Sensing.c ****                 #endif  /* (capsense_ENABLE == capsense_CSD_IDAC_AUTOCAL_EN) */
1682:Generated_Source\PSoC4/capsense_Sensing.c **** 
1683:Generated_Source\PSoC4/capsense_Sensing.c ****             /* If only CSD is enabled, calibrate CSD sensor */
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 31


1684:Generated_Source\PSoC4/capsense_Sensing.c ****             #elif (capsense_ENABLE == capsense_CSD_EN)
1685:Generated_Source\PSoC4/capsense_Sensing.c ****                 calibrateStatus = capsense_CSDCalibrateWidget(widgetId, capsense_CSD_RAWCOUNT_CAL_L
1686:Generated_Source\PSoC4/capsense_Sensing.c **** 
1687:Generated_Source\PSoC4/capsense_Sensing.c ****             /* If only CSX is enabled, call CSX scan */
1688:Generated_Source\PSoC4/capsense_Sensing.c ****             #elif (capsense_ENABLE == capsense_CSX_EN)
1689:Generated_Source\PSoC4/capsense_Sensing.c ****                 calibrateStatus = capsense_CSXCalibrateWidget(widgetId, capsense_CSX_RAWCOUNT_CAL_L
1690:Generated_Source\PSoC4/capsense_Sensing.c **** 
1691:Generated_Source\PSoC4/capsense_Sensing.c ****             /* If only ISX is enabled, call ISX scan */
1692:Generated_Source\PSoC4/capsense_Sensing.c ****             #elif (capsense_ENABLE == capsense_ISX_EN)
1693:Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_ISXCalibrateWidget(widgetId, capsense_ISX_RAWCOUNT_CAL_LEVEL);
1694:Generated_Source\PSoC4/capsense_Sensing.c **** 
1695:Generated_Source\PSoC4/capsense_Sensing.c ****             #else
1696:Generated_Source\PSoC4/capsense_Sensing.c ****                 calibrateStatus = CYRET_UNKNOWN;
1697:Generated_Source\PSoC4/capsense_Sensing.c ****             #endif
1698:Generated_Source\PSoC4/capsense_Sensing.c ****         } while (0u);
1699:Generated_Source\PSoC4/capsense_Sensing.c **** 
1700:Generated_Source\PSoC4/capsense_Sensing.c ****         return calibrateStatus;
1701:Generated_Source\PSoC4/capsense_Sensing.c ****     }
1702:Generated_Source\PSoC4/capsense_Sensing.c **** 
1703:Generated_Source\PSoC4/capsense_Sensing.c **** 
1704:Generated_Source\PSoC4/capsense_Sensing.c ****     /*******************************************************************************
1705:Generated_Source\PSoC4/capsense_Sensing.c ****     * Function Name: capsense_CalibrateAllWidgets
1706:Generated_Source\PSoC4/capsense_Sensing.c ****     ****************************************************************************//**
1707:Generated_Source\PSoC4/capsense_Sensing.c ****     *
1708:Generated_Source\PSoC4/capsense_Sensing.c ****     * \brief
1709:Generated_Source\PSoC4/capsense_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1710:Generated_Source\PSoC4/capsense_Sensing.c ****     *  target, this function detects the sensing method used by the widgets
1711:Generated_Source\PSoC4/capsense_Sensing.c ****     *  prior to calibration.
1712:Generated_Source\PSoC4/capsense_Sensing.c ****     *
1713:Generated_Source\PSoC4/capsense_Sensing.c ****     * \details
1714:Generated_Source\PSoC4/capsense_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1715:Generated_Source\PSoC4/capsense_Sensing.c ****     *  target value. This function detects the sensing method used by the widgets
1716:Generated_Source\PSoC4/capsense_Sensing.c ****     *  and regards the Enable compensation IDAC parameter.
1717:Generated_Source\PSoC4/capsense_Sensing.c ****     *  \if SECTION_I_REP
1718:Generated_Source\PSoC4/capsense_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1719:Generated_Source\PSoC4/capsense_Sensing.c ****     *  \endif
1720:Generated_Source\PSoC4/capsense_Sensing.c ****     *
1721:Generated_Source\PSoC4/capsense_Sensing.c ****     *  \cond SECTION_C_LOW_LEVEL
1722:Generated_Source\PSoC4/capsense_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1723:Generated_Source\PSoC4/capsense_Sensing.c ****     *  auto-calibration parameter is enabled.
1724:Generated_Source\PSoC4/capsense_Sensing.c ****     *  \endcond
1725:Generated_Source\PSoC4/capsense_Sensing.c ****     *  \if SECTION_I_REP
1726:Generated_Source\PSoC4/capsense_Sensing.c ****     *  This function is available when the ISX Enable Auto-calibration parameter
1727:Generated_Source\PSoC4/capsense_Sensing.c ****     *  is enabled.
1728:Generated_Source\PSoC4/capsense_Sensing.c ****     *  \endif
1729:Generated_Source\PSoC4/capsense_Sensing.c ****     *
1730:Generated_Source\PSoC4/capsense_Sensing.c ****     * \return
1731:Generated_Source\PSoC4/capsense_Sensing.c ****     *  Returns the status of the calibration process:
1732:Generated_Source\PSoC4/capsense_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1733:Generated_Source\PSoC4/capsense_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1734:Generated_Source\PSoC4/capsense_Sensing.c ****     *    operate as expected.
1735:Generated_Source\PSoC4/capsense_Sensing.c ****     *
1736:Generated_Source\PSoC4/capsense_Sensing.c ****     *******************************************************************************/
1737:Generated_Source\PSoC4/capsense_Sensing.c ****     cystatus capsense_CalibrateAllWidgets(void)
1738:Generated_Source\PSoC4/capsense_Sensing.c ****     {
1739:Generated_Source\PSoC4/capsense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1740:Generated_Source\PSoC4/capsense_Sensing.c ****         uint32 wdgtIndex;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 32


1741:Generated_Source\PSoC4/capsense_Sensing.c **** 
1742:Generated_Source\PSoC4/capsense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < capsense_TOTAL_WIDGETS; wdgtIndex++)
1743:Generated_Source\PSoC4/capsense_Sensing.c ****         {
1744:Generated_Source\PSoC4/capsense_Sensing.c ****             calibrateStatus |= capsense_CalibrateWidget(wdgtIndex);
1745:Generated_Source\PSoC4/capsense_Sensing.c ****         }
1746:Generated_Source\PSoC4/capsense_Sensing.c **** 
1747:Generated_Source\PSoC4/capsense_Sensing.c ****         return calibrateStatus;
1748:Generated_Source\PSoC4/capsense_Sensing.c ****     }
1749:Generated_Source\PSoC4/capsense_Sensing.c **** #endif /* (capsense_ANYMODE_AUTOCAL) */
1750:Generated_Source\PSoC4/capsense_Sensing.c **** 
1751:Generated_Source\PSoC4/capsense_Sensing.c **** 
1752:Generated_Source\PSoC4/capsense_Sensing.c **** #if (capsense_CSD_SS_DIS != capsense_CSD_AUTOTUNE)
1753:Generated_Source\PSoC4/capsense_Sensing.c ****     /*******************************************************************************
1754:Generated_Source\PSoC4/capsense_Sensing.c ****     * Function Name: capsense_SsAutoTuneWidget
1755:Generated_Source\PSoC4/capsense_Sensing.c ****     ****************************************************************************//**
1756:Generated_Source\PSoC4/capsense_Sensing.c ****     *
1757:Generated_Source\PSoC4/capsense_Sensing.c ****     * \brief
1758:Generated_Source\PSoC4/capsense_Sensing.c ****     *  This API performs the parameters auto-tuning for the optimal capsense
1759:Generated_Source\PSoC4/capsense_Sensing.c ****     *  operation for a desired widget.
1760:Generated_Source\PSoC4/capsense_Sensing.c ****     *
1761:Generated_Source\PSoC4/capsense_Sensing.c ****     * \details
1762:Generated_Source\PSoC4/capsense_Sensing.c ****     *  This API performs the following:
1763:Generated_Source\PSoC4/capsense_Sensing.c ****     *  - Calibrates Modulator and Compensation IDACs.
1764:Generated_Source\PSoC4/capsense_Sensing.c ****     *  - Tunes the Sense Clock optimal value to get a Sense Clock period greater than
1765:Generated_Source\PSoC4/capsense_Sensing.c ****     *    2*5*R*Cp.
1766:Generated_Source\PSoC4/capsense_Sensing.c ****     *  - Calculates the resolution for the optimal finger capacitance.
1767:Generated_Source\PSoC4/capsense_Sensing.c ****     *
1768:Generated_Source\PSoC4/capsense_Sensing.c ****     * \param widgetId
1769:Generated_Source\PSoC4/capsense_Sensing.c ****     *  Specifies the ID number of a desired widget.
1770:Generated_Source\PSoC4/capsense_Sensing.c ****     *  A macro for the widget ID can be found in the
1771:Generated_Source\PSoC4/capsense_Sensing.c ****     *  capsense Configuration header file defined as
1772:Generated_Source\PSoC4/capsense_Sensing.c ****     *  capsense_<WidgetName>_WDGT_ID.
1773:Generated_Source\PSoC4/capsense_Sensing.c ****     *
1774:Generated_Source\PSoC4/capsense_Sensing.c ****     * \return
1775:Generated_Source\PSoC4/capsense_Sensing.c ****     *  Returns the status of the operation:
1776:Generated_Source\PSoC4/capsense_Sensing.c ****     *  - Zero     - All the widgets are auto-tuned successfully.
1777:Generated_Source\PSoC4/capsense_Sensing.c ****     *  - Non-zero - Auto-tuning failed for any widget.
1778:Generated_Source\PSoC4/capsense_Sensing.c ****     *
1779:Generated_Source\PSoC4/capsense_Sensing.c ****     *******************************************************************************/
1780:Generated_Source\PSoC4/capsense_Sensing.c ****     cystatus capsense_SsAutoTuneWidget(uint32 widgetId)
1781:Generated_Source\PSoC4/capsense_Sensing.c ****     {
1782:Generated_Source\PSoC4/capsense_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
1783:Generated_Source\PSoC4/capsense_Sensing.c **** 
1784:Generated_Source\PSoC4/capsense_Sensing.c ****         uint32 snsIndex;
1785:Generated_Source\PSoC4/capsense_Sensing.c ****         uint32 inputSnsClk;
1786:Generated_Source\PSoC4/capsense_Sensing.c ****         uint32 minSnsClkDiv;
1787:Generated_Source\PSoC4/capsense_Sensing.c ****         uint32 minSnsClkDivTmp;
1788:Generated_Source\PSoC4/capsense_Sensing.c **** 
1789:Generated_Source\PSoC4/capsense_Sensing.c ****         AUTO_TUNE_CONFIG_TYPE autoTuneConfig;
1790:Generated_Source\PSoC4/capsense_Sensing.c **** 
1791:Generated_Source\PSoC4/capsense_Sensing.c ****         uint32 maxRaw = 0u;
1792:Generated_Source\PSoC4/capsense_Sensing.c ****         uint32 maxCp = 0u;
1793:Generated_Source\PSoC4/capsense_Sensing.c ****         uint32 maxIdacComp = 0u;
1794:Generated_Source\PSoC4/capsense_Sensing.c **** 
1795:Generated_Source\PSoC4/capsense_Sensing.c ****         #if (capsense_CSD_MATRIX_WIDGET_EN || capsense_CSD_TOUCHPAD_WIDGET_EN)
1796:Generated_Source\PSoC4/capsense_Sensing.c ****             uint32 maxCpSnsId = 0u;
1797:Generated_Source\PSoC4/capsense_Sensing.c ****             uint32 maxCpRowSnsId = 0u;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 33


1798:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif
1799:Generated_Source\PSoC4/capsense_Sensing.c **** 
1800:Generated_Source\PSoC4/capsense_Sensing.c ****         capsense_FLASH_WD_STRUCT const *ptrFlashWidget = &capsense_dsFlash.wdgtArray[widgetId];
1801:Generated_Source\PSoC4/capsense_Sensing.c ****         capsense_RAM_WD_BASE_STRUCT *ptrRamWidget = (capsense_RAM_WD_BASE_STRUCT *)ptrFlashWidget->
1802:Generated_Source\PSoC4/capsense_Sensing.c ****         capsense_RAM_SNS_STRUCT *ptrRamSensor = ptrFlashWidget->ptr2SnsRam;
1803:Generated_Source\PSoC4/capsense_Sensing.c **** 
1804:Generated_Source\PSoC4/capsense_Sensing.c ****         /* Find input of sensor clock frequency */
1805:Generated_Source\PSoC4/capsense_Sensing.c ****         #if (capsense_ENABLE == capsense_CSDV2)
1806:Generated_Source\PSoC4/capsense_Sensing.c ****             /* Dividers are chained (Fourth-generation HW block). Flip flop is not available */
1807:Generated_Source\PSoC4/capsense_Sensing.c ****             inputSnsClk = ((uint32)CYDEV_BCLK__HFCLK__KHZ / (uint32)capsense_dsRam.modCsdClk);
1808:Generated_Source\PSoC4/capsense_Sensing.c **** 
1809:Generated_Source\PSoC4/capsense_Sensing.c ****             /* Minimum value of SnaClk divider that is allowed for all Fourth-generation
1810:Generated_Source\PSoC4/capsense_Sensing.c ****              * CSD HW block based devices.
1811:Generated_Source\PSoC4/capsense_Sensing.c ****             */
1812:Generated_Source\PSoC4/capsense_Sensing.c ****             minSnsClkDiv = capsense_MIN_SNS_CLK_DIVIDER;
1813:Generated_Source\PSoC4/capsense_Sensing.c ****         #elif (capsense_ENABLE == capsense_IS_M0S8PERI_BLOCK)
1814:Generated_Source\PSoC4/capsense_Sensing.c ****             /* Dividers are not chained */
1815:Generated_Source\PSoC4/capsense_Sensing.c ****             inputSnsClk = CYDEV_BCLK__HFCLK__KHZ >> capsense_FLIP_FLOP_DIV;
1816:Generated_Source\PSoC4/capsense_Sensing.c **** 
1817:Generated_Source\PSoC4/capsense_Sensing.c ****             /* Minimum value of SnaClk divider that is allowed for PSoC 4100 and PSoC 4200
1818:Generated_Source\PSoC4/capsense_Sensing.c ****                device families.
1819:Generated_Source\PSoC4/capsense_Sensing.c ****             */
1820:Generated_Source\PSoC4/capsense_Sensing.c ****             minSnsClkDiv = capsense_dsRam.modCsdClk;
1821:Generated_Source\PSoC4/capsense_Sensing.c ****         #else
1822:Generated_Source\PSoC4/capsense_Sensing.c ****             /* Dividers are chained (PSoC 4100, PSoC 4200) */
1823:Generated_Source\PSoC4/capsense_Sensing.c ****             inputSnsClk = (CYDEV_BCLK__HFCLK__KHZ / capsense_dsRam.modCsdClk) >> capsense_FLIP_FLOP
1824:Generated_Source\PSoC4/capsense_Sensing.c **** 
1825:Generated_Source\PSoC4/capsense_Sensing.c ****             /* Minimum value of SnaClk divider that is allowed for all Fourth-generation
1826:Generated_Source\PSoC4/capsense_Sensing.c ****              * CSD HW block based device except PSoC 4100 and PSoC 4200 device families.
1827:Generated_Source\PSoC4/capsense_Sensing.c ****             */
1828:Generated_Source\PSoC4/capsense_Sensing.c ****             minSnsClkDiv = capsense_MIN_SNS_CLK_DIVIDER;
1829:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif /* (capsense_ENABLE == capsense_CSDV2) */
1830:Generated_Source\PSoC4/capsense_Sensing.c **** 
1831:Generated_Source\PSoC4/capsense_Sensing.c ****         /* Minimum value of SnsClk divider required to ensure the CSD HW block
1832:Generated_Source\PSoC4/capsense_Sensing.c ****          * operation in allowed frequency range.
1833:Generated_Source\PSoC4/capsense_Sensing.c ****         */
1834:Generated_Source\PSoC4/capsense_Sensing.c ****         minSnsClkDivTmp = inputSnsClk * capsense_AUTOTUNE_CAL_UNITS;
1835:Generated_Source\PSoC4/capsense_Sensing.c ****         minSnsClkDivTmp /= capsense_CSD_SNS_FREQ_KHZ_MAX;
1836:Generated_Source\PSoC4/capsense_Sensing.c **** 
1837:Generated_Source\PSoC4/capsense_Sensing.c ****         if (minSnsClkDiv < minSnsClkDivTmp)
1838:Generated_Source\PSoC4/capsense_Sensing.c ****         {
1839:Generated_Source\PSoC4/capsense_Sensing.c ****             minSnsClkDiv = minSnsClkDivTmp;
1840:Generated_Source\PSoC4/capsense_Sensing.c ****         }
1841:Generated_Source\PSoC4/capsense_Sensing.c **** 
1842:Generated_Source\PSoC4/capsense_Sensing.c ****         minSnsClkDiv = (minSnsClkDiv + (capsense_AUTOTUNE_CAL_UNITS - 1u)) / capsense_AUTOTUNE_CAL_
1843:Generated_Source\PSoC4/capsense_Sensing.c **** 
1844:Generated_Source\PSoC4/capsense_Sensing.c ****         /* Make divider even */
1845:Generated_Source\PSoC4/capsense_Sensing.c ****         if (0u != (minSnsClkDiv & 0x01u))
1846:Generated_Source\PSoC4/capsense_Sensing.c ****         {
1847:Generated_Source\PSoC4/capsense_Sensing.c ****             minSnsClkDiv++;
1848:Generated_Source\PSoC4/capsense_Sensing.c ****         }
1849:Generated_Source\PSoC4/capsense_Sensing.c **** 
1850:Generated_Source\PSoC4/capsense_Sensing.c ****         /* Initialize auto-tuning configuration structure */
1851:Generated_Source\PSoC4/capsense_Sensing.c ****         autoTuneConfig.snsClkInputClock = (uint16)inputSnsClk;
1852:Generated_Source\PSoC4/capsense_Sensing.c ****         autoTuneConfig.snsClkConstantR = capsense_CSD_SNSCLK_R_CONST;
1853:Generated_Source\PSoC4/capsense_Sensing.c ****         autoTuneConfig.vRef = capsense_CSD_VREF_MV;
1854:Generated_Source\PSoC4/capsense_Sensing.c ****         autoTuneConfig.fingerCap = ptrRamWidget->fingerCap;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 34


1855:Generated_Source\PSoC4/capsense_Sensing.c ****         autoTuneConfig.sigPFC = &ptrRamWidget->sigPFC;
1856:Generated_Source\PSoC4/capsense_Sensing.c **** 
1857:Generated_Source\PSoC4/capsense_Sensing.c ****         /*
1858:Generated_Source\PSoC4/capsense_Sensing.c ****         * Autotune phase #1:
1859:Generated_Source\PSoC4/capsense_Sensing.c ****         * - performing the first calibration at fixed settings
1860:Generated_Source\PSoC4/capsense_Sensing.c ****         * - getting maximum sensor Cp
1861:Generated_Source\PSoC4/capsense_Sensing.c ****         * - getting sense clock frequency based on Cp
1862:Generated_Source\PSoC4/capsense_Sensing.c ****         */
1863:Generated_Source\PSoC4/capsense_Sensing.c **** 
1864:Generated_Source\PSoC4/capsense_Sensing.c ****         ptrRamWidget->resolution = capsense_AUTOTUNE_CALIBRATION_RESOLUTION;
1865:Generated_Source\PSoC4/capsense_Sensing.c **** 
1866:Generated_Source\PSoC4/capsense_Sensing.c ****         ptrRamWidget->snsClk = (uint16)(inputSnsClk / capsense_AUTOTUNE_CALIBRATION_FREQ_KHZ);
1867:Generated_Source\PSoC4/capsense_Sensing.c ****         ptrRamWidget->snsClkSource = (uint8)capsense_CLK_SOURCE_DIRECT;
1868:Generated_Source\PSoC4/capsense_Sensing.c **** 
1869:Generated_Source\PSoC4/capsense_Sensing.c ****         #if (capsense_CSD_MATRIX_WIDGET_EN || capsense_CSD_TOUCHPAD_WIDGET_EN)
1870:Generated_Source\PSoC4/capsense_Sensing.c ****             ptrRamWidget->rowSnsClk = (uint16)(inputSnsClk / capsense_AUTOTUNE_CALIBRATION_FREQ_KHZ
1871:Generated_Source\PSoC4/capsense_Sensing.c ****             ptrRamWidget->rowSnsClkSource = (uint8)capsense_CLK_SOURCE_DIRECT;
1872:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif
1873:Generated_Source\PSoC4/capsense_Sensing.c **** 
1874:Generated_Source\PSoC4/capsense_Sensing.c ****         /* Calibrate CSD widget to the default calibration target */
1875:Generated_Source\PSoC4/capsense_Sensing.c ****         (void)capsense_CSDCalibrateWidget(widgetId, capsense_AUTOTUNE_CAL_LEVEL);
1876:Generated_Source\PSoC4/capsense_Sensing.c **** 
1877:Generated_Source\PSoC4/capsense_Sensing.c ****         /* Find raw count and IDAC of a sensor with maximum Cp */
1878:Generated_Source\PSoC4/capsense_Sensing.c ****         for (snsIndex = 0u; snsIndex < ptrFlashWidget->numCols; snsIndex++)
1879:Generated_Source\PSoC4/capsense_Sensing.c ****         {
1880:Generated_Source\PSoC4/capsense_Sensing.c ****             #if (capsense_ENABLE == capsense_CSD_IDAC_COMP_EN)
1881:Generated_Source\PSoC4/capsense_Sensing.c ****                 if (maxIdacComp < ptrRamSensor->idacComp[0u])
1882:Generated_Source\PSoC4/capsense_Sensing.c ****                 {
1883:Generated_Source\PSoC4/capsense_Sensing.c ****                     #if (capsense_CSD_MATRIX_WIDGET_EN || capsense_CSD_TOUCHPAD_WIDGET_EN)
1884:Generated_Source\PSoC4/capsense_Sensing.c ****                         maxCpSnsId = snsIndex;
1885:Generated_Source\PSoC4/capsense_Sensing.c ****                     #endif
1886:Generated_Source\PSoC4/capsense_Sensing.c ****                     maxIdacComp = ptrRamSensor->idacComp[0u];
1887:Generated_Source\PSoC4/capsense_Sensing.c ****                     maxRaw = ptrRamSensor->raw[0u];
1888:Generated_Source\PSoC4/capsense_Sensing.c ****                 }
1889:Generated_Source\PSoC4/capsense_Sensing.c ****             #else
1890:Generated_Source\PSoC4/capsense_Sensing.c ****                 if (maxRaw < ptrRamSensor->raw[0u])
1891:Generated_Source\PSoC4/capsense_Sensing.c ****                 {
1892:Generated_Source\PSoC4/capsense_Sensing.c ****                     #if (capsense_CSD_MATRIX_WIDGET_EN || capsense_CSD_TOUCHPAD_WIDGET_EN)
1893:Generated_Source\PSoC4/capsense_Sensing.c ****                         maxCpSnsId = snsIndex;
1894:Generated_Source\PSoC4/capsense_Sensing.c ****                     #endif
1895:Generated_Source\PSoC4/capsense_Sensing.c ****                     maxRaw = ptrRamSensor->raw[0u];
1896:Generated_Source\PSoC4/capsense_Sensing.c ****                 }
1897:Generated_Source\PSoC4/capsense_Sensing.c ****             #endif
1898:Generated_Source\PSoC4/capsense_Sensing.c ****             ptrRamSensor++;
1899:Generated_Source\PSoC4/capsense_Sensing.c ****         }
1900:Generated_Source\PSoC4/capsense_Sensing.c **** 
1901:Generated_Source\PSoC4/capsense_Sensing.c ****         /* Update auto-tuning configuration structure */
1902:Generated_Source\PSoC4/capsense_Sensing.c ****         autoTuneConfig.iDacMod = ptrRamWidget->idacMod[0u];
1903:Generated_Source\PSoC4/capsense_Sensing.c ****         autoTuneConfig.iDacComp = (uint8)maxIdacComp;
1904:Generated_Source\PSoC4/capsense_Sensing.c ****         autoTuneConfig.iDacGain = capsense_idacGainTable[ptrRamWidget->idacGainIndex].gainValue;
1905:Generated_Source\PSoC4/capsense_Sensing.c ****         autoTuneConfig.ptrSenseClk = &ptrRamWidget->snsClk;
1906:Generated_Source\PSoC4/capsense_Sensing.c ****         autoTuneConfig.calTarget = (uint16)((maxRaw * capsense_AUTOTUNE_CAL_UNITS) /
1907:Generated_Source\PSoC4/capsense_Sensing.c ****                 ((uint32)(0x01uL << capsense_AUTOTUNE_CALIBRATION_RESOLUTION) - 1u));
1908:Generated_Source\PSoC4/capsense_Sensing.c **** 
1909:Generated_Source\PSoC4/capsense_Sensing.c ****         /* Find sensor Cp and optimum sense clock value */
1910:Generated_Source\PSoC4/capsense_Sensing.c ****         maxCp = SmartSense_TunePrescalers(&autoTuneConfig);
1911:Generated_Source\PSoC4/capsense_Sensing.c ****         autoTuneConfig.sensorCap = maxCp;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 35


1912:Generated_Source\PSoC4/capsense_Sensing.c **** 
1913:Generated_Source\PSoC4/capsense_Sensing.c ****         /* Increase sensor clock divider to valid value */
1914:Generated_Source\PSoC4/capsense_Sensing.c ****         while(ptrRamWidget->snsClk < minSnsClkDiv)
1915:Generated_Source\PSoC4/capsense_Sensing.c ****         {
1916:Generated_Source\PSoC4/capsense_Sensing.c ****             ptrRamWidget->snsClk <<= 1u;
1917:Generated_Source\PSoC4/capsense_Sensing.c ****         }
1918:Generated_Source\PSoC4/capsense_Sensing.c **** 
1919:Generated_Source\PSoC4/capsense_Sensing.c ****         /* Do the same for row for touchpad or matrix buttons widgets */
1920:Generated_Source\PSoC4/capsense_Sensing.c ****         #if (capsense_CSD_MATRIX_WIDGET_EN || capsense_CSD_TOUCHPAD_WIDGET_EN)
1921:Generated_Source\PSoC4/capsense_Sensing.c ****             if ((capsense_WD_TOUCHPAD_E == capsense_GET_WIDGET_TYPE(ptrFlashWidget)) ||
1922:Generated_Source\PSoC4/capsense_Sensing.c ****                 (capsense_WD_MATRIX_BUTTON_E == capsense_GET_WIDGET_TYPE(ptrFlashWidget)))
1923:Generated_Source\PSoC4/capsense_Sensing.c ****             {
1924:Generated_Source\PSoC4/capsense_Sensing.c ****                 /* Find a sensor with maximum Cp */
1925:Generated_Source\PSoC4/capsense_Sensing.c ****                 maxRaw = 0u;
1926:Generated_Source\PSoC4/capsense_Sensing.c ****                 maxIdacComp = 0u;
1927:Generated_Source\PSoC4/capsense_Sensing.c ****                 for (snsIndex = ptrFlashWidget->numCols; snsIndex < ptrFlashWidget->totalNumSns; sn
1928:Generated_Source\PSoC4/capsense_Sensing.c ****                 {
1929:Generated_Source\PSoC4/capsense_Sensing.c ****                     #if (capsense_ENABLE == capsense_CSD_IDAC_COMP_EN)
1930:Generated_Source\PSoC4/capsense_Sensing.c ****                         if (maxIdacComp < ptrRamSensor->idacComp[0u])
1931:Generated_Source\PSoC4/capsense_Sensing.c ****                         {
1932:Generated_Source\PSoC4/capsense_Sensing.c ****                             maxCpRowSnsId = snsIndex;
1933:Generated_Source\PSoC4/capsense_Sensing.c ****                             maxIdacComp = ptrRamSensor->idacComp[0u];
1934:Generated_Source\PSoC4/capsense_Sensing.c ****                             maxRaw = ptrRamSensor->raw[0u];
1935:Generated_Source\PSoC4/capsense_Sensing.c ****                         }
1936:Generated_Source\PSoC4/capsense_Sensing.c ****                     #else
1937:Generated_Source\PSoC4/capsense_Sensing.c ****                         if (maxRaw < ptrRamSensor->raw[0u])
1938:Generated_Source\PSoC4/capsense_Sensing.c ****                         {
1939:Generated_Source\PSoC4/capsense_Sensing.c ****                             maxCpRowSnsId = snsIndex;
1940:Generated_Source\PSoC4/capsense_Sensing.c ****                             maxRaw = ptrRamSensor->raw[0u];
1941:Generated_Source\PSoC4/capsense_Sensing.c ****                         }
1942:Generated_Source\PSoC4/capsense_Sensing.c ****                     #endif
1943:Generated_Source\PSoC4/capsense_Sensing.c ****                     ptrRamSensor++;
1944:Generated_Source\PSoC4/capsense_Sensing.c ****                 }
1945:Generated_Source\PSoC4/capsense_Sensing.c **** 
1946:Generated_Source\PSoC4/capsense_Sensing.c ****                 /* Configure auto-tuning configuration structure */
1947:Generated_Source\PSoC4/capsense_Sensing.c ****                 autoTuneConfig.iDacMod = ptrRamWidget->rowIdacMod[0u];
1948:Generated_Source\PSoC4/capsense_Sensing.c ****                 autoTuneConfig.iDacComp = (uint8)maxIdacComp;
1949:Generated_Source\PSoC4/capsense_Sensing.c ****                 autoTuneConfig.ptrSenseClk = &ptrRamWidget->rowSnsClk;
1950:Generated_Source\PSoC4/capsense_Sensing.c ****                 autoTuneConfig.calTarget = (uint16)((maxRaw * capsense_AUTOTUNE_CAL_UNITS) /
1951:Generated_Source\PSoC4/capsense_Sensing.c ****                         ((uint32)(0x01uL << capsense_AUTOTUNE_CALIBRATION_RESOLUTION) - 1u));
1952:Generated_Source\PSoC4/capsense_Sensing.c **** 
1953:Generated_Source\PSoC4/capsense_Sensing.c ****                 /* Find correct sense clock value */
1954:Generated_Source\PSoC4/capsense_Sensing.c ****                 maxCp = SmartSense_TunePrescalers(&autoTuneConfig);
1955:Generated_Source\PSoC4/capsense_Sensing.c **** 
1956:Generated_Source\PSoC4/capsense_Sensing.c ****                 /* Save maximum sensor Cp and corresponding sensor Id */
1957:Generated_Source\PSoC4/capsense_Sensing.c ****                 if (autoTuneConfig.sensorCap < maxCp)
1958:Generated_Source\PSoC4/capsense_Sensing.c ****                 {
1959:Generated_Source\PSoC4/capsense_Sensing.c ****                     autoTuneConfig.sensorCap = maxCp;
1960:Generated_Source\PSoC4/capsense_Sensing.c ****                     maxCpSnsId = maxCpRowSnsId;
1961:Generated_Source\PSoC4/capsense_Sensing.c ****                 }
1962:Generated_Source\PSoC4/capsense_Sensing.c **** 
1963:Generated_Source\PSoC4/capsense_Sensing.c ****                 /* Increase sensor clock divider to valid value */
1964:Generated_Source\PSoC4/capsense_Sensing.c ****                 while(ptrRamWidget->rowSnsClk < minSnsClkDiv)
1965:Generated_Source\PSoC4/capsense_Sensing.c ****                 {
1966:Generated_Source\PSoC4/capsense_Sensing.c ****                     ptrRamWidget->rowSnsClk <<= 1u;
1967:Generated_Source\PSoC4/capsense_Sensing.c ****                 }
1968:Generated_Source\PSoC4/capsense_Sensing.c ****             }
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 36


1969:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif /* (capsense_CSD_MATRIX_WIDGET_EN || capsense_CSD_TOUCHPAD_WIDGET_EN) */
1970:Generated_Source\PSoC4/capsense_Sensing.c **** 
1971:Generated_Source\PSoC4/capsense_Sensing.c ****         /* Check tuning results */
1972:Generated_Source\PSoC4/capsense_Sensing.c ****         if (capsense_AUTOTUNE_CP_MAX < maxCp)
1973:Generated_Source\PSoC4/capsense_Sensing.c ****         {
1974:Generated_Source\PSoC4/capsense_Sensing.c ****             autoTuneStatus = CYRET_BAD_DATA;
1975:Generated_Source\PSoC4/capsense_Sensing.c ****         }
1976:Generated_Source\PSoC4/capsense_Sensing.c **** 
1977:Generated_Source\PSoC4/capsense_Sensing.c ****         /*
1978:Generated_Source\PSoC4/capsense_Sensing.c ****         * Autotune phase #2:
1979:Generated_Source\PSoC4/capsense_Sensing.c ****         * - repeating calibration with new sense clock frequency
1980:Generated_Source\PSoC4/capsense_Sensing.c ****         * - getting resolution
1981:Generated_Source\PSoC4/capsense_Sensing.c ****         */
1982:Generated_Source\PSoC4/capsense_Sensing.c **** 
1983:Generated_Source\PSoC4/capsense_Sensing.c ****         /* Calibrate CSD widget to the default calibration target with newly defined sense frequenc
1984:Generated_Source\PSoC4/capsense_Sensing.c ****         (void)capsense_CSDCalibrateWidget(widgetId, capsense_AUTOTUNE_CAL_LEVEL);
1985:Generated_Source\PSoC4/capsense_Sensing.c **** 
1986:Generated_Source\PSoC4/capsense_Sensing.c ****         autoTuneConfig.iDacGain = capsense_idacGainTable[ptrRamWidget->idacGainIndex].gainValue;
1987:Generated_Source\PSoC4/capsense_Sensing.c ****         autoTuneConfig.iDacMod = ptrRamWidget->idacMod[0u];
1988:Generated_Source\PSoC4/capsense_Sensing.c ****         autoTuneConfig.ptrSenseClk = &ptrRamWidget->snsClk;
1989:Generated_Source\PSoC4/capsense_Sensing.c **** 
1990:Generated_Source\PSoC4/capsense_Sensing.c ****         #if (capsense_CSD_MATRIX_WIDGET_EN || capsense_CSD_TOUCHPAD_WIDGET_EN)
1991:Generated_Source\PSoC4/capsense_Sensing.c ****             if ((capsense_WD_TOUCHPAD_E == capsense_GET_WIDGET_TYPE(ptrFlashWidget)) ||
1992:Generated_Source\PSoC4/capsense_Sensing.c ****                 (capsense_WD_MATRIX_BUTTON_E == capsense_GET_WIDGET_TYPE(ptrFlashWidget)))
1993:Generated_Source\PSoC4/capsense_Sensing.c ****             {
1994:Generated_Source\PSoC4/capsense_Sensing.c ****                 if (maxCpSnsId >= ptrFlashWidget->numCols)
1995:Generated_Source\PSoC4/capsense_Sensing.c ****                 {
1996:Generated_Source\PSoC4/capsense_Sensing.c ****                     autoTuneConfig.iDacMod = ptrRamWidget->rowIdacMod[0u];
1997:Generated_Source\PSoC4/capsense_Sensing.c ****                     autoTuneConfig.ptrSenseClk = &ptrRamWidget->rowSnsClk;
1998:Generated_Source\PSoC4/capsense_Sensing.c ****                 }
1999:Generated_Source\PSoC4/capsense_Sensing.c ****             }
2000:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif
2001:Generated_Source\PSoC4/capsense_Sensing.c **** 
2002:Generated_Source\PSoC4/capsense_Sensing.c ****         /* Find resolution */
2003:Generated_Source\PSoC4/capsense_Sensing.c ****         ptrRamWidget->resolution = SmartSense_TuneSensitivity(&autoTuneConfig);
2004:Generated_Source\PSoC4/capsense_Sensing.c **** 
2005:Generated_Source\PSoC4/capsense_Sensing.c ****         /*
2006:Generated_Source\PSoC4/capsense_Sensing.c ****         * Autotune phase #3:
2007:Generated_Source\PSoC4/capsense_Sensing.c ****         * - selecting a widget clock source if AUTO
2008:Generated_Source\PSoC4/capsense_Sensing.c ****         * - repeating calibration with found clock frequency, resolution and clock source
2009:Generated_Source\PSoC4/capsense_Sensing.c ****         * - updating sensitivity
2010:Generated_Source\PSoC4/capsense_Sensing.c ****         */
2011:Generated_Source\PSoC4/capsense_Sensing.c **** 
2012:Generated_Source\PSoC4/capsense_Sensing.c ****         /* Tune widget sensitivity */
2013:Generated_Source\PSoC4/capsense_Sensing.c ****         capsense_SsSetWidgetSenseClkSrc(widgetId, ptrRamWidget);
2014:Generated_Source\PSoC4/capsense_Sensing.c **** 
2015:Generated_Source\PSoC4/capsense_Sensing.c ****         /* Calibrate CSD widget to the default calibration target with newly defined resolution */
2016:Generated_Source\PSoC4/capsense_Sensing.c ****         autoTuneStatus |= capsense_CSDCalibrateWidget(widgetId, capsense_AUTOTUNE_CAL_LEVEL);
2017:Generated_Source\PSoC4/capsense_Sensing.c **** 
2018:Generated_Source\PSoC4/capsense_Sensing.c ****         #if (capsense_ENABLE == capsense_TST_WDGT_CRC_EN)
2019:Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_DsUpdateWidgetCrc(widgetId);
2020:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif /* (capsense_ENABLE == capsense_TST_WDGT_CRC_EN) */
2021:Generated_Source\PSoC4/capsense_Sensing.c **** 
2022:Generated_Source\PSoC4/capsense_Sensing.c ****         return autoTuneStatus;
2023:Generated_Source\PSoC4/capsense_Sensing.c ****     }
2024:Generated_Source\PSoC4/capsense_Sensing.c **** 
2025:Generated_Source\PSoC4/capsense_Sensing.c **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 37


2026:Generated_Source\PSoC4/capsense_Sensing.c ****     /*******************************************************************************
2027:Generated_Source\PSoC4/capsense_Sensing.c ****     * Function Name: capsense_SsAutoTune
2028:Generated_Source\PSoC4/capsense_Sensing.c ****     ****************************************************************************//**
2029:Generated_Source\PSoC4/capsense_Sensing.c ****     *
2030:Generated_Source\PSoC4/capsense_Sensing.c ****     * \brief
2031:Generated_Source\PSoC4/capsense_Sensing.c ****     *  This API performs the parameters auto-tuning for the optimal capsense
2032:Generated_Source\PSoC4/capsense_Sensing.c ****     *  operation.
2033:Generated_Source\PSoC4/capsense_Sensing.c ****     *
2034:Generated_Source\PSoC4/capsense_Sensing.c ****     * \details
2035:Generated_Source\PSoC4/capsense_Sensing.c ****     *  This API performs the following:
2036:Generated_Source\PSoC4/capsense_Sensing.c ****     *  - Calibrates Modulator and Compensation IDACs.
2037:Generated_Source\PSoC4/capsense_Sensing.c ****     *  - Tunes the Sense Clock optimal value to get a Sense Clock period greater than
2038:Generated_Source\PSoC4/capsense_Sensing.c ****     *    2*5*R*Cp.
2039:Generated_Source\PSoC4/capsense_Sensing.c ****     *  - Calculates the resolution for the optimal finger capacitance.
2040:Generated_Source\PSoC4/capsense_Sensing.c ****     *
2041:Generated_Source\PSoC4/capsense_Sensing.c ****     * \return
2042:Generated_Source\PSoC4/capsense_Sensing.c ****     *  Returns the status of the operation:
2043:Generated_Source\PSoC4/capsense_Sensing.c ****     *  - Zero     - All the widgets are auto-tuned successfully.
2044:Generated_Source\PSoC4/capsense_Sensing.c ****     *  - Non-zero - Auto-tuning failed for any widget.
2045:Generated_Source\PSoC4/capsense_Sensing.c ****     *
2046:Generated_Source\PSoC4/capsense_Sensing.c ****     *******************************************************************************/
2047:Generated_Source\PSoC4/capsense_Sensing.c ****     cystatus capsense_SsAutoTune(void)
2048:Generated_Source\PSoC4/capsense_Sensing.c ****     {
2049:Generated_Source\PSoC4/capsense_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
2050:Generated_Source\PSoC4/capsense_Sensing.c ****         uint32 wdgtIndex;
2051:Generated_Source\PSoC4/capsense_Sensing.c **** 
2052:Generated_Source\PSoC4/capsense_Sensing.c ****         /* Tune each CSD widget */
2053:Generated_Source\PSoC4/capsense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < capsense_TOTAL_WIDGETS; wdgtIndex++)
2054:Generated_Source\PSoC4/capsense_Sensing.c ****         {
2055:Generated_Source\PSoC4/capsense_Sensing.c ****             if (capsense_SENSE_METHOD_CSD_E ==
2056:Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_GET_SENSE_METHOD(&capsense_dsFlash.wdgtArray[wdgtIndex]))
2057:Generated_Source\PSoC4/capsense_Sensing.c ****             {
2058:Generated_Source\PSoC4/capsense_Sensing.c ****                 autoTuneStatus |= capsense_SsAutoTuneWidget(wdgtIndex);
2059:Generated_Source\PSoC4/capsense_Sensing.c ****             }
2060:Generated_Source\PSoC4/capsense_Sensing.c ****         }
2061:Generated_Source\PSoC4/capsense_Sensing.c ****         return autoTuneStatus;
2062:Generated_Source\PSoC4/capsense_Sensing.c ****     }
2063:Generated_Source\PSoC4/capsense_Sensing.c **** #endif /* (capsense_CSD_SS_DIS != capsense_CSD_AUTOTUNE)) */
2064:Generated_Source\PSoC4/capsense_Sensing.c **** 
2065:Generated_Source\PSoC4/capsense_Sensing.c **** 
2066:Generated_Source\PSoC4/capsense_Sensing.c **** #if (capsense_DISABLE == capsense_CSDV2)
2067:Generated_Source\PSoC4/capsense_Sensing.c ****     #if ( ((capsense_ENABLE == capsense_CSX_EN) \
2068:Generated_Source\PSoC4/capsense_Sensing.c ****         || (capsense_ENABLE == capsense_ISX_EN)) ||\
2069:Generated_Source\PSoC4/capsense_Sensing.c ****          (capsense_IDAC_SINKING == capsense_CSD_IDAC_CONFIG))
2070:Generated_Source\PSoC4/capsense_Sensing.c ****         /*******************************************************************************
2071:Generated_Source\PSoC4/capsense_Sensing.c ****         * Function Name: capsense_SsTrimIdacsSinking
2072:Generated_Source\PSoC4/capsense_Sensing.c ****         ****************************************************************************//**
2073:Generated_Source\PSoC4/capsense_Sensing.c ****         *
2074:Generated_Source\PSoC4/capsense_Sensing.c ****         * \brief
2075:Generated_Source\PSoC4/capsense_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
2076:Generated_Source\PSoC4/capsense_Sensing.c ****         *  IDAC1 and IDAC2 for Sinking CSD Mode
2077:Generated_Source\PSoC4/capsense_Sensing.c ****         *
2078:Generated_Source\PSoC4/capsense_Sensing.c ****         * \details
2079:Generated_Source\PSoC4/capsense_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
2080:Generated_Source\PSoC4/capsense_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
2081:Generated_Source\PSoC4/capsense_Sensing.c ****         *
2082:Generated_Source\PSoC4/capsense_Sensing.c ****         *******************************************************************************/
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 38


2083:Generated_Source\PSoC4/capsense_Sensing.c ****         static void capsense_SsTrimIdacsSinking(void)
2084:Generated_Source\PSoC4/capsense_Sensing.c ****         {
2085:Generated_Source\PSoC4/capsense_Sensing.c ****             uint32 trimValue;
2086:Generated_Source\PSoC4/capsense_Sensing.c **** 
2087:Generated_Source\PSoC4/capsense_Sensing.c ****             /* Mod iDAC Sinking Mode */
2088:Generated_Source\PSoC4/capsense_Sensing.c ****             trimValue = CY_GET_REG32(capsense_TRIM2_PTR) & ~capsense_IDAC_TRIM2_MOD_SNK_MASK;
2089:Generated_Source\PSoC4/capsense_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(capsense_SFLASH_TRIM2_PTR) &
2090:Generated_Source\PSoC4/capsense_Sensing.c ****                                                       capsense_SFLASH_TRIM_IDAC_MOD_MASK) ;
2091:Generated_Source\PSoC4/capsense_Sensing.c **** 
2092:Generated_Source\PSoC4/capsense_Sensing.c ****             #if (capsense_ENABLE == capsense_CSD_IDAC_COMP_EN)
2093:Generated_Source\PSoC4/capsense_Sensing.c ****                 /* Comp iDAC Sinking Mode */
2094:Generated_Source\PSoC4/capsense_Sensing.c ****                 trimValue &= ~capsense_IDAC_TRIM2_COMP_SNK_MASK;
2095:Generated_Source\PSoC4/capsense_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(capsense_SFLASH_TRIM2_PTR) &
2096:Generated_Source\PSoC4/capsense_Sensing.c ****                                                           capsense_SFLASH_TRIM_IDAC_COMP_MASK);
2097:Generated_Source\PSoC4/capsense_Sensing.c ****             #endif /* (capsense_ENABLE == capsense_CSD_IDAC_COMP_EN) */
2098:Generated_Source\PSoC4/capsense_Sensing.c **** 
2099:Generated_Source\PSoC4/capsense_Sensing.c ****             /* Update IDAC trim bits for gain control in current sink mode */
2100:Generated_Source\PSoC4/capsense_Sensing.c ****             CY_SET_REG32(capsense_TRIM2_PTR, trimValue);
2101:Generated_Source\PSoC4/capsense_Sensing.c ****         }
2102:Generated_Source\PSoC4/capsense_Sensing.c ****     #endif /* ((capsense_ENABLE == capsense_CSX_EN) || \
2103:Generated_Source\PSoC4/capsense_Sensing.c ****                (capsense_IDAC_SINKING == capsense_CSD_IDAC_CONFIG)) */
2104:Generated_Source\PSoC4/capsense_Sensing.c **** 
2105:Generated_Source\PSoC4/capsense_Sensing.c **** 
2106:Generated_Source\PSoC4/capsense_Sensing.c ****     #if ( ((capsense_ENABLE == capsense_CSX_EN) \
2107:Generated_Source\PSoC4/capsense_Sensing.c ****         || (capsense_ENABLE == capsense_ISX_EN)) || \
2108:Generated_Source\PSoC4/capsense_Sensing.c ****          (capsense_IDAC_SOURCING == capsense_CSD_IDAC_CONFIG))
2109:Generated_Source\PSoC4/capsense_Sensing.c ****         /*******************************************************************************
2110:Generated_Source\PSoC4/capsense_Sensing.c ****         * Function Name: capsense_SsTrimIdacsSourcing
2111:Generated_Source\PSoC4/capsense_Sensing.c ****         ****************************************************************************//**
2112:Generated_Source\PSoC4/capsense_Sensing.c ****         *
2113:Generated_Source\PSoC4/capsense_Sensing.c ****         * \brief
2114:Generated_Source\PSoC4/capsense_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
2115:Generated_Source\PSoC4/capsense_Sensing.c ****         *  IDAC1 and IDAC2 for Sourcing CSD Mode
2116:Generated_Source\PSoC4/capsense_Sensing.c ****         *
2117:Generated_Source\PSoC4/capsense_Sensing.c ****         * \details
2118:Generated_Source\PSoC4/capsense_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
2119:Generated_Source\PSoC4/capsense_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
2120:Generated_Source\PSoC4/capsense_Sensing.c ****         *
2121:Generated_Source\PSoC4/capsense_Sensing.c ****         *******************************************************************************/
2122:Generated_Source\PSoC4/capsense_Sensing.c ****         static void capsense_SsTrimIdacsSourcing(void)
2123:Generated_Source\PSoC4/capsense_Sensing.c ****         {
2124:Generated_Source\PSoC4/capsense_Sensing.c ****             uint32 trimValue;
2125:Generated_Source\PSoC4/capsense_Sensing.c **** 
2126:Generated_Source\PSoC4/capsense_Sensing.c ****             /* Mod iDAC Sourcing Mode */
2127:Generated_Source\PSoC4/capsense_Sensing.c ****             trimValue = CY_GET_REG32(capsense_TRIM1_PTR) & ~capsense_IDAC_TRIM1_MOD_SRC_MASK;
2128:Generated_Source\PSoC4/capsense_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(capsense_SFLASH_TRIM1_PTR) &
2129:Generated_Source\PSoC4/capsense_Sensing.c ****                                                       capsense_SFLASH_TRIM_IDAC_MOD_MASK);
2130:Generated_Source\PSoC4/capsense_Sensing.c **** 
2131:Generated_Source\PSoC4/capsense_Sensing.c ****             #if (capsense_ENABLE == capsense_CSD_IDAC_COMP_EN)
2132:Generated_Source\PSoC4/capsense_Sensing.c ****                  /* Comp iDAC Sourcing Mode */
2133:Generated_Source\PSoC4/capsense_Sensing.c ****                 trimValue &= ~capsense_IDAC_TRIM1_COMP_SRC_MASK;
2134:Generated_Source\PSoC4/capsense_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(capsense_SFLASH_TRIM1_PTR) &
2135:Generated_Source\PSoC4/capsense_Sensing.c ****                                                           capsense_SFLASH_TRIM_IDAC_COMP_MASK);
2136:Generated_Source\PSoC4/capsense_Sensing.c ****             #endif /* (capsense_ENABLE == capsense_CSD_IDAC_COMP_EN) */
2137:Generated_Source\PSoC4/capsense_Sensing.c **** 
2138:Generated_Source\PSoC4/capsense_Sensing.c ****             /* Update IDAC trim bits for gain control in current source mode */
2139:Generated_Source\PSoC4/capsense_Sensing.c ****             CY_SET_REG32(capsense_TRIM1_PTR, trimValue);
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 39


2140:Generated_Source\PSoC4/capsense_Sensing.c ****         }
2141:Generated_Source\PSoC4/capsense_Sensing.c ****     #endif /* ((capsense_ENABLE == capsense_CSX_EN) || \
2142:Generated_Source\PSoC4/capsense_Sensing.c ****                (capsense_IDAC_SOURCING == capsense_CSD_IDAC_CONFIG)) */
2143:Generated_Source\PSoC4/capsense_Sensing.c **** 
2144:Generated_Source\PSoC4/capsense_Sensing.c **** 
2145:Generated_Source\PSoC4/capsense_Sensing.c ****     /*******************************************************************************
2146:Generated_Source\PSoC4/capsense_Sensing.c ****     * Function Name: capsense_SsTrimIdacs
2147:Generated_Source\PSoC4/capsense_Sensing.c ****     ****************************************************************************//**
2148:Generated_Source\PSoC4/capsense_Sensing.c ****     *
2149:Generated_Source\PSoC4/capsense_Sensing.c ****     * \brief
2150:Generated_Source\PSoC4/capsense_Sensing.c ****     *  This function loads trim values from SFLASH rows to calibrate
2151:Generated_Source\PSoC4/capsense_Sensing.c ****     *  IDAC1 and IDAC2 for CSD Mode
2152:Generated_Source\PSoC4/capsense_Sensing.c ****     *
2153:Generated_Source\PSoC4/capsense_Sensing.c ****     * \details
2154:Generated_Source\PSoC4/capsense_Sensing.c ****     *  If CSX mode is enabled the function loads trim values for both sink and source
2155:Generated_Source\PSoC4/capsense_Sensing.c ****     *  mode. If CSX mode is disabled the function loads trim values for sink or
2156:Generated_Source\PSoC4/capsense_Sensing.c ****     *  source mode based on sink/source mode configuration.
2157:Generated_Source\PSoC4/capsense_Sensing.c ****     *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
2158:Generated_Source\PSoC4/capsense_Sensing.c ****     *
2159:Generated_Source\PSoC4/capsense_Sensing.c ****     *******************************************************************************/
2160:Generated_Source\PSoC4/capsense_Sensing.c ****     static void capsense_SsTrimIdacs(void)
2161:Generated_Source\PSoC4/capsense_Sensing.c ****     {
2162:Generated_Source\PSoC4/capsense_Sensing.c ****         #if (capsense_ENABLE == capsense_CSX_EN) || (capsense_ENABLE == capsense_ISX_EN)
2163:Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_SsTrimIdacsSinking();
2164:Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_SsTrimIdacsSourcing();
2165:Generated_Source\PSoC4/capsense_Sensing.c ****         #elif (capsense_IDAC_SINKING == capsense_CSD_IDAC_CONFIG)
2166:Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_SsTrimIdacsSinking();
2167:Generated_Source\PSoC4/capsense_Sensing.c ****         #elif (capsense_IDAC_SOURCING == capsense_CSD_IDAC_CONFIG)
2168:Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_SsTrimIdacsSourcing();
2169:Generated_Source\PSoC4/capsense_Sensing.c ****         #else
2170:Generated_Source\PSoC4/capsense_Sensing.c ****             #error "Not supported Mode, Component cannot work in this mode"
2171:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif /* (capsense_ENABLE == capsense_CSX_EN) || (capsense_ENABLE == capsense_ISX_EN) */
2172:Generated_Source\PSoC4/capsense_Sensing.c ****     }
2173:Generated_Source\PSoC4/capsense_Sensing.c **** #endif  /* (capsense_DISABLE == capsense_CSDV2) */
2174:Generated_Source\PSoC4/capsense_Sensing.c **** 
2175:Generated_Source\PSoC4/capsense_Sensing.c **** 
2176:Generated_Source\PSoC4/capsense_Sensing.c **** #if (capsense_ENABLE == capsense_MULTI_FREQ_SCAN_EN)
2177:Generated_Source\PSoC4/capsense_Sensing.c ****     /*******************************************************************************
2178:Generated_Source\PSoC4/capsense_Sensing.c ****     * Function Name: capsense_SsChangeImoFreq
2179:Generated_Source\PSoC4/capsense_Sensing.c ****     ****************************************************************************//**
2180:Generated_Source\PSoC4/capsense_Sensing.c ****     *
2181:Generated_Source\PSoC4/capsense_Sensing.c ****     * \brief
2182:Generated_Source\PSoC4/capsense_Sensing.c ****     *  This function changes the IMO frequency.
2183:Generated_Source\PSoC4/capsense_Sensing.c ****     *
2184:Generated_Source\PSoC4/capsense_Sensing.c ****     * \details
2185:Generated_Source\PSoC4/capsense_Sensing.c ****     *  The IMO frequency can have three offsets: 0%, -5% and +5%. The frequency
2186:Generated_Source\PSoC4/capsense_Sensing.c ****     *  trims are contained in the capsense_immunity[value] array for each
2187:Generated_Source\PSoC4/capsense_Sensing.c ****     *  frequency channel.
2188:Generated_Source\PSoC4/capsense_Sensing.c ****     *
2189:Generated_Source\PSoC4/capsense_Sensing.c ****     * \param value The frequency channel ID.
2190:Generated_Source\PSoC4/capsense_Sensing.c ****     *
2191:Generated_Source\PSoC4/capsense_Sensing.c ****     *******************************************************************************/
2192:Generated_Source\PSoC4/capsense_Sensing.c ****     void capsense_SsChangeImoFreq(uint32 value)
2193:Generated_Source\PSoC4/capsense_Sensing.c ****     {
2194:Generated_Source\PSoC4/capsense_Sensing.c ****         CY_SET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR, capsense_immunity[value]);
2195:Generated_Source\PSoC4/capsense_Sensing.c ****     }
2196:Generated_Source\PSoC4/capsense_Sensing.c **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 40


2197:Generated_Source\PSoC4/capsense_Sensing.c ****     /*******************************************************************************
2198:Generated_Source\PSoC4/capsense_Sensing.c ****     * Function Name: capsense_SsChangeClkFreq
2199:Generated_Source\PSoC4/capsense_Sensing.c ****     ****************************************************************************//**
2200:Generated_Source\PSoC4/capsense_Sensing.c ****     *
2201:Generated_Source\PSoC4/capsense_Sensing.c ****     * \brief
2202:Generated_Source\PSoC4/capsense_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
2203:Generated_Source\PSoC4/capsense_Sensing.c ****     *  the corresponding divider.
2204:Generated_Source\PSoC4/capsense_Sensing.c ****     *
2205:Generated_Source\PSoC4/capsense_Sensing.c ****     * \details
2206:Generated_Source\PSoC4/capsense_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
2207:Generated_Source\PSoC4/capsense_Sensing.c ****     *  the corresponding divider.
2208:Generated_Source\PSoC4/capsense_Sensing.c ****     *
2209:Generated_Source\PSoC4/capsense_Sensing.c ****     * \param chId
2210:Generated_Source\PSoC4/capsense_Sensing.c ****     *  The frequency channel ID.
2211:Generated_Source\PSoC4/capsense_Sensing.c ****     *
2212:Generated_Source\PSoC4/capsense_Sensing.c ****     *******************************************************************************/
2213:Generated_Source\PSoC4/capsense_Sensing.c ****     void capsense_SsChangeClkFreq(uint32 chId)
2214:Generated_Source\PSoC4/capsense_Sensing.c ****     {
2215:Generated_Source\PSoC4/capsense_Sensing.c ****         uint32 snsClkDivider;
2216:Generated_Source\PSoC4/capsense_Sensing.c ****         uint32 freqOffset1 = 0u;
2217:Generated_Source\PSoC4/capsense_Sensing.c ****         uint32 freqOffset2 = 0u;
2218:Generated_Source\PSoC4/capsense_Sensing.c **** 
2219:Generated_Source\PSoC4/capsense_Sensing.c ****         #if (0u != capsense_TOTAL_CSD_WIDGETS)
2220:Generated_Source\PSoC4/capsense_Sensing.c ****             #if (capsense_ENABLE == capsense_CSDV2)
2221:Generated_Source\PSoC4/capsense_Sensing.c ****                 uint32 conversionsNum;
2222:Generated_Source\PSoC4/capsense_Sensing.c ****             #endif /* (capsense_ENABLE == capsense_CSDV2) */
2223:Generated_Source\PSoC4/capsense_Sensing.c **** 
2224:Generated_Source\PSoC4/capsense_Sensing.c ****             #if((capsense_CLK_SOURCE_PRS8  == capsense_CSD_SNS_CLK_SOURCE) ||\
2225:Generated_Source\PSoC4/capsense_Sensing.c ****                 (capsense_CLK_SOURCE_PRS12 == capsense_CSD_SNS_CLK_SOURCE) ||\
2226:Generated_Source\PSoC4/capsense_Sensing.c ****                 (capsense_CLK_SOURCE_PRSAUTO == capsense_CSD_SNS_CLK_SOURCE))
2227:Generated_Source\PSoC4/capsense_Sensing.c ****                 uint32 snsClkSrc;
2228:Generated_Source\PSoC4/capsense_Sensing.c ****             #endif
2229:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif
2230:Generated_Source\PSoC4/capsense_Sensing.c **** 
2231:Generated_Source\PSoC4/capsense_Sensing.c ****         #if ((0u != capsense_TOTAL_CSD_WIDGETS) || \
2232:Generated_Source\PSoC4/capsense_Sensing.c ****              ((capsense_DISABLE == capsense_CSX_COMMON_TX_CLK_EN) && (0u != capsense_TOTAL_CSX_WIDG
2233:Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_FLASH_WD_STRUCT const *ptrFlashWdgt = &capsense_dsFlash.wdgtArray[capsense_wid
2234:Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_RAM_WD_BASE_STRUCT const *ptrWdgt = (capsense_RAM_WD_BASE_STRUCT *)ptrFlashWdg
2235:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif
2236:Generated_Source\PSoC4/capsense_Sensing.c **** 
2237:Generated_Source\PSoC4/capsense_Sensing.c ****         switch(capsense_GET_SENSE_METHOD(&capsense_dsFlash.wdgtArray[capsense_widgetIndex]))
2238:Generated_Source\PSoC4/capsense_Sensing.c ****         {
2239:Generated_Source\PSoC4/capsense_Sensing.c ****         #if (0u != capsense_TOTAL_CSD_WIDGETS)
2240:Generated_Source\PSoC4/capsense_Sensing.c ****             case capsense_SENSE_METHOD_CSD_E:
2241:Generated_Source\PSoC4/capsense_Sensing.c ****                 /* Get sensor clock divider value */
2242:Generated_Source\PSoC4/capsense_Sensing.c ****                 #if (capsense_ENABLE == capsense_CSD_COMMON_SNS_CLK_EN)
2243:Generated_Source\PSoC4/capsense_Sensing.c ****                     snsClkDivider = capsense_dsRam.snsCsdClk;
2244:Generated_Source\PSoC4/capsense_Sensing.c ****                 #else /* (capsense_ENABLE == capsense_CSD_COMMON_SNS_CLK_EN) */
2245:Generated_Source\PSoC4/capsense_Sensing.c ****                     #if (capsense_CSD_MATRIX_WIDGET_EN || capsense_CSD_TOUCHPAD_WIDGET_EN)
2246:Generated_Source\PSoC4/capsense_Sensing.c ****                         /* Get SnsClck divider for rows or columns */
2247:Generated_Source\PSoC4/capsense_Sensing.c ****                         if (capsense_dsFlash.wdgtArray[capsense_widgetIndex].numCols <= capsense_se
2248:Generated_Source\PSoC4/capsense_Sensing.c ****                         {
2249:Generated_Source\PSoC4/capsense_Sensing.c ****                             snsClkDivider = ptrWdgt->rowSnsClk;
2250:Generated_Source\PSoC4/capsense_Sensing.c ****                         }
2251:Generated_Source\PSoC4/capsense_Sensing.c ****                         else
2252:Generated_Source\PSoC4/capsense_Sensing.c ****                         {
2253:Generated_Source\PSoC4/capsense_Sensing.c ****                             snsClkDivider = ptrWdgt->snsClk;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 41


2254:Generated_Source\PSoC4/capsense_Sensing.c ****                         }
2255:Generated_Source\PSoC4/capsense_Sensing.c ****                     #else
2256:Generated_Source\PSoC4/capsense_Sensing.c ****                         snsClkDivider = ptrWdgt->snsClk;
2257:Generated_Source\PSoC4/capsense_Sensing.c ****                     #endif /* (capsense_CSD_MATRIX_WIDGET_EN || capsense_CSD_TOUCHPAD_WIDGET_EN) */
2258:Generated_Source\PSoC4/capsense_Sensing.c ****                 #endif /* (capsense_ENABLE == capsense_CSD_COMMON_SNS_CLK_EN) */
2259:Generated_Source\PSoC4/capsense_Sensing.c **** 
2260:Generated_Source\PSoC4/capsense_Sensing.c ****                 freqOffset1 = capsense_CSD_MFS_DIVIDER_OFFSET_F1;
2261:Generated_Source\PSoC4/capsense_Sensing.c ****                 freqOffset2 = capsense_CSD_MFS_DIVIDER_OFFSET_F2;
2262:Generated_Source\PSoC4/capsense_Sensing.c **** 
2263:Generated_Source\PSoC4/capsense_Sensing.c ****                 #if((capsense_CLK_SOURCE_PRS8  == capsense_CSD_SNS_CLK_SOURCE) ||\
2264:Generated_Source\PSoC4/capsense_Sensing.c ****                     (capsense_CLK_SOURCE_PRS12 == capsense_CSD_SNS_CLK_SOURCE) ||\
2265:Generated_Source\PSoC4/capsense_Sensing.c ****                     (capsense_CLK_SOURCE_PRSAUTO == capsense_CSD_SNS_CLK_SOURCE))
2266:Generated_Source\PSoC4/capsense_Sensing.c ****                     /* Get sense clk source */
2267:Generated_Source\PSoC4/capsense_Sensing.c ****                     #if (capsense_CSD_MATRIX_WIDGET_EN || capsense_CSD_TOUCHPAD_WIDGET_EN)
2268:Generated_Source\PSoC4/capsense_Sensing.c ****                         /* Get SnsClc Source for rows or columns */
2269:Generated_Source\PSoC4/capsense_Sensing.c ****                         if (capsense_dsFlash.wdgtArray[capsense_widgetIndex].numCols <= capsense_se
2270:Generated_Source\PSoC4/capsense_Sensing.c ****                         {
2271:Generated_Source\PSoC4/capsense_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->rowSnsClkSource;
2272:Generated_Source\PSoC4/capsense_Sensing.c ****                         }
2273:Generated_Source\PSoC4/capsense_Sensing.c ****                         else
2274:Generated_Source\PSoC4/capsense_Sensing.c ****                         {
2275:Generated_Source\PSoC4/capsense_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2276:Generated_Source\PSoC4/capsense_Sensing.c ****                         }
2277:Generated_Source\PSoC4/capsense_Sensing.c ****                     #else
2278:Generated_Source\PSoC4/capsense_Sensing.c ****                         snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2279:Generated_Source\PSoC4/capsense_Sensing.c ****                     #endif /* (capsense_CSD_MATRIX_WIDGET_EN || capsense_CSD_TOUCHPAD_WIDGET_EN) */
2280:Generated_Source\PSoC4/capsense_Sensing.c **** 
2281:Generated_Source\PSoC4/capsense_Sensing.c ****                     switch (snsClkSrc)
2282:Generated_Source\PSoC4/capsense_Sensing.c ****                     {
2283:Generated_Source\PSoC4/capsense_Sensing.c ****                     case capsense_CLK_SOURCE_PRS8:
2284:Generated_Source\PSoC4/capsense_Sensing.c ****                     case capsense_CLK_SOURCE_PRS12:
2285:Generated_Source\PSoC4/capsense_Sensing.c ****                         /* Multiply by 2 for PRS8/PRS12 mode */
2286:Generated_Source\PSoC4/capsense_Sensing.c ****                         freqOffset1 <<= 1u;
2287:Generated_Source\PSoC4/capsense_Sensing.c ****                         freqOffset2 <<= 1u;
2288:Generated_Source\PSoC4/capsense_Sensing.c ****                         break;
2289:Generated_Source\PSoC4/capsense_Sensing.c **** 
2290:Generated_Source\PSoC4/capsense_Sensing.c ****                     default:
2291:Generated_Source\PSoC4/capsense_Sensing.c ****                         break;
2292:Generated_Source\PSoC4/capsense_Sensing.c ****                     }
2293:Generated_Source\PSoC4/capsense_Sensing.c ****                 #endif
2294:Generated_Source\PSoC4/capsense_Sensing.c **** 
2295:Generated_Source\PSoC4/capsense_Sensing.c ****                 /* Change the divider based on the chId */
2296:Generated_Source\PSoC4/capsense_Sensing.c ****                 switch (chId)
2297:Generated_Source\PSoC4/capsense_Sensing.c ****                 {
2298:Generated_Source\PSoC4/capsense_Sensing.c ****                     case capsense_FREQ_CHANNEL_1:
2299:Generated_Source\PSoC4/capsense_Sensing.c ****                     {
2300:Generated_Source\PSoC4/capsense_Sensing.c ****                         snsClkDivider += freqOffset1;
2301:Generated_Source\PSoC4/capsense_Sensing.c ****                         break;
2302:Generated_Source\PSoC4/capsense_Sensing.c ****                     }
2303:Generated_Source\PSoC4/capsense_Sensing.c ****                     case capsense_FREQ_CHANNEL_2:
2304:Generated_Source\PSoC4/capsense_Sensing.c ****                     {
2305:Generated_Source\PSoC4/capsense_Sensing.c ****                         snsClkDivider += freqOffset2;
2306:Generated_Source\PSoC4/capsense_Sensing.c ****                         break;
2307:Generated_Source\PSoC4/capsense_Sensing.c ****                     }
2308:Generated_Source\PSoC4/capsense_Sensing.c ****                     default:
2309:Generated_Source\PSoC4/capsense_Sensing.c ****                     {
2310:Generated_Source\PSoC4/capsense_Sensing.c ****                         break;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 42


2311:Generated_Source\PSoC4/capsense_Sensing.c ****                     }
2312:Generated_Source\PSoC4/capsense_Sensing.c ****                 }
2313:Generated_Source\PSoC4/capsense_Sensing.c **** 
2314:Generated_Source\PSoC4/capsense_Sensing.c ****                 #if (capsense_ENABLE == capsense_CSDV2)
2315:Generated_Source\PSoC4/capsense_Sensing.c ****                     /* Set Number Of Conversions based on scanning resolution */
2316:Generated_Source\PSoC4/capsense_Sensing.c ****                     conversionsNum = capsense_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)pt
2317:Generated_Source\PSoC4/capsense_Sensing.c ****                     CY_SET_REG32(capsense_SEQ_NORM_CNT_PTR, (conversionsNum & capsense_SEQ_NORM_CNT
2318:Generated_Source\PSoC4/capsense_Sensing.c ****                 #endif /* (capsense_ENABLE == capsense_CSDV2) */
2319:Generated_Source\PSoC4/capsense_Sensing.c **** 
2320:Generated_Source\PSoC4/capsense_Sensing.c ****                 #if((capsense_CLK_SOURCE_PRS8  == capsense_CSD_SNS_CLK_SOURCE) ||\
2321:Generated_Source\PSoC4/capsense_Sensing.c ****                     (capsense_CLK_SOURCE_PRS12 == capsense_CSD_SNS_CLK_SOURCE) ||\
2322:Generated_Source\PSoC4/capsense_Sensing.c ****                     (capsense_CLK_SOURCE_PRSAUTO == capsense_CSD_SNS_CLK_SOURCE))
2323:Generated_Source\PSoC4/capsense_Sensing.c ****                     switch (snsClkSrc)
2324:Generated_Source\PSoC4/capsense_Sensing.c ****                     {
2325:Generated_Source\PSoC4/capsense_Sensing.c ****                     case capsense_CLK_SOURCE_PRS8:
2326:Generated_Source\PSoC4/capsense_Sensing.c ****                     case capsense_CLK_SOURCE_PRS12:
2327:Generated_Source\PSoC4/capsense_Sensing.c ****                         /* Divide by 2 for PRS8/PRS12 mode */
2328:Generated_Source\PSoC4/capsense_Sensing.c ****                         snsClkDivider >>= 1;
2329:Generated_Source\PSoC4/capsense_Sensing.c ****                         if (snsClkDivider == 0u)
2330:Generated_Source\PSoC4/capsense_Sensing.c ****                         {
2331:Generated_Source\PSoC4/capsense_Sensing.c ****                             snsClkDivider = 1u;
2332:Generated_Source\PSoC4/capsense_Sensing.c ****                         }
2333:Generated_Source\PSoC4/capsense_Sensing.c ****                         break;
2334:Generated_Source\PSoC4/capsense_Sensing.c **** 
2335:Generated_Source\PSoC4/capsense_Sensing.c ****                     default:
2336:Generated_Source\PSoC4/capsense_Sensing.c ****                         break;
2337:Generated_Source\PSoC4/capsense_Sensing.c ****                     }
2338:Generated_Source\PSoC4/capsense_Sensing.c ****                 #endif
2339:Generated_Source\PSoC4/capsense_Sensing.c **** 
2340:Generated_Source\PSoC4/capsense_Sensing.c ****                 /* Configure the new divider */
2341:Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_SsSetSnsClockDivider(snsClkDivider);
2342:Generated_Source\PSoC4/capsense_Sensing.c **** 
2343:Generated_Source\PSoC4/capsense_Sensing.c ****                 break;
2344:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif /* #if (0u != capsense_TOTAL_CSD_WIDGETS) */
2345:Generated_Source\PSoC4/capsense_Sensing.c **** 
2346:Generated_Source\PSoC4/capsense_Sensing.c ****         #if (0u != capsense_TOTAL_CSX_WIDGETS)
2347:Generated_Source\PSoC4/capsense_Sensing.c ****             case capsense_SENSE_METHOD_CSX_E:
2348:Generated_Source\PSoC4/capsense_Sensing.c ****                 #if (capsense_ENABLE == capsense_CSX_COMMON_TX_CLK_EN)
2349:Generated_Source\PSoC4/capsense_Sensing.c ****                     snsClkDivider = capsense_dsRam.snsCsxClk;
2350:Generated_Source\PSoC4/capsense_Sensing.c ****                 #else /* (capsense_ENABLE == capsense_CSX_COMMON_TX_CLK_EN) */
2351:Generated_Source\PSoC4/capsense_Sensing.c ****                     snsClkDivider = ptrWdgt->snsClk;
2352:Generated_Source\PSoC4/capsense_Sensing.c ****                 #endif /* (capsense_ENABLE == capsense_CSX_COMMON_TX_CLK_EN) */
2353:Generated_Source\PSoC4/capsense_Sensing.c ****                 freqOffset1 = capsense_CSX_MFS_DIVIDER_OFFSET_F1;
2354:Generated_Source\PSoC4/capsense_Sensing.c ****                 freqOffset2 = capsense_CSX_MFS_DIVIDER_OFFSET_F2;
2355:Generated_Source\PSoC4/capsense_Sensing.c **** 
2356:Generated_Source\PSoC4/capsense_Sensing.c ****                 /* Change the divider based on the chId */
2357:Generated_Source\PSoC4/capsense_Sensing.c ****                 switch (chId)
2358:Generated_Source\PSoC4/capsense_Sensing.c ****                 {
2359:Generated_Source\PSoC4/capsense_Sensing.c ****                     case capsense_FREQ_CHANNEL_1:
2360:Generated_Source\PSoC4/capsense_Sensing.c ****                     {
2361:Generated_Source\PSoC4/capsense_Sensing.c ****                         snsClkDivider += freqOffset1;
2362:Generated_Source\PSoC4/capsense_Sensing.c ****                         break;
2363:Generated_Source\PSoC4/capsense_Sensing.c ****                     }
2364:Generated_Source\PSoC4/capsense_Sensing.c ****                     case capsense_FREQ_CHANNEL_2:
2365:Generated_Source\PSoC4/capsense_Sensing.c ****                     {
2366:Generated_Source\PSoC4/capsense_Sensing.c ****                         snsClkDivider += freqOffset2;
2367:Generated_Source\PSoC4/capsense_Sensing.c ****                         break;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 43


2368:Generated_Source\PSoC4/capsense_Sensing.c ****                     }
2369:Generated_Source\PSoC4/capsense_Sensing.c ****                     default:
2370:Generated_Source\PSoC4/capsense_Sensing.c ****                     {
2371:Generated_Source\PSoC4/capsense_Sensing.c ****                         break;
2372:Generated_Source\PSoC4/capsense_Sensing.c ****                     }
2373:Generated_Source\PSoC4/capsense_Sensing.c ****                 }
2374:Generated_Source\PSoC4/capsense_Sensing.c **** 
2375:Generated_Source\PSoC4/capsense_Sensing.c ****                 /* Configure the new divider */
2376:Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_SsSetSnsClockDivider(snsClkDivider);
2377:Generated_Source\PSoC4/capsense_Sensing.c **** 
2378:Generated_Source\PSoC4/capsense_Sensing.c ****                 break;
2379:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif /* #if (0u != capsense_TOTAL_CSX_WIDGETS) */
2380:Generated_Source\PSoC4/capsense_Sensing.c **** 
2381:Generated_Source\PSoC4/capsense_Sensing.c ****         default:
2382:Generated_Source\PSoC4/capsense_Sensing.c ****             CYASSERT(0);
2383:Generated_Source\PSoC4/capsense_Sensing.c ****             break;
2384:Generated_Source\PSoC4/capsense_Sensing.c ****         }
2385:Generated_Source\PSoC4/capsense_Sensing.c ****     }
2386:Generated_Source\PSoC4/capsense_Sensing.c **** #endif  /* (capsense_ENABLE == capsense_MULTI_FREQ_SCAN_EN) */
2387:Generated_Source\PSoC4/capsense_Sensing.c **** 
2388:Generated_Source\PSoC4/capsense_Sensing.c **** 
2389:Generated_Source\PSoC4/capsense_Sensing.c **** #if((capsense_ENABLE == capsense_CSD_EN) || \
2390:Generated_Source\PSoC4/capsense_Sensing.c ****     ((capsense_ENABLE == capsense_CSX_EN) && \
2391:Generated_Source\PSoC4/capsense_Sensing.c ****      (capsense_ENABLE == capsense_CSDV2)))
2392:Generated_Source\PSoC4/capsense_Sensing.c **** /*******************************************************************************
2393:Generated_Source\PSoC4/capsense_Sensing.c **** * Function Name: capsense_SsInitializeSourceSenseClk
2394:Generated_Source\PSoC4/capsense_Sensing.c **** ****************************************************************************//**
2395:Generated_Source\PSoC4/capsense_Sensing.c **** *
2396:Generated_Source\PSoC4/capsense_Sensing.c **** * \brief
2397:Generated_Source\PSoC4/capsense_Sensing.c **** *  Sets a source for Sense Clk for all CSD widgets.
2398:Generated_Source\PSoC4/capsense_Sensing.c **** *
2399:Generated_Source\PSoC4/capsense_Sensing.c **** * \details
2400:Generated_Source\PSoC4/capsense_Sensing.c **** *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk.
2401:Generated_Source\PSoC4/capsense_Sensing.c **** *  for all CSD widgets.
2402:Generated_Source\PSoC4/capsense_Sensing.c **** *
2403:Generated_Source\PSoC4/capsense_Sensing.c **** *******************************************************************************/
2404:Generated_Source\PSoC4/capsense_Sensing.c **** void capsense_SsInitializeSourceSenseClk(void)
2405:Generated_Source\PSoC4/capsense_Sensing.c **** {
2406:Generated_Source\PSoC4/capsense_Sensing.c ****     uint32 wdgtIndex;
2407:Generated_Source\PSoC4/capsense_Sensing.c ****     capsense_RAM_WD_BASE_STRUCT *ptrWdgt;
2408:Generated_Source\PSoC4/capsense_Sensing.c **** 
2409:Generated_Source\PSoC4/capsense_Sensing.c ****     for (wdgtIndex = 0u; wdgtIndex < capsense_TOTAL_WIDGETS; wdgtIndex++)
2410:Generated_Source\PSoC4/capsense_Sensing.c ****     {
2411:Generated_Source\PSoC4/capsense_Sensing.c ****         ptrWdgt = (capsense_RAM_WD_BASE_STRUCT *)capsense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
2412:Generated_Source\PSoC4/capsense_Sensing.c **** 
2413:Generated_Source\PSoC4/capsense_Sensing.c ****         switch (capsense_GET_SENSE_METHOD(&capsense_dsFlash.wdgtArray[wdgtIndex]))
2414:Generated_Source\PSoC4/capsense_Sensing.c ****         {
2415:Generated_Source\PSoC4/capsense_Sensing.c ****         #if (capsense_ENABLE == capsense_CSD_EN)
2416:Generated_Source\PSoC4/capsense_Sensing.c ****             case capsense_SENSE_METHOD_CSD_E:
2417:Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_SsSetWidgetSenseClkSrc(wdgtIndex, ptrWdgt);
2418:Generated_Source\PSoC4/capsense_Sensing.c ****                 break;
2419:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif /* (capsense_ENABLE == capsense_CSD_EN) */
2420:Generated_Source\PSoC4/capsense_Sensing.c ****         #if ((capsense_ENABLE == capsense_CSX_EN) && (capsense_ENABLE == capsense_CSDV2))
2421:Generated_Source\PSoC4/capsense_Sensing.c ****             case capsense_SENSE_METHOD_CSX_E:
2422:Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_SsSetWidgetTxClkSrc(wdgtIndex, ptrWdgt);
2423:Generated_Source\PSoC4/capsense_Sensing.c ****                 break;
2424:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif /* (((capsense_ENABLE == capsense_CSX_EN) || (capsense_ENABLE == capsense_ISX_EN)) &
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 44


2425:Generated_Source\PSoC4/capsense_Sensing.c ****         default:
2426:Generated_Source\PSoC4/capsense_Sensing.c ****             break;
2427:Generated_Source\PSoC4/capsense_Sensing.c ****         }
2428:Generated_Source\PSoC4/capsense_Sensing.c ****         #if (capsense_ENABLE == capsense_TST_WDGT_CRC_EN)
2429:Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_DsUpdateWidgetCrc(wdgtIndex);
2430:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif /* (capsense_ENABLE == capsense_TST_WDGT_CRC_EN) */
2431:Generated_Source\PSoC4/capsense_Sensing.c ****     }
2432:Generated_Source\PSoC4/capsense_Sensing.c **** }
2433:Generated_Source\PSoC4/capsense_Sensing.c **** #endif /* ((capsense_ENABLE == capsense_CSD_EN) || \
2434:Generated_Source\PSoC4/capsense_Sensing.c ****            (((capsense_ENABLE == capsense_CSX_EN) || \
2435:Generated_Source\PSoC4/capsense_Sensing.c ****            (capsense_ENABLE == capsense_ISX_EN)) && \
2436:Generated_Source\PSoC4/capsense_Sensing.c ****            (capsense_ENABLE == capsense_CSDV2))) */
2437:Generated_Source\PSoC4/capsense_Sensing.c **** 
2438:Generated_Source\PSoC4/capsense_Sensing.c **** 
2439:Generated_Source\PSoC4/capsense_Sensing.c **** #if (capsense_ENABLE == capsense_CSD_EN)
2440:Generated_Source\PSoC4/capsense_Sensing.c ****     /*******************************************************************************
2441:Generated_Source\PSoC4/capsense_Sensing.c ****     * Function Name: capsense_SsSetWidgetSenseClkSrc
2442:Generated_Source\PSoC4/capsense_Sensing.c ****     ****************************************************************************//**
2443:Generated_Source\PSoC4/capsense_Sensing.c ****     *
2444:Generated_Source\PSoC4/capsense_Sensing.c ****     * \brief
2445:Generated_Source\PSoC4/capsense_Sensing.c ****     *  Sets a source for the sense clock for a widget.
2446:Generated_Source\PSoC4/capsense_Sensing.c ****     *
2447:Generated_Source\PSoC4/capsense_Sensing.c ****     * \param wdgtIndex
2448:Generated_Source\PSoC4/capsense_Sensing.c ****     *  Specifies the ID of the widget.
2449:Generated_Source\PSoC4/capsense_Sensing.c ****     * \param ptrWdgt
2450:Generated_Source\PSoC4/capsense_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2451:Generated_Source\PSoC4/capsense_Sensing.c ****     *
2452:Generated_Source\PSoC4/capsense_Sensing.c ****     * \details
2453:Generated_Source\PSoC4/capsense_Sensing.c ****     *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk for a
2454:Generated_Source\PSoC4/capsense_Sensing.c ****     *  widget.
2455:Generated_Source\PSoC4/capsense_Sensing.c ****     *
2456:Generated_Source\PSoC4/capsense_Sensing.c ****     *******************************************************************************/
2457:Generated_Source\PSoC4/capsense_Sensing.c ****     static void capsense_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, capsense_RAM_WD_BASE_STRUCT * ptr
2458:Generated_Source\PSoC4/capsense_Sensing.c ****     {
2459:Generated_Source\PSoC4/capsense_Sensing.c ****         uint8 lfsrSize;
2460:Generated_Source\PSoC4/capsense_Sensing.c ****         uint8 lfsrScale;
2461:Generated_Source\PSoC4/capsense_Sensing.c **** 
2462:Generated_Source\PSoC4/capsense_Sensing.c ****         #if(capsense_CLK_SOURCE_PRSAUTO == capsense_CSD_SNS_CLK_SOURCE)
2463:Generated_Source\PSoC4/capsense_Sensing.c ****             #if(capsense_ENABLE == capsense_CSDV2)
2464:Generated_Source\PSoC4/capsense_Sensing.c ****                 uint32 conversionsNum;
2465:Generated_Source\PSoC4/capsense_Sensing.c ****             #endif /* (capsense_ENABLE == capsense_CSDV2) */
2466:Generated_Source\PSoC4/capsense_Sensing.c ****             uint32 snsClkDivider;
2467:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif /* (capsense_CLK_SOURCE_PRSAUTO == capsense_CSD_SNS_CLK_SOURCE) */
2468:Generated_Source\PSoC4/capsense_Sensing.c **** 
2469:Generated_Source\PSoC4/capsense_Sensing.c ****         #if(capsense_CLK_SOURCE_PRSAUTO == capsense_CSD_SNS_CLK_SOURCE)
2470:Generated_Source\PSoC4/capsense_Sensing.c ****             snsClkDivider = capsense_SsCSDGetColSnsClkDivider(wdgtIndex);
2471:Generated_Source\PSoC4/capsense_Sensing.c **** 
2472:Generated_Source\PSoC4/capsense_Sensing.c ****             #if(capsense_ENABLE == capsense_CSDV2)
2473:Generated_Source\PSoC4/capsense_Sensing.c ****                 conversionsNum = capsense_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)ptrWdg
2474:Generated_Source\PSoC4/capsense_Sensing.c ****                                                                                              capsen
2475:Generated_Source\PSoC4/capsense_Sensing.c ****                 lfsrSize = capsense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2476:Generated_Source\PSoC4/capsense_Sensing.c ****                 if (capsense_CLK_SOURCE_DIRECT == lfsrSize)
2477:Generated_Source\PSoC4/capsense_Sensing.c ****                 {
2478:Generated_Source\PSoC4/capsense_Sensing.c ****                     /*
2479:Generated_Source\PSoC4/capsense_Sensing.c ****                     * Multiplying of the snsClkDivider by 2 is needed to pass the
2480:Generated_Source\PSoC4/capsense_Sensing.c ****                     * average PRS frequency through the argument.
2481:Generated_Source\PSoC4/capsense_Sensing.c ****                     */
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 45


2482:Generated_Source\PSoC4/capsense_Sensing.c ****                     lfsrSize = capsense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->res
2483:Generated_Source\PSoC4/capsense_Sensing.c ****                 }
2484:Generated_Source\PSoC4/capsense_Sensing.c ****                 lfsrScale = capsense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2485:Generated_Source\PSoC4/capsense_Sensing.c ****             #else
2486:Generated_Source\PSoC4/capsense_Sensing.c ****                 /*
2487:Generated_Source\PSoC4/capsense_Sensing.c ****                 * Multiplying of the snsClkDivider by 2 is needed to pass the
2488:Generated_Source\PSoC4/capsense_Sensing.c ****                 * average PRS frequency through the argument.
2489:Generated_Source\PSoC4/capsense_Sensing.c ****                 */
2490:Generated_Source\PSoC4/capsense_Sensing.c ****                 lfsrSize = capsense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->resolut
2491:Generated_Source\PSoC4/capsense_Sensing.c ****                 lfsrScale = 0u;
2492:Generated_Source\PSoC4/capsense_Sensing.c ****             #endif /* (capsense_ENABLE == capsense_CSDV2) */
2493:Generated_Source\PSoC4/capsense_Sensing.c ****         #else
2494:Generated_Source\PSoC4/capsense_Sensing.c ****             lfsrSize = (uint8)capsense_DEFAULT_MODULATION_MODE;
2495:Generated_Source\PSoC4/capsense_Sensing.c ****             lfsrScale = 0u;
2496:Generated_Source\PSoC4/capsense_Sensing.c ****             (void)wdgtIndex; /* This parameter is unused in such configurations */
2497:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif /* (capsense_CLK_SOURCE_PRSAUTO == capsense_CSD_SNS_CLK_SOURCE) */
2498:Generated_Source\PSoC4/capsense_Sensing.c **** 
2499:Generated_Source\PSoC4/capsense_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << capsense_CLK_SOURCE_LFSR_SCALE_OFFS
2500:Generated_Source\PSoC4/capsense_Sensing.c **** 
2501:Generated_Source\PSoC4/capsense_Sensing.c ****         #if (capsense_CSD_MATRIX_WIDGET_EN || capsense_CSD_TOUCHPAD_WIDGET_EN)
2502:Generated_Source\PSoC4/capsense_Sensing.c ****             if ((capsense_WD_TOUCHPAD_E == (capsense_WD_TYPE_ENUM)capsense_dsFlash.wdgtArray[wdgtIn
2503:Generated_Source\PSoC4/capsense_Sensing.c ****                 (capsense_WD_MATRIX_BUTTON_E == (capsense_WD_TYPE_ENUM)capsense_dsFlash.wdgtArray[w
2504:Generated_Source\PSoC4/capsense_Sensing.c ****             {
2505:Generated_Source\PSoC4/capsense_Sensing.c ****                 #if(capsense_CLK_SOURCE_PRSAUTO == capsense_CSD_SNS_CLK_SOURCE)
2506:Generated_Source\PSoC4/capsense_Sensing.c ****                     snsClkDivider = capsense_SsCSDGetRowSnsClkDivider(wdgtIndex);
2507:Generated_Source\PSoC4/capsense_Sensing.c **** 
2508:Generated_Source\PSoC4/capsense_Sensing.c ****                     #if(capsense_ENABLE == capsense_CSDV2)
2509:Generated_Source\PSoC4/capsense_Sensing.c ****                         lfsrSize = capsense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2510:Generated_Source\PSoC4/capsense_Sensing.c ****                         if (capsense_CLK_SOURCE_DIRECT == lfsrSize)
2511:Generated_Source\PSoC4/capsense_Sensing.c ****                         {
2512:Generated_Source\PSoC4/capsense_Sensing.c ****                             /*
2513:Generated_Source\PSoC4/capsense_Sensing.c ****                             * Multiplying of the snsClkDivider by 2 is needed to pass the
2514:Generated_Source\PSoC4/capsense_Sensing.c ****                             * average PRS frequency through the argument.
2515:Generated_Source\PSoC4/capsense_Sensing.c ****                             */
2516:Generated_Source\PSoC4/capsense_Sensing.c ****                             lfsrSize = capsense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrW
2517:Generated_Source\PSoC4/capsense_Sensing.c ****                         }
2518:Generated_Source\PSoC4/capsense_Sensing.c ****                         lfsrScale = capsense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2519:Generated_Source\PSoC4/capsense_Sensing.c ****                     #else
2520:Generated_Source\PSoC4/capsense_Sensing.c ****                         /*
2521:Generated_Source\PSoC4/capsense_Sensing.c ****                         * Multiplying of the snsClkDivider by 2 is needed to pass the
2522:Generated_Source\PSoC4/capsense_Sensing.c ****                         * average PRS frequency through the argument.
2523:Generated_Source\PSoC4/capsense_Sensing.c ****                         */
2524:Generated_Source\PSoC4/capsense_Sensing.c ****                         lfsrSize = capsense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt-
2525:Generated_Source\PSoC4/capsense_Sensing.c ****                         lfsrScale = 0u;
2526:Generated_Source\PSoC4/capsense_Sensing.c ****                     #endif /* (capsense_ENABLE == capsense_CSDV2) */
2527:Generated_Source\PSoC4/capsense_Sensing.c ****                 #else
2528:Generated_Source\PSoC4/capsense_Sensing.c ****                     lfsrSize = (uint8)capsense_DEFAULT_MODULATION_MODE;
2529:Generated_Source\PSoC4/capsense_Sensing.c ****                     lfsrScale = 0u;
2530:Generated_Source\PSoC4/capsense_Sensing.c ****                 #endif /* (capsense_CLK_SOURCE_PRSAUTO == capsense_CSD_SNS_CLK_SOURCE) */
2531:Generated_Source\PSoC4/capsense_Sensing.c ****                 ptrWdgt->rowSnsClkSource = lfsrSize | (uint8)(lfsrScale << capsense_CLK_SOURCE_LFSR
2532:Generated_Source\PSoC4/capsense_Sensing.c ****             }
2533:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif /* (capsense_CSD_MATRIX_WIDGET_EN || capsense_CSD_TOUCHPAD_WIDGET_EN) */
2534:Generated_Source\PSoC4/capsense_Sensing.c ****     }
2535:Generated_Source\PSoC4/capsense_Sensing.c **** #endif /* (capsense_ENABLE == capsense_CSD_EN) */
2536:Generated_Source\PSoC4/capsense_Sensing.c **** 
2537:Generated_Source\PSoC4/capsense_Sensing.c **** 
2538:Generated_Source\PSoC4/capsense_Sensing.c **** #if ((capsense_ENABLE == capsense_CSX_EN) && (capsense_ENABLE == capsense_CSDV2))
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 46


2539:Generated_Source\PSoC4/capsense_Sensing.c ****     /*******************************************************************************
2540:Generated_Source\PSoC4/capsense_Sensing.c ****     * Function Name: capsense_SsSetWidgetTxClkSrc
2541:Generated_Source\PSoC4/capsense_Sensing.c ****     ****************************************************************************//**
2542:Generated_Source\PSoC4/capsense_Sensing.c ****     *
2543:Generated_Source\PSoC4/capsense_Sensing.c ****     * \brief
2544:Generated_Source\PSoC4/capsense_Sensing.c ****     *  Sets a source for the Tx clock for a widget.
2545:Generated_Source\PSoC4/capsense_Sensing.c ****     *
2546:Generated_Source\PSoC4/capsense_Sensing.c ****     * \param wdgtIndex
2547:Generated_Source\PSoC4/capsense_Sensing.c ****     *  Specifies the ID of the widget.
2548:Generated_Source\PSoC4/capsense_Sensing.c ****     * \param ptrWdgt
2549:Generated_Source\PSoC4/capsense_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2550:Generated_Source\PSoC4/capsense_Sensing.c ****     *
2551:Generated_Source\PSoC4/capsense_Sensing.c ****     * \details
2552:Generated_Source\PSoC4/capsense_Sensing.c ****     *  Updates snsClkSource with a source for Tx Clk for a widget.
2553:Generated_Source\PSoC4/capsense_Sensing.c ****     *
2554:Generated_Source\PSoC4/capsense_Sensing.c ****     *******************************************************************************/
2555:Generated_Source\PSoC4/capsense_Sensing.c ****     static void capsense_SsSetWidgetTxClkSrc(uint32 wdgtIndex, capsense_RAM_WD_BASE_STRUCT * ptrWdg
2556:Generated_Source\PSoC4/capsense_Sensing.c ****     {
2557:Generated_Source\PSoC4/capsense_Sensing.c ****         uint8 lfsrSize;
2558:Generated_Source\PSoC4/capsense_Sensing.c ****         uint8 lfsrScale;
2559:Generated_Source\PSoC4/capsense_Sensing.c **** 
2560:Generated_Source\PSoC4/capsense_Sensing.c ****         #if ((capsense_CLK_SOURCE_PRSAUTO == capsense_CSX_TX_CLK_SOURCE) && \
2561:Generated_Source\PSoC4/capsense_Sensing.c ****              (capsense_DISABLE == capsense_CSX_SKIP_OVSMPL_SPECIFIC_NODES))
2562:Generated_Source\PSoC4/capsense_Sensing.c ****             uint32 conversionsNum;
2563:Generated_Source\PSoC4/capsense_Sensing.c ****             uint32 snsClkDivider;
2564:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif
2565:Generated_Source\PSoC4/capsense_Sensing.c **** 
2566:Generated_Source\PSoC4/capsense_Sensing.c ****         #if(capsense_CLK_SOURCE_PRSAUTO == capsense_CSX_TX_CLK_SOURCE)
2567:Generated_Source\PSoC4/capsense_Sensing.c ****             #if (capsense_DISABLE == capsense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
2568:Generated_Source\PSoC4/capsense_Sensing.c ****                 conversionsNum = (uint32)ptrWdgt->resolution;
2569:Generated_Source\PSoC4/capsense_Sensing.c ****                 snsClkDivider = capsense_SsCSXGetTxClkDivider(wdgtIndex);
2570:Generated_Source\PSoC4/capsense_Sensing.c ****                 lfsrSize = capsense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2571:Generated_Source\PSoC4/capsense_Sensing.c ****                 lfsrScale = capsense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2572:Generated_Source\PSoC4/capsense_Sensing.c ****             #else
2573:Generated_Source\PSoC4/capsense_Sensing.c ****                 lfsrSize = (uint8)capsense_CLK_SOURCE_DIRECT;
2574:Generated_Source\PSoC4/capsense_Sensing.c ****                 lfsrScale = 0u;
2575:Generated_Source\PSoC4/capsense_Sensing.c ****                 /* Unused function argument */
2576:Generated_Source\PSoC4/capsense_Sensing.c ****                 (void)wdgtIndex;
2577:Generated_Source\PSoC4/capsense_Sensing.c ****             #endif /* (capsense_ENABLE == capsense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
2578:Generated_Source\PSoC4/capsense_Sensing.c ****         #else
2579:Generated_Source\PSoC4/capsense_Sensing.c ****             lfsrSize = (uint8)capsense_CSX_TX_CLK_SOURCE;
2580:Generated_Source\PSoC4/capsense_Sensing.c ****             lfsrScale = 0u;
2581:Generated_Source\PSoC4/capsense_Sensing.c ****             /* Unused function argument */
2582:Generated_Source\PSoC4/capsense_Sensing.c ****             (void)wdgtIndex;
2583:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif /* (capsense_CLK_SOURCE_PRSAUTO == capsense_CSX_TX_CLK_SOURCE) */
2584:Generated_Source\PSoC4/capsense_Sensing.c **** 
2585:Generated_Source\PSoC4/capsense_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << capsense_CLK_SOURCE_LFSR_SCALE_OFFS
2586:Generated_Source\PSoC4/capsense_Sensing.c ****     }
2587:Generated_Source\PSoC4/capsense_Sensing.c **** #endif /* ((capsense_ENABLE == capsense_CSX_EN) && (capsense_ENABLE == capsense_CSDV2)) */
2588:Generated_Source\PSoC4/capsense_Sensing.c **** 
2589:Generated_Source\PSoC4/capsense_Sensing.c **** 
2590:Generated_Source\PSoC4/capsense_Sensing.c **** #if(((capsense_ENABLE == capsense_CSX_EN) && \
2591:Generated_Source\PSoC4/capsense_Sensing.c ****      (capsense_DISABLE == capsense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2592:Generated_Source\PSoC4/capsense_Sensing.c ****      (capsense_ENABLE == capsense_CSDV2) && \
2593:Generated_Source\PSoC4/capsense_Sensing.c ****      (capsense_CLK_SOURCE_PRSAUTO == capsense_CSX_TX_CLK_SOURCE)) ||\
2594:Generated_Source\PSoC4/capsense_Sensing.c ****     ((capsense_ENABLE == capsense_CSD_EN) && \
2595:Generated_Source\PSoC4/capsense_Sensing.c ****      (capsense_ENABLE == capsense_CSDV2) && \
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 47


2596:Generated_Source\PSoC4/capsense_Sensing.c ****      (capsense_CLK_SOURCE_PRSAUTO == capsense_CSD_SNS_CLK_SOURCE)))
2597:Generated_Source\PSoC4/capsense_Sensing.c **** /*******************************************************************************
2598:Generated_Source\PSoC4/capsense_Sensing.c **** * Function Name: capsense_SsCalcLfsrSize
2599:Generated_Source\PSoC4/capsense_Sensing.c **** ****************************************************************************//**
2600:Generated_Source\PSoC4/capsense_Sensing.c **** *
2601:Generated_Source\PSoC4/capsense_Sensing.c **** * \brief
2602:Generated_Source\PSoC4/capsense_Sensing.c **** *  This is an internal function that finds a SSC polynomial size in the Auto mode.
2603:Generated_Source\PSoC4/capsense_Sensing.c **** *
2604:Generated_Source\PSoC4/capsense_Sensing.c **** * \details
2605:Generated_Source\PSoC4/capsense_Sensing.c **** *  The SSC polynomial size in the auto mode is found based on the following
2606:Generated_Source\PSoC4/capsense_Sensing.c **** *  requirements:
2607:Generated_Source\PSoC4/capsense_Sensing.c **** *  - an LFSR value should be selected so that the max clock dither is limited with +/-10%.
2608:Generated_Source\PSoC4/capsense_Sensing.c **** *  - at least one full spread spectrum polynomial should pass during the scan time.
2609:Generated_Source\PSoC4/capsense_Sensing.c **** *  - the value of the number of conversions should be an integer multiple of the
2610:Generated_Source\PSoC4/capsense_Sensing.c **** *    repeat period of the programmed LFSR_SIZE.
2611:Generated_Source\PSoC4/capsense_Sensing.c **** *
2612:Generated_Source\PSoC4/capsense_Sensing.c **** * \param
2613:Generated_Source\PSoC4/capsense_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2614:Generated_Source\PSoC4/capsense_Sensing.c **** *  resolution The widget resolution.
2615:Generated_Source\PSoC4/capsense_Sensing.c **** *
2616:Generated_Source\PSoC4/capsense_Sensing.c **** * \return lfsrSize The LFSRSIZE value for the SENSE_PERIOD register.
2617:Generated_Source\PSoC4/capsense_Sensing.c **** *
2618:Generated_Source\PSoC4/capsense_Sensing.c **** *******************************************************************************/
2619:Generated_Source\PSoC4/capsense_Sensing.c **** static uint8 capsense_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum)
2620:Generated_Source\PSoC4/capsense_Sensing.c **** {
  28              		.loc 1 2620 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 70B5     		push	{r4, r5, r6, lr}
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 4, -16
  36              		.cfi_offset 5, -12
  37              		.cfi_offset 6, -8
  38              		.cfi_offset 14, -4
  39 0002 0400     		movs	r4, r0
  40 0004 0D00     		movs	r5, r1
  41              	.LVL1:
2621:Generated_Source\PSoC4/capsense_Sensing.c ****     uint8 lfsrSize = 0u;
2622:Generated_Source\PSoC4/capsense_Sensing.c **** 
2623:Generated_Source\PSoC4/capsense_Sensing.c ****     /* Find LFSR value */
2624:Generated_Source\PSoC4/capsense_Sensing.c ****     if((capsense_SNSCLK_SSC4_THRESHOLD <= snsClkDivider) &&
  42              		.loc 1 2624 0
  43 0006 9F28     		cmp	r0, #159
  44 0008 08D9     		bls	.L2
  45              		.loc 1 2624 0 is_stmt 0 discriminator 1
  46 000a 1B4B     		ldr	r3, .L12
  47 000c 9942     		cmp	r1, r3
  48 000e 05D9     		bls	.L2
2625:Generated_Source\PSoC4/capsense_Sensing.c ****        (capsense_SNSCLK_SSC4_PERIOD <= conversionsNum) &&
2626:Generated_Source\PSoC4/capsense_Sensing.c ****        (0uL == (conversionsNum % capsense_SNSCLK_SSC4_PERIOD)))
  49              		.loc 1 2626 0 is_stmt 1
  50 0010 1A49     		ldr	r1, .L12+4
  51              	.LVL2:
  52 0012 2800     		movs	r0, r5
  53              	.LVL3:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 48


  54 0014 FFF7FEFF 		bl	__aeabi_uidivmod
  55              	.LVL4:
2625:Generated_Source\PSoC4/capsense_Sensing.c ****        (capsense_SNSCLK_SSC4_PERIOD <= conversionsNum) &&
  56              		.loc 1 2625 0
  57 0018 0029     		cmp	r1, #0
  58 001a 21D0     		beq	.L6
  59              	.L2:
2627:Generated_Source\PSoC4/capsense_Sensing.c ****     {
2628:Generated_Source\PSoC4/capsense_Sensing.c ****         lfsrSize = capsense_CLK_SOURCE_SSC4;
2629:Generated_Source\PSoC4/capsense_Sensing.c ****     }
2630:Generated_Source\PSoC4/capsense_Sensing.c ****     else if((capsense_SNSCLK_SSC3_THRESHOLD <= snsClkDivider) &&
  60              		.loc 1 2630 0
  61 001c 9F2C     		cmp	r4, #159
  62 001e 09D9     		bls	.L4
  63              		.loc 1 2630 0 is_stmt 0 discriminator 1
  64 0020 FF23     		movs	r3, #255
  65 0022 5B00     		lsls	r3, r3, #1
  66 0024 9D42     		cmp	r5, r3
  67 0026 05D9     		bls	.L4
2631:Generated_Source\PSoC4/capsense_Sensing.c ****             (capsense_SNSCLK_SSC3_PERIOD <= conversionsNum) &&
2632:Generated_Source\PSoC4/capsense_Sensing.c ****             (0uL == (conversionsNum % capsense_SNSCLK_SSC3_PERIOD)))
  68              		.loc 1 2632 0 is_stmt 1
  69 0028 1549     		ldr	r1, .L12+8
  70 002a 2800     		movs	r0, r5
  71 002c FFF7FEFF 		bl	__aeabi_uidivmod
  72              	.LVL5:
2631:Generated_Source\PSoC4/capsense_Sensing.c ****             (capsense_SNSCLK_SSC3_PERIOD <= conversionsNum) &&
  73              		.loc 1 2631 0
  74 0030 0029     		cmp	r1, #0
  75 0032 17D0     		beq	.L7
  76              	.L4:
2633:Generated_Source\PSoC4/capsense_Sensing.c ****     {
2634:Generated_Source\PSoC4/capsense_Sensing.c ****         lfsrSize = capsense_CLK_SOURCE_SSC3;
2635:Generated_Source\PSoC4/capsense_Sensing.c ****     }
2636:Generated_Source\PSoC4/capsense_Sensing.c ****     else if((capsense_SNSCLK_SSC2_THRESHOLD <= snsClkDivider) &&
  77              		.loc 1 2636 0
  78 0034 9F2C     		cmp	r4, #159
  79 0036 07D9     		bls	.L5
  80              		.loc 1 2636 0 is_stmt 0 discriminator 1
  81 0038 7E2D     		cmp	r5, #126
  82 003a 05D9     		bls	.L5
2637:Generated_Source\PSoC4/capsense_Sensing.c ****             (capsense_SNSCLK_SSC2_PERIOD <= conversionsNum) &&
2638:Generated_Source\PSoC4/capsense_Sensing.c ****             (0uL == (conversionsNum % capsense_SNSCLK_SSC2_PERIOD)))
  83              		.loc 1 2638 0 is_stmt 1
  84 003c 7F21     		movs	r1, #127
  85 003e 2800     		movs	r0, r5
  86 0040 FFF7FEFF 		bl	__aeabi_uidivmod
  87              	.LVL6:
2637:Generated_Source\PSoC4/capsense_Sensing.c ****             (capsense_SNSCLK_SSC2_PERIOD <= conversionsNum) &&
  88              		.loc 1 2637 0
  89 0044 0029     		cmp	r1, #0
  90 0046 0FD0     		beq	.L8
  91              	.L5:
2639:Generated_Source\PSoC4/capsense_Sensing.c ****     {
2640:Generated_Source\PSoC4/capsense_Sensing.c ****         lfsrSize = capsense_CLK_SOURCE_SSC2;
2641:Generated_Source\PSoC4/capsense_Sensing.c ****     }
2642:Generated_Source\PSoC4/capsense_Sensing.c ****     else if((capsense_SNSCLK_SSC1_THRESHOLD <= snsClkDivider) &&
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 49


  92              		.loc 1 2642 0
  93 0048 9F2C     		cmp	r4, #159
  94 004a 0FD9     		bls	.L9
  95              		.loc 1 2642 0 is_stmt 0 discriminator 1
  96 004c 3E2D     		cmp	r5, #62
  97 004e 0FD9     		bls	.L10
2643:Generated_Source\PSoC4/capsense_Sensing.c ****             (capsense_SNSCLK_SSC1_PERIOD <= conversionsNum) &&
2644:Generated_Source\PSoC4/capsense_Sensing.c ****             (0uL == (conversionsNum % capsense_SNSCLK_SSC1_PERIOD)))
  98              		.loc 1 2644 0 is_stmt 1
  99 0050 3F21     		movs	r1, #63
 100 0052 2800     		movs	r0, r5
 101 0054 FFF7FEFF 		bl	__aeabi_uidivmod
 102              	.LVL7:
2643:Generated_Source\PSoC4/capsense_Sensing.c ****             (capsense_SNSCLK_SSC1_PERIOD <= conversionsNum) &&
 103              		.loc 1 2643 0
 104 0058 0029     		cmp	r1, #0
 105 005a 0BD0     		beq	.L11
2645:Generated_Source\PSoC4/capsense_Sensing.c ****     {
2646:Generated_Source\PSoC4/capsense_Sensing.c ****         lfsrSize = capsense_CLK_SOURCE_SSC1;
2647:Generated_Source\PSoC4/capsense_Sensing.c ****     }
2648:Generated_Source\PSoC4/capsense_Sensing.c ****     else
2649:Generated_Source\PSoC4/capsense_Sensing.c ****     {
2650:Generated_Source\PSoC4/capsense_Sensing.c ****         lfsrSize = (uint8)capsense_CLK_SOURCE_DIRECT;
 106              		.loc 1 2650 0
 107 005c 0020     		movs	r0, #0
 108 005e 0AE0     		b	.L3
 109              	.L6:
2628:Generated_Source\PSoC4/capsense_Sensing.c ****     }
 110              		.loc 1 2628 0
 111 0060 0420     		movs	r0, #4
 112 0062 08E0     		b	.L3
 113              	.L7:
2634:Generated_Source\PSoC4/capsense_Sensing.c ****     }
 114              		.loc 1 2634 0
 115 0064 0320     		movs	r0, #3
 116 0066 06E0     		b	.L3
 117              	.L8:
2640:Generated_Source\PSoC4/capsense_Sensing.c ****     }
 118              		.loc 1 2640 0
 119 0068 0220     		movs	r0, #2
 120 006a 04E0     		b	.L3
 121              	.L9:
 122              		.loc 1 2650 0
 123 006c 0020     		movs	r0, #0
 124 006e 02E0     		b	.L3
 125              	.L10:
 126 0070 0020     		movs	r0, #0
 127 0072 00E0     		b	.L3
 128              	.L11:
2646:Generated_Source\PSoC4/capsense_Sensing.c ****     }
 129              		.loc 1 2646 0
 130 0074 0120     		movs	r0, #1
 131              	.L3:
 132              	.LVL8:
2651:Generated_Source\PSoC4/capsense_Sensing.c ****     }
2652:Generated_Source\PSoC4/capsense_Sensing.c **** 
2653:Generated_Source\PSoC4/capsense_Sensing.c ****     return (lfsrSize);
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 50


2654:Generated_Source\PSoC4/capsense_Sensing.c **** }
 133              		.loc 1 2654 0
 134              		@ sp needed
 135              	.LVL9:
 136              	.LVL10:
 137 0076 70BD     		pop	{r4, r5, r6, pc}
 138              	.L13:
 139              		.align	2
 140              	.L12:
 141 0078 FE030000 		.word	1022
 142 007c FF030000 		.word	1023
 143 0080 FF010000 		.word	511
 144              		.cfi_endproc
 145              	.LFE23:
 146              		.size	capsense_SsCalcLfsrSize, .-capsense_SsCalcLfsrSize
 147              		.global	__aeabi_uidiv
 148              		.section	.text.capsense_SsCalcLfsrScale,"ax",%progbits
 149              		.align	2
 150              		.code	16
 151              		.thumb_func
 152              		.type	capsense_SsCalcLfsrScale, %function
 153              	capsense_SsCalcLfsrScale:
 154              	.LFB24:
2655:Generated_Source\PSoC4/capsense_Sensing.c **** 
2656:Generated_Source\PSoC4/capsense_Sensing.c **** 
2657:Generated_Source\PSoC4/capsense_Sensing.c **** /*******************************************************************************
2658:Generated_Source\PSoC4/capsense_Sensing.c **** * Function Name: capsense_SsCalcLfsrScale
2659:Generated_Source\PSoC4/capsense_Sensing.c **** ****************************************************************************//**
2660:Generated_Source\PSoC4/capsense_Sensing.c **** *
2661:Generated_Source\PSoC4/capsense_Sensing.c **** * \brief
2662:Generated_Source\PSoC4/capsense_Sensing.c **** *  This is an internal function that calculates the LFSR scale value.
2663:Generated_Source\PSoC4/capsense_Sensing.c **** *
2664:Generated_Source\PSoC4/capsense_Sensing.c **** * \details
2665:Generated_Source\PSoC4/capsense_Sensing.c **** *  The LFSR scale value is used to increase the clock dither if the desired dither
2666:Generated_Source\PSoC4/capsense_Sensing.c **** *  is wider than can be achieved with the current Sense Clock Divider and current LFSR
2667:Generated_Source\PSoC4/capsense_Sensing.c **** *  period.
2668:Generated_Source\PSoC4/capsense_Sensing.c **** *
2669:Generated_Source\PSoC4/capsense_Sensing.c **** *  This returns the LFSR scale value needed to keep the clock dither in
2670:Generated_Source\PSoC4/capsense_Sensing.c **** *  range +/-10%.
2671:Generated_Source\PSoC4/capsense_Sensing.c **** *
2672:Generated_Source\PSoC4/capsense_Sensing.c **** * \param
2673:Generated_Source\PSoC4/capsense_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2674:Generated_Source\PSoC4/capsense_Sensing.c **** *  lfsrSize The period of the LFSR sequence.
2675:Generated_Source\PSoC4/capsense_Sensing.c **** *          For devices with capsense_CSDV2_REF9P6UA_EN = TRUE, the
2676:Generated_Source\PSoC4/capsense_Sensing.c **** *          mode parameters can take the following values:
2677:Generated_Source\PSoC4/capsense_Sensing.c **** *          capsense_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2678:Generated_Source\PSoC4/capsense_Sensing.c **** *          capsense_CLK_SOURCE_SSC1   The length of LFSR sequence is 63 cycles.
2679:Generated_Source\PSoC4/capsense_Sensing.c **** *          capsense_CLK_SOURCE_SSC2   The length of LFSR sequence is 127 cycles.
2680:Generated_Source\PSoC4/capsense_Sensing.c **** *          capsense_CLK_SOURCE_SSC3   The length of LFSR sequence is 255 cycles.
2681:Generated_Source\PSoC4/capsense_Sensing.c **** *          capsense_CLK_SOURCE_SSC4   The length of LFSR sequence is 511 cycles.
2682:Generated_Source\PSoC4/capsense_Sensing.c **** *
2683:Generated_Source\PSoC4/capsense_Sensing.c **** *          For devices with capsense_CSDV2_REF9P6UA_EN = TRUE, the
2684:Generated_Source\PSoC4/capsense_Sensing.c **** *          mode parameters can take the following values:
2685:Generated_Source\PSoC4/capsense_Sensing.c **** *          capsense_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2686:Generated_Source\PSoC4/capsense_Sensing.c **** *          capsense_CLK_SOURCE_SSC1   The length of LFSR sequence is 3 cycles.
2687:Generated_Source\PSoC4/capsense_Sensing.c **** *          capsense_CLK_SOURCE_SSC2   The length of LFSR sequence is 7 cycles.
2688:Generated_Source\PSoC4/capsense_Sensing.c **** *          capsense_CLK_SOURCE_SSC3   The length of LFSR sequence is 15 cycles.
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 51


2689:Generated_Source\PSoC4/capsense_Sensing.c **** *          capsense_CLK_SOURCE_SSC4   The length of LFSR sequence is 31 cycles.
2690:Generated_Source\PSoC4/capsense_Sensing.c **** *
2691:Generated_Source\PSoC4/capsense_Sensing.c **** * \return
2692:Generated_Source\PSoC4/capsense_Sensing.c **** *  Returns the LFSR scale value needed to keep the clock dither in range +/-10%.
2693:Generated_Source\PSoC4/capsense_Sensing.c **** *
2694:Generated_Source\PSoC4/capsense_Sensing.c **** *******************************************************************************/
2695:Generated_Source\PSoC4/capsense_Sensing.c **** static uint8 capsense_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize)
2696:Generated_Source\PSoC4/capsense_Sensing.c **** {
 155              		.loc 1 2696 0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 0
 158              		@ frame_needed = 0, uses_anonymous_args = 0
 159              	.LVL11:
 160 0000 10B5     		push	{r4, lr}
 161              		.cfi_def_cfa_offset 8
 162              		.cfi_offset 4, -8
 163              		.cfi_offset 14, -4
2697:Generated_Source\PSoC4/capsense_Sensing.c ****     uint32 lfsrScale;
2698:Generated_Source\PSoC4/capsense_Sensing.c ****     uint32 lfsrRange;
2699:Generated_Source\PSoC4/capsense_Sensing.c ****     uint32 lfsrDither;
2700:Generated_Source\PSoC4/capsense_Sensing.c **** 
2701:Generated_Source\PSoC4/capsense_Sensing.c ****     /* Initialize the lfsrSize variable with the LFSR Range for given Lfsr Size. */
2702:Generated_Source\PSoC4/capsense_Sensing.c ****     switch(lfsrSize)
 164              		.loc 1 2702 0
 165 0002 4B1E     		subs	r3, r1, #1
 166 0004 DBB2     		uxtb	r3, r3
 167 0006 032B     		cmp	r3, #3
 168 0008 01D8     		bhi	.L20
2703:Generated_Source\PSoC4/capsense_Sensing.c ****     {
2704:Generated_Source\PSoC4/capsense_Sensing.c ****         case capsense_CLK_SOURCE_SSC1:
2705:Generated_Source\PSoC4/capsense_Sensing.c ****         {
2706:Generated_Source\PSoC4/capsense_Sensing.c ****             lfsrRange = capsense_SNSCLK_SSC1_RANGE;
 169              		.loc 1 2706 0
 170 000a 1023     		movs	r3, #16
 171 000c 00E0     		b	.L15
 172              	.L20:
2707:Generated_Source\PSoC4/capsense_Sensing.c ****             break;
2708:Generated_Source\PSoC4/capsense_Sensing.c ****         }
2709:Generated_Source\PSoC4/capsense_Sensing.c ****         case capsense_CLK_SOURCE_SSC2:
2710:Generated_Source\PSoC4/capsense_Sensing.c ****         {
2711:Generated_Source\PSoC4/capsense_Sensing.c ****             lfsrRange = capsense_SNSCLK_SSC2_RANGE;
2712:Generated_Source\PSoC4/capsense_Sensing.c ****             break;
2713:Generated_Source\PSoC4/capsense_Sensing.c ****         }
2714:Generated_Source\PSoC4/capsense_Sensing.c ****         case capsense_CLK_SOURCE_SSC3:
2715:Generated_Source\PSoC4/capsense_Sensing.c ****         {
2716:Generated_Source\PSoC4/capsense_Sensing.c ****             lfsrRange = capsense_SNSCLK_SSC3_RANGE;
2717:Generated_Source\PSoC4/capsense_Sensing.c ****             break;
2718:Generated_Source\PSoC4/capsense_Sensing.c ****         }
2719:Generated_Source\PSoC4/capsense_Sensing.c ****         case capsense_CLK_SOURCE_SSC4:
2720:Generated_Source\PSoC4/capsense_Sensing.c ****         {
2721:Generated_Source\PSoC4/capsense_Sensing.c ****             lfsrRange = capsense_SNSCLK_SSC4_RANGE;
2722:Generated_Source\PSoC4/capsense_Sensing.c ****             break;
2723:Generated_Source\PSoC4/capsense_Sensing.c ****         }
2724:Generated_Source\PSoC4/capsense_Sensing.c ****         default:
2725:Generated_Source\PSoC4/capsense_Sensing.c ****         {
2726:Generated_Source\PSoC4/capsense_Sensing.c ****             lfsrRange = 0u;
 173              		.loc 1 2726 0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 52


 174 000e 0023     		movs	r3, #0
 175              	.L15:
 176              	.LVL12:
2727:Generated_Source\PSoC4/capsense_Sensing.c ****             break;
2728:Generated_Source\PSoC4/capsense_Sensing.c ****         }
2729:Generated_Source\PSoC4/capsense_Sensing.c ****     }
2730:Generated_Source\PSoC4/capsense_Sensing.c **** 
2731:Generated_Source\PSoC4/capsense_Sensing.c ****     /* Calculate the LFSR Scale value that is required to keep the Clock dither
2732:Generated_Source\PSoC4/capsense_Sensing.c ****      * as close as possible to the +/-10% limit of the used frequency.
2733:Generated_Source\PSoC4/capsense_Sensing.c ****      */
2734:Generated_Source\PSoC4/capsense_Sensing.c ****     if((lfsrSize != capsense_CLK_SOURCE_DIRECT) && (0u != lfsrRange))
 177              		.loc 1 2734 0
 178 0010 0029     		cmp	r1, #0
 179 0012 11D0     		beq	.L21
 180              		.loc 1 2734 0 is_stmt 0 discriminator 1
 181 0014 002B     		cmp	r3, #0
 182 0016 11D0     		beq	.L22
2735:Generated_Source\PSoC4/capsense_Sensing.c ****     {
2736:Generated_Source\PSoC4/capsense_Sensing.c ****         /* Calculate the LFSR Dither in percents. */
2737:Generated_Source\PSoC4/capsense_Sensing.c ****         lfsrDither  = ((lfsrRange * 100uL) / snsClkDivider);
 183              		.loc 1 2737 0 is_stmt 1
 184 0018 6422     		movs	r2, #100
 185 001a 5343     		muls	r3, r2
 186              	.LVL13:
 187 001c 0100     		movs	r1, r0
 188              	.LVL14:
 189 001e 1800     		movs	r0, r3
 190              	.LVL15:
 191 0020 FFF7FEFF 		bl	__aeabi_uidiv
 192              	.LVL16:
2738:Generated_Source\PSoC4/capsense_Sensing.c ****         lfsrScale = 0uL;
 193              		.loc 1 2738 0
 194 0024 0023     		movs	r3, #0
2739:Generated_Source\PSoC4/capsense_Sensing.c **** 
2740:Generated_Source\PSoC4/capsense_Sensing.c ****         while(lfsrDither < capsense_LFSR_DITHER_PERCENTAGE)
 195              		.loc 1 2740 0
 196 0026 01E0     		b	.L18
 197              	.LVL17:
 198              	.L19:
2741:Generated_Source\PSoC4/capsense_Sensing.c ****         {
2742:Generated_Source\PSoC4/capsense_Sensing.c ****             lfsrScale++;
 199              		.loc 1 2742 0
 200 0028 0133     		adds	r3, r3, #1
 201              	.LVL18:
2743:Generated_Source\PSoC4/capsense_Sensing.c ****             lfsrDither <<=1uL;
 202              		.loc 1 2743 0
 203 002a 4000     		lsls	r0, r0, #1
 204              	.LVL19:
 205              	.L18:
2740:Generated_Source\PSoC4/capsense_Sensing.c ****         {
 206              		.loc 1 2740 0
 207 002c 0928     		cmp	r0, #9
 208 002e FBD9     		bls	.L19
2744:Generated_Source\PSoC4/capsense_Sensing.c ****         }
2745:Generated_Source\PSoC4/capsense_Sensing.c **** 
2746:Generated_Source\PSoC4/capsense_Sensing.c ****         if(lfsrDither > capsense_LFSR_DITHER_PERCENTAGE)
 209              		.loc 1 2746 0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 53


 210 0030 0A28     		cmp	r0, #10
 211 0032 04D9     		bls	.L17
2747:Generated_Source\PSoC4/capsense_Sensing.c ****         {
2748:Generated_Source\PSoC4/capsense_Sensing.c ****             lfsrScale--;
 212              		.loc 1 2748 0
 213 0034 013B     		subs	r3, r3, #1
 214              	.LVL20:
 215 0036 02E0     		b	.L17
 216              	.LVL21:
 217              	.L21:
2749:Generated_Source\PSoC4/capsense_Sensing.c ****         }
2750:Generated_Source\PSoC4/capsense_Sensing.c ****     }
2751:Generated_Source\PSoC4/capsense_Sensing.c ****     else
2752:Generated_Source\PSoC4/capsense_Sensing.c ****     {
2753:Generated_Source\PSoC4/capsense_Sensing.c ****         lfsrScale = 0uL;
 218              		.loc 1 2753 0
 219 0038 0023     		movs	r3, #0
 220              	.LVL22:
 221 003a 00E0     		b	.L17
 222              	.LVL23:
 223              	.L22:
 224 003c 0023     		movs	r3, #0
 225              	.LVL24:
 226              	.L17:
2754:Generated_Source\PSoC4/capsense_Sensing.c ****     }
2755:Generated_Source\PSoC4/capsense_Sensing.c **** 
2756:Generated_Source\PSoC4/capsense_Sensing.c ****     return ((uint8)lfsrScale);
 227              		.loc 1 2756 0
 228 003e D8B2     		uxtb	r0, r3
2757:Generated_Source\PSoC4/capsense_Sensing.c **** }
 229              		.loc 1 2757 0
 230              		@ sp needed
 231 0040 10BD     		pop	{r4, pc}
 232              		.cfi_endproc
 233              	.LFE24:
 234              		.size	capsense_SsCalcLfsrScale, .-capsense_SsCalcLfsrScale
 235 0042 C046     		.section	.text.capsense_SsSetWidgetTxClkSrc,"ax",%progbits
 236              		.align	2
 237              		.code	16
 238              		.thumb_func
 239              		.type	capsense_SsSetWidgetTxClkSrc, %function
 240              	capsense_SsSetWidgetTxClkSrc:
 241              	.LFB22:
2556:Generated_Source\PSoC4/capsense_Sensing.c ****         uint8 lfsrSize;
 242              		.loc 1 2556 0
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 0
 245              		@ frame_needed = 0, uses_anonymous_args = 0
 246              	.LVL25:
 247 0000 70B5     		push	{r4, r5, r6, lr}
 248              		.cfi_def_cfa_offset 16
 249              		.cfi_offset 4, -16
 250              		.cfi_offset 5, -12
 251              		.cfi_offset 6, -8
 252              		.cfi_offset 14, -4
 253 0002 0D00     		movs	r5, r1
2568:Generated_Source\PSoC4/capsense_Sensing.c ****                 snsClkDivider = capsense_SsCSXGetTxClkDivider(wdgtIndex);
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 54


 254              		.loc 1 2568 0
 255 0004 0C88     		ldrh	r4, [r1]
 256              	.LVL26:
2569:Generated_Source\PSoC4/capsense_Sensing.c ****                 lfsrSize = capsense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
 257              		.loc 1 2569 0
 258 0006 FFF7FEFF 		bl	capsense_SsCSXGetTxClkDivider
 259              	.LVL27:
 260 000a 0600     		movs	r6, r0
 261              	.LVL28:
2570:Generated_Source\PSoC4/capsense_Sensing.c ****                 lfsrScale = capsense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
 262              		.loc 1 2570 0
 263 000c 2100     		movs	r1, r4
 264 000e FFF7FEFF 		bl	capsense_SsCalcLfsrSize
 265              	.LVL29:
 266 0012 0400     		movs	r4, r0
 267              	.LVL30:
2571:Generated_Source\PSoC4/capsense_Sensing.c ****             #else
 268              		.loc 1 2571 0
 269 0014 0100     		movs	r1, r0
 270 0016 3000     		movs	r0, r6
 271              	.LVL31:
 272 0018 FFF7FEFF 		bl	capsense_SsCalcLfsrScale
 273              	.LVL32:
2585:Generated_Source\PSoC4/capsense_Sensing.c ****     }
 274              		.loc 1 2585 0
 275 001c 0001     		lsls	r0, r0, #4
 276              	.LVL33:
 277 001e C0B2     		uxtb	r0, r0
 278 0020 2043     		orrs	r0, r4
 279 0022 A873     		strb	r0, [r5, #14]
2586:Generated_Source\PSoC4/capsense_Sensing.c **** #endif /* ((capsense_ENABLE == capsense_CSX_EN) && (capsense_ENABLE == capsense_CSDV2)) */
 280              		.loc 1 2586 0
 281              		@ sp needed
 282              	.LVL34:
 283              	.LVL35:
 284 0024 70BD     		pop	{r4, r5, r6, pc}
 285              		.cfi_endproc
 286              	.LFE22:
 287              		.size	capsense_SsSetWidgetTxClkSrc, .-capsense_SsSetWidgetTxClkSrc
 288 0026 C046     		.section	.text.capsense_IsBusy,"ax",%progbits
 289              		.align	2
 290              		.global	capsense_IsBusy
 291              		.code	16
 292              		.thumb_func
 293              		.type	capsense_IsBusy, %function
 294              	capsense_IsBusy:
 295              	.LFB1:
 237:Generated_Source\PSoC4/capsense_Sensing.c ****     return (capsense_dsRam.status & capsense_SW_STS_BUSY);
 296              		.loc 1 237 0
 297              		.cfi_startproc
 298              		@ args = 0, pretend = 0, frame = 0
 299              		@ frame_needed = 0, uses_anonymous_args = 0
 300              		@ link register save eliminated.
 238:Generated_Source\PSoC4/capsense_Sensing.c **** }
 301              		.loc 1 238 0
 302 0000 024B     		ldr	r3, .L25
 303 0002 DB68     		ldr	r3, [r3, #12]
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 55


 304 0004 8020     		movs	r0, #128
 305 0006 1840     		ands	r0, r3
 239:Generated_Source\PSoC4/capsense_Sensing.c **** 
 306              		.loc 1 239 0
 307              		@ sp needed
 308 0008 7047     		bx	lr
 309              	.L26:
 310 000a C046     		.align	2
 311              	.L25:
 312 000c 00000000 		.word	capsense_dsRam
 313              		.cfi_endproc
 314              	.LFE1:
 315              		.size	capsense_IsBusy, .-capsense_IsBusy
 316              		.section	.text.capsense_SetupWidget,"ax",%progbits
 317              		.align	2
 318              		.global	capsense_SetupWidget
 319              		.code	16
 320              		.thumb_func
 321              		.type	capsense_SetupWidget, %function
 322              	capsense_SetupWidget:
 323              	.LFB2:
 283:Generated_Source\PSoC4/capsense_Sensing.c ****     cystatus widgetStatus;
 324              		.loc 1 283 0
 325              		.cfi_startproc
 326              		@ args = 0, pretend = 0, frame = 0
 327              		@ frame_needed = 0, uses_anonymous_args = 0
 328              	.LVL36:
 329 0000 10B5     		push	{r4, lr}
 330              		.cfi_def_cfa_offset 8
 331              		.cfi_offset 4, -8
 332              		.cfi_offset 14, -4
 286:Generated_Source\PSoC4/capsense_Sensing.c ****     {
 333              		.loc 1 286 0
 334 0002 164B     		ldr	r3, .L37
 335 0004 DB68     		ldr	r3, [r3, #12]
 336 0006 DB03     		lsls	r3, r3, #15
 337 0008 0DD4     		bmi	.L32
 296:Generated_Source\PSoC4/capsense_Sensing.c ****         (0uL != capsense_GET_WIDGET_EN_STATUS(widgetId)))
 338              		.loc 1 296 0
 339 000a 0328     		cmp	r0, #3
 340 000c 0DD8     		bhi	.L33
 297:Generated_Source\PSoC4/capsense_Sensing.c **** 
 341              		.loc 1 297 0 discriminator 1
 342 000e 4309     		lsrs	r3, r0, #5
 343 0010 0433     		adds	r3, r3, #4
 344 0012 9B00     		lsls	r3, r3, #2
 345 0014 114A     		ldr	r2, .L37
 346 0016 9B58     		ldr	r3, [r3, r2]
 347 0018 1F22     		movs	r2, #31
 348 001a 0240     		ands	r2, r0
 349 001c D340     		lsrs	r3, r3, r2
 296:Generated_Source\PSoC4/capsense_Sensing.c ****         (0uL != capsense_GET_WIDGET_EN_STATUS(widgetId)))
 350              		.loc 1 296 0 discriminator 1
 351 001e DB07     		lsls	r3, r3, #31
 352 0020 05D4     		bmi	.L34
 304:Generated_Source\PSoC4/capsense_Sensing.c ****     }
 353              		.loc 1 304 0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 56


 354 0022 0124     		movs	r4, #1
 355 0024 04E0     		b	.L28
 356              	.L32:
 289:Generated_Source\PSoC4/capsense_Sensing.c ****     }
 357              		.loc 1 289 0
 358 0026 1124     		movs	r4, #17
 359 0028 02E0     		b	.L28
 360              	.L33:
 304:Generated_Source\PSoC4/capsense_Sensing.c ****     }
 361              		.loc 1 304 0
 362 002a 0124     		movs	r4, #1
 363 002c 00E0     		b	.L28
 364              	.L34:
 300:Generated_Source\PSoC4/capsense_Sensing.c ****     }
 365              		.loc 1 300 0
 366 002e 0024     		movs	r4, #0
 367              	.L28:
 368              	.LVL37:
 311:Generated_Source\PSoC4/capsense_Sensing.c ****     {
 369              		.loc 1 311 0
 370 0030 002C     		cmp	r4, #0
 371 0032 11D1     		bne	.L29
 313:Generated_Source\PSoC4/capsense_Sensing.c ****         {
 372              		.loc 1 313 0
 373 0034 8200     		lsls	r2, r0, #2
 374 0036 1218     		adds	r2, r2, r0
 375 0038 D300     		lsls	r3, r2, #3
 376 003a 094A     		ldr	r2, .L37+4
 377 003c D318     		adds	r3, r2, r3
 378 003e DB7E     		ldrb	r3, [r3, #27]
 379 0040 012B     		cmp	r3, #1
 380 0042 04D0     		beq	.L30
 381 0044 022B     		cmp	r3, #2
 382 0046 05D1     		bne	.L36
 318:Generated_Source\PSoC4/capsense_Sensing.c ****                 break;
 383              		.loc 1 318 0
 384 0048 FFF7FEFF 		bl	capsense_CSXSetupWidget
 385              	.LVL38:
 319:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif
 386              		.loc 1 319 0
 387 004c 04E0     		b	.L29
 388              	.LVL39:
 389              	.L30:
 324:Generated_Source\PSoC4/capsense_Sensing.c ****                 break;
 390              		.loc 1 324 0
 391 004e FFF7FEFF 		bl	capsense_CSDSetupWidget
 392              	.LVL40:
 325:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif
 393              		.loc 1 325 0
 394 0052 01E0     		b	.L29
 395              	.LVL41:
 396              	.L36:
 335:Generated_Source\PSoC4/capsense_Sensing.c ****             break;
 397              		.loc 1 335 0
 398 0054 0124     		movs	r4, #1
 399              	.LVL42:
 400 0056 6442     		rsbs	r4, r4, #0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 57


 401              	.LVL43:
 402              	.L29:
 340:Generated_Source\PSoC4/capsense_Sensing.c **** 
 403              		.loc 1 340 0
 404 0058 2000     		movs	r0, r4
 405              		@ sp needed
 406              	.LVL44:
 407 005a 10BD     		pop	{r4, pc}
 408              	.L38:
 409              		.align	2
 410              	.L37:
 411 005c 00000000 		.word	capsense_dsRam
 412 0060 00000000 		.word	capsense_dsFlash
 413              		.cfi_endproc
 414              	.LFE2:
 415              		.size	capsense_SetupWidget, .-capsense_SetupWidget
 416              		.section	.text.capsense_Scan,"ax",%progbits
 417              		.align	2
 418              		.global	capsense_Scan
 419              		.code	16
 420              		.thumb_func
 421              		.type	capsense_Scan, %function
 422              	capsense_Scan:
 423              	.LFB3:
 366:Generated_Source\PSoC4/capsense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 424              		.loc 1 366 0
 425              		.cfi_startproc
 426              		@ args = 0, pretend = 0, frame = 0
 427              		@ frame_needed = 0, uses_anonymous_args = 0
 428 0000 10B5     		push	{r4, lr}
 429              		.cfi_def_cfa_offset 8
 430              		.cfi_offset 4, -8
 431              		.cfi_offset 14, -4
 432              	.LVL45:
 369:Generated_Source\PSoC4/capsense_Sensing.c ****     {
 433              		.loc 1 369 0
 434 0002 0B4B     		ldr	r3, .L46
 435 0004 DB68     		ldr	r3, [r3, #12]
 436 0006 DB03     		lsls	r3, r3, #15
 437 0008 0DD4     		bmi	.L43
 376:Generated_Source\PSoC4/capsense_Sensing.c ****         {
 438              		.loc 1 376 0
 439 000a 0A4B     		ldr	r3, .L46+4
 440 000c 1B78     		ldrb	r3, [r3]
 441 000e 012B     		cmp	r3, #1
 442 0010 05D0     		beq	.L41
 443 0012 022B     		cmp	r3, #2
 444 0014 09D1     		bne	.L45
 380:Generated_Source\PSoC4/capsense_Sensing.c ****                 break;
 445              		.loc 1 380 0
 446 0016 FFF7FEFF 		bl	capsense_CSXScan
 447              	.LVL46:
 367:Generated_Source\PSoC4/capsense_Sensing.c **** 
 448              		.loc 1 367 0
 449 001a 0020     		movs	r0, #0
 381:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif
 450              		.loc 1 381 0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 58


 451 001c 07E0     		b	.L40
 452              	.L41:
 385:Generated_Source\PSoC4/capsense_Sensing.c ****                 break;
 453              		.loc 1 385 0
 454 001e FFF7FEFF 		bl	capsense_CSDScan
 455              	.LVL47:
 367:Generated_Source\PSoC4/capsense_Sensing.c **** 
 456              		.loc 1 367 0
 457 0022 0020     		movs	r0, #0
 386:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif
 458              		.loc 1 386 0
 459 0024 03E0     		b	.L40
 460              	.L43:
 372:Generated_Source\PSoC4/capsense_Sensing.c ****     }
 461              		.loc 1 372 0
 462 0026 1120     		movs	r0, #17
 463 0028 01E0     		b	.L40
 464              	.L45:
 394:Generated_Source\PSoC4/capsense_Sensing.c ****             break;
 465              		.loc 1 394 0
 466 002a 0120     		movs	r0, #1
 467 002c 4042     		rsbs	r0, r0, #0
 468              	.L40:
 469              	.LVL48:
 399:Generated_Source\PSoC4/capsense_Sensing.c **** 
 470              		.loc 1 399 0
 471              		@ sp needed
 472 002e 10BD     		pop	{r4, pc}
 473              	.L47:
 474              		.align	2
 475              	.L46:
 476 0030 00000000 		.word	capsense_dsRam
 477 0034 00000000 		.word	.LANCHOR0
 478              		.cfi_endproc
 479              	.LFE3:
 480              		.size	capsense_Scan, .-capsense_Scan
 481              		.section	.text.capsense_ScanAllWidgets,"ax",%progbits
 482              		.align	2
 483              		.global	capsense_ScanAllWidgets
 484              		.code	16
 485              		.thumb_func
 486              		.type	capsense_ScanAllWidgets, %function
 487              	capsense_ScanAllWidgets:
 488              	.LFB4:
 428:Generated_Source\PSoC4/capsense_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 489              		.loc 1 428 0
 490              		.cfi_startproc
 491              		@ args = 0, pretend = 0, frame = 0
 492              		@ frame_needed = 0, uses_anonymous_args = 0
 493 0000 10B5     		push	{r4, lr}
 494              		.cfi_def_cfa_offset 8
 495              		.cfi_offset 4, -8
 496              		.cfi_offset 14, -4
 497              	.LVL49:
 433:Generated_Source\PSoC4/capsense_Sensing.c ****     {
 498              		.loc 1 433 0
 499 0002 0F4B     		ldr	r3, .L56
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 59


 500 0004 DB68     		ldr	r3, [r3, #12]
 501 0006 1B06     		lsls	r3, r3, #24
 502 0008 18D4     		bmi	.L55
 503 000a 0024     		movs	r4, #0
 504 000c 0120     		movs	r0, #1
 505 000e 4042     		rsbs	r0, r0, #0
 506 0010 11E0     		b	.L50
 507              	.LVL50:
 508              	.L54:
 449:Generated_Source\PSoC4/capsense_Sensing.c **** 
 509              		.loc 1 449 0
 510 0012 2000     		movs	r0, r4
 511              	.LVL51:
 512 0014 FFF7FEFF 		bl	capsense_SetupWidget
 513              	.LVL52:
 451:Generated_Source\PSoC4/capsense_Sensing.c ****             {
 514              		.loc 1 451 0
 515 0018 0028     		cmp	r0, #0
 516 001a 0BD1     		bne	.L51
 455:Generated_Source\PSoC4/capsense_Sensing.c ****                     {
 517              		.loc 1 455 0
 518 001c 022C     		cmp	r4, #2
 519 001e 03D8     		bhi	.L52
 458:Generated_Source\PSoC4/capsense_Sensing.c ****                     }
 520              		.loc 1 458 0
 521 0020 0122     		movs	r2, #1
 522 0022 084B     		ldr	r3, .L56+4
 523 0024 5A70     		strb	r2, [r3, #1]
 524 0026 02E0     		b	.L53
 525              	.L52:
 463:Generated_Source\PSoC4/capsense_Sensing.c ****                     }
 526              		.loc 1 463 0
 527 0028 0022     		movs	r2, #0
 528 002a 064B     		ldr	r3, .L56+4
 529 002c 5A70     		strb	r2, [r3, #1]
 530              	.L53:
 473:Generated_Source\PSoC4/capsense_Sensing.c **** 
 531              		.loc 1 473 0
 532 002e FFF7FEFF 		bl	capsense_Scan
 533              	.LVL53:
 475:Generated_Source\PSoC4/capsense_Sensing.c ****             }
 534              		.loc 1 475 0
 535 0032 04E0     		b	.L49
 536              	.L51:
 446:Generated_Source\PSoC4/capsense_Sensing.c ****         {
 537              		.loc 1 446 0
 538 0034 0134     		adds	r4, r4, #1
 539              	.LVL54:
 540              	.L50:
 444:Generated_Source\PSoC4/capsense_Sensing.c ****              wdgtIndex < capsense_TOTAL_WIDGETS;
 541              		.loc 1 444 0 discriminator 1
 542 0036 032C     		cmp	r4, #3
 543 0038 EBD9     		bls	.L54
 544 003a 00E0     		b	.L49
 545              	.LVL55:
 546              	.L55:
 436:Generated_Source\PSoC4/capsense_Sensing.c ****     }
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 60


 547              		.loc 1 436 0
 548 003c 1120     		movs	r0, #17
 549              	.LVL56:
 550              	.L49:
 481:Generated_Source\PSoC4/capsense_Sensing.c **** 
 551              		.loc 1 481 0
 552              		@ sp needed
 553 003e 10BD     		pop	{r4, pc}
 554              	.L57:
 555              		.align	2
 556              	.L56:
 557 0040 00000000 		.word	capsense_dsRam
 558 0044 00000000 		.word	.LANCHOR0
 559              		.cfi_endproc
 560              	.LFE4:
 561              		.size	capsense_ScanAllWidgets, .-capsense_ScanAllWidgets
 562              		.section	.text.capsense_SetupWidgetExt,"ax",%progbits
 563              		.align	2
 564              		.global	capsense_SetupWidgetExt
 565              		.code	16
 566              		.thumb_func
 567              		.type	capsense_SetupWidgetExt, %function
 568              	capsense_SetupWidgetExt:
 569              	.LFB5:
 536:Generated_Source\PSoC4/capsense_Sensing.c ****     cystatus widgetStatus;
 570              		.loc 1 536 0
 571              		.cfi_startproc
 572              		@ args = 0, pretend = 0, frame = 0
 573              		@ frame_needed = 0, uses_anonymous_args = 0
 574              	.LVL57:
 575 0000 10B5     		push	{r4, lr}
 576              		.cfi_def_cfa_offset 8
 577              		.cfi_offset 4, -8
 578              		.cfi_offset 14, -4
 539:Generated_Source\PSoC4/capsense_Sensing.c ****     {
 579              		.loc 1 539 0
 580 0002 1B4B     		ldr	r3, .L69
 581 0004 DB68     		ldr	r3, [r3, #12]
 582 0006 DB03     		lsls	r3, r3, #15
 583 0008 15D4     		bmi	.L63
 549:Generated_Source\PSoC4/capsense_Sensing.c ****         (0uL != capsense_GET_WIDGET_EN_STATUS(widgetId)) &&
 584              		.loc 1 549 0
 585 000a 0328     		cmp	r0, #3
 586 000c 15D8     		bhi	.L64
 550:Generated_Source\PSoC4/capsense_Sensing.c ****         (sensorId < capsense_GET_SENSOR_COUNT(widgetId)))
 587              		.loc 1 550 0 discriminator 1
 588 000e 4309     		lsrs	r3, r0, #5
 589 0010 0433     		adds	r3, r3, #4
 590 0012 9B00     		lsls	r3, r3, #2
 591 0014 164A     		ldr	r2, .L69
 592 0016 9B58     		ldr	r3, [r3, r2]
 593 0018 1F22     		movs	r2, #31
 594 001a 0240     		ands	r2, r0
 595 001c D340     		lsrs	r3, r3, r2
 549:Generated_Source\PSoC4/capsense_Sensing.c ****         (0uL != capsense_GET_WIDGET_EN_STATUS(widgetId)) &&
 596              		.loc 1 549 0 discriminator 1
 597 001e DB07     		lsls	r3, r3, #31
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 61


 598 0020 0DD5     		bpl	.L65
 551:Generated_Source\PSoC4/capsense_Sensing.c **** 
 599              		.loc 1 551 0
 600 0022 8200     		lsls	r2, r0, #2
 601 0024 1218     		adds	r2, r2, r0
 602 0026 D300     		lsls	r3, r2, #3
 603 0028 124A     		ldr	r2, .L69+4
 604 002a D318     		adds	r3, r2, r3
 605 002c 1B8B     		ldrh	r3, [r3, #24]
 550:Generated_Source\PSoC4/capsense_Sensing.c ****         (sensorId < capsense_GET_SENSOR_COUNT(widgetId)))
 606              		.loc 1 550 0
 607 002e 8B42     		cmp	r3, r1
 608 0030 07D8     		bhi	.L66
 558:Generated_Source\PSoC4/capsense_Sensing.c ****     }
 609              		.loc 1 558 0
 610 0032 0124     		movs	r4, #1
 611 0034 06E0     		b	.L59
 612              	.L63:
 542:Generated_Source\PSoC4/capsense_Sensing.c ****     }
 613              		.loc 1 542 0
 614 0036 1124     		movs	r4, #17
 615 0038 04E0     		b	.L59
 616              	.L64:
 558:Generated_Source\PSoC4/capsense_Sensing.c ****     }
 617              		.loc 1 558 0
 618 003a 0124     		movs	r4, #1
 619 003c 02E0     		b	.L59
 620              	.L65:
 621 003e 0124     		movs	r4, #1
 622 0040 00E0     		b	.L59
 623              	.L66:
 554:Generated_Source\PSoC4/capsense_Sensing.c ****     }
 624              		.loc 1 554 0
 625 0042 0024     		movs	r4, #0
 626              	.L59:
 627              	.LVL58:
 565:Generated_Source\PSoC4/capsense_Sensing.c ****     {
 628              		.loc 1 565 0
 629 0044 002C     		cmp	r4, #0
 630 0046 11D1     		bne	.L60
 567:Generated_Source\PSoC4/capsense_Sensing.c ****         {
 631              		.loc 1 567 0
 632 0048 8200     		lsls	r2, r0, #2
 633 004a 1218     		adds	r2, r2, r0
 634 004c D300     		lsls	r3, r2, #3
 635 004e 094A     		ldr	r2, .L69+4
 636 0050 D318     		adds	r3, r2, r3
 637 0052 DB7E     		ldrb	r3, [r3, #27]
 638 0054 012B     		cmp	r3, #1
 639 0056 04D0     		beq	.L61
 640 0058 022B     		cmp	r3, #2
 641 005a 05D1     		bne	.L68
 572:Generated_Source\PSoC4/capsense_Sensing.c ****                 break;
 642              		.loc 1 572 0
 643 005c FFF7FEFF 		bl	capsense_CSXSetupWidgetExt
 644              	.LVL59:
 573:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 62


 645              		.loc 1 573 0
 646 0060 04E0     		b	.L60
 647              	.LVL60:
 648              	.L61:
 578:Generated_Source\PSoC4/capsense_Sensing.c ****                 break;
 649              		.loc 1 578 0
 650 0062 FFF7FEFF 		bl	capsense_CSDSetupWidgetExt
 651              	.LVL61:
 579:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif
 652              		.loc 1 579 0
 653 0066 01E0     		b	.L60
 654              	.LVL62:
 655              	.L68:
 589:Generated_Source\PSoC4/capsense_Sensing.c ****             break;
 656              		.loc 1 589 0
 657 0068 0124     		movs	r4, #1
 658              	.LVL63:
 659 006a 6442     		rsbs	r4, r4, #0
 660              	.LVL64:
 661              	.L60:
 594:Generated_Source\PSoC4/capsense_Sensing.c **** 
 662              		.loc 1 594 0
 663 006c 2000     		movs	r0, r4
 664              		@ sp needed
 665              	.LVL65:
 666 006e 10BD     		pop	{r4, pc}
 667              	.L70:
 668              		.align	2
 669              	.L69:
 670 0070 00000000 		.word	capsense_dsRam
 671 0074 00000000 		.word	capsense_dsFlash
 672              		.cfi_endproc
 673              	.LFE5:
 674              		.size	capsense_SetupWidgetExt, .-capsense_SetupWidgetExt
 675              		.section	.text.capsense_ScanExt,"ax",%progbits
 676              		.align	2
 677              		.global	capsense_ScanExt
 678              		.code	16
 679              		.thumb_func
 680              		.type	capsense_ScanExt, %function
 681              	capsense_ScanExt:
 682              	.LFB6:
 642:Generated_Source\PSoC4/capsense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 683              		.loc 1 642 0
 684              		.cfi_startproc
 685              		@ args = 0, pretend = 0, frame = 0
 686              		@ frame_needed = 0, uses_anonymous_args = 0
 687 0000 10B5     		push	{r4, lr}
 688              		.cfi_def_cfa_offset 8
 689              		.cfi_offset 4, -8
 690              		.cfi_offset 14, -4
 691              	.LVL66:
 645:Generated_Source\PSoC4/capsense_Sensing.c ****     {
 692              		.loc 1 645 0
 693 0002 0B4B     		ldr	r3, .L78
 694 0004 DB68     		ldr	r3, [r3, #12]
 695 0006 DB03     		lsls	r3, r3, #15
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 63


 696 0008 0DD4     		bmi	.L75
 652:Generated_Source\PSoC4/capsense_Sensing.c ****         {
 697              		.loc 1 652 0
 698 000a 0A4B     		ldr	r3, .L78+4
 699 000c 1B78     		ldrb	r3, [r3]
 700 000e 012B     		cmp	r3, #1
 701 0010 05D0     		beq	.L73
 702 0012 022B     		cmp	r3, #2
 703 0014 09D1     		bne	.L77
 656:Generated_Source\PSoC4/capsense_Sensing.c ****                 break;
 704              		.loc 1 656 0
 705 0016 FFF7FEFF 		bl	capsense_CSXScanExt
 706              	.LVL67:
 643:Generated_Source\PSoC4/capsense_Sensing.c **** 
 707              		.loc 1 643 0
 708 001a 0020     		movs	r0, #0
 657:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif
 709              		.loc 1 657 0
 710 001c 07E0     		b	.L72
 711              	.L73:
 661:Generated_Source\PSoC4/capsense_Sensing.c ****                 break;
 712              		.loc 1 661 0
 713 001e FFF7FEFF 		bl	capsense_CSDScanExt
 714              	.LVL68:
 643:Generated_Source\PSoC4/capsense_Sensing.c **** 
 715              		.loc 1 643 0
 716 0022 0020     		movs	r0, #0
 662:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif
 717              		.loc 1 662 0
 718 0024 03E0     		b	.L72
 719              	.L75:
 648:Generated_Source\PSoC4/capsense_Sensing.c ****     }
 720              		.loc 1 648 0
 721 0026 1120     		movs	r0, #17
 722 0028 01E0     		b	.L72
 723              	.L77:
 670:Generated_Source\PSoC4/capsense_Sensing.c ****             break;
 724              		.loc 1 670 0
 725 002a 0120     		movs	r0, #1
 726 002c 4042     		rsbs	r0, r0, #0
 727              	.L72:
 728              	.LVL69:
 675:Generated_Source\PSoC4/capsense_Sensing.c **** 
 729              		.loc 1 675 0
 730              		@ sp needed
 731 002e 10BD     		pop	{r4, pc}
 732              	.L79:
 733              		.align	2
 734              	.L78:
 735 0030 00000000 		.word	capsense_dsRam
 736 0034 00000000 		.word	.LANCHOR0
 737              		.cfi_endproc
 738              	.LFE6:
 739              		.size	capsense_ScanExt, .-capsense_ScanExt
 740              		.section	.text.capsense_SetPinState,"ax",%progbits
 741              		.align	2
 742              		.global	capsense_SetPinState
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 64


 743              		.code	16
 744              		.thumb_func
 745              		.type	capsense_SetPinState, %function
 746              	capsense_SetPinState:
 747              	.LFB8:
 841:Generated_Source\PSoC4/capsense_Sensing.c ****     uint32 eltdNum;
 748              		.loc 1 841 0
 749              		.cfi_startproc
 750              		@ args = 0, pretend = 0, frame = 0
 751              		@ frame_needed = 0, uses_anonymous_args = 0
 752              	.LVL70:
 753 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 754              		.cfi_def_cfa_offset 24
 755              		.cfi_offset 3, -24
 756              		.cfi_offset 4, -20
 757              		.cfi_offset 5, -16
 758              		.cfi_offset 6, -12
 759              		.cfi_offset 7, -8
 760              		.cfi_offset 14, -4
 761 0002 1600     		movs	r6, r2
 866:Generated_Source\PSoC4/capsense_Sensing.c ****         eltdNum = 1u;
 762              		.loc 1 866 0
 763 0004 8300     		lsls	r3, r0, #2
 764 0006 1818     		adds	r0, r3, r0
 765              	.LVL71:
 766 0008 C300     		lsls	r3, r0, #3
 767 000a 364A     		ldr	r2, .L90
 768              	.LVL72:
 769 000c 9C58     		ldr	r4, [r3, r2]
 770 000e CB00     		lsls	r3, r1, #3
 771 0010 591A     		subs	r1, r3, r1
 772              	.LVL73:
 773 0012 8B00     		lsls	r3, r1, #2
 774 0014 E418     		adds	r4, r4, r3
 775              	.LVL74:
 871:Generated_Source\PSoC4/capsense_Sensing.c ****     {
 776              		.loc 1 871 0
 777 0016 0025     		movs	r5, #0
 778 0018 61E0     		b	.L81
 779              	.LVL75:
 780              	.L89:
 874:Generated_Source\PSoC4/capsense_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(capsense_HSIOM_SEL_MASK << 
 781              		.loc 1 874 0
 782 001a FFF7FEFF 		bl	CyEnterCriticalSection
 783              	.LVL76:
 875:Generated_Source\PSoC4/capsense_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(capsense_GPIO_PC_MASK << ioPtr->s
 784              		.loc 1 875 0
 785 001e 2168     		ldr	r1, [r4]
 786 0020 0B68     		ldr	r3, [r1]
 787 0022 277E     		ldrb	r7, [r4, #24]
 788 0024 0F22     		movs	r2, #15
 789 0026 BA40     		lsls	r2, r2, r7
 790 0028 9343     		bics	r3, r2
 791 002a 0B60     		str	r3, [r1]
 876:Generated_Source\PSoC4/capsense_Sensing.c ****         CyExitCriticalSection(interruptState);
 792              		.loc 1 876 0
 793 002c 6168     		ldr	r1, [r4, #4]
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 65


 794 002e 0B68     		ldr	r3, [r1]
 795 0030 A77E     		ldrb	r7, [r4, #26]
 796 0032 0722     		movs	r2, #7
 797 0034 BA40     		lsls	r2, r2, r7
 798 0036 9343     		bics	r3, r2
 799 0038 0B60     		str	r3, [r1]
 877:Generated_Source\PSoC4/capsense_Sensing.c **** 
 800              		.loc 1 877 0
 801 003a FFF7FEFF 		bl	CyExitCriticalSection
 802              	.LVL77:
 879:Generated_Source\PSoC4/capsense_Sensing.c ****         {
 803              		.loc 1 879 0
 804 003e 052E     		cmp	r6, #5
 805 0040 4BD8     		bhi	.L82
 806 0042 B300     		lsls	r3, r6, #2
 807 0044 284A     		ldr	r2, .L90+4
 808 0046 D358     		ldr	r3, [r2, r3]
 809 0048 9F46     		mov	pc, r3
 810              		.section	.rodata
 811              		.align	2
 812              	.L84:
 813 0000 4A000000 		.word	.L83
 814 0004 70000000 		.word	.L85
 815 0008 DA000000 		.word	.L82
 816 000c 88000000 		.word	.L86
 817 0010 90000000 		.word	.L87
 818 0014 B6000000 		.word	.L88
 819              		.section	.text.capsense_SetPinState
 820              	.L83:
 883:Generated_Source\PSoC4/capsense_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (capsense_SNS_GROUND_CONNECT <<
 821              		.loc 1 883 0
 822 004a FFF7FEFF 		bl	CyEnterCriticalSection
 823              	.LVL78:
 884:Generated_Source\PSoC4/capsense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
 824              		.loc 1 884 0
 825 004e 6268     		ldr	r2, [r4, #4]
 826 0050 1168     		ldr	r1, [r2]
 827 0052 A77E     		ldrb	r7, [r4, #26]
 828 0054 0623     		movs	r3, #6
 829 0056 BB40     		lsls	r3, r3, r7
 830 0058 0B43     		orrs	r3, r1
 831 005a 1360     		str	r3, [r2]
 885:Generated_Source\PSoC4/capsense_Sensing.c ****             CyExitCriticalSection(interruptState);
 832              		.loc 1 885 0
 833 005c A168     		ldr	r1, [r4, #8]
 834 005e 0B68     		ldr	r3, [r1]
 835 0060 677E     		ldrb	r7, [r4, #25]
 836 0062 0122     		movs	r2, #1
 837 0064 BA40     		lsls	r2, r2, r7
 838 0066 9343     		bics	r3, r2
 839 0068 0B60     		str	r3, [r1]
 886:Generated_Source\PSoC4/capsense_Sensing.c ****             break;
 840              		.loc 1 886 0
 841 006a FFF7FEFF 		bl	CyExitCriticalSection
 842              	.LVL79:
 887:Generated_Source\PSoC4/capsense_Sensing.c **** 
 843              		.loc 1 887 0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 66


 844 006e 34E0     		b	.L82
 845              	.L85:
 890:Generated_Source\PSoC4/capsense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 846              		.loc 1 890 0
 847 0070 FFF7FEFF 		bl	CyEnterCriticalSection
 848              	.LVL80:
 891:Generated_Source\PSoC4/capsense_Sensing.c ****             CyExitCriticalSection(interruptState);
 849              		.loc 1 891 0
 850 0074 A168     		ldr	r1, [r4, #8]
 851 0076 0B68     		ldr	r3, [r1]
 852 0078 677E     		ldrb	r7, [r4, #25]
 853 007a 0122     		movs	r2, #1
 854 007c BA40     		lsls	r2, r2, r7
 855 007e 9343     		bics	r3, r2
 856 0080 0B60     		str	r3, [r1]
 892:Generated_Source\PSoC4/capsense_Sensing.c ****             break;
 857              		.loc 1 892 0
 858 0082 FFF7FEFF 		bl	CyExitCriticalSection
 859              	.LVL81:
 893:Generated_Source\PSoC4/capsense_Sensing.c **** 
 860              		.loc 1 893 0
 861 0086 28E0     		b	.L82
 862              	.L86:
 898:Generated_Source\PSoC4/capsense_Sensing.c ****                 break;
 863              		.loc 1 898 0
 864 0088 2000     		movs	r0, r4
 865 008a FFF7FEFF 		bl	capsense_CSDConnectSns
 866              	.LVL82:
 899:Generated_Source\PSoC4/capsense_Sensing.c **** 
 867              		.loc 1 899 0
 868 008e 24E0     		b	.L82
 869              	.L87:
 914:Generated_Source\PSoC4/capsense_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (capsense_HSIOM_SEL_C
 870              		.loc 1 914 0
 871 0090 FFF7FEFF 		bl	CyEnterCriticalSection
 872              	.LVL83:
 915:Generated_Source\PSoC4/capsense_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (capsense_GPIO_STRGDRV << i
 873              		.loc 1 915 0
 874 0094 2268     		ldr	r2, [r4]
 875 0096 1168     		ldr	r1, [r2]
 876 0098 277E     		ldrb	r7, [r4, #24]
 877 009a 0423     		movs	r3, #4
 878 009c BB40     		lsls	r3, r3, r7
 879 009e 0B43     		orrs	r3, r1
 880 00a0 1360     		str	r3, [r2]
 916:Generated_Source\PSoC4/capsense_Sensing.c ****                 CyExitCriticalSection(interruptState);
 881              		.loc 1 916 0
 882 00a2 6268     		ldr	r2, [r4, #4]
 883 00a4 1168     		ldr	r1, [r2]
 884 00a6 A77E     		ldrb	r7, [r4, #26]
 885 00a8 0623     		movs	r3, #6
 886 00aa BB40     		lsls	r3, r3, r7
 887 00ac 0B43     		orrs	r3, r1
 888 00ae 1360     		str	r3, [r2]
 917:Generated_Source\PSoC4/capsense_Sensing.c ****                 break;
 889              		.loc 1 917 0
 890 00b0 FFF7FEFF 		bl	CyExitCriticalSection
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 67


 891              	.LVL84:
 918:Generated_Source\PSoC4/capsense_Sensing.c **** 
 892              		.loc 1 918 0
 893 00b4 11E0     		b	.L82
 894              	.L88:
 921:Generated_Source\PSoC4/capsense_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (capsense_HSIOM_SEL_A
 895              		.loc 1 921 0
 896 00b6 FFF7FEFF 		bl	CyEnterCriticalSection
 897              	.LVL85:
 922:Generated_Source\PSoC4/capsense_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(capsense_GPIO_PC_MASK << 
 898              		.loc 1 922 0
 899 00ba 2268     		ldr	r2, [r4]
 900 00bc 1168     		ldr	r1, [r2]
 901 00be 277E     		ldrb	r7, [r4, #24]
 902 00c0 0623     		movs	r3, #6
 903 00c2 BB40     		lsls	r3, r3, r7
 904 00c4 0B43     		orrs	r3, r1
 905 00c6 1360     		str	r3, [r2]
 923:Generated_Source\PSoC4/capsense_Sensing.c ****                 CyExitCriticalSection(interruptState);
 906              		.loc 1 923 0
 907 00c8 6168     		ldr	r1, [r4, #4]
 908 00ca 0B68     		ldr	r3, [r1]
 909 00cc A77E     		ldrb	r7, [r4, #26]
 910 00ce 0722     		movs	r2, #7
 911 00d0 BA40     		lsls	r2, r2, r7
 912 00d2 9343     		bics	r3, r2
 913 00d4 0B60     		str	r3, [r1]
 924:Generated_Source\PSoC4/capsense_Sensing.c ****                 break;
 914              		.loc 1 924 0
 915 00d6 FFF7FEFF 		bl	CyExitCriticalSection
 916              	.LVL86:
 917              	.L82:
 933:Generated_Source\PSoC4/capsense_Sensing.c ****     }
 918              		.loc 1 933 0 discriminator 2
 919 00da 1C34     		adds	r4, r4, #28
 920              	.LVL87:
 871:Generated_Source\PSoC4/capsense_Sensing.c ****     {
 921              		.loc 1 871 0 discriminator 2
 922 00dc 0135     		adds	r5, r5, #1
 923              	.LVL88:
 924              	.L81:
 871:Generated_Source\PSoC4/capsense_Sensing.c ****     {
 925              		.loc 1 871 0 is_stmt 0 discriminator 1
 926 00de 002D     		cmp	r5, #0
 927 00e0 9BD0     		beq	.L89
 935:Generated_Source\PSoC4/capsense_Sensing.c **** 
 928              		.loc 1 935 0 is_stmt 1
 929              		@ sp needed
 930              	.LVL89:
 931              	.LVL90:
 932              	.LVL91:
 933 00e2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 934              	.L91:
 935              		.align	2
 936              	.L90:
 937 00e4 00000000 		.word	capsense_dsFlash
 938 00e8 00000000 		.word	.L84
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 68


 939              		.cfi_endproc
 940              	.LFE8:
 941              		.size	capsense_SetPinState, .-capsense_SetPinState
 942              		.section	.text.capsense_SsSetAllIOsState,"ax",%progbits
 943              		.align	2
 944              		.global	capsense_SsSetAllIOsState
 945              		.code	16
 946              		.thumb_func
 947              		.type	capsense_SsSetAllIOsState, %function
 948              	capsense_SsSetAllIOsState:
 949              	.LFB12:
1167:Generated_Source\PSoC4/capsense_Sensing.c ****     uint8  interruptState;
 950              		.loc 1 1167 0
 951              		.cfi_startproc
 952              		@ args = 0, pretend = 0, frame = 0
 953              		@ frame_needed = 0, uses_anonymous_args = 0
 954              	.LVL92:
 955 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 956              		.cfi_def_cfa_offset 24
 957              		.cfi_offset 3, -24
 958              		.cfi_offset 4, -20
 959              		.cfi_offset 5, -16
 960              		.cfi_offset 6, -12
 961              		.cfi_offset 7, -8
 962              		.cfi_offset 14, -4
 963 0002 4F46     		mov	r7, r9
 964 0004 4646     		mov	r6, r8
 965 0006 C0B4     		push	{r6, r7}
 966              		.cfi_def_cfa_offset 32
 967              		.cfi_offset 8, -32
 968              		.cfi_offset 9, -28
1180:Generated_Source\PSoC4/capsense_Sensing.c ****     {
 969              		.loc 1 1180 0
 970 0008 0128     		cmp	r0, #1
 971 000a 0BD0     		beq	.L98
 972 000c 0228     		cmp	r0, #2
 973 000e 04D0     		beq	.L95
1184:Generated_Source\PSoC4/capsense_Sensing.c ****             break;
 974              		.loc 1 1184 0
 975 0010 0023     		movs	r3, #0
 976 0012 9946     		mov	r9, r3
1183:Generated_Source\PSoC4/capsense_Sensing.c ****             newPinHsiomVal = capsense_HSIOM_SEL_GPIO;
 977              		.loc 1 1183 0
 978 0014 0633     		adds	r3, r3, #6
 979 0016 9846     		mov	r8, r3
 980 0018 07E0     		b	.L94
 981              	.L95:
 982              	.LVL93:
1192:Generated_Source\PSoC4/capsense_Sensing.c ****             break;
 983              		.loc 1 1192 0
 984 001a 0523     		movs	r3, #5
 985 001c 9946     		mov	r9, r3
1191:Generated_Source\PSoC4/capsense_Sensing.c ****             newPinHsiomVal = capsense_HSIOM_SEL_CSD_SHIELD;
 986              		.loc 1 1191 0
 987 001e 0023     		movs	r3, #0
 988 0020 9846     		mov	r8, r3
1193:Generated_Source\PSoC4/capsense_Sensing.c ****         default:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 69


 989              		.loc 1 1193 0
 990 0022 02E0     		b	.L94
 991              	.LVL94:
 992              	.L98:
1188:Generated_Source\PSoC4/capsense_Sensing.c ****             break;
 993              		.loc 1 1188 0
 994 0024 0023     		movs	r3, #0
 995 0026 9946     		mov	r9, r3
1187:Generated_Source\PSoC4/capsense_Sensing.c ****             newPinHsiomVal = capsense_HSIOM_SEL_GPIO;
 996              		.loc 1 1187 0
 997 0028 9846     		mov	r8, r3
 998              	.L94:
 999              	.LVL95:
1201:Generated_Source\PSoC4/capsense_Sensing.c ****     for (loopIndex = 0u; loopIndex < capsense_TOTAL_ELECTRODES; loopIndex++)
 1000              		.loc 1 1201 0
 1001 002a 144C     		ldr	r4, .L99
1202:Generated_Source\PSoC4/capsense_Sensing.c ****     {
 1002              		.loc 1 1202 0
 1003 002c 0025     		movs	r5, #0
 1004 002e 1FE0     		b	.L96
 1005              	.LVL96:
 1006              	.L97:
1204:Generated_Source\PSoC4/capsense_Sensing.c **** 
 1007              		.loc 1 1204 0 discriminator 3
 1008 0030 FFF7FEFF 		bl	CyEnterCriticalSection
 1009              	.LVL97:
1206:Generated_Source\PSoC4/capsense_Sensing.c ****         tmpHsiomRegValue &= ~(snsIoPtr->hsiomMask);
 1010              		.loc 1 1206 0 discriminator 3
 1011 0034 2268     		ldr	r2, [r4]
 1012 0036 1368     		ldr	r3, [r2]
 1013              	.LVL98:
1207:Generated_Source\PSoC4/capsense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->hsiomPtr, tmpHsiomRegValue);
 1014              		.loc 1 1207 0 discriminator 3
 1015 0038 2169     		ldr	r1, [r4, #16]
 1016 003a 8B43     		bics	r3, r1
 1017              	.LVL99:
1208:Generated_Source\PSoC4/capsense_Sensing.c **** 
 1018              		.loc 1 1208 0 discriminator 3
 1019 003c 1360     		str	r3, [r2]
1210:Generated_Source\PSoC4/capsense_Sensing.c ****         tmpPcDrRegValue &= ~(capsense_GPIO_PC_MASK << snsIoPtr->shift);
 1020              		.loc 1 1210 0 discriminator 3
 1021 003e 6668     		ldr	r6, [r4, #4]
 1022 0040 3268     		ldr	r2, [r6]
 1023              	.LVL100:
1211:Generated_Source\PSoC4/capsense_Sensing.c ****         tmpPcDrRegValue |=  (newPinPcVal << snsIoPtr->shift);
 1024              		.loc 1 1211 0 discriminator 3
 1025 0042 A77E     		ldrb	r7, [r4, #26]
 1026 0044 0721     		movs	r1, #7
 1027 0046 B940     		lsls	r1, r1, r7
 1028 0048 8A43     		bics	r2, r1
 1029              	.LVL101:
1212:Generated_Source\PSoC4/capsense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->pcPtr, tmpPcDrRegValue);
 1030              		.loc 1 1212 0 discriminator 3
 1031 004a 4146     		mov	r1, r8
 1032 004c B940     		lsls	r1, r1, r7
 1033 004e 0A43     		orrs	r2, r1
 1034              	.LVL102:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 70


1213:Generated_Source\PSoC4/capsense_Sensing.c **** 
 1035              		.loc 1 1213 0 discriminator 3
 1036 0050 3260     		str	r2, [r6]
1215:Generated_Source\PSoC4/capsense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->hsiomPtr, tmpHsiomRegValue);
 1037              		.loc 1 1215 0 discriminator 3
 1038 0052 227E     		ldrb	r2, [r4, #24]
 1039              	.LVL103:
 1040 0054 4946     		mov	r1, r9
 1041 0056 9140     		lsls	r1, r1, r2
 1042 0058 0B43     		orrs	r3, r1
 1043              	.LVL104:
1216:Generated_Source\PSoC4/capsense_Sensing.c **** 
 1044              		.loc 1 1216 0 discriminator 3
 1045 005a 2268     		ldr	r2, [r4]
 1046 005c 1360     		str	r3, [r2]
 1047              	.LVL105:
1218:Generated_Source\PSoC4/capsense_Sensing.c ****         tmpPcDrRegValue &= ~(snsIoPtr->mask);
 1048              		.loc 1 1218 0 discriminator 3
 1049 005e A268     		ldr	r2, [r4, #8]
 1050 0060 1368     		ldr	r3, [r2]
 1051              	.LVL106:
1219:Generated_Source\PSoC4/capsense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->drPtr, tmpPcDrRegValue);
 1052              		.loc 1 1219 0 discriminator 3
 1053 0062 6169     		ldr	r1, [r4, #20]
 1054 0064 8B43     		bics	r3, r1
 1055              	.LVL107:
1220:Generated_Source\PSoC4/capsense_Sensing.c **** 
 1056              		.loc 1 1220 0 discriminator 3
 1057 0066 1360     		str	r3, [r2]
1222:Generated_Source\PSoC4/capsense_Sensing.c **** 
 1058              		.loc 1 1222 0 discriminator 3
 1059 0068 FFF7FEFF 		bl	CyExitCriticalSection
 1060              	.LVL108:
1225:Generated_Source\PSoC4/capsense_Sensing.c ****     }
 1061              		.loc 1 1225 0 discriminator 3
 1062 006c 1C34     		adds	r4, r4, #28
 1063              	.LVL109:
1202:Generated_Source\PSoC4/capsense_Sensing.c ****     {
 1064              		.loc 1 1202 0 discriminator 3
 1065 006e 0135     		adds	r5, r5, #1
 1066              	.LVL110:
 1067              	.L96:
1202:Generated_Source\PSoC4/capsense_Sensing.c ****     {
 1068              		.loc 1 1202 0 is_stmt 0 discriminator 1
 1069 0070 0A2D     		cmp	r5, #10
 1070 0072 DDD9     		bls	.L97
1238:Generated_Source\PSoC4/capsense_Sensing.c **** 
 1071              		.loc 1 1238 0 is_stmt 1
 1072              		@ sp needed
 1073              	.LVL111:
 1074              	.LVL112:
 1075              	.LVL113:
 1076              	.LVL114:
 1077 0074 0CBC     		pop	{r2, r3}
 1078 0076 9046     		mov	r8, r2
 1079 0078 9946     		mov	r9, r3
 1080 007a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 71


 1081              	.L100:
 1082              		.align	2
 1083              	.L99:
 1084 007c 00000000 		.word	capsense_ioList
 1085              		.cfi_endproc
 1086              	.LFE12:
 1087              		.size	capsense_SsSetAllIOsState, .-capsense_SsSetAllIOsState
 1088              		.section	.text.capsense_SsPostAllWidgetsScan,"ax",%progbits
 1089              		.align	2
 1090              		.global	capsense_SsPostAllWidgetsScan
 1091              		.code	16
 1092              		.thumb_func
 1093              		.type	capsense_SsPostAllWidgetsScan, %function
 1094              	capsense_SsPostAllWidgetsScan:
 1095              	.LFB13:
1317:Generated_Source\PSoC4/capsense_Sensing.c ****     /*
 1096              		.loc 1 1317 0
 1097              		.cfi_startproc
 1098              		@ args = 0, pretend = 0, frame = 0
 1099              		@ frame_needed = 0, uses_anonymous_args = 0
 1100 0000 10B5     		push	{r4, lr}
 1101              		.cfi_def_cfa_offset 8
 1102              		.cfi_offset 4, -8
 1103              		.cfi_offset 14, -4
 1104              	.L106:
1328:Generated_Source\PSoC4/capsense_Sensing.c **** 
 1105              		.loc 1 1328 0
 1106 0002 1B4A     		ldr	r2, .L107
 1107 0004 9378     		ldrb	r3, [r2, #2]
 1108 0006 0133     		adds	r3, r3, #1
 1109 0008 DBB2     		uxtb	r3, r3
 1110 000a 9370     		strb	r3, [r2, #2]
1330:Generated_Source\PSoC4/capsense_Sensing.c **** 
 1111              		.loc 1 1330 0
 1112 000c 9078     		ldrb	r0, [r2, #2]
 1113 000e C0B2     		uxtb	r0, r0
 1114 0010 FFF7FEFF 		bl	capsense_SetupWidget
 1115              	.LVL115:
 1116 0014 041E     		subs	r4, r0, #0
 1117              	.LVL116:
1332:Generated_Source\PSoC4/capsense_Sensing.c ****             {
 1118              		.loc 1 1332 0
 1119 0016 09D1     		bne	.L102
1334:Generated_Source\PSoC4/capsense_Sensing.c ****                 {
 1120              		.loc 1 1334 0
 1121 0018 154B     		ldr	r3, .L107
 1122 001a 9B78     		ldrb	r3, [r3, #2]
 1123 001c 032B     		cmp	r3, #3
 1124 001e 02D1     		bne	.L103
1337:Generated_Source\PSoC4/capsense_Sensing.c ****                 }
 1125              		.loc 1 1337 0
 1126 0020 0022     		movs	r2, #0
 1127 0022 134B     		ldr	r3, .L107
 1128 0024 5A70     		strb	r2, [r3, #1]
 1129              	.L103:
1339:Generated_Source\PSoC4/capsense_Sensing.c ****             }
 1130              		.loc 1 1339 0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 72


 1131 0026 FFF7FEFF 		bl	capsense_Scan
 1132              	.LVL117:
 1133 002a 1EE0     		b	.L104
 1134              	.LVL118:
 1135              	.L102:
1341:Generated_Source\PSoC4/capsense_Sensing.c ****             {
 1136              		.loc 1 1341 0
 1137 002c 104B     		ldr	r3, .L107
 1138 002e 9B78     		ldrb	r3, [r3, #2]
 1139 0030 032B     		cmp	r3, #3
 1140 0032 11D1     		bne	.L105
1355:Generated_Source\PSoC4/capsense_Sensing.c ****                 /* All widgets are totally processed. Reset BUSY flag */
 1141              		.loc 1 1355 0
 1142 0034 0F4B     		ldr	r3, .L107+4
 1143 0036 1A89     		ldrh	r2, [r3, #8]
 1144 0038 0132     		adds	r2, r2, #1
 1145 003a 1A81     		strh	r2, [r3, #8]
1357:Generated_Source\PSoC4/capsense_Sensing.c **** 
 1146              		.loc 1 1357 0
 1147 003c DA68     		ldr	r2, [r3, #12]
 1148 003e 8021     		movs	r1, #128
 1149 0040 8A43     		bics	r2, r1
 1150 0042 DA60     		str	r2, [r3, #12]
1360:Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_dsRam.status |= ((postScanStatus & capsense_STATUS_ERR_SIZE) << capsense_S
 1151              		.loc 1 1360 0
 1152 0044 DA68     		ldr	r2, [r3, #12]
 1153 0046 1202     		lsls	r2, r2, #8
 1154 0048 120A     		lsrs	r2, r2, #8
 1155 004a DA60     		str	r2, [r3, #12]
1361:Generated_Source\PSoC4/capsense_Sensing.c **** 
 1156              		.loc 1 1361 0
 1157 004c DA68     		ldr	r2, [r3, #12]
 1158 004e 0406     		lsls	r4, r0, #24
 1159 0050 1443     		orrs	r4, r2
 1160 0052 DC60     		str	r4, [r3, #12]
 1161              	.LVL119:
1364:Generated_Source\PSoC4/capsense_Sensing.c ****             }
 1162              		.loc 1 1364 0
 1163 0054 0024     		movs	r4, #0
 1164 0056 08E0     		b	.L104
 1165              	.LVL120:
 1166              	.L105:
1369:Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_dsRam.status |= ((postScanStatus & capsense_STATUS_ERR_SIZE) << capsense_S
 1167              		.loc 1 1369 0
 1168 0058 064A     		ldr	r2, .L107+4
 1169 005a D368     		ldr	r3, [r2, #12]
 1170 005c 1B02     		lsls	r3, r3, #8
 1171 005e 1B0A     		lsrs	r3, r3, #8
 1172 0060 D360     		str	r3, [r2, #12]
1370:Generated_Source\PSoC4/capsense_Sensing.c ****             }
 1173              		.loc 1 1370 0
 1174 0062 D168     		ldr	r1, [r2, #12]
 1175 0064 0306     		lsls	r3, r0, #24
 1176 0066 0B43     		orrs	r3, r1
 1177 0068 D360     		str	r3, [r2, #12]
 1178              	.LVL121:
 1179              	.L104:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 73


1372:Generated_Source\PSoC4/capsense_Sensing.c ****     #endif /* (1u != capsense_TOTAL_WIDGETS) */
 1180              		.loc 1 1372 0
 1181 006a 002C     		cmp	r4, #0
 1182 006c C9D1     		bne	.L106
1374:Generated_Source\PSoC4/capsense_Sensing.c **** 
 1183              		.loc 1 1374 0
 1184              		@ sp needed
 1185              	.LVL122:
 1186 006e 10BD     		pop	{r4, pc}
 1187              	.L108:
 1188              		.align	2
 1189              	.L107:
 1190 0070 00000000 		.word	.LANCHOR0
 1191 0074 00000000 		.word	capsense_dsRam
 1192              		.cfi_endproc
 1193              	.LFE13:
 1194              		.size	capsense_SsPostAllWidgetsScan, .-capsense_SsPostAllWidgetsScan
 1195              		.section	.text.capsense_SsIsrInitialize,"ax",%progbits
 1196              		.align	2
 1197              		.global	capsense_SsIsrInitialize
 1198              		.code	16
 1199              		.thumb_func
 1200              		.type	capsense_SsIsrInitialize, %function
 1201              	capsense_SsIsrInitialize:
 1202              	.LFB14:
1394:Generated_Source\PSoC4/capsense_Sensing.c ****     capsense_ISR_StartEx(address);
 1203              		.loc 1 1394 0
 1204              		.cfi_startproc
 1205              		@ args = 0, pretend = 0, frame = 0
 1206              		@ frame_needed = 0, uses_anonymous_args = 0
 1207              	.LVL123:
 1208 0000 10B5     		push	{r4, lr}
 1209              		.cfi_def_cfa_offset 8
 1210              		.cfi_offset 4, -8
 1211              		.cfi_offset 14, -4
1395:Generated_Source\PSoC4/capsense_Sensing.c **** }
 1212              		.loc 1 1395 0
 1213 0002 FFF7FEFF 		bl	capsense_ISR_StartEx
 1214              	.LVL124:
1396:Generated_Source\PSoC4/capsense_Sensing.c **** 
 1215              		.loc 1 1396 0
 1216              		@ sp needed
 1217 0006 10BD     		pop	{r4, pc}
 1218              		.cfi_endproc
 1219              	.LFE14:
 1220              		.size	capsense_SsIsrInitialize, .-capsense_SsIsrInitialize
 1221              		.section	.text.capsense_SsSetModClkClockDivider,"ax",%progbits
 1222              		.align	2
 1223              		.global	capsense_SsSetModClkClockDivider
 1224              		.code	16
 1225              		.thumb_func
 1226              		.type	capsense_SsSetModClkClockDivider, %function
 1227              	capsense_SsSetModClkClockDivider:
 1228              	.LFB15:
1417:Generated_Source\PSoC4/capsense_Sensing.c **** #if (capsense_ENABLE == capsense_IS_M0S8PERI_BLOCK)
 1229              		.loc 1 1417 0
 1230              		.cfi_startproc
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 74


 1231              		@ args = 0, pretend = 0, frame = 0
 1232              		@ frame_needed = 0, uses_anonymous_args = 0
 1233              		@ link register save eliminated.
 1234              	.LVL125:
1420:Generated_Source\PSoC4/capsense_Sensing.c ****                  ((uint32)capsense_ModClk__DIV_ID <<
 1235              		.loc 1 1420 0
 1236 0000 074A     		ldr	r2, .L112
 1237 0002 084B     		ldr	r3, .L112+4
 1238 0004 1A60     		str	r2, [r3]
1430:Generated_Source\PSoC4/capsense_Sensing.c **** 
 1239              		.loc 1 1430 0
 1240 0006 0138     		subs	r0, r0, #1
 1241              	.LVL126:
 1242 0008 0002     		lsls	r0, r0, #8
 1243              	.LVL127:
 1244 000a 074B     		ldr	r3, .L112+8
 1245 000c 1860     		str	r0, [r3]
 1246              	.L111:
1433:Generated_Source\PSoC4/capsense_Sensing.c ****     {
 1247              		.loc 1 1433 0 discriminator 1
 1248 000e 054B     		ldr	r3, .L112+4
 1249 0010 1B68     		ldr	r3, [r3]
 1250 0012 002B     		cmp	r3, #0
 1251 0014 FBDB     		blt	.L111
1439:Generated_Source\PSoC4/capsense_Sensing.c ****                  (uint32)(((uint32)capsense_ModClk__DIV_ID << capsense_MODCLK_CMD_DIV_SHIFT) |
 1252              		.loc 1 1439 0
 1253 0016 054A     		ldr	r2, .L112+12
 1254 0018 024B     		ldr	r3, .L112+4
 1255 001a 1A60     		str	r2, [r3]
1464:Generated_Source\PSoC4/capsense_Sensing.c **** 
 1256              		.loc 1 1464 0
 1257              		@ sp needed
 1258 001c 7047     		bx	lr
 1259              	.L113:
 1260 001e C046     		.align	2
 1261              	.L112:
 1262 0020 40000040 		.word	1073741888
 1263 0024 00000140 		.word	1073807360
 1264 0028 00030140 		.word	1073808128
 1265 002c 40FF0080 		.word	-2147418304
 1266              		.cfi_endproc
 1267              	.LFE15:
 1268              		.size	capsense_SsSetModClkClockDivider, .-capsense_SsSetModClkClockDivider
 1269              		.section	.text.capsense_SsSetSnsClockDivider,"ax",%progbits
 1270              		.align	2
 1271              		.global	capsense_SsSetSnsClockDivider
 1272              		.code	16
 1273              		.thumb_func
 1274              		.type	capsense_SsSetSnsClockDivider, %function
 1275              	capsense_SsSetSnsClockDivider:
 1276              	.LFB16:
1485:Generated_Source\PSoC4/capsense_Sensing.c **** #if (capsense_ENABLE == capsense_CSDV2)
 1277              		.loc 1 1485 0
 1278              		.cfi_startproc
 1279              		@ args = 0, pretend = 0, frame = 0
 1280              		@ frame_needed = 0, uses_anonymous_args = 0
 1281              		@ link register save eliminated.
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 75


 1282              	.LVL128:
1494:Generated_Source\PSoC4/capsense_Sensing.c ****     newRegValue &= (uint32)(~capsense_SENSE_PERIOD_SENSE_DIV_MASK);
 1283              		.loc 1 1494 0
 1284 0000 034A     		ldr	r2, .L115
 1285 0002 1368     		ldr	r3, [r2]
 1286              	.LVL129:
1495:Generated_Source\PSoC4/capsense_Sensing.c ****     newRegValue |= snsClk - 1u;
 1287              		.loc 1 1495 0
 1288 0004 1B0B     		lsrs	r3, r3, #12
 1289              	.LVL130:
 1290 0006 1B03     		lsls	r3, r3, #12
 1291              	.LVL131:
1496:Generated_Source\PSoC4/capsense_Sensing.c ****     CY_SET_REG32(capsense_SENSE_PERIOD_PTR, newRegValue);
 1292              		.loc 1 1496 0
 1293 0008 0138     		subs	r0, r0, #1
 1294              	.LVL132:
 1295 000a 1843     		orrs	r0, r3
 1296              	.LVL133:
1497:Generated_Source\PSoC4/capsense_Sensing.c **** #else
 1297              		.loc 1 1497 0
 1298 000c 1060     		str	r0, [r2]
1546:Generated_Source\PSoC4/capsense_Sensing.c **** 
 1299              		.loc 1 1546 0
 1300              		@ sp needed
 1301 000e 7047     		bx	lr
 1302              	.L116:
 1303              		.align	2
 1304              	.L115:
 1305 0010 00020B40 		.word	1074463232
 1306              		.cfi_endproc
 1307              	.LFE16:
 1308              		.size	capsense_SsSetSnsClockDivider, .-capsense_SsSetSnsClockDivider
 1309              		.section	.text.capsense_SsSetClockDividers,"ax",%progbits
 1310              		.align	2
 1311              		.global	capsense_SsSetClockDividers
 1312              		.code	16
 1313              		.thumb_func
 1314              		.type	capsense_SsSetClockDividers, %function
 1315              	capsense_SsSetClockDividers:
 1316              	.LFB17:
1569:Generated_Source\PSoC4/capsense_Sensing.c ****     /* Configure Mod clock */
 1317              		.loc 1 1569 0
 1318              		.cfi_startproc
 1319              		@ args = 0, pretend = 0, frame = 0
 1320              		@ frame_needed = 0, uses_anonymous_args = 0
 1321              	.LVL134:
 1322 0000 10B5     		push	{r4, lr}
 1323              		.cfi_def_cfa_offset 8
 1324              		.cfi_offset 4, -8
 1325              		.cfi_offset 14, -4
 1326 0002 0400     		movs	r4, r0
1571:Generated_Source\PSoC4/capsense_Sensing.c **** 
 1327              		.loc 1 1571 0
 1328 0004 0800     		movs	r0, r1
 1329              	.LVL135:
 1330 0006 FFF7FEFF 		bl	capsense_SsSetModClkClockDivider
 1331              	.LVL136:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 76


1574:Generated_Source\PSoC4/capsense_Sensing.c **** }
 1332              		.loc 1 1574 0
 1333 000a 2000     		movs	r0, r4
 1334 000c FFF7FEFF 		bl	capsense_SsSetSnsClockDivider
 1335              	.LVL137:
1575:Generated_Source\PSoC4/capsense_Sensing.c **** 
 1336              		.loc 1 1575 0
 1337              		@ sp needed
 1338              	.LVL138:
 1339 0010 10BD     		pop	{r4, pc}
 1340              		.cfi_endproc
 1341              	.LFE17:
 1342              		.size	capsense_SsSetClockDividers, .-capsense_SsSetClockDividers
 1343 0012 C046     		.section	.text.capsense_CalibrateWidget,"ax",%progbits
 1344              		.align	2
 1345              		.global	capsense_CalibrateWidget
 1346              		.code	16
 1347              		.thumb_func
 1348              		.type	capsense_CalibrateWidget, %function
 1349              	capsense_CalibrateWidget:
 1350              	.LFB18:
1621:Generated_Source\PSoC4/capsense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 1351              		.loc 1 1621 0
 1352              		.cfi_startproc
 1353              		@ args = 0, pretend = 0, frame = 0
 1354              		@ frame_needed = 0, uses_anonymous_args = 0
 1355              	.LVL139:
 1356 0000 70B5     		push	{r4, r5, r6, lr}
 1357              		.cfi_def_cfa_offset 16
 1358              		.cfi_offset 4, -16
 1359              		.cfi_offset 5, -12
 1360              		.cfi_offset 6, -8
 1361              		.cfi_offset 14, -4
 1362 0002 0400     		movs	r4, r0
 1363              	.LVL140:
1626:Generated_Source\PSoC4/capsense_Sensing.c ****             {
 1364              		.loc 1 1626 0
 1365 0004 0328     		cmp	r0, #3
 1366 0006 01D8     		bhi	.L122
1622:Generated_Source\PSoC4/capsense_Sensing.c **** 
 1367              		.loc 1 1622 0
 1368 0008 0020     		movs	r0, #0
 1369              	.LVL141:
 1370 000a 00E0     		b	.L119
 1371              	.LVL142:
 1372              	.L122:
1628:Generated_Source\PSoC4/capsense_Sensing.c ****             }
 1373              		.loc 1 1628 0
 1374 000c 0120     		movs	r0, #1
 1375              	.LVL143:
 1376              	.L119:
1646:Generated_Source\PSoC4/capsense_Sensing.c ****             {
 1377              		.loc 1 1646 0
 1378 000e 0028     		cmp	r0, #0
 1379 0010 11D1     		bne	.L120
1667:Generated_Source\PSoC4/capsense_Sensing.c ****                     {
 1380              		.loc 1 1667 0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 77


 1381 0012 A200     		lsls	r2, r4, #2
 1382 0014 1219     		adds	r2, r2, r4
 1383 0016 D300     		lsls	r3, r2, #3
 1384 0018 074A     		ldr	r2, .L123
 1385 001a D318     		adds	r3, r2, r3
 1386 001c DD7E     		ldrb	r5, [r3, #27]
1666:Generated_Source\PSoC4/capsense_Sensing.c ****                         capsense_GET_SENSE_METHOD(&capsense_dsFlash.wdgtArray[widgetId]))
 1387              		.loc 1 1666 0
 1388 001e 022D     		cmp	r5, #2
 1389 0020 03D1     		bne	.L121
1670:Generated_Source\PSoC4/capsense_Sensing.c ****                     }
 1390              		.loc 1 1670 0
 1391 0022 2821     		movs	r1, #40
 1392 0024 2000     		movs	r0, r4
 1393              	.LVL144:
 1394 0026 FFF7FEFF 		bl	capsense_CSXCalibrateWidget
 1395              	.LVL145:
 1396              	.L121:
1675:Generated_Source\PSoC4/capsense_Sensing.c ****                         capsense_GET_SENSE_METHOD(&capsense_dsFlash.wdgtArray[widgetId]))
 1397              		.loc 1 1675 0
 1398 002a 012D     		cmp	r5, #1
 1399 002c 03D1     		bne	.L120
1679:Generated_Source\PSoC4/capsense_Sensing.c ****                     }
 1400              		.loc 1 1679 0
 1401 002e 5521     		movs	r1, #85
 1402 0030 2000     		movs	r0, r4
 1403              	.LVL146:
 1404 0032 FFF7FEFF 		bl	capsense_CSDCalibrateWidget
 1405              	.LVL147:
 1406              	.L120:
1701:Generated_Source\PSoC4/capsense_Sensing.c **** 
 1407              		.loc 1 1701 0
 1408              		@ sp needed
 1409              	.LVL148:
 1410 0036 70BD     		pop	{r4, r5, r6, pc}
 1411              	.L124:
 1412              		.align	2
 1413              	.L123:
 1414 0038 00000000 		.word	capsense_dsFlash
 1415              		.cfi_endproc
 1416              	.LFE18:
 1417              		.size	capsense_CalibrateWidget, .-capsense_CalibrateWidget
 1418              		.section	.text.capsense_CalibrateAllWidgets,"ax",%progbits
 1419              		.align	2
 1420              		.global	capsense_CalibrateAllWidgets
 1421              		.code	16
 1422              		.thumb_func
 1423              		.type	capsense_CalibrateAllWidgets, %function
 1424              	capsense_CalibrateAllWidgets:
 1425              	.LFB19:
1738:Generated_Source\PSoC4/capsense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 1426              		.loc 1 1738 0
 1427              		.cfi_startproc
 1428              		@ args = 0, pretend = 0, frame = 0
 1429              		@ frame_needed = 0, uses_anonymous_args = 0
 1430 0000 70B5     		push	{r4, r5, r6, lr}
 1431              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 78


 1432              		.cfi_offset 4, -16
 1433              		.cfi_offset 5, -12
 1434              		.cfi_offset 6, -8
 1435              		.cfi_offset 14, -4
 1436              	.LVL149:
1742:Generated_Source\PSoC4/capsense_Sensing.c ****         {
 1437              		.loc 1 1742 0
 1438 0002 0024     		movs	r4, #0
1739:Generated_Source\PSoC4/capsense_Sensing.c ****         uint32 wdgtIndex;
 1439              		.loc 1 1739 0
 1440 0004 0025     		movs	r5, #0
1742:Generated_Source\PSoC4/capsense_Sensing.c ****         {
 1441              		.loc 1 1742 0
 1442 0006 04E0     		b	.L126
 1443              	.LVL150:
 1444              	.L127:
1744:Generated_Source\PSoC4/capsense_Sensing.c ****         }
 1445              		.loc 1 1744 0 discriminator 3
 1446 0008 2000     		movs	r0, r4
 1447 000a FFF7FEFF 		bl	capsense_CalibrateWidget
 1448              	.LVL151:
 1449 000e 0543     		orrs	r5, r0
 1450              	.LVL152:
1742:Generated_Source\PSoC4/capsense_Sensing.c ****         {
 1451              		.loc 1 1742 0 discriminator 3
 1452 0010 0134     		adds	r4, r4, #1
 1453              	.LVL153:
 1454              	.L126:
1742:Generated_Source\PSoC4/capsense_Sensing.c ****         {
 1455              		.loc 1 1742 0 is_stmt 0 discriminator 1
 1456 0012 032C     		cmp	r4, #3
 1457 0014 F8D9     		bls	.L127
1748:Generated_Source\PSoC4/capsense_Sensing.c **** #endif /* (capsense_ANYMODE_AUTOCAL) */
 1458              		.loc 1 1748 0 is_stmt 1
 1459 0016 2800     		movs	r0, r5
 1460              		@ sp needed
 1461              	.LVL154:
 1462              	.LVL155:
 1463 0018 70BD     		pop	{r4, r5, r6, pc}
 1464              		.cfi_endproc
 1465              	.LFE19:
 1466              		.size	capsense_CalibrateAllWidgets, .-capsense_CalibrateAllWidgets
 1467 001a C046     		.section	.text.capsense_SsCSDGetColSnsClkDivider,"ax",%progbits
 1468              		.align	2
 1469              		.global	capsense_SsCSDGetColSnsClkDivider
 1470              		.code	16
 1471              		.thumb_func
 1472              		.type	capsense_SsCSDGetColSnsClkDivider, %function
 1473              	capsense_SsCSDGetColSnsClkDivider:
 1474              	.LFB25:
2758:Generated_Source\PSoC4/capsense_Sensing.c **** 
2759:Generated_Source\PSoC4/capsense_Sensing.c **** #endif /* (((capsense_ENABLE == capsense_CSX_EN) && \
2760:Generated_Source\PSoC4/capsense_Sensing.c ****            (capsense_DISABLE == capsense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2761:Generated_Source\PSoC4/capsense_Sensing.c ****            (capsense_ENABLE == capsense_CSDV2) && \
2762:Generated_Source\PSoC4/capsense_Sensing.c ****            (capsense_CLK_SOURCE_PRSAUTO == capsense_CSX_TX_CLK_SOURCE)) ||\
2763:Generated_Source\PSoC4/capsense_Sensing.c ****           ((capsense_ENABLE == capsense_CSD_EN) && \
2764:Generated_Source\PSoC4/capsense_Sensing.c ****            (capsense_ENABLE == capsense_CSDV2) && \
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 79


2765:Generated_Source\PSoC4/capsense_Sensing.c ****            (capsense_CLK_SOURCE_PRSAUTO == capsense_CSD_SNS_CLK_SOURCE))) */
2766:Generated_Source\PSoC4/capsense_Sensing.c **** 
2767:Generated_Source\PSoC4/capsense_Sensing.c **** 
2768:Generated_Source\PSoC4/capsense_Sensing.c **** #if (capsense_ENABLE == capsense_CSD_EN)
2769:Generated_Source\PSoC4/capsense_Sensing.c **** 
2770:Generated_Source\PSoC4/capsense_Sensing.c **** 
2771:Generated_Source\PSoC4/capsense_Sensing.c ****     /*******************************************************************************
2772:Generated_Source\PSoC4/capsense_Sensing.c ****     * Function Name: capsense_SsCSDGetColSnsClkDivider
2773:Generated_Source\PSoC4/capsense_Sensing.c ****     ****************************************************************************//**
2774:Generated_Source\PSoC4/capsense_Sensing.c ****     *
2775:Generated_Source\PSoC4/capsense_Sensing.c ****     * \brief
2776:Generated_Source\PSoC4/capsense_Sensing.c ****     *  This function gets the Sense Clock Divider value for one-dimension widgets
2777:Generated_Source\PSoC4/capsense_Sensing.c ****     *  and Column Sense Clock divider value for two-dimension widgets.
2778:Generated_Source\PSoC4/capsense_Sensing.c ****     *
2779:Generated_Source\PSoC4/capsense_Sensing.c ****     * \details
2780:Generated_Source\PSoC4/capsense_Sensing.c ****     *  This function gets the Sense Clock Divider value based on the Component
2781:Generated_Source\PSoC4/capsense_Sensing.c ****     *  configuration. The function is applicable for one-dimension widgets and for
2782:Generated_Source\PSoC4/capsense_Sensing.c ****     *  two-dimension widgets.
2783:Generated_Source\PSoC4/capsense_Sensing.c ****     *
2784:Generated_Source\PSoC4/capsense_Sensing.c ****     * \param widgetId
2785:Generated_Source\PSoC4/capsense_Sensing.c ****     *  Specifies the ID of the widget.
2786:Generated_Source\PSoC4/capsense_Sensing.c ****     *
2787:Generated_Source\PSoC4/capsense_Sensing.c ****     * \return
2788:Generated_Source\PSoC4/capsense_Sensing.c ****     *  Returns the Sense Clock Divider value for one-dimension widgets
2789:Generated_Source\PSoC4/capsense_Sensing.c ****     *  and the Column Sense Clock divider value for two-dimension widgets.
2790:Generated_Source\PSoC4/capsense_Sensing.c ****     *
2791:Generated_Source\PSoC4/capsense_Sensing.c ****     *******************************************************************************/
2792:Generated_Source\PSoC4/capsense_Sensing.c ****     uint32 capsense_SsCSDGetColSnsClkDivider(uint32 widgetId)
2793:Generated_Source\PSoC4/capsense_Sensing.c ****     {
 1475              		.loc 1 2793 0
 1476              		.cfi_startproc
 1477              		@ args = 0, pretend = 0, frame = 0
 1478              		@ frame_needed = 0, uses_anonymous_args = 0
 1479              		@ link register save eliminated.
 1480              	.LVL156:
2794:Generated_Source\PSoC4/capsense_Sensing.c ****         uint32 retVal;
2795:Generated_Source\PSoC4/capsense_Sensing.c **** 
2796:Generated_Source\PSoC4/capsense_Sensing.c ****         /* Get sense divider based on configuration */
2797:Generated_Source\PSoC4/capsense_Sensing.c ****         #if (capsense_ENABLE != capsense_CSD_COMMON_SNS_CLK_EN)
2798:Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_RAM_WD_BASE_STRUCT *ptrWdgt;
2799:Generated_Source\PSoC4/capsense_Sensing.c **** 
2800:Generated_Source\PSoC4/capsense_Sensing.c ****             ptrWdgt = (capsense_RAM_WD_BASE_STRUCT *)
 1481              		.loc 1 2800 0
 1482 0000 8300     		lsls	r3, r0, #2
 1483 0002 1818     		adds	r0, r3, r0
 1484              	.LVL157:
 1485 0004 C300     		lsls	r3, r0, #3
 1486 0006 024A     		ldr	r2, .L129
 1487 0008 D318     		adds	r3, r2, r3
 1488 000a 5B68     		ldr	r3, [r3, #4]
 1489              	.LVL158:
2801:Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2802:Generated_Source\PSoC4/capsense_Sensing.c **** 
2803:Generated_Source\PSoC4/capsense_Sensing.c ****             retVal = (uint32)(ptrWdgt->snsClk);
 1490              		.loc 1 2803 0
 1491 000c 9889     		ldrh	r0, [r3, #12]
 1492              	.LVL159:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 80


2804:Generated_Source\PSoC4/capsense_Sensing.c ****         #else
2805:Generated_Source\PSoC4/capsense_Sensing.c ****             retVal = (uint32)capsense_dsRam.snsCsdClk;
2806:Generated_Source\PSoC4/capsense_Sensing.c **** 
2807:Generated_Source\PSoC4/capsense_Sensing.c ****             (void)widgetId; /* This parameter is unused in such configurations */
2808:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif /* (capsense_ENABLE == capsense_CSD_COMMON_SNS_CLK_EN) */
2809:Generated_Source\PSoC4/capsense_Sensing.c **** 
2810:Generated_Source\PSoC4/capsense_Sensing.c ****         return (retVal);
2811:Generated_Source\PSoC4/capsense_Sensing.c ****     }
 1493              		.loc 1 2811 0
 1494              		@ sp needed
 1495 000e 7047     		bx	lr
 1496              	.L130:
 1497              		.align	2
 1498              	.L129:
 1499 0010 00000000 		.word	capsense_dsFlash
 1500              		.cfi_endproc
 1501              	.LFE25:
 1502              		.size	capsense_SsCSDGetColSnsClkDivider, .-capsense_SsCSDGetColSnsClkDivider
 1503              		.section	.text.capsense_SsCSDCalcPrsSize,"ax",%progbits
 1504              		.align	2
 1505              		.global	capsense_SsCSDCalcPrsSize
 1506              		.code	16
 1507              		.thumb_func
 1508              		.type	capsense_SsCSDCalcPrsSize, %function
 1509              	capsense_SsCSDCalcPrsSize:
 1510              	.LFB26:
2812:Generated_Source\PSoC4/capsense_Sensing.c **** 
2813:Generated_Source\PSoC4/capsense_Sensing.c **** 
2814:Generated_Source\PSoC4/capsense_Sensing.c ****     #if (capsense_CSD_MATRIX_WIDGET_EN || capsense_CSD_TOUCHPAD_WIDGET_EN)
2815:Generated_Source\PSoC4/capsense_Sensing.c ****         /*******************************************************************************
2816:Generated_Source\PSoC4/capsense_Sensing.c ****         * Function Name: capsense_SsCSDGetRowSnsClkDivider
2817:Generated_Source\PSoC4/capsense_Sensing.c ****         ****************************************************************************//**
2818:Generated_Source\PSoC4/capsense_Sensing.c ****         *
2819:Generated_Source\PSoC4/capsense_Sensing.c ****         * \brief
2820:Generated_Source\PSoC4/capsense_Sensing.c ****         *  This function gets the Sense Clock Divider value for one-dimension widgets
2821:Generated_Source\PSoC4/capsense_Sensing.c ****         *  and the Column Sense Clock divider value for two-dimension widgets.
2822:Generated_Source\PSoC4/capsense_Sensing.c ****         *
2823:Generated_Source\PSoC4/capsense_Sensing.c ****         * \details
2824:Generated_Source\PSoC4/capsense_Sensing.c ****         *  This function gets the Sense Clock Divider value based on the Component
2825:Generated_Source\PSoC4/capsense_Sensing.c ****         *  configuration. The function is applicable for one-dimension widgets and for
2826:Generated_Source\PSoC4/capsense_Sensing.c ****         *  two-dimension widgets.
2827:Generated_Source\PSoC4/capsense_Sensing.c ****         *
2828:Generated_Source\PSoC4/capsense_Sensing.c ****         * \param
2829:Generated_Source\PSoC4/capsense_Sensing.c ****         *  widgetId Specifies the ID of the widget.
2830:Generated_Source\PSoC4/capsense_Sensing.c ****         *
2831:Generated_Source\PSoC4/capsense_Sensing.c ****         * \return
2832:Generated_Source\PSoC4/capsense_Sensing.c ****         *  Returns the sense clock divider value for one-dimension widgets
2833:Generated_Source\PSoC4/capsense_Sensing.c ****         *  and column sense clock divider value for two-dimension widgets.
2834:Generated_Source\PSoC4/capsense_Sensing.c ****         *
2835:Generated_Source\PSoC4/capsense_Sensing.c ****         *******************************************************************************/
2836:Generated_Source\PSoC4/capsense_Sensing.c ****         uint32 capsense_SsCSDGetRowSnsClkDivider(uint32 widgetId)
2837:Generated_Source\PSoC4/capsense_Sensing.c ****         {
2838:Generated_Source\PSoC4/capsense_Sensing.c ****             uint32 retVal;
2839:Generated_Source\PSoC4/capsense_Sensing.c **** 
2840:Generated_Source\PSoC4/capsense_Sensing.c ****             /* Get sense divider based on configuration */
2841:Generated_Source\PSoC4/capsense_Sensing.c ****             #if (capsense_ENABLE != capsense_CSD_COMMON_SNS_CLK_EN)
2842:Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_RAM_WD_BASE_STRUCT *ptrWdgt;
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 81


2843:Generated_Source\PSoC4/capsense_Sensing.c **** 
2844:Generated_Source\PSoC4/capsense_Sensing.c ****                 ptrWdgt = (capsense_RAM_WD_BASE_STRUCT *)
2845:Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2846:Generated_Source\PSoC4/capsense_Sensing.c **** 
2847:Generated_Source\PSoC4/capsense_Sensing.c ****                 retVal = ptrWdgt->rowSnsClk;
2848:Generated_Source\PSoC4/capsense_Sensing.c ****             #else
2849:Generated_Source\PSoC4/capsense_Sensing.c ****                 retVal = (uint32)capsense_dsRam.snsCsdClk;
2850:Generated_Source\PSoC4/capsense_Sensing.c **** 
2851:Generated_Source\PSoC4/capsense_Sensing.c ****                 (void)widgetId; /* This parameter is unused in such configurations */
2852:Generated_Source\PSoC4/capsense_Sensing.c ****             #endif /* (capsense_ENABLE == capsense_CSD_COMMON_SNS_CLK_EN) */
2853:Generated_Source\PSoC4/capsense_Sensing.c **** 
2854:Generated_Source\PSoC4/capsense_Sensing.c ****             return (retVal);
2855:Generated_Source\PSoC4/capsense_Sensing.c ****         }
2856:Generated_Source\PSoC4/capsense_Sensing.c **** 
2857:Generated_Source\PSoC4/capsense_Sensing.c ****     #endif /* (capsense_CSD_MATRIX_WIDGET_EN || capsense_CSD_TOUCHPAD_WIDGET_EN) */
2858:Generated_Source\PSoC4/capsense_Sensing.c **** 
2859:Generated_Source\PSoC4/capsense_Sensing.c **** 
2860:Generated_Source\PSoC4/capsense_Sensing.c ****     #if (capsense_CLK_SOURCE_PRSAUTO == capsense_CSD_SNS_CLK_SOURCE)
2861:Generated_Source\PSoC4/capsense_Sensing.c ****         /*******************************************************************************
2862:Generated_Source\PSoC4/capsense_Sensing.c ****         * Function Name: capsense_SsCSDCalcPrsSize
2863:Generated_Source\PSoC4/capsense_Sensing.c ****         ****************************************************************************//**
2864:Generated_Source\PSoC4/capsense_Sensing.c ****         *
2865:Generated_Source\PSoC4/capsense_Sensing.c ****         * \brief
2866:Generated_Source\PSoC4/capsense_Sensing.c ****         *  The function finds PRS polynomial size in the Auto mode.
2867:Generated_Source\PSoC4/capsense_Sensing.c ****         *
2868:Generated_Source\PSoC4/capsense_Sensing.c ****         * \details
2869:Generated_Source\PSoC4/capsense_Sensing.c ****         *  The PRS polynomial size in the Auto mode is found based on the following
2870:Generated_Source\PSoC4/capsense_Sensing.c ****         *  requirements:
2871:Generated_Source\PSoC4/capsense_Sensing.c ****         *  - at least one full spread spectrum polynomial should pass during scan time.
2872:Generated_Source\PSoC4/capsense_Sensing.c ****         *
2873:Generated_Source\PSoC4/capsense_Sensing.c ****         * \param
2874:Generated_Source\PSoC4/capsense_Sensing.c ****         *  snsClkDivider The divider value for the sense clock.
2875:Generated_Source\PSoC4/capsense_Sensing.c ****         *  resolution The widget resolution.
2876:Generated_Source\PSoC4/capsense_Sensing.c ****         *
2877:Generated_Source\PSoC4/capsense_Sensing.c ****         * \return prsSize PRS value for SENSE_PERIOD register.
2878:Generated_Source\PSoC4/capsense_Sensing.c ****         *
2879:Generated_Source\PSoC4/capsense_Sensing.c ****         *******************************************************************************/
2880:Generated_Source\PSoC4/capsense_Sensing.c ****         uint8 capsense_SsCSDCalcPrsSize(uint32 snsClkDivider, uint32 resolution)
2881:Generated_Source\PSoC4/capsense_Sensing.c ****         {
 1511              		.loc 1 2881 0
 1512              		.cfi_startproc
 1513              		@ args = 0, pretend = 0, frame = 0
 1514              		@ frame_needed = 0, uses_anonymous_args = 0
 1515              		@ link register save eliminated.
 1516              	.LVL160:
2882:Generated_Source\PSoC4/capsense_Sensing.c ****             uint32 prsSize;
2883:Generated_Source\PSoC4/capsense_Sensing.c ****             uint32 modClkDivider = 1u;
2884:Generated_Source\PSoC4/capsense_Sensing.c **** 
2885:Generated_Source\PSoC4/capsense_Sensing.c ****             #if (capsense_ENABLE != capsense_CSDV2)
2886:Generated_Source\PSoC4/capsense_Sensing.c ****                 #if(capsense_ENABLE == capsense_IS_M0S8PERI_BLOCK)
2887:Generated_Source\PSoC4/capsense_Sensing.c ****                     modClkDivider = (uint32)capsense_dsRam.modCsdClk;
2888:Generated_Source\PSoC4/capsense_Sensing.c ****                 #endif
2889:Generated_Source\PSoC4/capsense_Sensing.c **** 
2890:Generated_Source\PSoC4/capsense_Sensing.c ****                 /*
2891:Generated_Source\PSoC4/capsense_Sensing.c ****                 * This operation is needed for Third-generation HW Block
2892:Generated_Source\PSoC4/capsense_Sensing.c ****                 * based devices to take into account DIV-2 flip-flop.
2893:Generated_Source\PSoC4/capsense_Sensing.c ****                 */
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 82


2894:Generated_Source\PSoC4/capsense_Sensing.c ****                 snsClkDivider <<= 1uL;
2895:Generated_Source\PSoC4/capsense_Sensing.c ****             #endif
2896:Generated_Source\PSoC4/capsense_Sensing.c **** 
2897:Generated_Source\PSoC4/capsense_Sensing.c ****             if ((snsClkDivider * capsense_PRS_LENGTH_12_BITS) <= (modClkDivider * ((0x00000001Lu <<
 1517              		.loc 1 2897 0
 1518 0000 0203     		lsls	r2, r0, #12
 1519 0002 121A     		subs	r2, r2, r0
 1520 0004 0123     		movs	r3, #1
 1521 0006 8B40     		lsls	r3, r3, r1
 1522 0008 013B     		subs	r3, r3, #1
 1523 000a 9A42     		cmp	r2, r3
 1524 000c 05D9     		bls	.L133
2898:Generated_Source\PSoC4/capsense_Sensing.c ****             {
2899:Generated_Source\PSoC4/capsense_Sensing.c ****                 /* Set PRS12 mode */
2900:Generated_Source\PSoC4/capsense_Sensing.c ****                 prsSize = capsense_PRS_12_CONFIG;
2901:Generated_Source\PSoC4/capsense_Sensing.c ****             }
2902:Generated_Source\PSoC4/capsense_Sensing.c ****             else if ((snsClkDivider * capsense_PRS_LENGTH_8_BITS) <= (modClkDivider * ((0x00000001L
 1525              		.loc 1 2902 0
 1526 000e 0202     		lsls	r2, r0, #8
 1527 0010 101A     		subs	r0, r2, r0
 1528              	.LVL161:
 1529 0012 8342     		cmp	r3, r0
 1530 0014 03D3     		bcc	.L134
2903:Generated_Source\PSoC4/capsense_Sensing.c ****             {
2904:Generated_Source\PSoC4/capsense_Sensing.c ****                 /* Set PRS8 mode */
2905:Generated_Source\PSoC4/capsense_Sensing.c ****                 prsSize = capsense_PRS_8_CONFIG;
 1531              		.loc 1 2905 0
 1532 0016 0520     		movs	r0, #5
 1533 0018 02E0     		b	.L132
 1534              	.LVL162:
 1535              	.L133:
2900:Generated_Source\PSoC4/capsense_Sensing.c ****             }
 1536              		.loc 1 2900 0
 1537 001a 0620     		movs	r0, #6
 1538              	.LVL163:
 1539 001c 00E0     		b	.L132
 1540              	.L134:
2906:Generated_Source\PSoC4/capsense_Sensing.c ****             }
2907:Generated_Source\PSoC4/capsense_Sensing.c ****             else
2908:Generated_Source\PSoC4/capsense_Sensing.c ****             {
2909:Generated_Source\PSoC4/capsense_Sensing.c ****                 /* Set Direct clock mode */
2910:Generated_Source\PSoC4/capsense_Sensing.c ****                 prsSize = capsense_CLK_SOURCE_DIRECT;
 1541              		.loc 1 2910 0
 1542 001e 0020     		movs	r0, #0
 1543              	.L132:
 1544              	.LVL164:
2911:Generated_Source\PSoC4/capsense_Sensing.c ****             }
2912:Generated_Source\PSoC4/capsense_Sensing.c **** 
2913:Generated_Source\PSoC4/capsense_Sensing.c ****             return (uint8)prsSize;
 1545              		.loc 1 2913 0
 1546 0020 C0B2     		uxtb	r0, r0
 1547              	.LVL165:
2914:Generated_Source\PSoC4/capsense_Sensing.c ****         }
 1548              		.loc 1 2914 0
 1549              		@ sp needed
 1550 0022 7047     		bx	lr
 1551              		.cfi_endproc
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 83


 1552              	.LFE26:
 1553              		.size	capsense_SsCSDCalcPrsSize, .-capsense_SsCSDCalcPrsSize
 1554              		.section	.text.capsense_SsSetWidgetSenseClkSrc,"ax",%progbits
 1555              		.align	2
 1556              		.code	16
 1557              		.thumb_func
 1558              		.type	capsense_SsSetWidgetSenseClkSrc, %function
 1559              	capsense_SsSetWidgetSenseClkSrc:
 1560              	.LFB21:
2458:Generated_Source\PSoC4/capsense_Sensing.c ****         uint8 lfsrSize;
 1561              		.loc 1 2458 0
 1562              		.cfi_startproc
 1563              		@ args = 0, pretend = 0, frame = 0
 1564              		@ frame_needed = 0, uses_anonymous_args = 0
 1565              	.LVL166:
 1566 0000 70B5     		push	{r4, r5, r6, lr}
 1567              		.cfi_def_cfa_offset 16
 1568              		.cfi_offset 4, -16
 1569              		.cfi_offset 5, -12
 1570              		.cfi_offset 6, -8
 1571              		.cfi_offset 14, -4
 1572 0002 0E00     		movs	r6, r1
2470:Generated_Source\PSoC4/capsense_Sensing.c **** 
 1573              		.loc 1 2470 0
 1574 0004 FFF7FEFF 		bl	capsense_SsCSDGetColSnsClkDivider
 1575              	.LVL167:
 1576 0008 0500     		movs	r5, r0
 1577              	.LVL168:
2473:Generated_Source\PSoC4/capsense_Sensing.c ****                                                                                              capsen
 1578              		.loc 1 2473 0
 1579 000a 3188     		ldrh	r1, [r6]
 1580 000c 0022     		movs	r2, #0
 1581 000e FFF7FEFF 		bl	capsense_SsCSDGetNumberOfConversions
 1582              	.LVL169:
 1583 0012 0100     		movs	r1, r0
 1584              	.LVL170:
2475:Generated_Source\PSoC4/capsense_Sensing.c ****                 if (capsense_CLK_SOURCE_DIRECT == lfsrSize)
 1585              		.loc 1 2475 0
 1586 0014 2800     		movs	r0, r5
 1587              	.LVL171:
 1588 0016 FFF7FEFF 		bl	capsense_SsCalcLfsrSize
 1589              	.LVL172:
 1590 001a 041E     		subs	r4, r0, #0
 1591              	.LVL173:
2476:Generated_Source\PSoC4/capsense_Sensing.c ****                 {
 1592              		.loc 1 2476 0
 1593 001c 04D1     		bne	.L136
2482:Generated_Source\PSoC4/capsense_Sensing.c ****                 }
 1594              		.loc 1 2482 0
 1595 001e 6800     		lsls	r0, r5, #1
 1596              	.LVL174:
 1597 0020 3188     		ldrh	r1, [r6]
 1598 0022 FFF7FEFF 		bl	capsense_SsCSDCalcPrsSize
 1599              	.LVL175:
 1600 0026 0400     		movs	r4, r0
 1601              	.LVL176:
 1602              	.L136:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 84


2484:Generated_Source\PSoC4/capsense_Sensing.c ****             #else
 1603              		.loc 1 2484 0
 1604 0028 2100     		movs	r1, r4
 1605 002a 2800     		movs	r0, r5
 1606 002c FFF7FEFF 		bl	capsense_SsCalcLfsrScale
 1607              	.LVL177:
2499:Generated_Source\PSoC4/capsense_Sensing.c **** 
 1608              		.loc 1 2499 0
 1609 0030 0001     		lsls	r0, r0, #4
 1610              	.LVL178:
 1611 0032 C0B2     		uxtb	r0, r0
 1612 0034 2043     		orrs	r0, r4
 1613 0036 B073     		strb	r0, [r6, #14]
2534:Generated_Source\PSoC4/capsense_Sensing.c **** #endif /* (capsense_ENABLE == capsense_CSD_EN) */
 1614              		.loc 1 2534 0
 1615              		@ sp needed
 1616              	.LVL179:
 1617              	.LVL180:
 1618              	.LVL181:
 1619 0038 70BD     		pop	{r4, r5, r6, pc}
 1620              		.cfi_endproc
 1621              	.LFE21:
 1622              		.size	capsense_SsSetWidgetSenseClkSrc, .-capsense_SsSetWidgetSenseClkSrc
 1623 003a C046     		.section	.text.capsense_SsInitializeSourceSenseClk,"ax",%progbits
 1624              		.align	2
 1625              		.global	capsense_SsInitializeSourceSenseClk
 1626              		.code	16
 1627              		.thumb_func
 1628              		.type	capsense_SsInitializeSourceSenseClk, %function
 1629              	capsense_SsInitializeSourceSenseClk:
 1630              	.LFB20:
2405:Generated_Source\PSoC4/capsense_Sensing.c ****     uint32 wdgtIndex;
 1631              		.loc 1 2405 0
 1632              		.cfi_startproc
 1633              		@ args = 0, pretend = 0, frame = 0
 1634              		@ frame_needed = 0, uses_anonymous_args = 0
 1635 0000 10B5     		push	{r4, lr}
 1636              		.cfi_def_cfa_offset 8
 1637              		.cfi_offset 4, -8
 1638              		.cfi_offset 14, -4
 1639              	.LVL182:
2409:Generated_Source\PSoC4/capsense_Sensing.c ****     {
 1640              		.loc 1 2409 0
 1641 0002 0024     		movs	r4, #0
 1642 0004 13E0     		b	.L138
 1643              	.LVL183:
 1644              	.L142:
2411:Generated_Source\PSoC4/capsense_Sensing.c **** 
 1645              		.loc 1 2411 0
 1646 0006 A200     		lsls	r2, r4, #2
 1647 0008 1219     		adds	r2, r2, r4
 1648 000a D300     		lsls	r3, r2, #3
 1649 000c 094A     		ldr	r2, .L143
 1650 000e D318     		adds	r3, r2, r3
 1651 0010 5968     		ldr	r1, [r3, #4]
 1652              	.LVL184:
2413:Generated_Source\PSoC4/capsense_Sensing.c ****         {
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 85


 1653              		.loc 1 2413 0
 1654 0012 DB7E     		ldrb	r3, [r3, #27]
 1655 0014 012B     		cmp	r3, #1
 1656 0016 02D0     		beq	.L140
 1657 0018 022B     		cmp	r3, #2
 1658 001a 04D0     		beq	.L141
 1659 001c 06E0     		b	.L139
 1660              	.L140:
2417:Generated_Source\PSoC4/capsense_Sensing.c ****                 break;
 1661              		.loc 1 2417 0
 1662 001e 2000     		movs	r0, r4
 1663 0020 FFF7FEFF 		bl	capsense_SsSetWidgetSenseClkSrc
 1664              	.LVL185:
2418:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif /* (capsense_ENABLE == capsense_CSD_EN) */
 1665              		.loc 1 2418 0
 1666 0024 02E0     		b	.L139
 1667              	.LVL186:
 1668              	.L141:
2422:Generated_Source\PSoC4/capsense_Sensing.c ****                 break;
 1669              		.loc 1 2422 0
 1670 0026 2000     		movs	r0, r4
 1671 0028 FFF7FEFF 		bl	capsense_SsSetWidgetTxClkSrc
 1672              	.LVL187:
 1673              	.L139:
2409:Generated_Source\PSoC4/capsense_Sensing.c ****     {
 1674              		.loc 1 2409 0 discriminator 2
 1675 002c 0134     		adds	r4, r4, #1
 1676              	.LVL188:
 1677              	.L138:
2409:Generated_Source\PSoC4/capsense_Sensing.c ****     {
 1678              		.loc 1 2409 0 is_stmt 0 discriminator 1
 1679 002e 032C     		cmp	r4, #3
 1680 0030 E9D9     		bls	.L142
2432:Generated_Source\PSoC4/capsense_Sensing.c **** #endif /* ((capsense_ENABLE == capsense_CSD_EN) || \
 1681              		.loc 1 2432 0 is_stmt 1
 1682              		@ sp needed
 1683              	.LVL189:
 1684 0032 10BD     		pop	{r4, pc}
 1685              	.L144:
 1686              		.align	2
 1687              	.L143:
 1688 0034 00000000 		.word	capsense_dsFlash
 1689              		.cfi_endproc
 1690              	.LFE20:
 1691              		.size	capsense_SsInitializeSourceSenseClk, .-capsense_SsInitializeSourceSenseClk
 1692              		.section	.text.capsense_DischargeExtCapacitors,"ax",%progbits
 1693              		.align	2
 1694              		.global	capsense_DischargeExtCapacitors
 1695              		.code	16
 1696              		.thumb_func
 1697              		.type	capsense_DischargeExtCapacitors, %function
 1698              	capsense_DischargeExtCapacitors:
 1699              	.LFB27:
2915:Generated_Source\PSoC4/capsense_Sensing.c ****     #endif /* (capsense_CLK_SOURCE_PRSAUTO == capsense_CSD_SNS_CLK_SOURCE) */
2916:Generated_Source\PSoC4/capsense_Sensing.c **** #endif /* (capsense_ENABLE == capsense_CSD_EN) */
2917:Generated_Source\PSoC4/capsense_Sensing.c **** 
2918:Generated_Source\PSoC4/capsense_Sensing.c **** 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 86


2919:Generated_Source\PSoC4/capsense_Sensing.c **** #if (capsense_ENABLE == capsense_CSDV2)
2920:Generated_Source\PSoC4/capsense_Sensing.c ****     /*******************************************************************************
2921:Generated_Source\PSoC4/capsense_Sensing.c ****     * Function Name: capsense_DischargeExtCapacitors
2922:Generated_Source\PSoC4/capsense_Sensing.c ****     ****************************************************************************//**
2923:Generated_Source\PSoC4/capsense_Sensing.c ****     *
2924:Generated_Source\PSoC4/capsense_Sensing.c ****     * \brief
2925:Generated_Source\PSoC4/capsense_Sensing.c ****     *  The internal function discharge available external capacitors.
2926:Generated_Source\PSoC4/capsense_Sensing.c ****     *
2927:Generated_Source\PSoC4/capsense_Sensing.c ****     * \details
2928:Generated_Source\PSoC4/capsense_Sensing.c ****     *  The function discharge available external capacitors by connection them
2929:Generated_Source\PSoC4/capsense_Sensing.c ****     *  to GND using STRONG GPIO drive mode. Additionaly, the function disconnects
2930:Generated_Source\PSoC4/capsense_Sensing.c ****     *  the capacitors from analog mux buses if connected.
2931:Generated_Source\PSoC4/capsense_Sensing.c ****     *  Note: the function does not restore the connection to analog mux busses
2932:Generated_Source\PSoC4/capsense_Sensing.c ****     *  and supposes that all the capacitors belong to a single device port.
2933:Generated_Source\PSoC4/capsense_Sensing.c ****     *
2934:Generated_Source\PSoC4/capsense_Sensing.c ****     * \param
2935:Generated_Source\PSoC4/capsense_Sensing.c ****     *  dischargeTime The discharge time in us.
2936:Generated_Source\PSoC4/capsense_Sensing.c ****     *
2937:Generated_Source\PSoC4/capsense_Sensing.c ****     *******************************************************************************/
2938:Generated_Source\PSoC4/capsense_Sensing.c ****     void capsense_DischargeExtCapacitors(uint32 dischargeTime)
2939:Generated_Source\PSoC4/capsense_Sensing.c ****     {
 1700              		.loc 1 2939 0
 1701              		.cfi_startproc
 1702              		@ args = 0, pretend = 0, frame = 8
 1703              		@ frame_needed = 0, uses_anonymous_args = 0
 1704              	.LVL190:
 1705 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1706              		.cfi_def_cfa_offset 20
 1707              		.cfi_offset 4, -20
 1708              		.cfi_offset 5, -16
 1709              		.cfi_offset 6, -12
 1710              		.cfi_offset 7, -8
 1711              		.cfi_offset 14, -4
 1712 0002 5F46     		mov	r7, fp
 1713 0004 5646     		mov	r6, r10
 1714 0006 4D46     		mov	r5, r9
 1715 0008 4446     		mov	r4, r8
 1716 000a F0B4     		push	{r4, r5, r6, r7}
 1717              		.cfi_def_cfa_offset 36
 1718              		.cfi_offset 8, -36
 1719              		.cfi_offset 9, -32
 1720              		.cfi_offset 10, -28
 1721              		.cfi_offset 11, -24
 1722 000c 83B0     		sub	sp, sp, #12
 1723              		.cfi_def_cfa_offset 48
 1724 000e 0190     		str	r0, [sp, #4]
2940:Generated_Source\PSoC4/capsense_Sensing.c ****         uint32 hsiomReg;
2941:Generated_Source\PSoC4/capsense_Sensing.c ****         uint32 drReg;
2942:Generated_Source\PSoC4/capsense_Sensing.c ****         uint32 pcReg;
2943:Generated_Source\PSoC4/capsense_Sensing.c ****         uint32 newRegValue;
2944:Generated_Source\PSoC4/capsense_Sensing.c ****         uint8  interruptState;
2945:Generated_Source\PSoC4/capsense_Sensing.c **** 
2946:Generated_Source\PSoC4/capsense_Sensing.c ****         /* Store register state */
2947:Generated_Source\PSoC4/capsense_Sensing.c ****         hsiomReg = CY_GET_REG32(capsense_EXT_CAP_HSIOM_PTR) & capsense_EXT_CAP_HSIOM_MASK;
 1725              		.loc 1 2947 0
 1726 0010 2A4E     		ldr	r6, .L146
 1727 0012 3468     		ldr	r4, [r6]
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 87


 1728 0014 2A4B     		ldr	r3, .L146+4
 1729 0016 1C40     		ands	r4, r3
 1730 0018 0094     		str	r4, [sp]
 1731              	.LVL191:
2948:Generated_Source\PSoC4/capsense_Sensing.c ****         drReg = CY_GET_REG32(capsense_EXT_CAP_DR_PTR) & capsense_EXT_CAP_DR_MASK;
 1732              		.loc 1 2948 0
 1733 001a 2A4F     		ldr	r7, .L146+8
 1734 001c 3B68     		ldr	r3, [r7]
 1735 001e 0E22     		movs	r2, #14
 1736 0020 9246     		mov	r10, r2
 1737 0022 1A40     		ands	r2, r3
 1738 0024 9146     		mov	r9, r2
 1739              	.LVL192:
2949:Generated_Source\PSoC4/capsense_Sensing.c ****         pcReg = CY_GET_REG32(capsense_EXT_CAP_PC_PTR) & capsense_EXT_CAP_PC_MASK;
 1740              		.loc 1 2949 0
 1741 0026 284C     		ldr	r4, .L146+12
 1742              	.LVL193:
 1743 0028 2568     		ldr	r5, [r4]
 1744 002a 284B     		ldr	r3, .L146+16
 1745 002c 1D40     		ands	r5, r3
 1746 002e AB46     		mov	fp, r5
 1747              	.LVL194:
2950:Generated_Source\PSoC4/capsense_Sensing.c **** 
2951:Generated_Source\PSoC4/capsense_Sensing.c ****         /* Disconnect Ext Cap from AMUXBUS-A using HSIOM registers */
2952:Generated_Source\PSoC4/capsense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1748              		.loc 1 2952 0
 1749 0030 FFF7FEFF 		bl	CyEnterCriticalSection
 1750              	.LVL195:
2953:Generated_Source\PSoC4/capsense_Sensing.c ****         newRegValue = CY_GET_REG32(capsense_EXT_CAP_HSIOM_PTR);
 1751              		.loc 1 2953 0
 1752 0034 3368     		ldr	r3, [r6]
 1753              	.LVL196:
2954:Generated_Source\PSoC4/capsense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)capsense_EXT_CAP_HSIOM_MASK);
 1754              		.loc 1 2954 0
 1755 0036 264A     		ldr	r2, .L146+20
 1756 0038 9046     		mov	r8, r2
 1757 003a 1340     		ands	r3, r2
 1758              	.LVL197:
2955:Generated_Source\PSoC4/capsense_Sensing.c ****         CY_SET_REG32(capsense_EXT_CAP_HSIOM_PTR, newRegValue);
 1759              		.loc 1 2955 0
 1760 003c 3360     		str	r3, [r6]
 1761              	.LVL198:
2956:Generated_Source\PSoC4/capsense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1762              		.loc 1 2956 0
 1763 003e FFF7FEFF 		bl	CyExitCriticalSection
 1764              	.LVL199:
2957:Generated_Source\PSoC4/capsense_Sensing.c **** 
2958:Generated_Source\PSoC4/capsense_Sensing.c ****         /* Set output port register to 0 to connect to GND */
2959:Generated_Source\PSoC4/capsense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1765              		.loc 1 2959 0
 1766 0042 FFF7FEFF 		bl	CyEnterCriticalSection
 1767              	.LVL200:
2960:Generated_Source\PSoC4/capsense_Sensing.c ****         newRegValue = CY_GET_REG32(capsense_EXT_CAP_DR_PTR);
 1768              		.loc 1 2960 0
 1769 0046 3B68     		ldr	r3, [r7]
 1770              	.LVL201:
2961:Generated_Source\PSoC4/capsense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)capsense_EXT_CAP_DR_MASK);
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 88


 1771              		.loc 1 2961 0
 1772 0048 5246     		mov	r2, r10
 1773 004a 9343     		bics	r3, r2
 1774              	.LVL202:
2962:Generated_Source\PSoC4/capsense_Sensing.c ****         CY_SET_REG32(capsense_EXT_CAP_DR_PTR, newRegValue);
 1775              		.loc 1 2962 0
 1776 004c 3B60     		str	r3, [r7]
2963:Generated_Source\PSoC4/capsense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1777              		.loc 1 2963 0
 1778 004e FFF7FEFF 		bl	CyExitCriticalSection
 1779              	.LVL203:
2964:Generated_Source\PSoC4/capsense_Sensing.c **** 
2965:Generated_Source\PSoC4/capsense_Sensing.c ****         /* Set port configuration register (drive mode) in STRONG mode */
2966:Generated_Source\PSoC4/capsense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1780              		.loc 1 2966 0
 1781 0052 FFF7FEFF 		bl	CyEnterCriticalSection
 1782              	.LVL204:
2967:Generated_Source\PSoC4/capsense_Sensing.c ****         newRegValue = CY_GET_REG32(capsense_EXT_CAP_PC_PTR);
 1783              		.loc 1 2967 0
 1784 0056 2368     		ldr	r3, [r4]
 1785              	.LVL205:
2968:Generated_Source\PSoC4/capsense_Sensing.c ****         newRegValue &= (uint32)(~((uint32)capsense_EXT_CAP_PC_MASK));
 1786              		.loc 1 2968 0
 1787 0058 1E4D     		ldr	r5, .L146+24
 1788              	.LVL206:
 1789 005a 2B40     		ands	r3, r5
 1790              	.LVL207:
2969:Generated_Source\PSoC4/capsense_Sensing.c ****         newRegValue |= (capsense_EXT_CAP_PC_STRONG_CFG);
 1791              		.loc 1 2969 0
 1792 005c DB22     		movs	r2, #219
 1793 005e 1201     		lsls	r2, r2, #4
 1794 0060 1343     		orrs	r3, r2
 1795              	.LVL208:
2970:Generated_Source\PSoC4/capsense_Sensing.c ****         CY_SET_REG32(capsense_EXT_CAP_PC_PTR, newRegValue);
 1796              		.loc 1 2970 0
 1797 0062 2360     		str	r3, [r4]
2971:Generated_Source\PSoC4/capsense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1798              		.loc 1 2971 0
 1799 0064 FFF7FEFF 		bl	CyExitCriticalSection
 1800              	.LVL209:
2972:Generated_Source\PSoC4/capsense_Sensing.c **** 
2973:Generated_Source\PSoC4/capsense_Sensing.c ****         /* Delay to discharge external capacitors */
2974:Generated_Source\PSoC4/capsense_Sensing.c ****         CyDelayUs((uint16)dischargeTime);
 1801              		.loc 1 2974 0
 1802 0068 6B46     		mov	r3, sp
 1803 006a 9888     		ldrh	r0, [r3, #4]
 1804 006c FFF7FEFF 		bl	CyDelayUs
 1805              	.LVL210:
2975:Generated_Source\PSoC4/capsense_Sensing.c **** 
2976:Generated_Source\PSoC4/capsense_Sensing.c ****         /* Restore previous register values */
2977:Generated_Source\PSoC4/capsense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1806              		.loc 1 2977 0
 1807 0070 FFF7FEFF 		bl	CyEnterCriticalSection
 1808              	.LVL211:
2978:Generated_Source\PSoC4/capsense_Sensing.c ****         newRegValue = CY_GET_REG32(capsense_EXT_CAP_PC_PTR);
 1809              		.loc 1 2978 0
 1810 0074 2368     		ldr	r3, [r4]
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 89


 1811              	.LVL212:
2979:Generated_Source\PSoC4/capsense_Sensing.c ****         newRegValue &= (uint32)(~((uint32)capsense_EXT_CAP_PC_MASK));
 1812              		.loc 1 2979 0
 1813 0076 1D40     		ands	r5, r3
 1814              	.LVL213:
2980:Generated_Source\PSoC4/capsense_Sensing.c ****         newRegValue |= pcReg;
 1815              		.loc 1 2980 0
 1816 0078 5A46     		mov	r2, fp
 1817 007a 1543     		orrs	r5, r2
 1818              	.LVL214:
2981:Generated_Source\PSoC4/capsense_Sensing.c ****         CY_SET_REG32(capsense_EXT_CAP_PC_PTR, newRegValue);
 1819              		.loc 1 2981 0
 1820 007c 2560     		str	r5, [r4]
2982:Generated_Source\PSoC4/capsense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1821              		.loc 1 2982 0
 1822 007e FFF7FEFF 		bl	CyExitCriticalSection
 1823              	.LVL215:
2983:Generated_Source\PSoC4/capsense_Sensing.c **** 
2984:Generated_Source\PSoC4/capsense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1824              		.loc 1 2984 0
 1825 0082 FFF7FEFF 		bl	CyEnterCriticalSection
 1826              	.LVL216:
2985:Generated_Source\PSoC4/capsense_Sensing.c ****         newRegValue = CY_GET_REG32(capsense_EXT_CAP_DR_PTR);
 1827              		.loc 1 2985 0
 1828 0086 3B68     		ldr	r3, [r7]
 1829              	.LVL217:
2986:Generated_Source\PSoC4/capsense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)capsense_EXT_CAP_DR_MASK);
 1830              		.loc 1 2986 0
 1831 0088 5246     		mov	r2, r10
 1832 008a 9343     		bics	r3, r2
 1833              	.LVL218:
2987:Generated_Source\PSoC4/capsense_Sensing.c ****         newRegValue |= drReg;
 1834              		.loc 1 2987 0
 1835 008c 4A46     		mov	r2, r9
 1836 008e 1343     		orrs	r3, r2
 1837              	.LVL219:
2988:Generated_Source\PSoC4/capsense_Sensing.c ****         CY_SET_REG32(capsense_EXT_CAP_DR_PTR, newRegValue);
 1838              		.loc 1 2988 0
 1839 0090 3B60     		str	r3, [r7]
2989:Generated_Source\PSoC4/capsense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1840              		.loc 1 2989 0
 1841 0092 FFF7FEFF 		bl	CyExitCriticalSection
 1842              	.LVL220:
2990:Generated_Source\PSoC4/capsense_Sensing.c **** 
2991:Generated_Source\PSoC4/capsense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1843              		.loc 1 2991 0
 1844 0096 FFF7FEFF 		bl	CyEnterCriticalSection
 1845              	.LVL221:
2992:Generated_Source\PSoC4/capsense_Sensing.c ****         newRegValue = CY_GET_REG32(capsense_EXT_CAP_HSIOM_PTR);
 1846              		.loc 1 2992 0
 1847 009a 3368     		ldr	r3, [r6]
 1848              	.LVL222:
2993:Generated_Source\PSoC4/capsense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)capsense_EXT_CAP_HSIOM_MASK);
 1849              		.loc 1 2993 0
 1850 009c 4246     		mov	r2, r8
 1851 009e 1A40     		ands	r2, r3
 1852 00a0 1400     		movs	r4, r2
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 90


 1853              	.LVL223:
2994:Generated_Source\PSoC4/capsense_Sensing.c ****         newRegValue |= hsiomReg;
 1854              		.loc 1 2994 0
 1855 00a2 009B     		ldr	r3, [sp]
 1856 00a4 1C43     		orrs	r4, r3
 1857              	.LVL224:
2995:Generated_Source\PSoC4/capsense_Sensing.c ****         CY_SET_REG32(capsense_EXT_CAP_HSIOM_PTR, newRegValue);
 1858              		.loc 1 2995 0
 1859 00a6 3460     		str	r4, [r6]
2996:Generated_Source\PSoC4/capsense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1860              		.loc 1 2996 0
 1861 00a8 FFF7FEFF 		bl	CyExitCriticalSection
 1862              	.LVL225:
2997:Generated_Source\PSoC4/capsense_Sensing.c ****     }
 1863              		.loc 1 2997 0
 1864 00ac 03B0     		add	sp, sp, #12
 1865              		@ sp needed
 1866              	.LVL226:
 1867              	.LVL227:
 1868              	.LVL228:
 1869 00ae 3CBC     		pop	{r2, r3, r4, r5}
 1870 00b0 9046     		mov	r8, r2
 1871 00b2 9946     		mov	r9, r3
 1872 00b4 A246     		mov	r10, r4
 1873 00b6 AB46     		mov	fp, r5
 1874 00b8 F0BD     		pop	{r4, r5, r6, r7, pc}
 1875              	.L147:
 1876 00ba C046     		.align	2
 1877              	.L146:
 1878 00bc 00040240 		.word	1073873920
 1879 00c0 F0FF0000 		.word	65520
 1880 00c4 00040440 		.word	1074004992
 1881 00c8 08040440 		.word	1074005000
 1882 00cc F80F0000 		.word	4088
 1883 00d0 0F00FFFF 		.word	-65521
 1884 00d4 07F0FFFF 		.word	-4089
 1885              		.cfi_endproc
 1886              	.LFE27:
 1887              		.size	capsense_DischargeExtCapacitors, .-capsense_DischargeExtCapacitors
 1888              		.section	.text.capsense_SetInactiveElectrodeState,"ax",%progbits
 1889              		.align	2
 1890              		.global	capsense_SetInactiveElectrodeState
 1891              		.code	16
 1892              		.thumb_func
 1893              		.type	capsense_SetInactiveElectrodeState, %function
 1894              	capsense_SetInactiveElectrodeState:
 1895              	.LFB28:
2998:Generated_Source\PSoC4/capsense_Sensing.c **** 
2999:Generated_Source\PSoC4/capsense_Sensing.c **** #endif /* (capsense_ENABLE == capsense_CSDV2) */
3000:Generated_Source\PSoC4/capsense_Sensing.c **** 
3001:Generated_Source\PSoC4/capsense_Sensing.c **** 
3002:Generated_Source\PSoC4/capsense_Sensing.c **** #if (capsense_ENABLE == capsense_CSDV1)
3003:Generated_Source\PSoC4/capsense_Sensing.c ****     /*******************************************************************************
3004:Generated_Source\PSoC4/capsense_Sensing.c ****     * Function Name: capsense_DischargeExtCapacitors
3005:Generated_Source\PSoC4/capsense_Sensing.c ****     ****************************************************************************//**
3006:Generated_Source\PSoC4/capsense_Sensing.c ****     *
3007:Generated_Source\PSoC4/capsense_Sensing.c ****     * \brief
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 91


3008:Generated_Source\PSoC4/capsense_Sensing.c ****     *  The internal function discharge available external capacitors.
3009:Generated_Source\PSoC4/capsense_Sensing.c ****     *
3010:Generated_Source\PSoC4/capsense_Sensing.c ****     * \details
3011:Generated_Source\PSoC4/capsense_Sensing.c ****     *  The function discharge available external capacitors by connection them
3012:Generated_Source\PSoC4/capsense_Sensing.c ****     *  to GND using STRONG GPIO drive mode. Additionaly, the function disconnects
3013:Generated_Source\PSoC4/capsense_Sensing.c ****     *  the capacitors from analog mux buses if connected.
3014:Generated_Source\PSoC4/capsense_Sensing.c ****     *  Note: the function does not restore the connection to analog mux busses
3015:Generated_Source\PSoC4/capsense_Sensing.c ****     *  and supposes that all the capacitors belong to a single device port.
3016:Generated_Source\PSoC4/capsense_Sensing.c ****     *
3017:Generated_Source\PSoC4/capsense_Sensing.c ****     * \param
3018:Generated_Source\PSoC4/capsense_Sensing.c ****     *  dischargeTime The discharge time in us.
3019:Generated_Source\PSoC4/capsense_Sensing.c ****     *
3020:Generated_Source\PSoC4/capsense_Sensing.c ****     *******************************************************************************/
3021:Generated_Source\PSoC4/capsense_Sensing.c ****     void capsense_DischargeExtCapacitors(uint32 dischargeTime)
3022:Generated_Source\PSoC4/capsense_Sensing.c ****     {
3023:Generated_Source\PSoC4/capsense_Sensing.c ****         /* Store the pin configuration, the CMOD capacitor is connected to. */
3024:Generated_Source\PSoC4/capsense_Sensing.c ****         #if (capsense_ENABLE == capsense_CSD_EN)
3025:Generated_Source\PSoC4/capsense_Sensing.c ****             uint32 cmodHsiom = CY_GET_REG32(capsense_CMOD_HSIOM_PTR) & capsense_EXT_CAP_HSIOM_MASK_
3026:Generated_Source\PSoC4/capsense_Sensing.c ****             uint32 cmodDr = CY_GET_REG32(capsense_CMOD_DR_PTR) & capsense_EXT_CAP_DR_MASK_CMOD;
3027:Generated_Source\PSoC4/capsense_Sensing.c ****             uint32 cmodPc = CY_GET_REG32(capsense_CMOD_PC_PTR) & capsense_EXT_CAP_PC_MASK_CMOD;
3028:Generated_Source\PSoC4/capsense_Sensing.c **** 
3029:Generated_Source\PSoC4/capsense_Sensing.c ****             /* Store the pin configuration, the CSH capacitor is connected to. */
3030:Generated_Source\PSoC4/capsense_Sensing.c ****             #if((capsense_ENABLE == capsense_CSD_SHIELD_EN) &&\
3031:Generated_Source\PSoC4/capsense_Sensing.c ****                 (capsense_ENABLE == capsense_CSD_SHIELD_TANK_EN))
3032:Generated_Source\PSoC4/capsense_Sensing.c ****                 uint32 cshHsiom = CY_GET_REG32(capsense_CSH_HSIOM_PTR) & capsense_EXT_CAP_HSIOM_MAS
3033:Generated_Source\PSoC4/capsense_Sensing.c ****                 uint32 cshDr = CY_GET_REG32(capsense_CSH_DR_PTR) & capsense_EXT_CAP_DR_MASK_CSH;
3034:Generated_Source\PSoC4/capsense_Sensing.c ****                 uint32 cshPc = CY_GET_REG32(capsense_CSH_PC_PTR) & capsense_EXT_CAP_PC_MASK_CSH;
3035:Generated_Source\PSoC4/capsense_Sensing.c ****             #endif
3036:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif
3037:Generated_Source\PSoC4/capsense_Sensing.c **** 
3038:Generated_Source\PSoC4/capsense_Sensing.c ****         #if (capsense_ENABLE == capsense_CSX_EN)
3039:Generated_Source\PSoC4/capsense_Sensing.c ****             /* Store the pin configuration, the CintA capacitor is connected to. */
3040:Generated_Source\PSoC4/capsense_Sensing.c ****             uint32 cintAHsiom = CY_GET_REG32(capsense_CintA_HSIOM_PTR) & capsense_EXT_CAP_HSIOM_MAS
3041:Generated_Source\PSoC4/capsense_Sensing.c ****             uint32 cintADr = CY_GET_REG32(capsense_CintA_DR_PTR) & capsense_EXT_CAP_DR_MASK_CINTA;
3042:Generated_Source\PSoC4/capsense_Sensing.c ****             uint32 cintAPc = CY_GET_REG32(capsense_CintA_PC_PTR) & capsense_EXT_CAP_PC_MASK_CINTA;
3043:Generated_Source\PSoC4/capsense_Sensing.c **** 
3044:Generated_Source\PSoC4/capsense_Sensing.c ****             /* Store the pin configuration, the CintB capacitor is connected to. */
3045:Generated_Source\PSoC4/capsense_Sensing.c ****             uint32 cintBHsiom = CY_GET_REG32(capsense_CintB_HSIOM_PTR) & capsense_EXT_CAP_HSIOM_MAS
3046:Generated_Source\PSoC4/capsense_Sensing.c ****             uint32 cintBDr = CY_GET_REG32(capsense_CintB_DR_PTR) & capsense_EXT_CAP_DR_MASK_CINTB;
3047:Generated_Source\PSoC4/capsense_Sensing.c ****             uint32 cintBPc = CY_GET_REG32(capsense_CintB_PC_PTR) & capsense_EXT_CAP_PC_MASK_CINTB;
3048:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif
3049:Generated_Source\PSoC4/capsense_Sensing.c **** 
3050:Generated_Source\PSoC4/capsense_Sensing.c ****         #if (capsense_ENABLE == capsense_CSD_EN)
3051:Generated_Source\PSoC4/capsense_Sensing.c ****             /* Disconnect the CMOD capacitor from the AMUXBUS and connect it to GND. */
3052:Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_WriteBitsSafe(capsense_CMOD_HSIOM_PTR, capsense_EXT_CAP_HSIOM_MASK_CMOD,
3053:Generated_Source\PSoC4/capsense_Sensing.c ****                                            capsense_HSIOM_SEL_GPIO);
3054:Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_WriteBitsSafe(capsense_CMOD_DR_PTR, capsense_EXT_CAP_DR_MASK_CMOD, 0u);
3055:Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_WriteBitsSafe(capsense_CMOD_PC_PTR, capsense_EXT_CAP_PC_MASK_CMOD,
3056:Generated_Source\PSoC4/capsense_Sensing.c ****                                            capsense_EXT_CAP_PC_STRONG_CFG_CMOD);
3057:Generated_Source\PSoC4/capsense_Sensing.c **** 
3058:Generated_Source\PSoC4/capsense_Sensing.c ****             #if((capsense_ENABLE == capsense_CSD_SHIELD_EN) &&\
3059:Generated_Source\PSoC4/capsense_Sensing.c ****                 (capsense_ENABLE == capsense_CSD_SHIELD_TANK_EN))
3060:Generated_Source\PSoC4/capsense_Sensing.c ****                 /* Disconnect the CSH capacitor from the AMUXBUS and connect it to GND. */
3061:Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_WriteBitsSafe(capsense_CSH_HSIOM_PTR, capsense_EXT_CAP_HSIOM_MASK_CSH,
3062:Generated_Source\PSoC4/capsense_Sensing.c ****                                                capsense_HSIOM_SEL_GPIO);
3063:Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_WriteBitsSafe(capsense_CSH_DR_PTR, capsense_EXT_CAP_DR_MASK_CSH, 0u);
3064:Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_WriteBitsSafe(capsense_CSH_PC_PTR, capsense_EXT_CAP_PC_MASK_CSH,
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 92


3065:Generated_Source\PSoC4/capsense_Sensing.c ****                                                capsense_EXT_CAP_PC_STRONG_CFG_CSH);
3066:Generated_Source\PSoC4/capsense_Sensing.c ****             #endif
3067:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif
3068:Generated_Source\PSoC4/capsense_Sensing.c **** 
3069:Generated_Source\PSoC4/capsense_Sensing.c ****         #if (capsense_ENABLE == capsense_CSX_EN)
3070:Generated_Source\PSoC4/capsense_Sensing.c ****             /* Disconnect the CintA capacitor from the AMUXBUS and connect it to GND. */
3071:Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_WriteBitsSafe(capsense_CintA_HSIOM_PTR, capsense_EXT_CAP_HSIOM_MASK_CINTA,
3072:Generated_Source\PSoC4/capsense_Sensing.c ****                                            capsense_HSIOM_SEL_GPIO);
3073:Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_WriteBitsSafe(capsense_CintA_DR_PTR, capsense_EXT_CAP_DR_MASK_CINTA, 0u);
3074:Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_WriteBitsSafe(capsense_CintA_PC_PTR, capsense_EXT_CAP_PC_MASK_CINTA,
3075:Generated_Source\PSoC4/capsense_Sensing.c ****                                            capsense_EXT_CAP_PC_STRONG_CFG_CINTA);
3076:Generated_Source\PSoC4/capsense_Sensing.c **** 
3077:Generated_Source\PSoC4/capsense_Sensing.c ****             /* Disconnect the CintB capacitor from the AMUXBUS and connect it to GND. */
3078:Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_WriteBitsSafe(capsense_CintB_HSIOM_PTR, capsense_EXT_CAP_HSIOM_MASK_CINTB,
3079:Generated_Source\PSoC4/capsense_Sensing.c ****                                            capsense_HSIOM_SEL_GPIO);
3080:Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_WriteBitsSafe(capsense_CintB_DR_PTR, capsense_EXT_CAP_DR_MASK_CINTB, 0u);
3081:Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_WriteBitsSafe(capsense_CintB_PC_PTR, capsense_EXT_CAP_PC_MASK_CINTB,
3082:Generated_Source\PSoC4/capsense_Sensing.c ****                                            capsense_EXT_CAP_PC_STRONG_CFG_CINTB);
3083:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif
3084:Generated_Source\PSoC4/capsense_Sensing.c **** 
3085:Generated_Source\PSoC4/capsense_Sensing.c ****         /* Delay to discharge external capacitors */
3086:Generated_Source\PSoC4/capsense_Sensing.c ****         CyDelayUs((uint16)dischargeTime);
3087:Generated_Source\PSoC4/capsense_Sensing.c **** 
3088:Generated_Source\PSoC4/capsense_Sensing.c ****         #if (capsense_ENABLE == capsense_CSD_EN)
3089:Generated_Source\PSoC4/capsense_Sensing.c ****             /* Restore the pin configuration, the CMOD capacitor is connected to. */
3090:Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_WriteBitsSafe(capsense_CMOD_PC_PTR,
3091:Generated_Source\PSoC4/capsense_Sensing.c ****                                            capsense_EXT_CAP_PC_MASK_CMOD, cmodPc);
3092:Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_WriteBitsSafe(capsense_CMOD_DR_PTR,
3093:Generated_Source\PSoC4/capsense_Sensing.c ****                                            capsense_EXT_CAP_DR_MASK_CMOD, cmodDr);
3094:Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_WriteBitsSafe(capsense_CMOD_HSIOM_PTR,
3095:Generated_Source\PSoC4/capsense_Sensing.c ****                                            capsense_EXT_CAP_HSIOM_MASK_CMOD, cmodHsiom);
3096:Generated_Source\PSoC4/capsense_Sensing.c **** 
3097:Generated_Source\PSoC4/capsense_Sensing.c ****             #if((capsense_ENABLE == capsense_CSD_SHIELD_EN) &&\
3098:Generated_Source\PSoC4/capsense_Sensing.c ****                 (capsense_ENABLE == capsense_CSD_SHIELD_TANK_EN))
3099:Generated_Source\PSoC4/capsense_Sensing.c ****                 /* Restore the pin configuration, the CSH capacitor is connected to. */
3100:Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_WriteBitsSafe(capsense_CSH_PC_PTR,
3101:Generated_Source\PSoC4/capsense_Sensing.c ****                                                capsense_EXT_CAP_PC_MASK_CSH, cshPc);
3102:Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_WriteBitsSafe(capsense_CSH_DR_PTR,
3103:Generated_Source\PSoC4/capsense_Sensing.c ****                                                capsense_EXT_CAP_DR_MASK_CSH, cshDr);
3104:Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_WriteBitsSafe(capsense_CSH_HSIOM_PTR,
3105:Generated_Source\PSoC4/capsense_Sensing.c ****                                                capsense_EXT_CAP_HSIOM_MASK_CSH, cshHsiom);
3106:Generated_Source\PSoC4/capsense_Sensing.c ****             #endif
3107:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif
3108:Generated_Source\PSoC4/capsense_Sensing.c **** 
3109:Generated_Source\PSoC4/capsense_Sensing.c ****         #if (capsense_ENABLE == capsense_CSX_EN)
3110:Generated_Source\PSoC4/capsense_Sensing.c ****             /* Restore the pin configuration, the CintA capacitor is connected to. */
3111:Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_WriteBitsSafe(capsense_CintA_PC_PTR,
3112:Generated_Source\PSoC4/capsense_Sensing.c ****                                            capsense_EXT_CAP_PC_MASK_CINTA, cintAPc);
3113:Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_WriteBitsSafe(capsense_CintA_DR_PTR,
3114:Generated_Source\PSoC4/capsense_Sensing.c ****                                            capsense_EXT_CAP_DR_MASK_CINTA, cintADr);
3115:Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_WriteBitsSafe(capsense_CintA_HSIOM_PTR,
3116:Generated_Source\PSoC4/capsense_Sensing.c ****                                            capsense_EXT_CAP_HSIOM_MASK_CINTA, cintAHsiom);
3117:Generated_Source\PSoC4/capsense_Sensing.c **** 
3118:Generated_Source\PSoC4/capsense_Sensing.c ****             /* Restore the pin configuration, the CintB capacitor is connected to. */
3119:Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_WriteBitsSafe(capsense_CintB_PC_PTR,
3120:Generated_Source\PSoC4/capsense_Sensing.c ****                                            capsense_EXT_CAP_PC_MASK_CINTB, cintBPc);
3121:Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_WriteBitsSafe(capsense_CintB_DR_PTR,
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 93


3122:Generated_Source\PSoC4/capsense_Sensing.c ****                                            capsense_EXT_CAP_DR_MASK_CINTB, cintBDr);
3123:Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_WriteBitsSafe(capsense_CintB_HSIOM_PTR,
3124:Generated_Source\PSoC4/capsense_Sensing.c ****                                            capsense_EXT_CAP_HSIOM_MASK_CINTB, cintBHsiom);
3125:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif
3126:Generated_Source\PSoC4/capsense_Sensing.c ****     }
3127:Generated_Source\PSoC4/capsense_Sensing.c **** #endif /* (capsense_ENABLE == capsense_CSDV1) */
3128:Generated_Source\PSoC4/capsense_Sensing.c **** 
3129:Generated_Source\PSoC4/capsense_Sensing.c **** 
3130:Generated_Source\PSoC4/capsense_Sensing.c **** #if((capsense_ENABLE == capsense_CSD_EN) ||\
3131:Generated_Source\PSoC4/capsense_Sensing.c ****     (capsense_ENABLE == capsense_CSX_EN))
3132:Generated_Source\PSoC4/capsense_Sensing.c ****     /*******************************************************************************
3133:Generated_Source\PSoC4/capsense_Sensing.c ****     * Function Name: capsense_SetInactiveElectrodeState
3134:Generated_Source\PSoC4/capsense_Sensing.c ****     ****************************************************************************//**
3135:Generated_Source\PSoC4/capsense_Sensing.c ****     *
3136:Generated_Source\PSoC4/capsense_Sensing.c ****     * \brief
3137:Generated_Source\PSoC4/capsense_Sensing.c ****     *  The function updates the RAM data structure with the desired state of inactive
3138:Generated_Source\PSoC4/capsense_Sensing.c ****     *  electrodes for the specified operation mode. The state of pins is not changed
3139:Generated_Source\PSoC4/capsense_Sensing.c ****     *  in scope of this routine.
3140:Generated_Source\PSoC4/capsense_Sensing.c ****     *
3141:Generated_Source\PSoC4/capsense_Sensing.c ****     * \details
3142:Generated_Source\PSoC4/capsense_Sensing.c ****     *  The function updates the following registers of RAM data structure:
3143:Generated_Source\PSoC4/capsense_Sensing.c ****     *   - capsense_SCAN_CSD_ISC_VALUE - Connection of inactive CSD and CSX
3144:Generated_Source\PSoC4/capsense_Sensing.c ****     *     electrodes during the regular CSD scan. By default, this register is initialized
3145:Generated_Source\PSoC4/capsense_Sensing.c ****     *     with the value of Inactive Sensor Connection combobox on the CSD Settings tab.
3146:Generated_Source\PSoC4/capsense_Sensing.c ****     *     The capsense_SCAN_CSD_E value should be used as the Mode parameter
3147:Generated_Source\PSoC4/capsense_Sensing.c ****     *     to update this register.
3148:Generated_Source\PSoC4/capsense_Sensing.c ****     *
3149:Generated_Source\PSoC4/capsense_Sensing.c ****     *   - capsense_SCAN_CSX_ISC_VALUE - Connection of inactive CSD, CSX and
3150:Generated_Source\PSoC4/capsense_Sensing.c ****     *     the dedicated Shield electrodes during the regular CSX scan. By default, this
3151:Generated_Source\PSoC4/capsense_Sensing.c ****     *     register is initialized with the value of Inactive Sensor Connection combobox
3152:Generated_Source\PSoC4/capsense_Sensing.c ****     *     on the CSX Settings tab.
3153:Generated_Source\PSoC4/capsense_Sensing.c ****     *     The capsense_SCAN_CSX_E value should be used as the Mode parameter
3154:Generated_Source\PSoC4/capsense_Sensing.c ****     *     to update this register.
3155:Generated_Source\PSoC4/capsense_Sensing.c ****     *
3156:Generated_Source\PSoC4/capsense_Sensing.c ****     *   - capsense_BIST_CSD_SNS_CAP_ISC_VALUE - Connection of inactive CSD and CSX
3157:Generated_Source\PSoC4/capsense_Sensing.c ****     *     electrodes during measurement of CSD electrodes capacitance.
3158:Generated_Source\PSoC4/capsense_Sensing.c ****     *     This register is initialized with the capsense_SNS_CONNECTION_GROUND value
3159:Generated_Source\PSoC4/capsense_Sensing.c ****     *     by default.
3160:Generated_Source\PSoC4/capsense_Sensing.c ****     *     The capsense_BIST_CSD_SNS_CAP_E value should be used as the Mode parameter
3161:Generated_Source\PSoC4/capsense_Sensing.c ****     *     to update this register.
3162:Generated_Source\PSoC4/capsense_Sensing.c ****     *
3163:Generated_Source\PSoC4/capsense_Sensing.c ****     *   - capsense_BIST_CSX_SNS_CAP_ISC_VALUE - Connection of inactive CSD, CSX and
3164:Generated_Source\PSoC4/capsense_Sensing.c ****     *     the dedicated Shield electrodes during measurement of CSX electrodes (Tx and Rx)
3165:Generated_Source\PSoC4/capsense_Sensing.c ****     *     capacitance. This register is initialized with the capsense_SNS_CONNECTION_GROUND
3166:Generated_Source\PSoC4/capsense_Sensing.c ****     *     value by default.
3167:Generated_Source\PSoC4/capsense_Sensing.c ****     *     The capsense_BIST_CSX_SNS_CAP_E value should be used as the Mode parameter
3168:Generated_Source\PSoC4/capsense_Sensing.c ****     *     to update this register.
3169:Generated_Source\PSoC4/capsense_Sensing.c ****     *
3170:Generated_Source\PSoC4/capsense_Sensing.c ****     *   - capsense_BIST_CSD_SH_CAP_ISC_VALUE - Connection of inactive CSD and CSX electrodes
3171:Generated_Source\PSoC4/capsense_Sensing.c ****     *     measurement of dedicated Shield  electrodes capacitance. This register is initialized wit
3172:Generated_Source\PSoC4/capsense_Sensing.c ****     *     the capsense_SNS_CONNECTION_GROUND value by default.
3173:Generated_Source\PSoC4/capsense_Sensing.c ****     *     The capsense_BIST_CSD_SH_CAP_E value should be used as the Mode parameter
3174:Generated_Source\PSoC4/capsense_Sensing.c ****     *     to update this register.
3175:Generated_Source\PSoC4/capsense_Sensing.c ****     *
3176:Generated_Source\PSoC4/capsense_Sensing.c ****     * \param
3177:Generated_Source\PSoC4/capsense_Sensing.c ****     *  mode Operation mode, the state of inactive sensors should be configured for.
3178:Generated_Source\PSoC4/capsense_Sensing.c ****     *       This parameter can take the following values:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 94


3179:Generated_Source\PSoC4/capsense_Sensing.c ****     *        - capsense_SCAN_CSD_E - Regular CSD scan.
3180:Generated_Source\PSoC4/capsense_Sensing.c ****     *        - capsense_SCAN_CSX_E - Regular CSX scan.
3181:Generated_Source\PSoC4/capsense_Sensing.c ****     *        - capsense_BIST_CSD_SNS_CAP_E - Measurement of the CSD sensor capacitance.
3182:Generated_Source\PSoC4/capsense_Sensing.c ****     *        - capsense_BIST_CSX_SNS_CAP_E - Measurement of the CSX electrode capacitance.
3183:Generated_Source\PSoC4/capsense_Sensing.c ****     *        - capsense_BIST_CSD_SH_CAP_E - Measurement of the dedicated CSD Shield
3184:Generated_Source\PSoC4/capsense_Sensing.c ****     *          electrode capacitance.
3185:Generated_Source\PSoC4/capsense_Sensing.c ****     *
3186:Generated_Source\PSoC4/capsense_Sensing.c ****     * \param
3187:Generated_Source\PSoC4/capsense_Sensing.c ****     *  state The desired state of inactive sensors.
3188:Generated_Source\PSoC4/capsense_Sensing.c ****     *        This parameter can take the following values:
3189:Generated_Source\PSoC4/capsense_Sensing.c ****     *         - capsense_SNS_CONNECTION_GROUND - Inactive sensors are connected to the ground.
3190:Generated_Source\PSoC4/capsense_Sensing.c ****     *         - capsense_SNS_CONNECTION_HIGHZ - Inactive sensors are floating (not
3191:Generated_Source\PSoC4/capsense_Sensing.c ****     *           connected to GND or Shield).
3192:Generated_Source\PSoC4/capsense_Sensing.c ****     *         - capsense_SNS_CONNECTION_SHIELD - Inactive sensors are connected to the shield.
3193:Generated_Source\PSoC4/capsense_Sensing.c ****     *           This option is available only if the Enable shield electrode check box is set.
3194:Generated_Source\PSoC4/capsense_Sensing.c ****     *           At least one dedicated shield electrode is required to use the
3195:Generated_Source\PSoC4/capsense_Sensing.c ****     *           capsense_SNS_CONNECTION_SHIELD option for the capsense_BIST_CSD_SH_CAP_E
3196:Generated_Source\PSoC4/capsense_Sensing.c ****     *           operation mode.
3197:Generated_Source\PSoC4/capsense_Sensing.c ****     *
3198:Generated_Source\PSoC4/capsense_Sensing.c ****     * \return
3199:Generated_Source\PSoC4/capsense_Sensing.c ****     *  Returns the status of the operation:
3200:Generated_Source\PSoC4/capsense_Sensing.c ****     *  - CYRET_SUCCESS - The operation was successfully completed.
3201:Generated_Source\PSoC4/capsense_Sensing.c ****     *  - CYRET_BAD_PARAM - The input parameter is invalid.
3202:Generated_Source\PSoC4/capsense_Sensing.c ****     *
3203:Generated_Source\PSoC4/capsense_Sensing.c ****     *******************************************************************************/
3204:Generated_Source\PSoC4/capsense_Sensing.c ****     uint32_t capsense_SetInactiveElectrodeState(capsense_OPERATION_MODE_ENUM mode, uint32_t state)
3205:Generated_Source\PSoC4/capsense_Sensing.c ****     {
 1896              		.loc 1 3205 0
 1897              		.cfi_startproc
 1898              		@ args = 0, pretend = 0, frame = 0
 1899              		@ frame_needed = 0, uses_anonymous_args = 0
 1900              	.LVL229:
 1901 0000 10B5     		push	{r4, lr}
 1902              		.cfi_def_cfa_offset 8
 1903              		.cfi_offset 4, -8
 1904              		.cfi_offset 14, -4
 1905              	.LVL230:
3206:Generated_Source\PSoC4/capsense_Sensing.c ****         uint32_t retVal = CYRET_SUCCESS;
3207:Generated_Source\PSoC4/capsense_Sensing.c **** 
3208:Generated_Source\PSoC4/capsense_Sensing.c ****         switch(mode)
 1906              		.loc 1 3208 0
 1907 0002 0028     		cmp	r0, #0
 1908 0004 02D0     		beq	.L150
 1909 0006 0128     		cmp	r0, #1
 1910 0008 05D0     		beq	.L151
 1911 000a 09E0     		b	.L153
 1912              	.L150:
3209:Generated_Source\PSoC4/capsense_Sensing.c ****         {
3210:Generated_Source\PSoC4/capsense_Sensing.c ****         #if(capsense_ENABLE == capsense_CSD_EN)
3211:Generated_Source\PSoC4/capsense_Sensing.c ****             case capsense_SCAN_CSD_E:
3212:Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_dsRam.scanCsdISC = (uint8)state;
 1913              		.loc 1 3212 0
 1914 000c B823     		movs	r3, #184
 1915 000e 074A     		ldr	r2, .L154
 1916 0010 D154     		strb	r1, [r2, r3]
3206:Generated_Source\PSoC4/capsense_Sensing.c ****         uint32_t retVal = CYRET_SUCCESS;
 1917              		.loc 1 3206 0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 95


 1918 0012 0020     		movs	r0, #0
 1919              	.LVL231:
3213:Generated_Source\PSoC4/capsense_Sensing.c ****                 break;
 1920              		.loc 1 3213 0
 1921 0014 08E0     		b	.L152
 1922              	.LVL232:
 1923              	.L151:
3214:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif
3215:Generated_Source\PSoC4/capsense_Sensing.c **** 
3216:Generated_Source\PSoC4/capsense_Sensing.c ****         #if(capsense_ENABLE == capsense_CSX_EN)
3217:Generated_Source\PSoC4/capsense_Sensing.c ****             case capsense_SCAN_CSX_E:
3218:Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_dsRam.scanCsxISC = (uint8)state;
 1924              		.loc 1 3218 0
 1925 0016 B923     		movs	r3, #185
 1926 0018 044A     		ldr	r2, .L154
 1927 001a D154     		strb	r1, [r2, r3]
3206:Generated_Source\PSoC4/capsense_Sensing.c **** 
 1928              		.loc 1 3206 0
 1929 001c 0020     		movs	r0, #0
 1930              	.LVL233:
3219:Generated_Source\PSoC4/capsense_Sensing.c ****                 break;
 1931              		.loc 1 3219 0
 1932 001e 03E0     		b	.L152
 1933              	.LVL234:
 1934              	.L153:
3220:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif
3221:Generated_Source\PSoC4/capsense_Sensing.c **** 
3222:Generated_Source\PSoC4/capsense_Sensing.c ****         #if((capsense_ENABLE == capsense_SELF_TEST_EN) &&\
3223:Generated_Source\PSoC4/capsense_Sensing.c ****             (capsense_ENABLE == capsense_TST_SNS_CAP_EN) &&\
3224:Generated_Source\PSoC4/capsense_Sensing.c ****             (capsense_ENABLE == capsense_CSD_EN))
3225:Generated_Source\PSoC4/capsense_Sensing.c ****             case capsense_BIST_CSD_SNS_CAP_E:
3226:Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_dsRam.selfTestConfig.bistCsdSnsCapISC = (uint8)state;
3227:Generated_Source\PSoC4/capsense_Sensing.c ****                 break;
3228:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif
3229:Generated_Source\PSoC4/capsense_Sensing.c **** 
3230:Generated_Source\PSoC4/capsense_Sensing.c ****         #if((capsense_ENABLE == capsense_SELF_TEST_EN) &&\
3231:Generated_Source\PSoC4/capsense_Sensing.c ****             (capsense_ENABLE == capsense_TST_SNS_CAP_EN) &&\
3232:Generated_Source\PSoC4/capsense_Sensing.c ****             (capsense_ENABLE == capsense_CSX_EN))
3233:Generated_Source\PSoC4/capsense_Sensing.c ****             case capsense_BIST_CSX_SNS_CAP_E:
3234:Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_dsRam.selfTestConfig.bistCsxSnsCapISC = (uint8)state;
3235:Generated_Source\PSoC4/capsense_Sensing.c ****                 break;
3236:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif
3237:Generated_Source\PSoC4/capsense_Sensing.c **** 
3238:Generated_Source\PSoC4/capsense_Sensing.c ****         #if((capsense_ENABLE == capsense_SELF_TEST_EN) &&\
3239:Generated_Source\PSoC4/capsense_Sensing.c ****             (capsense_ENABLE == capsense_TST_SH_CAP_EN) &&\
3240:Generated_Source\PSoC4/capsense_Sensing.c ****             (capsense_ENABLE == capsense_CSD_EN) &&\
3241:Generated_Source\PSoC4/capsense_Sensing.c ****             (capsense_ENABLE == capsense_CSD_SHIELD_EN))
3242:Generated_Source\PSoC4/capsense_Sensing.c ****             case capsense_BIST_CSD_SH_CAP_E:
3243:Generated_Source\PSoC4/capsense_Sensing.c ****                 if((capsense_CSD_TOTAL_SHIELD_COUNT == 0u) &&
3244:Generated_Source\PSoC4/capsense_Sensing.c ****                    (capsense_SNS_CONNECTION_SHIELD != state))
3245:Generated_Source\PSoC4/capsense_Sensing.c ****                 {
3246:Generated_Source\PSoC4/capsense_Sensing.c ****                     retVal = CYRET_BAD_PARAM;
3247:Generated_Source\PSoC4/capsense_Sensing.c ****                 }
3248:Generated_Source\PSoC4/capsense_Sensing.c ****                 else
3249:Generated_Source\PSoC4/capsense_Sensing.c ****                 {
3250:Generated_Source\PSoC4/capsense_Sensing.c ****                     capsense_dsRam.selfTestConfig.bistCsdShCapISC = (uint8)state;
3251:Generated_Source\PSoC4/capsense_Sensing.c ****                 }
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 96


3252:Generated_Source\PSoC4/capsense_Sensing.c ****                 break;
3253:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif
3254:Generated_Source\PSoC4/capsense_Sensing.c **** 
3255:Generated_Source\PSoC4/capsense_Sensing.c ****         default:
3256:Generated_Source\PSoC4/capsense_Sensing.c ****             CYASSERT(0u);
 1935              		.loc 1 3256 0 discriminator 1
 1936 0020 0020     		movs	r0, #0
 1937              	.LVL235:
 1938 0022 FFF7FEFF 		bl	CyHalt
 1939              	.LVL236:
3257:Generated_Source\PSoC4/capsense_Sensing.c ****             retVal = CYRET_BAD_PARAM;
 1940              		.loc 1 3257 0 discriminator 1
 1941 0026 0120     		movs	r0, #1
 1942              	.LVL237:
 1943              	.L152:
3258:Generated_Source\PSoC4/capsense_Sensing.c ****             break;
3259:Generated_Source\PSoC4/capsense_Sensing.c ****         }
3260:Generated_Source\PSoC4/capsense_Sensing.c **** 
3261:Generated_Source\PSoC4/capsense_Sensing.c ****         return(retVal);
3262:Generated_Source\PSoC4/capsense_Sensing.c ****     }
 1944              		.loc 1 3262 0
 1945              		@ sp needed
 1946 0028 10BD     		pop	{r4, pc}
 1947              	.L155:
 1948 002a C046     		.align	2
 1949              	.L154:
 1950 002c 00000000 		.word	capsense_dsRam
 1951              		.cfi_endproc
 1952              	.LFE28:
 1953              		.size	capsense_SetInactiveElectrodeState, .-capsense_SetInactiveElectrodeState
 1954              		.section	.text.capsense_WriteBitsSafe,"ax",%progbits
 1955              		.align	2
 1956              		.global	capsense_WriteBitsSafe
 1957              		.code	16
 1958              		.thumb_func
 1959              		.type	capsense_WriteBitsSafe, %function
 1960              	capsense_WriteBitsSafe:
 1961              	.LFB29:
3263:Generated_Source\PSoC4/capsense_Sensing.c **** #endif /* ((capsense_ENABLE == capsense_CSD_EN) ||\
3264:Generated_Source\PSoC4/capsense_Sensing.c ****            (capsense_ENABLE == capsense_CSX_EN)) */
3265:Generated_Source\PSoC4/capsense_Sensing.c **** 
3266:Generated_Source\PSoC4/capsense_Sensing.c **** 
3267:Generated_Source\PSoC4/capsense_Sensing.c **** /*******************************************************************************
3268:Generated_Source\PSoC4/capsense_Sensing.c **** * Function Name: capsense_WriteBitsSafe
3269:Generated_Source\PSoC4/capsense_Sensing.c **** ****************************************************************************//**
3270:Generated_Source\PSoC4/capsense_Sensing.c **** *
3271:Generated_Source\PSoC4/capsense_Sensing.c **** * \brief
3272:Generated_Source\PSoC4/capsense_Sensing.c **** *  Writes a field in port-pin register, specified by the mask parameter
3273:Generated_Source\PSoC4/capsense_Sensing.c **** *  with the specified value in critical section.
3274:Generated_Source\PSoC4/capsense_Sensing.c **** *
3275:Generated_Source\PSoC4/capsense_Sensing.c **** * \details
3276:Generated_Source\PSoC4/capsense_Sensing.c **** *  Writes a field in port-pin register, specified by the mask parameter
3277:Generated_Source\PSoC4/capsense_Sensing.c **** *  with the specified value in critical section.
3278:Generated_Source\PSoC4/capsense_Sensing.c **** *
3279:Generated_Source\PSoC4/capsense_Sensing.c **** * \param regPtr
3280:Generated_Source\PSoC4/capsense_Sensing.c **** *  Specifies a pointer to port-pin register.
3281:Generated_Source\PSoC4/capsense_Sensing.c **** *
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 97


3282:Generated_Source\PSoC4/capsense_Sensing.c **** * \param mask
3283:Generated_Source\PSoC4/capsense_Sensing.c **** *  Specifies bits to be modified.
3284:Generated_Source\PSoC4/capsense_Sensing.c **** *
3285:Generated_Source\PSoC4/capsense_Sensing.c **** * \param value
3286:Generated_Source\PSoC4/capsense_Sensing.c **** *  Specifies a value to be written to the register.
3287:Generated_Source\PSoC4/capsense_Sensing.c **** *
3288:Generated_Source\PSoC4/capsense_Sensing.c **** *******************************************************************************/
3289:Generated_Source\PSoC4/capsense_Sensing.c **** void capsense_WriteBitsSafe(reg32 * regPtr, uint32 mask, uint32 value)
3290:Generated_Source\PSoC4/capsense_Sensing.c **** {
 1962              		.loc 1 3290 0
 1963              		.cfi_startproc
 1964              		@ args = 0, pretend = 0, frame = 0
 1965              		@ frame_needed = 0, uses_anonymous_args = 0
 1966              	.LVL238:
 1967 0000 70B5     		push	{r4, r5, r6, lr}
 1968              		.cfi_def_cfa_offset 16
 1969              		.cfi_offset 4, -16
 1970              		.cfi_offset 5, -12
 1971              		.cfi_offset 6, -8
 1972              		.cfi_offset 14, -4
 1973 0002 0500     		movs	r5, r0
 1974 0004 0E00     		movs	r6, r1
 1975 0006 1400     		movs	r4, r2
3291:Generated_Source\PSoC4/capsense_Sensing.c ****     uint8 interruptState = CyEnterCriticalSection();
 1976              		.loc 1 3291 0
 1977 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1978              	.LVL239:
3292:Generated_Source\PSoC4/capsense_Sensing.c ****     (* regPtr) = ((* regPtr) & ((uint32)~mask)) | (value & mask);
 1979              		.loc 1 3292 0
 1980 000c 2B68     		ldr	r3, [r5]
 1981 000e 5C40     		eors	r4, r3
 1982              	.LVL240:
 1983 0010 3440     		ands	r4, r6
 1984 0012 5C40     		eors	r4, r3
 1985 0014 2C60     		str	r4, [r5]
3293:Generated_Source\PSoC4/capsense_Sensing.c ****     CyExitCriticalSection(interruptState);
 1986              		.loc 1 3293 0
 1987 0016 FFF7FEFF 		bl	CyExitCriticalSection
 1988              	.LVL241:
3294:Generated_Source\PSoC4/capsense_Sensing.c **** }
 1989              		.loc 1 3294 0
 1990              		@ sp needed
 1991              	.LVL242:
 1992              	.LVL243:
 1993 001a 70BD     		pop	{r4, r5, r6, pc}
 1994              		.cfi_endproc
 1995              	.LFE29:
 1996              		.size	capsense_WriteBitsSafe, .-capsense_WriteBitsSafe
 1997              		.section	.text.capsense_SsCSDDisableMode,"ax",%progbits
 1998              		.align	2
 1999              		.code	16
 2000              		.thumb_func
 2001              		.type	capsense_SsCSDDisableMode, %function
 2002              	capsense_SsCSDDisableMode:
 2003              	.LFB9:
 954:Generated_Source\PSoC4/capsense_Sensing.c ****         #if ((capsense_ENABLE == capsense_CSDV2) && \
 2004              		.loc 1 954 0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 98


 2005              		.cfi_startproc
 2006              		@ args = 0, pretend = 0, frame = 0
 2007              		@ frame_needed = 0, uses_anonymous_args = 0
 2008 0000 10B5     		push	{r4, lr}
 2009              		.cfi_def_cfa_offset 8
 2010              		.cfi_offset 4, -8
 2011              		.cfi_offset 14, -4
 961:Generated_Source\PSoC4/capsense_Sensing.c ****             newRegValue &= (uint32)(~capsense_SW_REFGEN_SEL_SW_IAIB_MASK);
 2012              		.loc 1 961 0
 2013 0002 064A     		ldr	r2, .L158
 2014 0004 1368     		ldr	r3, [r2]
 2015              	.LVL244:
 962:Generated_Source\PSoC4/capsense_Sensing.c ****             CY_SET_REG32(capsense_SW_REFGEN_SEL_PTR, newRegValue);
 2016              		.loc 1 962 0
 2017 0006 0121     		movs	r1, #1
 2018 0008 8B43     		bics	r3, r1
 2019              	.LVL245:
 963:Generated_Source\PSoC4/capsense_Sensing.c ****         #endif /* ((capsense_ENABLE == capsense_CSDV2) && \
 2020              		.loc 1 963 0
 2021 000a 1360     		str	r3, [r2]
 968:Generated_Source\PSoC4/capsense_Sensing.c **** 
 2022              		.loc 1 968 0
 2023 000c 0022     		movs	r2, #0
 2024 000e EF31     		adds	r1, r1, #239
 2025 0010 0348     		ldr	r0, .L158+4
 2026 0012 FFF7FEFF 		bl	capsense_WriteBitsSafe
 2027              	.LVL246:
 971:Generated_Source\PSoC4/capsense_Sensing.c **** 
 2028              		.loc 1 971 0
 2029 0016 FFF7FEFF 		bl	capsense_SsCSDElectrodeCheck
 2030              	.LVL247:
 983:Generated_Source\PSoC4/capsense_Sensing.c **** #endif /* (capsense_ENABLE == capsense_CSD_EN) */
 2031              		.loc 1 983 0
 2032              		@ sp needed
 2033 001a 10BD     		pop	{r4, pc}
 2034              	.L159:
 2035              		.align	2
 2036              	.L158:
 2037 001c A8020B40 		.word	1074463400
 2038 0020 00040240 		.word	1073873920
 2039              		.cfi_endproc
 2040              	.LFE9:
 2041              		.size	capsense_SsCSDDisableMode, .-capsense_SsCSDDisableMode
 2042              		.section	.text.capsense_SsDisableCSXMode,"ax",%progbits
 2043              		.align	2
 2044              		.code	16
 2045              		.thumb_func
 2046              		.type	capsense_SsDisableCSXMode, %function
 2047              	capsense_SsDisableCSXMode:
 2048              	.LFB10:
1002:Generated_Source\PSoC4/capsense_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers */
 2049              		.loc 1 1002 0
 2050              		.cfi_startproc
 2051              		@ args = 0, pretend = 0, frame = 0
 2052              		@ frame_needed = 0, uses_anonymous_args = 0
 2053 0000 10B5     		push	{r4, lr}
 2054              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 99


 2055              		.cfi_offset 4, -8
 2056              		.cfi_offset 14, -4
1004:Generated_Source\PSoC4/capsense_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers */
 2057              		.loc 1 1004 0
 2058 0002 084C     		ldr	r4, .L161
 2059 0004 0022     		movs	r2, #0
 2060 0006 F021     		movs	r1, #240
 2061 0008 0901     		lsls	r1, r1, #4
 2062 000a 2000     		movs	r0, r4
 2063 000c FFF7FEFF 		bl	capsense_WriteBitsSafe
 2064              	.LVL248:
1006:Generated_Source\PSoC4/capsense_Sensing.c ****         /* Disconnect previous CSX electrode if it has been connected */
 2065              		.loc 1 1006 0
 2066 0010 0022     		movs	r2, #0
 2067 0012 F021     		movs	r1, #240
 2068 0014 0902     		lsls	r1, r1, #8
 2069 0016 2000     		movs	r0, r4
 2070 0018 FFF7FEFF 		bl	capsense_WriteBitsSafe
 2071              	.LVL249:
1008:Generated_Source\PSoC4/capsense_Sensing.c ****     }
 2072              		.loc 1 1008 0
 2073 001c FFF7FEFF 		bl	capsense_CSXElectrodeCheck
 2074              	.LVL250:
1009:Generated_Source\PSoC4/capsense_Sensing.c **** #endif /* (capsense_ENABLE == capsense_CSX_EN) */
 2075              		.loc 1 1009 0
 2076              		@ sp needed
 2077 0020 10BD     		pop	{r4, pc}
 2078              	.L162:
 2079 0022 C046     		.align	2
 2080              	.L161:
 2081 0024 00040240 		.word	1073873920
 2082              		.cfi_endproc
 2083              	.LFE10:
 2084              		.size	capsense_SsDisableCSXMode, .-capsense_SsDisableCSXMode
 2085              		.section	.text.capsense_SsSwitchSensingMode,"ax",%progbits
 2086              		.align	2
 2087              		.global	capsense_SsSwitchSensingMode
 2088              		.code	16
 2089              		.thumb_func
 2090              		.type	capsense_SsSwitchSensingMode, %function
 2091              	capsense_SsSwitchSensingMode:
 2092              	.LFB11:
1068:Generated_Source\PSoC4/capsense_Sensing.c ****     if (capsense_currentSenseMethod != mode)
 2093              		.loc 1 1068 0
 2094              		.cfi_startproc
 2095              		@ args = 0, pretend = 0, frame = 0
 2096              		@ frame_needed = 0, uses_anonymous_args = 0
 2097              	.LVL251:
 2098 0000 10B5     		push	{r4, lr}
 2099              		.cfi_def_cfa_offset 8
 2100              		.cfi_offset 4, -8
 2101              		.cfi_offset 14, -4
 2102 0002 0400     		movs	r4, r0
1069:Generated_Source\PSoC4/capsense_Sensing.c ****     {
 2103              		.loc 1 1069 0
 2104 0004 124B     		ldr	r3, .L169
 2105 0006 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 100


 2106 0008 8342     		cmp	r3, r0
 2107 000a 1FD0     		beq	.L163
1072:Generated_Source\PSoC4/capsense_Sensing.c ****         {
 2108              		.loc 1 1072 0
 2109 000c 012B     		cmp	r3, #1
 2110 000e 02D1     		bne	.L165
1075:Generated_Source\PSoC4/capsense_Sensing.c ****             #endif /* (capsense_ENABLE == capsense_CSD_EN) */
 2111              		.loc 1 1075 0
 2112 0010 FFF7FEFF 		bl	capsense_SsCSDDisableMode
 2113              	.LVL252:
 2114 0014 03E0     		b	.L166
 2115              	.LVL253:
 2116              	.L165:
1078:Generated_Source\PSoC4/capsense_Sensing.c ****         {
 2117              		.loc 1 1078 0
 2118 0016 022B     		cmp	r3, #2
 2119 0018 01D1     		bne	.L166
1081:Generated_Source\PSoC4/capsense_Sensing.c ****             #endif /* (capsense_ENABLE == capsense_CSX_EN) */
 2120              		.loc 1 1081 0
 2121 001a FFF7FEFF 		bl	capsense_SsDisableCSXMode
 2122              	.LVL254:
 2123              	.L166:
1105:Generated_Source\PSoC4/capsense_Sensing.c ****         {
 2124              		.loc 1 1105 0
 2125 001e 012C     		cmp	r4, #1
 2126 0020 05D1     		bne	.L167
1109:Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_currentSenseMethod = capsense_SENSE_METHOD_CSD_E;
 2127              		.loc 1 1109 0
 2128 0022 FFF7FEFF 		bl	capsense_SsCSDInitialize
 2129              	.LVL255:
1110:Generated_Source\PSoC4/capsense_Sensing.c ****             #endif /* (capsense_ENABLE == capsense_CSD_EN) */
 2130              		.loc 1 1110 0
 2131 0026 0122     		movs	r2, #1
 2132 0028 094B     		ldr	r3, .L169
 2133 002a 1A70     		strb	r2, [r3]
 2134 002c 0EE0     		b	.L163
 2135              	.L167:
1113:Generated_Source\PSoC4/capsense_Sensing.c ****         {
 2136              		.loc 1 1113 0
 2137 002e 022C     		cmp	r4, #2
 2138 0030 05D1     		bne	.L168
1117:Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_currentSenseMethod = capsense_SENSE_METHOD_CSX_E;
 2139              		.loc 1 1117 0
 2140 0032 FFF7FEFF 		bl	capsense_CSXInitialize
 2141              	.LVL256:
1118:Generated_Source\PSoC4/capsense_Sensing.c ****             #endif /* (capsense_ENABLE == capsense_CSX_EN) */
 2142              		.loc 1 1118 0
 2143 0036 0222     		movs	r2, #2
 2144 0038 054B     		ldr	r3, .L169
 2145 003a 1A70     		strb	r2, [r3]
 2146 003c 06E0     		b	.L163
 2147              	.L168:
1121:Generated_Source\PSoC4/capsense_Sensing.c ****         {
 2148              		.loc 1 1121 0
 2149 003e 042C     		cmp	r4, #4
 2150 0040 04D0     		beq	.L163
1129:Generated_Source\PSoC4/capsense_Sensing.c ****         {
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 101


 2151              		.loc 1 1129 0
 2152 0042 032C     		cmp	r4, #3
 2153 0044 02D0     		beq	.L163
1138:Generated_Source\PSoC4/capsense_Sensing.c ****         }
 2154              		.loc 1 1138 0
 2155 0046 0022     		movs	r2, #0
 2156 0048 014B     		ldr	r3, .L169
 2157 004a 1A70     		strb	r2, [r3]
 2158              	.L163:
1141:Generated_Source\PSoC4/capsense_Sensing.c **** 
 2159              		.loc 1 1141 0
 2160              		@ sp needed
 2161 004c 10BD     		pop	{r4, pc}
 2162              	.L170:
 2163 004e C046     		.align	2
 2164              	.L169:
 2165 0050 00000000 		.word	.LANCHOR0
 2166              		.cfi_endproc
 2167              	.LFE11:
 2168              		.size	capsense_SsSwitchSensingMode, .-capsense_SsSwitchSensingMode
 2169              		.section	.text.capsense_SsInitialize,"ax",%progbits
 2170              		.align	2
 2171              		.global	capsense_SsInitialize
 2172              		.code	16
 2173              		.thumb_func
 2174              		.type	capsense_SsInitialize, %function
 2175              	capsense_SsInitialize:
 2176              	.LFB7:
 708:Generated_Source\PSoC4/capsense_Sensing.c ****     cystatus initStatus;
 2177              		.loc 1 708 0
 2178              		.cfi_startproc
 2179              		@ args = 0, pretend = 0, frame = 0
 2180              		@ frame_needed = 0, uses_anonymous_args = 0
 2181 0000 10B5     		push	{r4, lr}
 2182              		.cfi_def_cfa_offset 8
 2183              		.cfi_offset 4, -8
 2184              		.cfi_offset 14, -4
 2185              	.LVL257:
 747:Generated_Source\PSoC4/capsense_Sensing.c ****     #endif /* ((capsense_ENABLE == capsense_CSD_EN) ||\
 2186              		.loc 1 747 0
 2187 0002 FFF7FEFF 		bl	capsense_SsInitializeSourceSenseClk
 2188              	.LVL258:
 752:Generated_Source\PSoC4/capsense_Sensing.c ****     capsense_dsRam.scanCurrentISC = capsense_SNS_CONNECTION_GROUND;
 2189              		.loc 1 752 0
 2190 0006 0020     		movs	r0, #0
 2191 0008 FFF7FEFF 		bl	capsense_SsSetAllIOsState
 2192              	.LVL259:
 753:Generated_Source\PSoC4/capsense_Sensing.c **** 
 2193              		.loc 1 753 0
 2194 000c 0021     		movs	r1, #0
 2195 000e BA23     		movs	r3, #186
 2196 0010 034A     		ldr	r2, .L172
 2197 0012 D154     		strb	r1, [r2, r3]
 755:Generated_Source\PSoC4/capsense_Sensing.c ****     #if (capsense_ENABLE == capsense_MANY_SENSE_MODES_EN)
 2198              		.loc 1 755 0
 2199 0014 0020     		movs	r0, #0
 2200 0016 FFF7FEFF 		bl	capsense_SsSwitchSensingMode
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 102


 2201              	.LVL260:
 769:Generated_Source\PSoC4/capsense_Sensing.c **** 
 2202              		.loc 1 769 0
 2203 001a 0020     		movs	r0, #0
 2204              		@ sp needed
 2205 001c 10BD     		pop	{r4, pc}
 2206              	.L173:
 2207 001e C046     		.align	2
 2208              	.L172:
 2209 0020 00000000 		.word	capsense_dsRam
 2210              		.cfi_endproc
 2211              	.LFE7:
 2212              		.size	capsense_SsInitialize, .-capsense_SsInitialize
 2213              		.global	capsense_idacGainTable
 2214              		.comm	capsense_curSnsIOPtr,4,4
 2215              		.global	capsense_curFlashWdgtPtr
 2216              		.comm	capsense_curRamSnsPtr,4,4
 2217              		.global	capsense_requestScanAllWidget
 2218              		.global	capsense_sensorIndex
 2219              		.global	capsense_widgetIndex
 2220              		.global	capsense_scanFreqIndex
 2221              		.global	capsense_currentSenseMethod
 2222              		.section	.rodata
 2223              		.align	2
 2224              		.type	capsense_idacGainTable, %object
 2225              		.size	capsense_idacGainTable, 48
 2226              	capsense_idacGainTable:
 2227 0018 00000001 		.word	16777216
 2228 001c 7C920000 		.word	37500
 2229 0020 00000003 		.word	50331648
 2230 0024 F8240100 		.word	75000
 2231 0028 00004001 		.word	20971520
 2232 002c E0930400 		.word	300000
 2233 0030 00004003 		.word	54525952
 2234 0034 C0270900 		.word	600000
 2235 0038 00008001 		.word	25165824
 2236 003c 009F2400 		.word	2400000
 2237 0040 00008003 		.word	58720256
 2238 0044 003E4900 		.word	4800000
 2239              		.type	capsense_scanFreqIndex, %object
 2240              		.size	capsense_scanFreqIndex, 1
 2241              	capsense_scanFreqIndex:
 2242 0048 00       		.space	1
 2243              		.bss
 2244              		.align	2
 2245              		.set	.LANCHOR0,. + 0
 2246              		.type	capsense_currentSenseMethod, %object
 2247              		.size	capsense_currentSenseMethod, 1
 2248              	capsense_currentSenseMethod:
 2249 0000 00       		.space	1
 2250              		.type	capsense_requestScanAllWidget, %object
 2251              		.size	capsense_requestScanAllWidget, 1
 2252              	capsense_requestScanAllWidget:
 2253 0001 00       		.space	1
 2254              		.type	capsense_widgetIndex, %object
 2255              		.size	capsense_widgetIndex, 1
 2256              	capsense_widgetIndex:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 103


 2257 0002 00       		.space	1
 2258 0003 00       		.space	1
 2259              		.type	capsense_curFlashWdgtPtr, %object
 2260              		.size	capsense_curFlashWdgtPtr, 4
 2261              	capsense_curFlashWdgtPtr:
 2262 0004 00000000 		.space	4
 2263              		.type	capsense_sensorIndex, %object
 2264              		.size	capsense_sensorIndex, 1
 2265              	capsense_sensorIndex:
 2266 0008 00       		.space	1
 2267              		.text
 2268              	.Letext0:
 2269              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2270              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2271              		.file 4 "Generated_Source\\PSoC4/cytypes.h"
 2272              		.file 5 "Generated_Source\\PSoC4\\capsense_Configuration.h"
 2273              		.file 6 "Generated_Source\\PSoC4\\capsense_Structure.h"
 2274              		.file 7 "Generated_Source\\PSoC4\\capsense_Sensing.h"
 2275              		.file 8 "Generated_Source\\PSoC4\\capsense_SensingCSX_LL.h"
 2276              		.file 9 "Generated_Source\\PSoC4\\capsense_SensingCSD_LL.h"
 2277              		.file 10 "Generated_Source\\PSoC4/CyLib.h"
 2278              		.file 11 "Generated_Source\\PSoC4\\capsense_ISR.h"
 2279              		.section	.debug_info,"",%progbits
 2280              	.Ldebug_info0:
 2281 0000 57150000 		.4byte	0x1557
 2282 0004 0400     		.2byte	0x4
 2283 0006 00000000 		.4byte	.Ldebug_abbrev0
 2284 000a 04       		.byte	0x4
 2285 000b 01       		.uleb128 0x1
 2286 000c D7020000 		.4byte	.LASF217
 2287 0010 0C       		.byte	0xc
 2288 0011 5D0A0000 		.4byte	.LASF218
 2289 0015 89080000 		.4byte	.LASF219
 2290 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2291 001d 00000000 		.4byte	0
 2292 0021 00000000 		.4byte	.Ldebug_line0
 2293 0025 02       		.uleb128 0x2
 2294 0026 01       		.byte	0x1
 2295 0027 06       		.byte	0x6
 2296 0028 8B0D0000 		.4byte	.LASF0
 2297 002c 02       		.uleb128 0x2
 2298 002d 01       		.byte	0x1
 2299 002e 08       		.byte	0x8
 2300 002f 270C0000 		.4byte	.LASF1
 2301 0033 02       		.uleb128 0x2
 2302 0034 02       		.byte	0x2
 2303 0035 05       		.byte	0x5
 2304 0036 360A0000 		.4byte	.LASF2
 2305 003a 02       		.uleb128 0x2
 2306 003b 02       		.byte	0x2
 2307 003c 07       		.byte	0x7
 2308 003d AA0D0000 		.4byte	.LASF3
 2309 0041 02       		.uleb128 0x2
 2310 0042 04       		.byte	0x4
 2311 0043 05       		.byte	0x5
 2312 0044 9F0A0000 		.4byte	.LASF4
 2313 0048 03       		.uleb128 0x3
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 104


 2314 0049 350C0000 		.4byte	.LASF9
 2315 004d 02       		.byte	0x2
 2316 004e 41       		.byte	0x41
 2317 004f 53000000 		.4byte	0x53
 2318 0053 02       		.uleb128 0x2
 2319 0054 04       		.byte	0x4
 2320 0055 07       		.byte	0x7
 2321 0056 810B0000 		.4byte	.LASF5
 2322 005a 02       		.uleb128 0x2
 2323 005b 08       		.byte	0x8
 2324 005c 05       		.byte	0x5
 2325 005d 93060000 		.4byte	.LASF6
 2326 0061 02       		.uleb128 0x2
 2327 0062 08       		.byte	0x8
 2328 0063 07       		.byte	0x7
 2329 0064 E0030000 		.4byte	.LASF7
 2330 0068 04       		.uleb128 0x4
 2331 0069 04       		.byte	0x4
 2332 006a 05       		.byte	0x5
 2333 006b 696E7400 		.ascii	"int\000"
 2334 006f 02       		.uleb128 0x2
 2335 0070 04       		.byte	0x4
 2336 0071 07       		.byte	0x7
 2337 0072 1A010000 		.4byte	.LASF8
 2338 0076 03       		.uleb128 0x3
 2339 0077 6B020000 		.4byte	.LASF10
 2340 007b 03       		.byte	0x3
 2341 007c 30       		.byte	0x30
 2342 007d 48000000 		.4byte	0x48
 2343 0081 05       		.uleb128 0x5
 2344 0082 0A0E0000 		.4byte	.LASF11
 2345 0086 04       		.byte	0x4
 2346 0087 FC01     		.2byte	0x1fc
 2347 0089 2C000000 		.4byte	0x2c
 2348 008d 05       		.uleb128 0x5
 2349 008e 3F060000 		.4byte	.LASF12
 2350 0092 04       		.byte	0x4
 2351 0093 FD01     		.2byte	0x1fd
 2352 0095 3A000000 		.4byte	0x3a
 2353 0099 05       		.uleb128 0x5
 2354 009a 0F080000 		.4byte	.LASF13
 2355 009e 04       		.byte	0x4
 2356 009f FE01     		.2byte	0x1fe
 2357 00a1 53000000 		.4byte	0x53
 2358 00a5 02       		.uleb128 0x2
 2359 00a6 04       		.byte	0x4
 2360 00a7 04       		.byte	0x4
 2361 00a8 CB020000 		.4byte	.LASF14
 2362 00ac 02       		.uleb128 0x2
 2363 00ad 08       		.byte	0x8
 2364 00ae 04       		.byte	0x4
 2365 00af 100E0000 		.4byte	.LASF15
 2366 00b3 02       		.uleb128 0x2
 2367 00b4 01       		.byte	0x1
 2368 00b5 08       		.byte	0x8
 2369 00b6 F3050000 		.4byte	.LASF16
 2370 00ba 05       		.uleb128 0x5
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 105


 2371 00bb 1E0C0000 		.4byte	.LASF17
 2372 00bf 04       		.byte	0x4
 2373 00c0 9E02     		.2byte	0x29e
 2374 00c2 53000000 		.4byte	0x53
 2375 00c6 06       		.uleb128 0x6
 2376 00c7 81000000 		.4byte	0x81
 2377 00cb 05       		.uleb128 0x5
 2378 00cc D7090000 		.4byte	.LASF18
 2379 00d0 04       		.byte	0x4
 2380 00d1 A802     		.2byte	0x2a8
 2381 00d3 D7000000 		.4byte	0xd7
 2382 00d7 06       		.uleb128 0x6
 2383 00d8 99000000 		.4byte	0x99
 2384 00dc 05       		.uleb128 0x5
 2385 00dd BE070000 		.4byte	.LASF19
 2386 00e1 04       		.byte	0x4
 2387 00e2 B802     		.2byte	0x2b8
 2388 00e4 E8000000 		.4byte	0xe8
 2389 00e8 07       		.uleb128 0x7
 2390 00e9 04       		.byte	0x4
 2391 00ea EE000000 		.4byte	0xee
 2392 00ee 08       		.uleb128 0x8
 2393 00ef 05       		.uleb128 0x5
 2394 00f0 DE080000 		.4byte	.LASF20
 2395 00f4 05       		.byte	0x5
 2396 00f5 4301     		.2byte	0x143
 2397 00f7 8D000000 		.4byte	0x8d
 2398 00fb 05       		.uleb128 0x5
 2399 00fc B5050000 		.4byte	.LASF21
 2400 0100 05       		.byte	0x5
 2401 0101 4701     		.2byte	0x147
 2402 0103 81000000 		.4byte	0x81
 2403 0107 09       		.uleb128 0x9
 2404 0108 01       		.byte	0x1
 2405 0109 2C000000 		.4byte	0x2c
 2406 010d 06       		.byte	0x6
 2407 010e 70       		.byte	0x70
 2408 010f 32010000 		.4byte	0x132
 2409 0113 0A       		.uleb128 0xa
 2410 0114 A0050000 		.4byte	.LASF22
 2411 0118 00       		.byte	0
 2412 0119 0A       		.uleb128 0xa
 2413 011a 89020000 		.4byte	.LASF23
 2414 011e 01       		.byte	0x1
 2415 011f 0A       		.uleb128 0xa
 2416 0120 F1010000 		.4byte	.LASF24
 2417 0124 02       		.byte	0x2
 2418 0125 0A       		.uleb128 0xa
 2419 0126 570D0000 		.4byte	.LASF25
 2420 012a 03       		.byte	0x3
 2421 012b 0A       		.uleb128 0xa
 2422 012c AD000000 		.4byte	.LASF26
 2423 0130 04       		.byte	0x4
 2424 0131 00       		.byte	0
 2425 0132 03       		.uleb128 0x3
 2426 0133 D0050000 		.4byte	.LASF27
 2427 0137 06       		.byte	0x6
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 106


 2428 0138 76       		.byte	0x76
 2429 0139 07010000 		.4byte	0x107
 2430 013d 0B       		.uleb128 0xb
 2431 013e 10       		.byte	0x10
 2432 013f 06       		.byte	0x6
 2433 0140 AD       		.byte	0xad
 2434 0141 CA010000 		.4byte	0x1ca
 2435 0145 0C       		.uleb128 0xc
 2436 0146 55060000 		.4byte	.LASF28
 2437 014a 06       		.byte	0x6
 2438 014b B2       		.byte	0xb2
 2439 014c 8D000000 		.4byte	0x8d
 2440 0150 00       		.byte	0
 2441 0151 0C       		.uleb128 0xc
 2442 0152 0D0C0000 		.4byte	.LASF29
 2443 0156 06       		.byte	0x6
 2444 0157 B7       		.byte	0xb7
 2445 0158 EF000000 		.4byte	0xef
 2446 015c 02       		.byte	0x2
 2447 015d 0C       		.uleb128 0xc
 2448 015e EB050000 		.4byte	.LASF30
 2449 0162 06       		.byte	0x6
 2450 0163 BC       		.byte	0xbc
 2451 0164 81000000 		.4byte	0x81
 2452 0168 04       		.byte	0x4
 2453 0169 0C       		.uleb128 0xc
 2454 016a AA070000 		.4byte	.LASF31
 2455 016e 06       		.byte	0x6
 2456 016f C1       		.byte	0xc1
 2457 0170 81000000 		.4byte	0x81
 2458 0174 05       		.byte	0x5
 2459 0175 0C       		.uleb128 0xc
 2460 0176 08050000 		.4byte	.LASF32
 2461 017a 06       		.byte	0x6
 2462 017b C7       		.byte	0xc7
 2463 017c 81000000 		.4byte	0x81
 2464 0180 06       		.byte	0x6
 2465 0181 0C       		.uleb128 0xc
 2466 0182 DD060000 		.4byte	.LASF33
 2467 0186 06       		.byte	0x6
 2468 0187 CD       		.byte	0xcd
 2469 0188 81000000 		.4byte	0x81
 2470 018c 07       		.byte	0x7
 2471 018d 0C       		.uleb128 0xc
 2472 018e 29050000 		.4byte	.LASF34
 2473 0192 06       		.byte	0x6
 2474 0193 D4       		.byte	0xd4
 2475 0194 FB000000 		.4byte	0xfb
 2476 0198 08       		.byte	0x8
 2477 0199 0C       		.uleb128 0xc
 2478 019a A20B0000 		.4byte	.LASF35
 2479 019e 06       		.byte	0x6
 2480 019f DB       		.byte	0xdb
 2481 01a0 CA010000 		.4byte	0x1ca
 2482 01a4 09       		.byte	0x9
 2483 01a5 0C       		.uleb128 0xc
 2484 01a6 4A050000 		.4byte	.LASF36
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 107


 2485 01aa 06       		.byte	0x6
 2486 01ab E0       		.byte	0xe0
 2487 01ac 81000000 		.4byte	0x81
 2488 01b0 0A       		.byte	0xa
 2489 01b1 0C       		.uleb128 0xc
 2490 01b2 500D0000 		.4byte	.LASF37
 2491 01b6 06       		.byte	0x6
 2492 01b7 E8       		.byte	0xe8
 2493 01b8 8D000000 		.4byte	0x8d
 2494 01bc 0C       		.byte	0xc
 2495 01bd 0C       		.uleb128 0xc
 2496 01be 1D0A0000 		.4byte	.LASF38
 2497 01c2 06       		.byte	0x6
 2498 01c3 ED       		.byte	0xed
 2499 01c4 81000000 		.4byte	0x81
 2500 01c8 0E       		.byte	0xe
 2501 01c9 00       		.byte	0
 2502 01ca 0D       		.uleb128 0xd
 2503 01cb 81000000 		.4byte	0x81
 2504 01cf DA010000 		.4byte	0x1da
 2505 01d3 0E       		.uleb128 0xe
 2506 01d4 DA010000 		.4byte	0x1da
 2507 01d8 00       		.byte	0
 2508 01d9 00       		.byte	0
 2509 01da 02       		.uleb128 0x2
 2510 01db 04       		.byte	0x4
 2511 01dc 07       		.byte	0x7
 2512 01dd 700B0000 		.4byte	.LASF39
 2513 01e1 03       		.uleb128 0x3
 2514 01e2 A60E0000 		.4byte	.LASF40
 2515 01e6 06       		.byte	0x6
 2516 01e7 EE       		.byte	0xee
 2517 01e8 3D010000 		.4byte	0x13d
 2518 01ec 0B       		.uleb128 0xb
 2519 01ed 10       		.byte	0x10
 2520 01ee 06       		.byte	0x6
 2521 01ef F3       		.byte	0xf3
 2522 01f0 82020000 		.4byte	0x282
 2523 01f4 0C       		.uleb128 0xc
 2524 01f5 55060000 		.4byte	.LASF28
 2525 01f9 06       		.byte	0x6
 2526 01fa F8       		.byte	0xf8
 2527 01fb 8D000000 		.4byte	0x8d
 2528 01ff 00       		.byte	0
 2529 0200 0C       		.uleb128 0xc
 2530 0201 0D0C0000 		.4byte	.LASF29
 2531 0205 06       		.byte	0x6
 2532 0206 FD       		.byte	0xfd
 2533 0207 EF000000 		.4byte	0xef
 2534 020b 02       		.byte	0x2
 2535 020c 0F       		.uleb128 0xf
 2536 020d EB050000 		.4byte	.LASF30
 2537 0211 06       		.byte	0x6
 2538 0212 0201     		.2byte	0x102
 2539 0214 81000000 		.4byte	0x81
 2540 0218 04       		.byte	0x4
 2541 0219 0F       		.uleb128 0xf
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 108


 2542 021a AA070000 		.4byte	.LASF31
 2543 021e 06       		.byte	0x6
 2544 021f 0701     		.2byte	0x107
 2545 0221 81000000 		.4byte	0x81
 2546 0225 05       		.byte	0x5
 2547 0226 0F       		.uleb128 0xf
 2548 0227 08050000 		.4byte	.LASF32
 2549 022b 06       		.byte	0x6
 2550 022c 0D01     		.2byte	0x10d
 2551 022e 81000000 		.4byte	0x81
 2552 0232 06       		.byte	0x6
 2553 0233 0F       		.uleb128 0xf
 2554 0234 DD060000 		.4byte	.LASF33
 2555 0238 06       		.byte	0x6
 2556 0239 1301     		.2byte	0x113
 2557 023b 81000000 		.4byte	0x81
 2558 023f 07       		.byte	0x7
 2559 0240 0F       		.uleb128 0xf
 2560 0241 29050000 		.4byte	.LASF34
 2561 0245 06       		.byte	0x6
 2562 0246 1A01     		.2byte	0x11a
 2563 0248 FB000000 		.4byte	0xfb
 2564 024c 08       		.byte	0x8
 2565 024d 0F       		.uleb128 0xf
 2566 024e A20B0000 		.4byte	.LASF35
 2567 0252 06       		.byte	0x6
 2568 0253 2101     		.2byte	0x121
 2569 0255 CA010000 		.4byte	0x1ca
 2570 0259 09       		.byte	0x9
 2571 025a 0F       		.uleb128 0xf
 2572 025b 4A050000 		.4byte	.LASF36
 2573 025f 06       		.byte	0x6
 2574 0260 2601     		.2byte	0x126
 2575 0262 81000000 		.4byte	0x81
 2576 0266 0A       		.byte	0xa
 2577 0267 0F       		.uleb128 0xf
 2578 0268 500D0000 		.4byte	.LASF37
 2579 026c 06       		.byte	0x6
 2580 026d 2E01     		.2byte	0x12e
 2581 026f 8D000000 		.4byte	0x8d
 2582 0273 0C       		.byte	0xc
 2583 0274 0F       		.uleb128 0xf
 2584 0275 1D0A0000 		.4byte	.LASF38
 2585 0279 06       		.byte	0x6
 2586 027a 3301     		.2byte	0x133
 2587 027c 81000000 		.4byte	0x81
 2588 0280 0E       		.byte	0xe
 2589 0281 00       		.byte	0
 2590 0282 05       		.uleb128 0x5
 2591 0283 A1060000 		.4byte	.LASF41
 2592 0287 06       		.byte	0x6
 2593 0288 3401     		.2byte	0x134
 2594 028a EC010000 		.4byte	0x1ec
 2595 028e 10       		.uleb128 0x10
 2596 028f 12       		.byte	0x12
 2597 0290 06       		.byte	0x6
 2598 0291 3901     		.2byte	0x139
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 109


 2599 0293 34030000 		.4byte	0x334
 2600 0297 0F       		.uleb128 0xf
 2601 0298 55060000 		.4byte	.LASF28
 2602 029c 06       		.byte	0x6
 2603 029d 3E01     		.2byte	0x13e
 2604 029f 8D000000 		.4byte	0x8d
 2605 02a3 00       		.byte	0
 2606 02a4 0F       		.uleb128 0xf
 2607 02a5 0D0C0000 		.4byte	.LASF29
 2608 02a9 06       		.byte	0x6
 2609 02aa 4301     		.2byte	0x143
 2610 02ac EF000000 		.4byte	0xef
 2611 02b0 02       		.byte	0x2
 2612 02b1 0F       		.uleb128 0xf
 2613 02b2 EB050000 		.4byte	.LASF30
 2614 02b6 06       		.byte	0x6
 2615 02b7 4801     		.2byte	0x148
 2616 02b9 81000000 		.4byte	0x81
 2617 02bd 04       		.byte	0x4
 2618 02be 0F       		.uleb128 0xf
 2619 02bf AA070000 		.4byte	.LASF31
 2620 02c3 06       		.byte	0x6
 2621 02c4 4D01     		.2byte	0x14d
 2622 02c6 81000000 		.4byte	0x81
 2623 02ca 05       		.byte	0x5
 2624 02cb 0F       		.uleb128 0xf
 2625 02cc 08050000 		.4byte	.LASF32
 2626 02d0 06       		.byte	0x6
 2627 02d1 5301     		.2byte	0x153
 2628 02d3 81000000 		.4byte	0x81
 2629 02d7 06       		.byte	0x6
 2630 02d8 0F       		.uleb128 0xf
 2631 02d9 DD060000 		.4byte	.LASF33
 2632 02dd 06       		.byte	0x6
 2633 02de 5901     		.2byte	0x159
 2634 02e0 81000000 		.4byte	0x81
 2635 02e4 07       		.byte	0x7
 2636 02e5 0F       		.uleb128 0xf
 2637 02e6 29050000 		.4byte	.LASF34
 2638 02ea 06       		.byte	0x6
 2639 02eb 6001     		.2byte	0x160
 2640 02ed FB000000 		.4byte	0xfb
 2641 02f1 08       		.byte	0x8
 2642 02f2 0F       		.uleb128 0xf
 2643 02f3 A20B0000 		.4byte	.LASF35
 2644 02f7 06       		.byte	0x6
 2645 02f8 6701     		.2byte	0x167
 2646 02fa CA010000 		.4byte	0x1ca
 2647 02fe 09       		.byte	0x9
 2648 02ff 0F       		.uleb128 0xf
 2649 0300 4A050000 		.4byte	.LASF36
 2650 0304 06       		.byte	0x6
 2651 0305 6C01     		.2byte	0x16c
 2652 0307 81000000 		.4byte	0x81
 2653 030b 0A       		.byte	0xa
 2654 030c 0F       		.uleb128 0xf
 2655 030d 500D0000 		.4byte	.LASF37
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 110


 2656 0311 06       		.byte	0x6
 2657 0312 7401     		.2byte	0x174
 2658 0314 8D000000 		.4byte	0x8d
 2659 0318 0C       		.byte	0xc
 2660 0319 0F       		.uleb128 0xf
 2661 031a 1D0A0000 		.4byte	.LASF38
 2662 031e 06       		.byte	0x6
 2663 031f 7901     		.2byte	0x179
 2664 0321 81000000 		.4byte	0x81
 2665 0325 0E       		.byte	0xe
 2666 0326 0F       		.uleb128 0xf
 2667 0327 C20E0000 		.4byte	.LASF42
 2668 032b 06       		.byte	0x6
 2669 032c 7E01     		.2byte	0x17e
 2670 032e 34030000 		.4byte	0x334
 2671 0332 10       		.byte	0x10
 2672 0333 00       		.byte	0
 2673 0334 0D       		.uleb128 0xd
 2674 0335 8D000000 		.4byte	0x8d
 2675 0339 44030000 		.4byte	0x344
 2676 033d 0E       		.uleb128 0xe
 2677 033e DA010000 		.4byte	0x1da
 2678 0342 00       		.byte	0
 2679 0343 00       		.byte	0
 2680 0344 05       		.uleb128 0x5
 2681 0345 34090000 		.4byte	.LASF43
 2682 0349 06       		.byte	0x6
 2683 034a 7F01     		.2byte	0x17f
 2684 034c 8E020000 		.4byte	0x28e
 2685 0350 10       		.uleb128 0x10
 2686 0351 42       		.byte	0x42
 2687 0352 06       		.byte	0x6
 2688 0353 8501     		.2byte	0x185
 2689 0355 8E030000 		.4byte	0x38e
 2690 0359 0F       		.uleb128 0xf
 2691 035a 69050000 		.4byte	.LASF44
 2692 035e 06       		.byte	0x6
 2693 035f 8A01     		.2byte	0x18a
 2694 0361 82020000 		.4byte	0x282
 2695 0365 00       		.byte	0
 2696 0366 0F       		.uleb128 0xf
 2697 0367 6E050000 		.4byte	.LASF45
 2698 036b 06       		.byte	0x6
 2699 036c 8F01     		.2byte	0x18f
 2700 036e 82020000 		.4byte	0x282
 2701 0372 10       		.byte	0x10
 2702 0373 0F       		.uleb128 0xf
 2703 0374 73050000 		.4byte	.LASF46
 2704 0378 06       		.byte	0x6
 2705 0379 9401     		.2byte	0x194
 2706 037b 82020000 		.4byte	0x282
 2707 037f 20       		.byte	0x20
 2708 0380 0F       		.uleb128 0xf
 2709 0381 D00A0000 		.4byte	.LASF47
 2710 0385 06       		.byte	0x6
 2711 0386 9901     		.2byte	0x199
 2712 0388 44030000 		.4byte	0x344
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 111


 2713 038c 30       		.byte	0x30
 2714 038d 00       		.byte	0
 2715 038e 05       		.uleb128 0x5
 2716 038f 54080000 		.4byte	.LASF48
 2717 0393 06       		.byte	0x6
 2718 0394 9A01     		.2byte	0x19a
 2719 0396 50030000 		.4byte	0x350
 2720 039a 10       		.uleb128 0x10
 2721 039b 0A       		.byte	0xa
 2722 039c 06       		.byte	0x6
 2723 039d A001     		.2byte	0x1a0
 2724 039f F2030000 		.4byte	0x3f2
 2725 03a3 11       		.uleb128 0x11
 2726 03a4 72617700 		.ascii	"raw\000"
 2727 03a8 06       		.byte	0x6
 2728 03a9 A501     		.2byte	0x1a5
 2729 03ab 34030000 		.4byte	0x334
 2730 03af 00       		.byte	0
 2731 03b0 0F       		.uleb128 0xf
 2732 03b1 A50D0000 		.4byte	.LASF49
 2733 03b5 06       		.byte	0x6
 2734 03b6 AA01     		.2byte	0x1aa
 2735 03b8 34030000 		.4byte	0x334
 2736 03bc 02       		.byte	0x2
 2737 03bd 0F       		.uleb128 0xf
 2738 03be 160C0000 		.4byte	.LASF50
 2739 03c2 06       		.byte	0x6
 2740 03c3 B001     		.2byte	0x1b0
 2741 03c5 CA010000 		.4byte	0x1ca
 2742 03c9 04       		.byte	0x4
 2743 03ca 0F       		.uleb128 0xf
 2744 03cb DD0A0000 		.4byte	.LASF51
 2745 03cf 06       		.byte	0x6
 2746 03d0 B501     		.2byte	0x1b5
 2747 03d2 EF000000 		.4byte	0xef
 2748 03d6 06       		.byte	0x6
 2749 03d7 0F       		.uleb128 0xf
 2750 03d8 170E0000 		.4byte	.LASF52
 2751 03dc 06       		.byte	0x6
 2752 03dd BA01     		.2byte	0x1ba
 2753 03df F2030000 		.4byte	0x3f2
 2754 03e3 08       		.byte	0x8
 2755 03e4 0F       		.uleb128 0xf
 2756 03e5 84060000 		.4byte	.LASF53
 2757 03e9 06       		.byte	0x6
 2758 03ea BF01     		.2byte	0x1bf
 2759 03ec CA010000 		.4byte	0x1ca
 2760 03f0 09       		.byte	0x9
 2761 03f1 00       		.byte	0
 2762 03f2 0D       		.uleb128 0xd
 2763 03f3 FB000000 		.4byte	0xfb
 2764 03f7 02040000 		.4byte	0x402
 2765 03fb 0E       		.uleb128 0xe
 2766 03fc DA010000 		.4byte	0x1da
 2767 0400 00       		.byte	0
 2768 0401 00       		.byte	0
 2769 0402 05       		.uleb128 0x5
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 112


 2770 0403 0B0B0000 		.4byte	.LASF54
 2771 0407 06       		.byte	0x6
 2772 0408 C001     		.2byte	0x1c0
 2773 040a 9A030000 		.4byte	0x39a
 2774 040e 10       		.uleb128 0x10
 2775 040f 50       		.byte	0x50
 2776 0410 06       		.byte	0x6
 2777 0411 C601     		.2byte	0x1c6
 2778 0413 4C040000 		.4byte	0x44c
 2779 0417 0F       		.uleb128 0xf
 2780 0418 69050000 		.4byte	.LASF44
 2781 041c 06       		.byte	0x6
 2782 041d CB01     		.2byte	0x1cb
 2783 041f 4C040000 		.4byte	0x44c
 2784 0423 00       		.byte	0
 2785 0424 0F       		.uleb128 0xf
 2786 0425 6E050000 		.4byte	.LASF45
 2787 0429 06       		.byte	0x6
 2788 042a D001     		.2byte	0x1d0
 2789 042c 4C040000 		.4byte	0x44c
 2790 0430 0A       		.byte	0xa
 2791 0431 0F       		.uleb128 0xf
 2792 0432 73050000 		.4byte	.LASF46
 2793 0436 06       		.byte	0x6
 2794 0437 D501     		.2byte	0x1d5
 2795 0439 4C040000 		.4byte	0x44c
 2796 043d 14       		.byte	0x14
 2797 043e 0F       		.uleb128 0xf
 2798 043f D00A0000 		.4byte	.LASF47
 2799 0443 06       		.byte	0x6
 2800 0444 DA01     		.2byte	0x1da
 2801 0446 5C040000 		.4byte	0x45c
 2802 044a 1E       		.byte	0x1e
 2803 044b 00       		.byte	0
 2804 044c 0D       		.uleb128 0xd
 2805 044d 02040000 		.4byte	0x402
 2806 0451 5C040000 		.4byte	0x45c
 2807 0455 0E       		.uleb128 0xe
 2808 0456 DA010000 		.4byte	0x1da
 2809 045a 00       		.byte	0
 2810 045b 00       		.byte	0
 2811 045c 0D       		.uleb128 0xd
 2812 045d 02040000 		.4byte	0x402
 2813 0461 6C040000 		.4byte	0x46c
 2814 0465 0E       		.uleb128 0xe
 2815 0466 DA010000 		.4byte	0x1da
 2816 046a 04       		.byte	0x4
 2817 046b 00       		.byte	0
 2818 046c 05       		.uleb128 0x5
 2819 046d 46000000 		.4byte	.LASF55
 2820 0471 06       		.byte	0x6
 2821 0472 DB01     		.2byte	0x1db
 2822 0474 0E040000 		.4byte	0x40e
 2823 0478 10       		.uleb128 0x10
 2824 0479 BC       		.byte	0xbc
 2825 047a 06       		.byte	0x6
 2826 047b E101     		.2byte	0x1e1
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 113


 2827 047d 93050000 		.4byte	0x593
 2828 0481 0F       		.uleb128 0xf
 2829 0482 F0090000 		.4byte	.LASF56
 2830 0486 06       		.byte	0x6
 2831 0487 E801     		.2byte	0x1e8
 2832 0489 8D000000 		.4byte	0x8d
 2833 048d 00       		.byte	0
 2834 048e 0F       		.uleb128 0xf
 2835 048f 870E0000 		.4byte	.LASF57
 2836 0493 06       		.byte	0x6
 2837 0494 ED01     		.2byte	0x1ed
 2838 0496 8D000000 		.4byte	0x8d
 2839 049a 02       		.byte	0x2
 2840 049b 0F       		.uleb128 0xf
 2841 049c 33010000 		.4byte	.LASF58
 2842 04a0 06       		.byte	0x6
 2843 04a1 F201     		.2byte	0x1f2
 2844 04a3 8D000000 		.4byte	0x8d
 2845 04a7 04       		.byte	0x4
 2846 04a8 0F       		.uleb128 0xf
 2847 04a9 E20A0000 		.4byte	.LASF59
 2848 04ad 06       		.byte	0x6
 2849 04ae F801     		.2byte	0x1f8
 2850 04b0 8D000000 		.4byte	0x8d
 2851 04b4 06       		.byte	0x6
 2852 04b5 0F       		.uleb128 0xf
 2853 04b6 27010000 		.4byte	.LASF60
 2854 04ba 06       		.byte	0x6
 2855 04bb FD01     		.2byte	0x1fd
 2856 04bd 8D000000 		.4byte	0x8d
 2857 04c1 08       		.byte	0x8
 2858 04c2 0F       		.uleb128 0xf
 2859 04c3 60060000 		.4byte	.LASF61
 2860 04c7 06       		.byte	0x6
 2861 04c8 0202     		.2byte	0x202
 2862 04ca D7000000 		.4byte	0xd7
 2863 04ce 0C       		.byte	0xc
 2864 04cf 0F       		.uleb128 0xf
 2865 04d0 C50A0000 		.4byte	.LASF62
 2866 04d4 06       		.byte	0x6
 2867 04d5 0802     		.2byte	0x208
 2868 04d7 93050000 		.4byte	0x593
 2869 04db 10       		.byte	0x10
 2870 04dc 0F       		.uleb128 0xf
 2871 04dd 4C0B0000 		.4byte	.LASF63
 2872 04e1 06       		.byte	0x6
 2873 04e2 0F02     		.2byte	0x20f
 2874 04e4 93050000 		.4byte	0x593
 2875 04e8 14       		.byte	0x14
 2876 04e9 0F       		.uleb128 0xf
 2877 04ea 040A0000 		.4byte	.LASF64
 2878 04ee 06       		.byte	0x6
 2879 04ef 1F02     		.2byte	0x21f
 2880 04f1 A3050000 		.4byte	0x5a3
 2881 04f5 18       		.byte	0x18
 2882 04f6 0F       		.uleb128 0xf
 2883 04f7 B3070000 		.4byte	.LASF65
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 114


 2884 04fb 06       		.byte	0x6
 2885 04fc 2502     		.2byte	0x225
 2886 04fe 8D000000 		.4byte	0x8d
 2887 0502 1C       		.byte	0x1c
 2888 0503 0F       		.uleb128 0xf
 2889 0504 C3040000 		.4byte	.LASF66
 2890 0508 06       		.byte	0x6
 2891 0509 2A02     		.2byte	0x22a
 2892 050b 81000000 		.4byte	0x81
 2893 050f 1E       		.byte	0x1e
 2894 0510 0F       		.uleb128 0xf
 2895 0511 830C0000 		.4byte	.LASF67
 2896 0515 06       		.byte	0x6
 2897 0516 2F02     		.2byte	0x22f
 2898 0518 81000000 		.4byte	0x81
 2899 051c 1F       		.byte	0x1f
 2900 051d 0F       		.uleb128 0xf
 2901 051e 53070000 		.4byte	.LASF68
 2902 0522 06       		.byte	0x6
 2903 0523 3402     		.2byte	0x234
 2904 0525 8E030000 		.4byte	0x38e
 2905 0529 20       		.byte	0x20
 2906 052a 0F       		.uleb128 0xf
 2907 052b D8030000 		.4byte	.LASF69
 2908 052f 06       		.byte	0x6
 2909 0530 3902     		.2byte	0x239
 2910 0532 6C040000 		.4byte	0x46c
 2911 0536 62       		.byte	0x62
 2912 0537 0F       		.uleb128 0xf
 2913 0538 E4000000 		.4byte	.LASF70
 2914 053c 06       		.byte	0x6
 2915 053d 3E02     		.2byte	0x23e
 2916 053f 81000000 		.4byte	0x81
 2917 0543 B2       		.byte	0xb2
 2918 0544 0F       		.uleb128 0xf
 2919 0545 F7030000 		.4byte	.LASF71
 2920 0549 06       		.byte	0x6
 2921 054a 4302     		.2byte	0x243
 2922 054c 81000000 		.4byte	0x81
 2923 0550 B3       		.byte	0xb3
 2924 0551 0F       		.uleb128 0xf
 2925 0552 DD090000 		.4byte	.LASF72
 2926 0556 06       		.byte	0x6
 2927 0557 4802     		.2byte	0x248
 2928 0559 8D000000 		.4byte	0x8d
 2929 055d B4       		.byte	0xb4
 2930 055e 0F       		.uleb128 0xf
 2931 055f 9A070000 		.4byte	.LASF73
 2932 0563 06       		.byte	0x6
 2933 0564 4D02     		.2byte	0x24d
 2934 0566 34030000 		.4byte	0x334
 2935 056a B6       		.byte	0xb6
 2936 056b 0F       		.uleb128 0xf
 2937 056c 3B010000 		.4byte	.LASF74
 2938 0570 06       		.byte	0x6
 2939 0571 5202     		.2byte	0x252
 2940 0573 81000000 		.4byte	0x81
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 115


 2941 0577 B8       		.byte	0xb8
 2942 0578 0F       		.uleb128 0xf
 2943 0579 A9090000 		.4byte	.LASF75
 2944 057d 06       		.byte	0x6
 2945 057e 5702     		.2byte	0x257
 2946 0580 81000000 		.4byte	0x81
 2947 0584 B9       		.byte	0xb9
 2948 0585 0F       		.uleb128 0xf
 2949 0586 930C0000 		.4byte	.LASF76
 2950 058a 06       		.byte	0x6
 2951 058b 5C02     		.2byte	0x25c
 2952 058d 81000000 		.4byte	0x81
 2953 0591 BA       		.byte	0xba
 2954 0592 00       		.byte	0
 2955 0593 0D       		.uleb128 0xd
 2956 0594 99000000 		.4byte	0x99
 2957 0598 A3050000 		.4byte	0x5a3
 2958 059c 0E       		.uleb128 0xe
 2959 059d DA010000 		.4byte	0x1da
 2960 05a1 00       		.byte	0
 2961 05a2 00       		.byte	0
 2962 05a3 0D       		.uleb128 0xd
 2963 05a4 81000000 		.4byte	0x81
 2964 05a8 B3050000 		.4byte	0x5b3
 2965 05ac 0E       		.uleb128 0xe
 2966 05ad DA010000 		.4byte	0x1da
 2967 05b1 03       		.byte	0x3
 2968 05b2 00       		.byte	0
 2969 05b3 05       		.uleb128 0x5
 2970 05b4 CA0C0000 		.4byte	.LASF77
 2971 05b8 06       		.byte	0x6
 2972 05b9 5D02     		.2byte	0x25d
 2973 05bb 78040000 		.4byte	0x478
 2974 05bf 10       		.uleb128 0x10
 2975 05c0 1C       		.byte	0x1c
 2976 05c1 06       		.byte	0x6
 2977 05c2 6302     		.2byte	0x263
 2978 05c4 3E060000 		.4byte	0x63e
 2979 05c8 0F       		.uleb128 0xf
 2980 05c9 06080000 		.4byte	.LASF78
 2981 05cd 06       		.byte	0x6
 2982 05ce 6802     		.2byte	0x268
 2983 05d0 3E060000 		.4byte	0x63e
 2984 05d4 00       		.byte	0
 2985 05d5 0F       		.uleb128 0xf
 2986 05d6 8D060000 		.4byte	.LASF79
 2987 05da 06       		.byte	0x6
 2988 05db 6D02     		.2byte	0x26d
 2989 05dd 3E060000 		.4byte	0x63e
 2990 05e1 04       		.byte	0x4
 2991 05e2 0F       		.uleb128 0xf
 2992 05e3 CD040000 		.4byte	.LASF80
 2993 05e7 06       		.byte	0x6
 2994 05e8 7202     		.2byte	0x272
 2995 05ea 3E060000 		.4byte	0x63e
 2996 05ee 08       		.byte	0x8
 2997 05ef 0F       		.uleb128 0xf
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 116


 2998 05f0 EB0A0000 		.4byte	.LASF81
 2999 05f4 06       		.byte	0x6
 3000 05f5 7702     		.2byte	0x277
 3001 05f7 3E060000 		.4byte	0x63e
 3002 05fb 0C       		.byte	0xc
 3003 05fc 0F       		.uleb128 0xf
 3004 05fd 460D0000 		.4byte	.LASF82
 3005 0601 06       		.byte	0x6
 3006 0602 7C02     		.2byte	0x27c
 3007 0604 99000000 		.4byte	0x99
 3008 0608 10       		.byte	0x10
 3009 0609 0F       		.uleb128 0xf
 3010 060a 30080000 		.4byte	.LASF83
 3011 060e 06       		.byte	0x6
 3012 060f 8102     		.2byte	0x281
 3013 0611 99000000 		.4byte	0x99
 3014 0615 14       		.byte	0x14
 3015 0616 0F       		.uleb128 0xf
 3016 0617 1E060000 		.4byte	.LASF84
 3017 061b 06       		.byte	0x6
 3018 061c 8602     		.2byte	0x286
 3019 061e 81000000 		.4byte	0x81
 3020 0622 18       		.byte	0x18
 3021 0623 0F       		.uleb128 0xf
 3022 0624 790B0000 		.4byte	.LASF85
 3023 0628 06       		.byte	0x6
 3024 0629 8B02     		.2byte	0x28b
 3025 062b 81000000 		.4byte	0x81
 3026 062f 19       		.byte	0x19
 3027 0630 0F       		.uleb128 0xf
 3028 0631 D1020000 		.4byte	.LASF86
 3029 0635 06       		.byte	0x6
 3030 0636 9002     		.2byte	0x290
 3031 0638 81000000 		.4byte	0x81
 3032 063c 1A       		.byte	0x1a
 3033 063d 00       		.byte	0
 3034 063e 07       		.uleb128 0x7
 3035 063f 04       		.byte	0x4
 3036 0640 CB000000 		.4byte	0xcb
 3037 0644 05       		.uleb128 0x5
 3038 0645 510C0000 		.4byte	.LASF87
 3039 0649 06       		.byte	0x6
 3040 064a 9102     		.2byte	0x291
 3041 064c BF050000 		.4byte	0x5bf
 3042 0650 10       		.uleb128 0x10
 3043 0651 28       		.byte	0x28
 3044 0652 06       		.byte	0x6
 3045 0653 C402     		.2byte	0x2c4
 3046 0655 10070000 		.4byte	0x710
 3047 0659 0F       		.uleb128 0xf
 3048 065a D20D0000 		.4byte	.LASF88
 3049 065e 06       		.byte	0x6
 3050 065f CD02     		.2byte	0x2cd
 3051 0661 10070000 		.4byte	0x710
 3052 0665 00       		.byte	0
 3053 0666 0F       		.uleb128 0xf
 3054 0667 BE0C0000 		.4byte	.LASF89
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 117


 3055 066b 06       		.byte	0x6
 3056 066c D402     		.2byte	0x2d4
 3057 066e 17070000 		.4byte	0x717
 3058 0672 04       		.byte	0x4
 3059 0673 0F       		.uleb128 0xf
 3060 0674 F9090000 		.4byte	.LASF90
 3061 0678 06       		.byte	0x6
 3062 0679 DA02     		.2byte	0x2da
 3063 067b 19070000 		.4byte	0x719
 3064 067f 08       		.byte	0x8
 3065 0680 0F       		.uleb128 0xf
 3066 0681 16080000 		.4byte	.LASF91
 3067 0685 06       		.byte	0x6
 3068 0686 E002     		.2byte	0x2e0
 3069 0688 17070000 		.4byte	0x717
 3070 068c 0C       		.byte	0xc
 3071 068d 0F       		.uleb128 0xf
 3072 068e AA0B0000 		.4byte	.LASF92
 3073 0692 06       		.byte	0x6
 3074 0693 E702     		.2byte	0x2e7
 3075 0695 1F070000 		.4byte	0x71f
 3076 0699 10       		.byte	0x10
 3077 069a 0F       		.uleb128 0xf
 3078 069b 6A0C0000 		.4byte	.LASF93
 3079 069f 06       		.byte	0x6
 3080 06a0 EC02     		.2byte	0x2ec
 3081 06a2 99000000 		.4byte	0x99
 3082 06a6 14       		.byte	0x14
 3083 06a7 0F       		.uleb128 0xf
 3084 06a8 78050000 		.4byte	.LASF94
 3085 06ac 06       		.byte	0x6
 3086 06ad F302     		.2byte	0x2f3
 3087 06af 8D000000 		.4byte	0x8d
 3088 06b3 18       		.byte	0x18
 3089 06b4 0F       		.uleb128 0xf
 3090 06b5 34040000 		.4byte	.LASF95
 3091 06b9 06       		.byte	0x6
 3092 06ba FA02     		.2byte	0x2fa
 3093 06bc 81000000 		.4byte	0x81
 3094 06c0 1A       		.byte	0x1a
 3095 06c1 0F       		.uleb128 0xf
 3096 06c2 770C0000 		.4byte	.LASF96
 3097 06c6 06       		.byte	0x6
 3098 06c7 0003     		.2byte	0x300
 3099 06c9 81000000 		.4byte	0x81
 3100 06cd 1B       		.byte	0x1b
 3101 06ce 0F       		.uleb128 0xf
 3102 06cf 2B0B0000 		.4byte	.LASF97
 3103 06d3 06       		.byte	0x6
 3104 06d4 0A03     		.2byte	0x30a
 3105 06d6 81000000 		.4byte	0x81
 3106 06da 1C       		.byte	0x1c
 3107 06db 0F       		.uleb128 0xf
 3108 06dc 0E0D0000 		.4byte	.LASF98
 3109 06e0 06       		.byte	0x6
 3110 06e1 1203     		.2byte	0x312
 3111 06e3 81000000 		.4byte	0x81
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 118


 3112 06e7 1D       		.byte	0x1d
 3113 06e8 0F       		.uleb128 0xf
 3114 06e9 2A0A0000 		.4byte	.LASF99
 3115 06ed 06       		.byte	0x6
 3116 06ee 1703     		.2byte	0x317
 3117 06f0 8D000000 		.4byte	0x8d
 3118 06f4 1E       		.byte	0x1e
 3119 06f5 0F       		.uleb128 0xf
 3120 06f6 F90B0000 		.4byte	.LASF100
 3121 06fa 06       		.byte	0x6
 3122 06fb 2003     		.2byte	0x320
 3123 06fd 99000000 		.4byte	0x99
 3124 0701 20       		.byte	0x20
 3125 0702 0F       		.uleb128 0xf
 3126 0703 4B020000 		.4byte	.LASF101
 3127 0707 06       		.byte	0x6
 3128 0708 2503     		.2byte	0x325
 3129 070a 81000000 		.4byte	0x81
 3130 070e 24       		.byte	0x24
 3131 070f 00       		.byte	0
 3132 0710 07       		.uleb128 0x7
 3133 0711 04       		.byte	0x4
 3134 0712 16070000 		.4byte	0x716
 3135 0716 12       		.uleb128 0x12
 3136 0717 13       		.uleb128 0x13
 3137 0718 04       		.byte	0x4
 3138 0719 07       		.uleb128 0x7
 3139 071a 04       		.byte	0x4
 3140 071b 02040000 		.4byte	0x402
 3141 071f 07       		.uleb128 0x7
 3142 0720 04       		.byte	0x4
 3143 0721 81000000 		.4byte	0x81
 3144 0725 05       		.uleb128 0x5
 3145 0726 69030000 		.4byte	.LASF102
 3146 072a 06       		.byte	0x6
 3147 072b 2603     		.2byte	0x326
 3148 072d 50060000 		.4byte	0x650
 3149 0731 10       		.uleb128 0x10
 3150 0732 A0       		.byte	0xa0
 3151 0733 06       		.byte	0x6
 3152 0734 2C03     		.2byte	0x32c
 3153 0736 48070000 		.4byte	0x748
 3154 073a 0F       		.uleb128 0xf
 3155 073b E20E0000 		.4byte	.LASF103
 3156 073f 06       		.byte	0x6
 3157 0740 3103     		.2byte	0x331
 3158 0742 48070000 		.4byte	0x748
 3159 0746 00       		.byte	0
 3160 0747 00       		.byte	0
 3161 0748 0D       		.uleb128 0xd
 3162 0749 25070000 		.4byte	0x725
 3163 074d 58070000 		.4byte	0x758
 3164 0751 0E       		.uleb128 0xe
 3165 0752 DA010000 		.4byte	0x1da
 3166 0756 03       		.byte	0x3
 3167 0757 00       		.byte	0
 3168 0758 05       		.uleb128 0x5
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 119


 3169 0759 250E0000 		.4byte	.LASF104
 3170 075d 06       		.byte	0x6
 3171 075e 3203     		.2byte	0x332
 3172 0760 31070000 		.4byte	0x731
 3173 0764 02       		.uleb128 0x2
 3174 0765 08       		.byte	0x8
 3175 0766 04       		.byte	0x4
 3176 0767 9D090000 		.4byte	.LASF105
 3177 076b 09       		.uleb128 0x9
 3178 076c 01       		.byte	0x1
 3179 076d 2C000000 		.4byte	0x2c
 3180 0771 07       		.byte	0x7
 3181 0772 43       		.byte	0x43
 3182 0773 96070000 		.4byte	0x796
 3183 0777 0A       		.uleb128 0xa
 3184 0778 F6080000 		.4byte	.LASF106
 3185 077c 00       		.byte	0
 3186 077d 0A       		.uleb128 0xa
 3187 077e 86070000 		.4byte	.LASF107
 3188 0782 01       		.byte	0x1
 3189 0783 0A       		.uleb128 0xa
 3190 0784 A20C0000 		.4byte	.LASF108
 3191 0788 02       		.byte	0x2
 3192 0789 0A       		.uleb128 0xa
 3193 078a 84050000 		.4byte	.LASF109
 3194 078e 03       		.byte	0x3
 3195 078f 0A       		.uleb128 0xa
 3196 0790 C9000000 		.4byte	.LASF110
 3197 0794 04       		.byte	0x4
 3198 0795 00       		.byte	0
 3199 0796 03       		.uleb128 0x3
 3200 0797 69090000 		.4byte	.LASF111
 3201 079b 07       		.byte	0x7
 3202 079c 49       		.byte	0x49
 3203 079d 6B070000 		.4byte	0x76b
 3204 07a1 0B       		.uleb128 0xb
 3205 07a2 08       		.byte	0x8
 3206 07a3 07       		.byte	0x7
 3207 07a4 CF       		.byte	0xcf
 3208 07a5 C2070000 		.4byte	0x7c2
 3209 07a9 0C       		.uleb128 0xc
 3210 07aa 230B0000 		.4byte	.LASF112
 3211 07ae 07       		.byte	0x7
 3212 07af D4       		.byte	0xd4
 3213 07b0 99000000 		.4byte	0x99
 3214 07b4 00       		.byte	0
 3215 07b5 0C       		.uleb128 0xc
 3216 07b6 26080000 		.4byte	.LASF113
 3217 07ba 07       		.byte	0x7
 3218 07bb D9       		.byte	0xd9
 3219 07bc 99000000 		.4byte	0x99
 3220 07c0 04       		.byte	0x4
 3221 07c1 00       		.byte	0
 3222 07c2 03       		.uleb128 0x3
 3223 07c3 0A090000 		.4byte	.LASF114
 3224 07c7 07       		.byte	0x7
 3225 07c8 DA       		.byte	0xda
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 120


 3226 07c9 A1070000 		.4byte	0x7a1
 3227 07cd 14       		.uleb128 0x14
 3228 07ce A1010000 		.4byte	.LASF117
 3229 07d2 01       		.byte	0x1
 3230 07d3 3B0A     		.2byte	0xa3b
 3231 07d5 81000000 		.4byte	0x81
 3232 07d9 00000000 		.4byte	.LFB23
 3233 07dd 84000000 		.4byte	.LFE23-.LFB23
 3234 07e1 01       		.uleb128 0x1
 3235 07e2 9C       		.byte	0x9c
 3236 07e3 18080000 		.4byte	0x818
 3237 07e7 15       		.uleb128 0x15
 3238 07e8 540E0000 		.4byte	.LASF115
 3239 07ec 01       		.byte	0x1
 3240 07ed 3B0A     		.2byte	0xa3b
 3241 07ef 99000000 		.4byte	0x99
 3242 07f3 00000000 		.4byte	.LLST0
 3243 07f7 15       		.uleb128 0x15
 3244 07f8 46060000 		.4byte	.LASF116
 3245 07fc 01       		.byte	0x1
 3246 07fd 3B0A     		.2byte	0xa3b
 3247 07ff 99000000 		.4byte	0x99
 3248 0803 2C000000 		.4byte	.LLST1
 3249 0807 16       		.uleb128 0x16
 3250 0808 3D040000 		.4byte	.LASF119
 3251 080c 01       		.byte	0x1
 3252 080d 3D0A     		.2byte	0xa3d
 3253 080f 81000000 		.4byte	0x81
 3254 0813 58000000 		.4byte	.LLST2
 3255 0817 00       		.byte	0
 3256 0818 14       		.uleb128 0x14
 3257 0819 E8060000 		.4byte	.LASF118
 3258 081d 01       		.byte	0x1
 3259 081e 870A     		.2byte	0xa87
 3260 0820 81000000 		.4byte	0x81
 3261 0824 00000000 		.4byte	.LFB24
 3262 0828 42000000 		.4byte	.LFE24-.LFB24
 3263 082c 01       		.uleb128 0x1
 3264 082d 9C       		.byte	0x9c
 3265 082e 83080000 		.4byte	0x883
 3266 0832 15       		.uleb128 0x15
 3267 0833 540E0000 		.4byte	.LASF115
 3268 0837 01       		.byte	0x1
 3269 0838 870A     		.2byte	0xa87
 3270 083a 99000000 		.4byte	0x99
 3271 083e 77000000 		.4byte	.LLST3
 3272 0842 15       		.uleb128 0x15
 3273 0843 3D040000 		.4byte	.LASF119
 3274 0847 01       		.byte	0x1
 3275 0848 870A     		.2byte	0xa87
 3276 084a 81000000 		.4byte	0x81
 3277 084e BC000000 		.4byte	.LLST4
 3278 0852 16       		.uleb128 0x16
 3279 0853 31020000 		.4byte	.LASF120
 3280 0857 01       		.byte	0x1
 3281 0858 890A     		.2byte	0xa89
 3282 085a 99000000 		.4byte	0x99
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 121


 3283 085e F6000000 		.4byte	.LLST5
 3284 0862 16       		.uleb128 0x16
 3285 0863 22020000 		.4byte	.LASF121
 3286 0867 01       		.byte	0x1
 3287 0868 8A0A     		.2byte	0xa8a
 3288 086a 99000000 		.4byte	0x99
 3289 086e 20010000 		.4byte	.LLST6
 3290 0872 16       		.uleb128 0x16
 3291 0873 DF0D0000 		.4byte	.LASF122
 3292 0877 01       		.byte	0x1
 3293 0878 8B0A     		.2byte	0xa8b
 3294 087a 99000000 		.4byte	0x99
 3295 087e 49010000 		.4byte	.LLST7
 3296 0882 00       		.byte	0
 3297 0883 17       		.uleb128 0x17
 3298 0884 67060000 		.4byte	.LASF165
 3299 0888 01       		.byte	0x1
 3300 0889 FB09     		.2byte	0x9fb
 3301 088b 00000000 		.4byte	.LFB22
 3302 088f 26000000 		.4byte	.LFE22-.LFB22
 3303 0893 01       		.uleb128 0x1
 3304 0894 9C       		.byte	0x9c
 3305 0895 3F090000 		.4byte	0x93f
 3306 0899 15       		.uleb128 0x15
 3307 089a 2A090000 		.4byte	.LASF123
 3308 089e 01       		.byte	0x1
 3309 089f FB09     		.2byte	0x9fb
 3310 08a1 99000000 		.4byte	0x99
 3311 08a5 5C010000 		.4byte	.LLST8
 3312 08a9 15       		.uleb128 0x15
 3313 08aa 63020000 		.4byte	.LASF124
 3314 08ae 01       		.byte	0x1
 3315 08af FB09     		.2byte	0x9fb
 3316 08b1 3F090000 		.4byte	0x93f
 3317 08b5 7D010000 		.4byte	.LLST9
 3318 08b9 16       		.uleb128 0x16
 3319 08ba 3D040000 		.4byte	.LASF119
 3320 08be 01       		.byte	0x1
 3321 08bf FD09     		.2byte	0x9fd
 3322 08c1 81000000 		.4byte	0x81
 3323 08c5 A9010000 		.4byte	.LLST10
 3324 08c9 16       		.uleb128 0x16
 3325 08ca 31020000 		.4byte	.LASF120
 3326 08ce 01       		.byte	0x1
 3327 08cf FE09     		.2byte	0x9fe
 3328 08d1 81000000 		.4byte	0x81
 3329 08d5 BC010000 		.4byte	.LLST11
 3330 08d9 16       		.uleb128 0x16
 3331 08da 46060000 		.4byte	.LASF116
 3332 08de 01       		.byte	0x1
 3333 08df 020A     		.2byte	0xa02
 3334 08e1 99000000 		.4byte	0x99
 3335 08e5 CF010000 		.4byte	.LLST12
 3336 08e9 16       		.uleb128 0x16
 3337 08ea 540E0000 		.4byte	.LASF115
 3338 08ee 01       		.byte	0x1
 3339 08ef 030A     		.2byte	0xa03
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 122


 3340 08f1 99000000 		.4byte	0x99
 3341 08f5 E2010000 		.4byte	.LLST13
 3342 08f9 18       		.uleb128 0x18
 3343 08fa 0A000000 		.4byte	.LVL27
 3344 08fe 5F140000 		.4byte	0x145f
 3345 0902 0E090000 		.4byte	0x90e
 3346 0906 19       		.uleb128 0x19
 3347 0907 01       		.uleb128 0x1
 3348 0908 50       		.byte	0x50
 3349 0909 03       		.uleb128 0x3
 3350 090a F3       		.byte	0xf3
 3351 090b 01       		.uleb128 0x1
 3352 090c 50       		.byte	0x50
 3353 090d 00       		.byte	0
 3354 090e 18       		.uleb128 0x18
 3355 090f 12000000 		.4byte	.LVL29
 3356 0913 CD070000 		.4byte	0x7cd
 3357 0917 28090000 		.4byte	0x928
 3358 091b 19       		.uleb128 0x19
 3359 091c 01       		.uleb128 0x1
 3360 091d 50       		.byte	0x50
 3361 091e 02       		.uleb128 0x2
 3362 091f 76       		.byte	0x76
 3363 0920 00       		.sleb128 0
 3364 0921 19       		.uleb128 0x19
 3365 0922 01       		.uleb128 0x1
 3366 0923 51       		.byte	0x51
 3367 0924 02       		.uleb128 0x2
 3368 0925 74       		.byte	0x74
 3369 0926 00       		.sleb128 0
 3370 0927 00       		.byte	0
 3371 0928 1A       		.uleb128 0x1a
 3372 0929 1C000000 		.4byte	.LVL32
 3373 092d 18080000 		.4byte	0x818
 3374 0931 19       		.uleb128 0x19
 3375 0932 01       		.uleb128 0x1
 3376 0933 50       		.byte	0x50
 3377 0934 02       		.uleb128 0x2
 3378 0935 76       		.byte	0x76
 3379 0936 00       		.sleb128 0
 3380 0937 19       		.uleb128 0x19
 3381 0938 01       		.uleb128 0x1
 3382 0939 51       		.byte	0x51
 3383 093a 02       		.uleb128 0x2
 3384 093b 74       		.byte	0x74
 3385 093c 00       		.sleb128 0
 3386 093d 00       		.byte	0
 3387 093e 00       		.byte	0
 3388 093f 07       		.uleb128 0x7
 3389 0940 04       		.byte	0x4
 3390 0941 E1010000 		.4byte	0x1e1
 3391 0945 1B       		.uleb128 0x1b
 3392 0946 5C070000 		.4byte	.LASF220
 3393 094a 01       		.byte	0x1
 3394 094b EC       		.byte	0xec
 3395 094c 99000000 		.4byte	0x99
 3396 0950 00000000 		.4byte	.LFB1
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 123


 3397 0954 10000000 		.4byte	.LFE1-.LFB1
 3398 0958 01       		.uleb128 0x1
 3399 0959 9C       		.byte	0x9c
 3400 095a 1C       		.uleb128 0x1c
 3401 095b F4000000 		.4byte	.LASF127
 3402 095f 01       		.byte	0x1
 3403 0960 1A01     		.2byte	0x11a
 3404 0962 BA000000 		.4byte	0xba
 3405 0966 00000000 		.4byte	.LFB2
 3406 096a 64000000 		.4byte	.LFE2-.LFB2
 3407 096e 01       		.uleb128 0x1
 3408 096f 9C       		.byte	0x9c
 3409 0970 B3090000 		.4byte	0x9b3
 3410 0974 15       		.uleb128 0x15
 3411 0975 9D0E0000 		.4byte	.LASF125
 3412 0979 01       		.byte	0x1
 3413 097a 1A01     		.2byte	0x11a
 3414 097c 99000000 		.4byte	0x99
 3415 0980 00020000 		.4byte	.LLST14
 3416 0984 16       		.uleb128 0x16
 3417 0985 900E0000 		.4byte	.LASF126
 3418 0989 01       		.byte	0x1
 3419 098a 1C01     		.2byte	0x11c
 3420 098c BA000000 		.4byte	0xba
 3421 0990 53020000 		.4byte	.LLST15
 3422 0994 18       		.uleb128 0x18
 3423 0995 4C000000 		.4byte	.LVL38
 3424 0999 6A140000 		.4byte	0x146a
 3425 099d A9090000 		.4byte	0x9a9
 3426 09a1 19       		.uleb128 0x19
 3427 09a2 01       		.uleb128 0x1
 3428 09a3 50       		.byte	0x50
 3429 09a4 03       		.uleb128 0x3
 3430 09a5 F3       		.byte	0xf3
 3431 09a6 01       		.uleb128 0x1
 3432 09a7 50       		.byte	0x50
 3433 09a8 00       		.byte	0
 3434 09a9 1D       		.uleb128 0x1d
 3435 09aa 52000000 		.4byte	.LVL40
 3436 09ae 75140000 		.4byte	0x1475
 3437 09b2 00       		.byte	0
 3438 09b3 1C       		.uleb128 0x1c
 3439 09b4 970D0000 		.4byte	.LASF128
 3440 09b8 01       		.byte	0x1
 3441 09b9 6D01     		.2byte	0x16d
 3442 09bb BA000000 		.4byte	0xba
 3443 09bf 00000000 		.4byte	.LFB3
 3444 09c3 38000000 		.4byte	.LFE3-.LFB3
 3445 09c7 01       		.uleb128 0x1
 3446 09c8 9C       		.byte	0x9c
 3447 09c9 F0090000 		.4byte	0x9f0
 3448 09cd 16       		.uleb128 0x16
 3449 09ce 81000000 		.4byte	.LASF129
 3450 09d2 01       		.byte	0x1
 3451 09d3 6F01     		.2byte	0x16f
 3452 09d5 BA000000 		.4byte	0xba
 3453 09d9 7C020000 		.4byte	.LLST16
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 124


 3454 09dd 1D       		.uleb128 0x1d
 3455 09de 1A000000 		.4byte	.LVL46
 3456 09e2 81140000 		.4byte	0x1481
 3457 09e6 1D       		.uleb128 0x1d
 3458 09e7 22000000 		.4byte	.LVL47
 3459 09eb 8C140000 		.4byte	0x148c
 3460 09ef 00       		.byte	0
 3461 09f0 1C       		.uleb128 0x1c
 3462 09f1 2B070000 		.4byte	.LASF130
 3463 09f5 01       		.byte	0x1
 3464 09f6 AB01     		.2byte	0x1ab
 3465 09f8 BA000000 		.4byte	0xba
 3466 09fc 00000000 		.4byte	.LFB4
 3467 0a00 48000000 		.4byte	.LFE4-.LFB4
 3468 0a04 01       		.uleb128 0x1
 3469 0a05 9C       		.byte	0x9c
 3470 0a06 480A0000 		.4byte	0xa48
 3471 0a0a 16       		.uleb128 0x16
 3472 0a0b 81000000 		.4byte	.LASF129
 3473 0a0f 01       		.byte	0x1
 3474 0a10 AD01     		.2byte	0x1ad
 3475 0a12 BA000000 		.4byte	0xba
 3476 0a16 9B020000 		.4byte	.LLST17
 3477 0a1a 16       		.uleb128 0x16
 3478 0a1b 2A090000 		.4byte	.LASF123
 3479 0a1f 01       		.byte	0x1
 3480 0a20 AF01     		.2byte	0x1af
 3481 0a22 99000000 		.4byte	0x99
 3482 0a26 E9020000 		.4byte	.LLST18
 3483 0a2a 18       		.uleb128 0x18
 3484 0a2b 18000000 		.4byte	.LVL52
 3485 0a2f 5A090000 		.4byte	0x95a
 3486 0a33 3E0A0000 		.4byte	0xa3e
 3487 0a37 19       		.uleb128 0x19
 3488 0a38 01       		.uleb128 0x1
 3489 0a39 50       		.byte	0x50
 3490 0a3a 02       		.uleb128 0x2
 3491 0a3b 74       		.byte	0x74
 3492 0a3c 00       		.sleb128 0
 3493 0a3d 00       		.byte	0
 3494 0a3e 1D       		.uleb128 0x1d
 3495 0a3f 32000000 		.4byte	.LVL53
 3496 0a43 B3090000 		.4byte	0x9b3
 3497 0a47 00       		.byte	0
 3498 0a48 1C       		.uleb128 0x1c
 3499 0a49 870A0000 		.4byte	.LASF131
 3500 0a4d 01       		.byte	0x1
 3501 0a4e 1702     		.2byte	0x217
 3502 0a50 BA000000 		.4byte	0xba
 3503 0a54 00000000 		.4byte	.LFB5
 3504 0a58 78000000 		.4byte	.LFE5-.LFB5
 3505 0a5c 01       		.uleb128 0x1
 3506 0a5d 9C       		.byte	0x9c
 3507 0a5e B10A0000 		.4byte	0xab1
 3508 0a62 15       		.uleb128 0x15
 3509 0a63 9D0E0000 		.4byte	.LASF125
 3510 0a67 01       		.byte	0x1
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 125


 3511 0a68 1702     		.2byte	0x217
 3512 0a6a 99000000 		.4byte	0x99
 3513 0a6e FC020000 		.4byte	.LLST19
 3514 0a72 15       		.uleb128 0x15
 3515 0a73 5A020000 		.4byte	.LASF132
 3516 0a77 01       		.byte	0x1
 3517 0a78 1702     		.2byte	0x217
 3518 0a7a 99000000 		.4byte	0x99
 3519 0a7e 4F030000 		.4byte	.LLST20
 3520 0a82 16       		.uleb128 0x16
 3521 0a83 900E0000 		.4byte	.LASF126
 3522 0a87 01       		.byte	0x1
 3523 0a88 1902     		.2byte	0x219
 3524 0a8a BA000000 		.4byte	0xba
 3525 0a8e A2030000 		.4byte	.LLST21
 3526 0a92 18       		.uleb128 0x18
 3527 0a93 60000000 		.4byte	.LVL59
 3528 0a97 98140000 		.4byte	0x1498
 3529 0a9b A70A0000 		.4byte	0xaa7
 3530 0a9f 19       		.uleb128 0x19
 3531 0aa0 01       		.uleb128 0x1
 3532 0aa1 50       		.byte	0x50
 3533 0aa2 03       		.uleb128 0x3
 3534 0aa3 F3       		.byte	0xf3
 3535 0aa4 01       		.uleb128 0x1
 3536 0aa5 50       		.byte	0x50
 3537 0aa6 00       		.byte	0
 3538 0aa7 1D       		.uleb128 0x1d
 3539 0aa8 66000000 		.4byte	.LVL61
 3540 0aac A3140000 		.4byte	0x14a3
 3541 0ab0 00       		.byte	0
 3542 0ab1 1C       		.uleb128 0x1c
 3543 0ab2 09010000 		.4byte	.LASF133
 3544 0ab6 01       		.byte	0x1
 3545 0ab7 8102     		.2byte	0x281
 3546 0ab9 BA000000 		.4byte	0xba
 3547 0abd 00000000 		.4byte	.LFB6
 3548 0ac1 38000000 		.4byte	.LFE6-.LFB6
 3549 0ac5 01       		.uleb128 0x1
 3550 0ac6 9C       		.byte	0x9c
 3551 0ac7 EE0A0000 		.4byte	0xaee
 3552 0acb 16       		.uleb128 0x16
 3553 0acc 81000000 		.4byte	.LASF129
 3554 0ad0 01       		.byte	0x1
 3555 0ad1 8302     		.2byte	0x283
 3556 0ad3 BA000000 		.4byte	0xba
 3557 0ad7 CB030000 		.4byte	.LLST22
 3558 0adb 1D       		.uleb128 0x1d
 3559 0adc 1A000000 		.4byte	.LVL67
 3560 0ae0 AF140000 		.4byte	0x14af
 3561 0ae4 1D       		.uleb128 0x1d
 3562 0ae5 22000000 		.4byte	.LVL68
 3563 0ae9 BA140000 		.4byte	0x14ba
 3564 0aed 00       		.byte	0
 3565 0aee 1E       		.uleb128 0x1e
 3566 0aef 74020000 		.4byte	.LASF140
 3567 0af3 01       		.byte	0x1
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 126


 3568 0af4 4803     		.2byte	0x348
 3569 0af6 00000000 		.4byte	.LFB8
 3570 0afa EC000000 		.4byte	.LFE8-.LFB8
 3571 0afe 01       		.uleb128 0x1
 3572 0aff 9C       		.byte	0x9c
 3573 0b00 E00B0000 		.4byte	0xbe0
 3574 0b04 15       		.uleb128 0x15
 3575 0b05 9D0E0000 		.4byte	.LASF125
 3576 0b09 01       		.byte	0x1
 3577 0b0a 4803     		.2byte	0x348
 3578 0b0c 99000000 		.4byte	0x99
 3579 0b10 EA030000 		.4byte	.LLST23
 3580 0b14 15       		.uleb128 0x15
 3581 0b15 1C000000 		.4byte	.LASF134
 3582 0b19 01       		.byte	0x1
 3583 0b1a 4803     		.2byte	0x348
 3584 0b1c 99000000 		.4byte	0x99
 3585 0b20 0B040000 		.4byte	.LLST24
 3586 0b24 15       		.uleb128 0x15
 3587 0b25 160D0000 		.4byte	.LASF135
 3588 0b29 01       		.byte	0x1
 3589 0b2a 4803     		.2byte	0x348
 3590 0b2c 99000000 		.4byte	0x99
 3591 0b30 2C040000 		.4byte	.LLST25
 3592 0b34 1F       		.uleb128 0x1f
 3593 0b35 21050000 		.4byte	.LASF136
 3594 0b39 01       		.byte	0x1
 3595 0b3a 4A03     		.2byte	0x34a
 3596 0b3c 99000000 		.4byte	0x99
 3597 0b40 01       		.byte	0x1
 3598 0b41 16       		.uleb128 0x16
 3599 0b42 1C0D0000 		.4byte	.LASF137
 3600 0b46 01       		.byte	0x1
 3601 0b47 4B03     		.2byte	0x34b
 3602 0b49 99000000 		.4byte	0x99
 3603 0b4d 58040000 		.4byte	.LLST26
 3604 0b51 16       		.uleb128 0x16
 3605 0b52 58010000 		.4byte	.LASF138
 3606 0b56 01       		.byte	0x1
 3607 0b57 4C03     		.2byte	0x34c
 3608 0b59 81000000 		.4byte	0x81
 3609 0b5d 77040000 		.4byte	.LLST27
 3610 0b61 16       		.uleb128 0x16
 3611 0b62 8D0C0000 		.4byte	.LASF139
 3612 0b66 01       		.byte	0x1
 3613 0b67 4D03     		.2byte	0x34d
 3614 0b69 E00B0000 		.4byte	0xbe0
 3615 0b6d B6040000 		.4byte	.LLST28
 3616 0b71 1D       		.uleb128 0x1d
 3617 0b72 1E000000 		.4byte	.LVL76
 3618 0b76 C6140000 		.4byte	0x14c6
 3619 0b7a 1D       		.uleb128 0x1d
 3620 0b7b 3E000000 		.4byte	.LVL77
 3621 0b7f D1140000 		.4byte	0x14d1
 3622 0b83 1D       		.uleb128 0x1d
 3623 0b84 4E000000 		.4byte	.LVL78
 3624 0b88 C6140000 		.4byte	0x14c6
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 127


 3625 0b8c 1D       		.uleb128 0x1d
 3626 0b8d 6E000000 		.4byte	.LVL79
 3627 0b91 D1140000 		.4byte	0x14d1
 3628 0b95 1D       		.uleb128 0x1d
 3629 0b96 74000000 		.4byte	.LVL80
 3630 0b9a C6140000 		.4byte	0x14c6
 3631 0b9e 1D       		.uleb128 0x1d
 3632 0b9f 86000000 		.4byte	.LVL81
 3633 0ba3 D1140000 		.4byte	0x14d1
 3634 0ba7 18       		.uleb128 0x18
 3635 0ba8 8E000000 		.4byte	.LVL82
 3636 0bac DC140000 		.4byte	0x14dc
 3637 0bb0 BB0B0000 		.4byte	0xbbb
 3638 0bb4 19       		.uleb128 0x19
 3639 0bb5 01       		.uleb128 0x1
 3640 0bb6 50       		.byte	0x50
 3641 0bb7 02       		.uleb128 0x2
 3642 0bb8 74       		.byte	0x74
 3643 0bb9 00       		.sleb128 0
 3644 0bba 00       		.byte	0
 3645 0bbb 1D       		.uleb128 0x1d
 3646 0bbc 94000000 		.4byte	.LVL83
 3647 0bc0 C6140000 		.4byte	0x14c6
 3648 0bc4 1D       		.uleb128 0x1d
 3649 0bc5 B4000000 		.4byte	.LVL84
 3650 0bc9 D1140000 		.4byte	0x14d1
 3651 0bcd 1D       		.uleb128 0x1d
 3652 0bce BA000000 		.4byte	.LVL85
 3653 0bd2 C6140000 		.4byte	0x14c6
 3654 0bd6 1D       		.uleb128 0x1d
 3655 0bd7 DA000000 		.4byte	.LVL86
 3656 0bdb D1140000 		.4byte	0x14d1
 3657 0bdf 00       		.byte	0
 3658 0be0 07       		.uleb128 0x7
 3659 0be1 04       		.byte	0x4
 3660 0be2 E60B0000 		.4byte	0xbe6
 3661 0be6 20       		.uleb128 0x20
 3662 0be7 44060000 		.4byte	0x644
 3663 0beb 1E       		.uleb128 0x1e
 3664 0bec 6C070000 		.4byte	.LASF141
 3665 0bf0 01       		.byte	0x1
 3666 0bf1 8E04     		.2byte	0x48e
 3667 0bf3 00000000 		.4byte	.LFB12
 3668 0bf7 80000000 		.4byte	.LFE12-.LFB12
 3669 0bfb 01       		.uleb128 0x1
 3670 0bfc 9C       		.byte	0x9c
 3671 0bfd 940C0000 		.4byte	0xc94
 3672 0c01 15       		.uleb128 0x15
 3673 0c02 160D0000 		.4byte	.LASF135
 3674 0c06 01       		.byte	0x1
 3675 0c07 8E04     		.2byte	0x48e
 3676 0c09 99000000 		.4byte	0x99
 3677 0c0d C9040000 		.4byte	.LLST29
 3678 0c11 16       		.uleb128 0x16
 3679 0c12 58010000 		.4byte	.LASF138
 3680 0c16 01       		.byte	0x1
 3681 0c17 9004     		.2byte	0x490
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 128


 3682 0c19 81000000 		.4byte	0x81
 3683 0c1d EA040000 		.4byte	.LLST30
 3684 0c21 16       		.uleb128 0x16
 3685 0c22 C1020000 		.4byte	.LASF142
 3686 0c26 01       		.byte	0x1
 3687 0c27 9204     		.2byte	0x492
 3688 0c29 99000000 		.4byte	0x99
 3689 0c2d FD040000 		.4byte	.LLST31
 3690 0c31 16       		.uleb128 0x16
 3691 0c32 DA040000 		.4byte	.LASF143
 3692 0c36 01       		.byte	0x1
 3693 0c37 9404     		.2byte	0x494
 3694 0c39 99000000 		.4byte	0x99
 3695 0c3d 1C050000 		.4byte	.LLST32
 3696 0c41 16       		.uleb128 0x16
 3697 0c42 52040000 		.4byte	.LASF144
 3698 0c46 01       		.byte	0x1
 3699 0c47 9504     		.2byte	0x495
 3700 0c49 99000000 		.4byte	0x99
 3701 0c4d 3B050000 		.4byte	.LLST33
 3702 0c51 16       		.uleb128 0x16
 3703 0c52 0E060000 		.4byte	.LASF145
 3704 0c56 01       		.byte	0x1
 3705 0c57 9704     		.2byte	0x497
 3706 0c59 99000000 		.4byte	0x99
 3707 0c5d 5A050000 		.4byte	.LLST34
 3708 0c61 16       		.uleb128 0x16
 3709 0c62 400C0000 		.4byte	.LASF146
 3710 0c66 01       		.byte	0x1
 3711 0c67 9804     		.2byte	0x498
 3712 0c69 99000000 		.4byte	0x99
 3713 0c6d 84050000 		.4byte	.LLST35
 3714 0c71 16       		.uleb128 0x16
 3715 0c72 CF030000 		.4byte	.LASF147
 3716 0c76 01       		.byte	0x1
 3717 0c77 9A04     		.2byte	0x49a
 3718 0c79 E00B0000 		.4byte	0xbe0
 3719 0c7d 97050000 		.4byte	.LLST36
 3720 0c81 1D       		.uleb128 0x1d
 3721 0c82 34000000 		.4byte	.LVL97
 3722 0c86 C6140000 		.4byte	0x14c6
 3723 0c8a 1D       		.uleb128 0x1d
 3724 0c8b 6C000000 		.4byte	.LVL108
 3725 0c8f D1140000 		.4byte	0x14d1
 3726 0c93 00       		.byte	0
 3727 0c94 1E       		.uleb128 0x1e
 3728 0c95 BF060000 		.4byte	.LASF148
 3729 0c99 01       		.byte	0x1
 3730 0c9a 2405     		.2byte	0x524
 3731 0c9c 00000000 		.4byte	.LFB13
 3732 0ca0 78000000 		.4byte	.LFE13-.LFB13
 3733 0ca4 01       		.uleb128 0x1
 3734 0ca5 9C       		.byte	0x9c
 3735 0ca6 CD0C0000 		.4byte	0xccd
 3736 0caa 16       		.uleb128 0x16
 3737 0cab 0E0A0000 		.4byte	.LASF149
 3738 0caf 01       		.byte	0x1
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 129


 3739 0cb0 2C05     		.2byte	0x52c
 3740 0cb2 BA000000 		.4byte	0xba
 3741 0cb6 AA050000 		.4byte	.LLST37
 3742 0cba 1D       		.uleb128 0x1d
 3743 0cbb 14000000 		.4byte	.LVL115
 3744 0cbf 5A090000 		.4byte	0x95a
 3745 0cc3 1D       		.uleb128 0x1d
 3746 0cc4 2A000000 		.4byte	.LVL117
 3747 0cc8 B3090000 		.4byte	0x9b3
 3748 0ccc 00       		.byte	0
 3749 0ccd 1E       		.uleb128 0x1e
 3750 0cce 3B0E0000 		.4byte	.LASF150
 3751 0cd2 01       		.byte	0x1
 3752 0cd3 7105     		.2byte	0x571
 3753 0cd5 00000000 		.4byte	.LFB14
 3754 0cd9 08000000 		.4byte	.LFE14-.LFB14
 3755 0cdd 01       		.uleb128 0x1
 3756 0cde 9C       		.byte	0x9c
 3757 0cdf 050D0000 		.4byte	0xd05
 3758 0ce3 15       		.uleb128 0x15
 3759 0ce4 9A0B0000 		.4byte	.LASF151
 3760 0ce8 01       		.byte	0x1
 3761 0ce9 7105     		.2byte	0x571
 3762 0ceb DC000000 		.4byte	0xdc
 3763 0cef F5050000 		.4byte	.LLST38
 3764 0cf3 1A       		.uleb128 0x1a
 3765 0cf4 06000000 		.4byte	.LVL124
 3766 0cf8 E8140000 		.4byte	0x14e8
 3767 0cfc 19       		.uleb128 0x19
 3768 0cfd 01       		.uleb128 0x1
 3769 0cfe 50       		.byte	0x50
 3770 0cff 03       		.uleb128 0x3
 3771 0d00 F3       		.byte	0xf3
 3772 0d01 01       		.uleb128 0x1
 3773 0d02 50       		.byte	0x50
 3774 0d03 00       		.byte	0
 3775 0d04 00       		.byte	0
 3776 0d05 1E       		.uleb128 0x1e
 3777 0d06 8C000000 		.4byte	.LASF152
 3778 0d0a 01       		.byte	0x1
 3779 0d0b 8805     		.2byte	0x588
 3780 0d0d 00000000 		.4byte	.LFB15
 3781 0d11 30000000 		.4byte	.LFE15-.LFB15
 3782 0d15 01       		.uleb128 0x1
 3783 0d16 9C       		.byte	0x9c
 3784 0d17 2C0D0000 		.4byte	0xd2c
 3785 0d1b 15       		.uleb128 0x15
 3786 0d1c D3040000 		.4byte	.LASF153
 3787 0d20 01       		.byte	0x1
 3788 0d21 8805     		.2byte	0x588
 3789 0d23 99000000 		.4byte	0x99
 3790 0d27 16060000 		.4byte	.LLST39
 3791 0d2b 00       		.byte	0
 3792 0d2c 1E       		.uleb128 0x1e
 3793 0d2d 63000000 		.4byte	.LASF154
 3794 0d31 01       		.byte	0x1
 3795 0d32 CC05     		.2byte	0x5cc
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 130


 3796 0d34 00000000 		.4byte	.LFB16
 3797 0d38 14000000 		.4byte	.LFE16-.LFB16
 3798 0d3c 01       		.uleb128 0x1
 3799 0d3d 9C       		.byte	0x9c
 3800 0d3e 630D0000 		.4byte	0xd63
 3801 0d42 15       		.uleb128 0x15
 3802 0d43 500D0000 		.4byte	.LASF37
 3803 0d47 01       		.byte	0x1
 3804 0d48 CC05     		.2byte	0x5cc
 3805 0d4a 99000000 		.4byte	0x99
 3806 0d4e 44060000 		.4byte	.LLST40
 3807 0d52 16       		.uleb128 0x16
 3808 0d53 EA0D0000 		.4byte	.LASF155
 3809 0d57 01       		.byte	0x1
 3810 0d58 CF05     		.2byte	0x5cf
 3811 0d5a 99000000 		.4byte	0x99
 3812 0d5e 72060000 		.4byte	.LLST41
 3813 0d62 00       		.byte	0
 3814 0d63 1E       		.uleb128 0x1e
 3815 0d64 00000000 		.4byte	.LASF156
 3816 0d68 01       		.byte	0x1
 3817 0d69 2006     		.2byte	0x620
 3818 0d6b 00000000 		.4byte	.LFB17
 3819 0d6f 12000000 		.4byte	.LFE17-.LFB17
 3820 0d73 01       		.uleb128 0x1
 3821 0d74 9C       		.byte	0x9c
 3822 0d75 BF0D0000 		.4byte	0xdbf
 3823 0d79 15       		.uleb128 0x15
 3824 0d7a 500D0000 		.4byte	.LASF37
 3825 0d7e 01       		.byte	0x1
 3826 0d7f 2006     		.2byte	0x620
 3827 0d81 99000000 		.4byte	0x99
 3828 0d85 9B060000 		.4byte	.LLST42
 3829 0d89 15       		.uleb128 0x15
 3830 0d8a D3040000 		.4byte	.LASF153
 3831 0d8e 01       		.byte	0x1
 3832 0d8f 2006     		.2byte	0x620
 3833 0d91 99000000 		.4byte	0x99
 3834 0d95 C7060000 		.4byte	.LLST43
 3835 0d99 18       		.uleb128 0x18
 3836 0d9a 0A000000 		.4byte	.LVL136
 3837 0d9e 050D0000 		.4byte	0xd05
 3838 0da2 AE0D0000 		.4byte	0xdae
 3839 0da6 19       		.uleb128 0x19
 3840 0da7 01       		.uleb128 0x1
 3841 0da8 50       		.byte	0x50
 3842 0da9 03       		.uleb128 0x3
 3843 0daa F3       		.byte	0xf3
 3844 0dab 01       		.uleb128 0x1
 3845 0dac 51       		.byte	0x51
 3846 0dad 00       		.byte	0
 3847 0dae 1A       		.uleb128 0x1a
 3848 0daf 10000000 		.4byte	.LVL137
 3849 0db3 2C0D0000 		.4byte	0xd2c
 3850 0db7 19       		.uleb128 0x19
 3851 0db8 01       		.uleb128 0x1
 3852 0db9 50       		.byte	0x50
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 131


 3853 0dba 02       		.uleb128 0x2
 3854 0dbb 74       		.byte	0x74
 3855 0dbc 00       		.sleb128 0
 3856 0dbd 00       		.byte	0
 3857 0dbe 00       		.byte	0
 3858 0dbf 1C       		.uleb128 0x1c
 3859 0dc0 330B0000 		.4byte	.LASF157
 3860 0dc4 01       		.byte	0x1
 3861 0dc5 5406     		.2byte	0x654
 3862 0dc7 BA000000 		.4byte	0xba
 3863 0dcb 00000000 		.4byte	.LFB18
 3864 0dcf 3C000000 		.4byte	.LFE18-.LFB18
 3865 0dd3 01       		.uleb128 0x1
 3866 0dd4 9C       		.byte	0x9c
 3867 0dd5 2A0E0000 		.4byte	0xe2a
 3868 0dd9 15       		.uleb128 0x15
 3869 0dda 9D0E0000 		.4byte	.LASF125
 3870 0dde 01       		.byte	0x1
 3871 0ddf 5406     		.2byte	0x654
 3872 0de1 99000000 		.4byte	0x99
 3873 0de5 E8060000 		.4byte	.LLST44
 3874 0de9 16       		.uleb128 0x16
 3875 0dea 43070000 		.4byte	.LASF158
 3876 0dee 01       		.byte	0x1
 3877 0def 5606     		.2byte	0x656
 3878 0df1 BA000000 		.4byte	0xba
 3879 0df5 2A070000 		.4byte	.LLST45
 3880 0df9 18       		.uleb128 0x18
 3881 0dfa 2A000000 		.4byte	.LVL145
 3882 0dfe F3140000 		.4byte	0x14f3
 3883 0e02 130E0000 		.4byte	0xe13
 3884 0e06 19       		.uleb128 0x19
 3885 0e07 01       		.uleb128 0x1
 3886 0e08 50       		.byte	0x50
 3887 0e09 02       		.uleb128 0x2
 3888 0e0a 74       		.byte	0x74
 3889 0e0b 00       		.sleb128 0
 3890 0e0c 19       		.uleb128 0x19
 3891 0e0d 01       		.uleb128 0x1
 3892 0e0e 51       		.byte	0x51
 3893 0e0f 02       		.uleb128 0x2
 3894 0e10 08       		.byte	0x8
 3895 0e11 28       		.byte	0x28
 3896 0e12 00       		.byte	0
 3897 0e13 1A       		.uleb128 0x1a
 3898 0e14 36000000 		.4byte	.LVL147
 3899 0e18 FE140000 		.4byte	0x14fe
 3900 0e1c 19       		.uleb128 0x19
 3901 0e1d 01       		.uleb128 0x1
 3902 0e1e 50       		.byte	0x50
 3903 0e1f 02       		.uleb128 0x2
 3904 0e20 74       		.byte	0x74
 3905 0e21 00       		.sleb128 0
 3906 0e22 19       		.uleb128 0x19
 3907 0e23 01       		.uleb128 0x1
 3908 0e24 51       		.byte	0x51
 3909 0e25 02       		.uleb128 0x2
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 132


 3910 0e26 08       		.byte	0x8
 3911 0e27 55       		.byte	0x55
 3912 0e28 00       		.byte	0
 3913 0e29 00       		.byte	0
 3914 0e2a 1C       		.uleb128 0x1c
 3915 0e2b E9070000 		.4byte	.LASF159
 3916 0e2f 01       		.byte	0x1
 3917 0e30 C906     		.2byte	0x6c9
 3918 0e32 BA000000 		.4byte	0xba
 3919 0e36 00000000 		.4byte	.LFB19
 3920 0e3a 1A000000 		.4byte	.LFE19-.LFB19
 3921 0e3e 01       		.uleb128 0x1
 3922 0e3f 9C       		.byte	0x9c
 3923 0e40 750E0000 		.4byte	0xe75
 3924 0e44 16       		.uleb128 0x16
 3925 0e45 43070000 		.4byte	.LASF158
 3926 0e49 01       		.byte	0x1
 3927 0e4a CB06     		.2byte	0x6cb
 3928 0e4c BA000000 		.4byte	0xba
 3929 0e50 5F070000 		.4byte	.LLST46
 3930 0e54 16       		.uleb128 0x16
 3931 0e55 2A090000 		.4byte	.LASF123
 3932 0e59 01       		.byte	0x1
 3933 0e5a CC06     		.2byte	0x6cc
 3934 0e5c 99000000 		.4byte	0x99
 3935 0e60 89070000 		.4byte	.LLST47
 3936 0e64 1A       		.uleb128 0x1a
 3937 0e65 0E000000 		.4byte	.LVL151
 3938 0e69 BF0D0000 		.4byte	0xdbf
 3939 0e6d 19       		.uleb128 0x19
 3940 0e6e 01       		.uleb128 0x1
 3941 0e6f 50       		.byte	0x50
 3942 0e70 02       		.uleb128 0x2
 3943 0e71 74       		.byte	0x74
 3944 0e72 00       		.sleb128 0
 3945 0e73 00       		.byte	0
 3946 0e74 00       		.byte	0
 3947 0e75 1C       		.uleb128 0x1c
 3948 0e76 E6040000 		.4byte	.LASF160
 3949 0e7a 01       		.byte	0x1
 3950 0e7b E80A     		.2byte	0xae8
 3951 0e7d 99000000 		.4byte	0x99
 3952 0e81 00000000 		.4byte	.LFB25
 3953 0e85 14000000 		.4byte	.LFE25-.LFB25
 3954 0e89 01       		.uleb128 0x1
 3955 0e8a 9C       		.byte	0x9c
 3956 0e8b BC0E0000 		.4byte	0xebc
 3957 0e8f 15       		.uleb128 0x15
 3958 0e90 9D0E0000 		.4byte	.LASF125
 3959 0e94 01       		.byte	0x1
 3960 0e95 E80A     		.2byte	0xae8
 3961 0e97 99000000 		.4byte	0x99
 3962 0e9b A8070000 		.4byte	.LLST48
 3963 0e9f 21       		.uleb128 0x21
 3964 0ea0 930B0000 		.4byte	.LASF161
 3965 0ea4 01       		.byte	0x1
 3966 0ea5 EA0A     		.2byte	0xaea
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 133


 3967 0ea7 99000000 		.4byte	0x99
 3968 0eab 01       		.uleb128 0x1
 3969 0eac 50       		.byte	0x50
 3970 0ead 21       		.uleb128 0x21
 3971 0eae 63020000 		.4byte	.LASF124
 3972 0eb2 01       		.byte	0x1
 3973 0eb3 EE0A     		.2byte	0xaee
 3974 0eb5 3F090000 		.4byte	0x93f
 3975 0eb9 01       		.uleb128 0x1
 3976 0eba 53       		.byte	0x53
 3977 0ebb 00       		.byte	0
 3978 0ebc 1C       		.uleb128 0x1c
 3979 0ebd 87010000 		.4byte	.LASF162
 3980 0ec1 01       		.byte	0x1
 3981 0ec2 400B     		.2byte	0xb40
 3982 0ec4 81000000 		.4byte	0x81
 3983 0ec8 00000000 		.4byte	.LFB26
 3984 0ecc 24000000 		.4byte	.LFE26-.LFB26
 3985 0ed0 01       		.uleb128 0x1
 3986 0ed1 9C       		.byte	0x9c
 3987 0ed2 120F0000 		.4byte	0xf12
 3988 0ed6 15       		.uleb128 0x15
 3989 0ed7 540E0000 		.4byte	.LASF115
 3990 0edb 01       		.byte	0x1
 3991 0edc 400B     		.2byte	0xb40
 3992 0ede 99000000 		.4byte	0x99
 3993 0ee2 C9070000 		.4byte	.LLST49
 3994 0ee6 22       		.uleb128 0x22
 3995 0ee7 55060000 		.4byte	.LASF28
 3996 0eeb 01       		.byte	0x1
 3997 0eec 400B     		.2byte	0xb40
 3998 0eee 99000000 		.4byte	0x99
 3999 0ef2 01       		.uleb128 0x1
 4000 0ef3 51       		.byte	0x51
 4001 0ef4 16       		.uleb128 0x16
 4002 0ef5 680B0000 		.4byte	.LASF163
 4003 0ef9 01       		.byte	0x1
 4004 0efa 420B     		.2byte	0xb42
 4005 0efc 99000000 		.4byte	0x99
 4006 0f00 03080000 		.4byte	.LLST50
 4007 0f04 1F       		.uleb128 0x1f
 4008 0f05 790E0000 		.4byte	.LASF164
 4009 0f09 01       		.byte	0x1
 4010 0f0a 430B     		.2byte	0xb43
 4011 0f0c 99000000 		.4byte	0x99
 4012 0f10 01       		.byte	0x1
 4013 0f11 00       		.byte	0
 4014 0f12 17       		.uleb128 0x17
 4015 0f13 260D0000 		.4byte	.LASF166
 4016 0f17 01       		.byte	0x1
 4017 0f18 9909     		.2byte	0x999
 4018 0f1a 00000000 		.4byte	.LFB21
 4019 0f1e 3A000000 		.4byte	.LFE21-.LFB21
 4020 0f22 01       		.uleb128 0x1
 4021 0f23 9C       		.byte	0x9c
 4022 0f24 F70F0000 		.4byte	0xff7
 4023 0f28 15       		.uleb128 0x15
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 134


 4024 0f29 2A090000 		.4byte	.LASF123
 4025 0f2d 01       		.byte	0x1
 4026 0f2e 9909     		.2byte	0x999
 4027 0f30 99000000 		.4byte	0x99
 4028 0f34 16080000 		.4byte	.LLST51
 4029 0f38 15       		.uleb128 0x15
 4030 0f39 63020000 		.4byte	.LASF124
 4031 0f3d 01       		.byte	0x1
 4032 0f3e 9909     		.2byte	0x999
 4033 0f40 3F090000 		.4byte	0x93f
 4034 0f44 37080000 		.4byte	.LLST52
 4035 0f48 16       		.uleb128 0x16
 4036 0f49 3D040000 		.4byte	.LASF119
 4037 0f4d 01       		.byte	0x1
 4038 0f4e 9B09     		.2byte	0x99b
 4039 0f50 81000000 		.4byte	0x81
 4040 0f54 63080000 		.4byte	.LLST53
 4041 0f58 16       		.uleb128 0x16
 4042 0f59 31020000 		.4byte	.LASF120
 4043 0f5d 01       		.byte	0x1
 4044 0f5e 9C09     		.2byte	0x99c
 4045 0f60 81000000 		.4byte	0x81
 4046 0f64 81080000 		.4byte	.LLST54
 4047 0f68 16       		.uleb128 0x16
 4048 0f69 46060000 		.4byte	.LASF116
 4049 0f6d 01       		.byte	0x1
 4050 0f6e A009     		.2byte	0x9a0
 4051 0f70 99000000 		.4byte	0x99
 4052 0f74 94080000 		.4byte	.LLST55
 4053 0f78 16       		.uleb128 0x16
 4054 0f79 540E0000 		.4byte	.LASF115
 4055 0f7d 01       		.byte	0x1
 4056 0f7e A209     		.2byte	0x9a2
 4057 0f80 99000000 		.4byte	0x99
 4058 0f84 B2080000 		.4byte	.LLST56
 4059 0f88 18       		.uleb128 0x18
 4060 0f89 08000000 		.4byte	.LVL167
 4061 0f8d 750E0000 		.4byte	0xe75
 4062 0f91 9D0F0000 		.4byte	0xf9d
 4063 0f95 19       		.uleb128 0x19
 4064 0f96 01       		.uleb128 0x1
 4065 0f97 50       		.byte	0x50
 4066 0f98 03       		.uleb128 0x3
 4067 0f99 F3       		.byte	0xf3
 4068 0f9a 01       		.uleb128 0x1
 4069 0f9b 50       		.byte	0x50
 4070 0f9c 00       		.byte	0
 4071 0f9d 18       		.uleb128 0x18
 4072 0f9e 12000000 		.4byte	.LVL169
 4073 0fa2 0A150000 		.4byte	0x150a
 4074 0fa6 B60F0000 		.4byte	0xfb6
 4075 0faa 19       		.uleb128 0x19
 4076 0fab 01       		.uleb128 0x1
 4077 0fac 50       		.byte	0x50
 4078 0fad 02       		.uleb128 0x2
 4079 0fae 75       		.byte	0x75
 4080 0faf 00       		.sleb128 0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 135


 4081 0fb0 19       		.uleb128 0x19
 4082 0fb1 01       		.uleb128 0x1
 4083 0fb2 52       		.byte	0x52
 4084 0fb3 01       		.uleb128 0x1
 4085 0fb4 30       		.byte	0x30
 4086 0fb5 00       		.byte	0
 4087 0fb6 18       		.uleb128 0x18
 4088 0fb7 1A000000 		.4byte	.LVL172
 4089 0fbb CD070000 		.4byte	0x7cd
 4090 0fbf CA0F0000 		.4byte	0xfca
 4091 0fc3 19       		.uleb128 0x19
 4092 0fc4 01       		.uleb128 0x1
 4093 0fc5 50       		.byte	0x50
 4094 0fc6 02       		.uleb128 0x2
 4095 0fc7 75       		.byte	0x75
 4096 0fc8 00       		.sleb128 0
 4097 0fc9 00       		.byte	0
 4098 0fca 18       		.uleb128 0x18
 4099 0fcb 26000000 		.4byte	.LVL175
 4100 0fcf BC0E0000 		.4byte	0xebc
 4101 0fd3 E00F0000 		.4byte	0xfe0
 4102 0fd7 19       		.uleb128 0x19
 4103 0fd8 01       		.uleb128 0x1
 4104 0fd9 50       		.byte	0x50
 4105 0fda 04       		.uleb128 0x4
 4106 0fdb 75       		.byte	0x75
 4107 0fdc 00       		.sleb128 0
 4108 0fdd 31       		.byte	0x31
 4109 0fde 24       		.byte	0x24
 4110 0fdf 00       		.byte	0
 4111 0fe0 1A       		.uleb128 0x1a
 4112 0fe1 30000000 		.4byte	.LVL177
 4113 0fe5 18080000 		.4byte	0x818
 4114 0fe9 19       		.uleb128 0x19
 4115 0fea 01       		.uleb128 0x1
 4116 0feb 50       		.byte	0x50
 4117 0fec 02       		.uleb128 0x2
 4118 0fed 75       		.byte	0x75
 4119 0fee 00       		.sleb128 0
 4120 0fef 19       		.uleb128 0x19
 4121 0ff0 01       		.uleb128 0x1
 4122 0ff1 51       		.byte	0x51
 4123 0ff2 02       		.uleb128 0x2
 4124 0ff3 74       		.byte	0x74
 4125 0ff4 00       		.sleb128 0
 4126 0ff5 00       		.byte	0
 4127 0ff6 00       		.byte	0
 4128 0ff7 1E       		.uleb128 0x1e
 4129 0ff8 61040000 		.4byte	.LASF167
 4130 0ffc 01       		.byte	0x1
 4131 0ffd 6409     		.2byte	0x964
 4132 0fff 00000000 		.4byte	.LFB20
 4133 1003 38000000 		.4byte	.LFE20-.LFB20
 4134 1007 01       		.uleb128 0x1
 4135 1008 9C       		.byte	0x9c
 4136 1009 52100000 		.4byte	0x1052
 4137 100d 16       		.uleb128 0x16
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 136


 4138 100e 2A090000 		.4byte	.LASF123
 4139 1012 01       		.byte	0x1
 4140 1013 6609     		.2byte	0x966
 4141 1015 99000000 		.4byte	0x99
 4142 1019 D0080000 		.4byte	.LLST57
 4143 101d 16       		.uleb128 0x16
 4144 101e 63020000 		.4byte	.LASF124
 4145 1022 01       		.byte	0x1
 4146 1023 6709     		.2byte	0x967
 4147 1025 3F090000 		.4byte	0x93f
 4148 1029 EF080000 		.4byte	.LLST58
 4149 102d 18       		.uleb128 0x18
 4150 102e 24000000 		.4byte	.LVL185
 4151 1032 120F0000 		.4byte	0xf12
 4152 1036 41100000 		.4byte	0x1041
 4153 103a 19       		.uleb128 0x19
 4154 103b 01       		.uleb128 0x1
 4155 103c 50       		.byte	0x50
 4156 103d 02       		.uleb128 0x2
 4157 103e 74       		.byte	0x74
 4158 103f 00       		.sleb128 0
 4159 1040 00       		.byte	0
 4160 1041 1A       		.uleb128 0x1a
 4161 1042 2C000000 		.4byte	.LVL187
 4162 1046 83080000 		.4byte	0x883
 4163 104a 19       		.uleb128 0x19
 4164 104b 01       		.uleb128 0x1
 4165 104c 50       		.byte	0x50
 4166 104d 02       		.uleb128 0x2
 4167 104e 74       		.byte	0x74
 4168 104f 00       		.sleb128 0
 4169 1050 00       		.byte	0
 4170 1051 00       		.byte	0
 4171 1052 1E       		.uleb128 0x1e
 4172 1053 67010000 		.4byte	.LASF168
 4173 1057 01       		.byte	0x1
 4174 1058 7A0B     		.2byte	0xb7a
 4175 105a 00000000 		.4byte	.LFB27
 4176 105e D8000000 		.4byte	.LFE27-.LFB27
 4177 1062 01       		.uleb128 0x1
 4178 1063 9C       		.byte	0x9c
 4179 1064 4B110000 		.4byte	0x114b
 4180 1068 15       		.uleb128 0x15
 4181 1069 13050000 		.4byte	.LASF169
 4182 106d 01       		.byte	0x1
 4183 106e 7A0B     		.2byte	0xb7a
 4184 1070 99000000 		.4byte	0x99
 4185 1074 0D090000 		.4byte	.LLST59
 4186 1078 16       		.uleb128 0x16
 4187 1079 3B020000 		.4byte	.LASF170
 4188 107d 01       		.byte	0x1
 4189 107e 7C0B     		.2byte	0xb7c
 4190 1080 99000000 		.4byte	0x99
 4191 1084 3A090000 		.4byte	.LLST60
 4192 1088 16       		.uleb128 0x16
 4193 1089 B9010000 		.4byte	.LASF171
 4194 108d 01       		.byte	0x1
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 137


 4195 108e 7D0B     		.2byte	0xb7d
 4196 1090 99000000 		.4byte	0x99
 4197 1094 59090000 		.4byte	.LLST61
 4198 1098 16       		.uleb128 0x16
 4199 1099 46040000 		.4byte	.LASF172
 4200 109d 01       		.byte	0x1
 4201 109e 7E0B     		.2byte	0xb7e
 4202 10a0 99000000 		.4byte	0x99
 4203 10a4 77090000 		.4byte	.LLST62
 4204 10a8 16       		.uleb128 0x16
 4205 10a9 EA0D0000 		.4byte	.LASF155
 4206 10ad 01       		.byte	0x1
 4207 10ae 7F0B     		.2byte	0xb7f
 4208 10b0 99000000 		.4byte	0x99
 4209 10b4 95090000 		.4byte	.LLST63
 4210 10b8 16       		.uleb128 0x16
 4211 10b9 58010000 		.4byte	.LASF138
 4212 10bd 01       		.byte	0x1
 4213 10be 800B     		.2byte	0xb80
 4214 10c0 81000000 		.4byte	0x81
 4215 10c4 000A0000 		.4byte	.LLST64
 4216 10c8 1D       		.uleb128 0x1d
 4217 10c9 34000000 		.4byte	.LVL195
 4218 10cd C6140000 		.4byte	0x14c6
 4219 10d1 1D       		.uleb128 0x1d
 4220 10d2 42000000 		.4byte	.LVL199
 4221 10d6 D1140000 		.4byte	0x14d1
 4222 10da 1D       		.uleb128 0x1d
 4223 10db 46000000 		.4byte	.LVL200
 4224 10df C6140000 		.4byte	0x14c6
 4225 10e3 1D       		.uleb128 0x1d
 4226 10e4 52000000 		.4byte	.LVL203
 4227 10e8 D1140000 		.4byte	0x14d1
 4228 10ec 1D       		.uleb128 0x1d
 4229 10ed 56000000 		.4byte	.LVL204
 4230 10f1 C6140000 		.4byte	0x14c6
 4231 10f5 1D       		.uleb128 0x1d
 4232 10f6 68000000 		.4byte	.LVL209
 4233 10fa D1140000 		.4byte	0x14d1
 4234 10fe 18       		.uleb128 0x18
 4235 10ff 70000000 		.4byte	.LVL210
 4236 1103 16150000 		.4byte	0x1516
 4237 1107 14110000 		.4byte	0x1114
 4238 110b 19       		.uleb128 0x19
 4239 110c 01       		.uleb128 0x1
 4240 110d 50       		.byte	0x50
 4241 110e 04       		.uleb128 0x4
 4242 110f 7D       		.byte	0x7d
 4243 1110 04       		.sleb128 4
 4244 1111 94       		.byte	0x94
 4245 1112 02       		.byte	0x2
 4246 1113 00       		.byte	0
 4247 1114 1D       		.uleb128 0x1d
 4248 1115 74000000 		.4byte	.LVL211
 4249 1119 C6140000 		.4byte	0x14c6
 4250 111d 1D       		.uleb128 0x1d
 4251 111e 82000000 		.4byte	.LVL215
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 138


 4252 1122 D1140000 		.4byte	0x14d1
 4253 1126 1D       		.uleb128 0x1d
 4254 1127 86000000 		.4byte	.LVL216
 4255 112b C6140000 		.4byte	0x14c6
 4256 112f 1D       		.uleb128 0x1d
 4257 1130 96000000 		.4byte	.LVL220
 4258 1134 D1140000 		.4byte	0x14d1
 4259 1138 1D       		.uleb128 0x1d
 4260 1139 9A000000 		.4byte	.LVL221
 4261 113d C6140000 		.4byte	0x14c6
 4262 1141 1D       		.uleb128 0x1d
 4263 1142 AC000000 		.4byte	.LVL225
 4264 1146 D1140000 		.4byte	0x14d1
 4265 114a 00       		.byte	0
 4266 114b 1C       		.uleb128 0x1c
 4267 114c B4090000 		.4byte	.LASF173
 4268 1150 01       		.byte	0x1
 4269 1151 840C     		.2byte	0xc84
 4270 1153 76000000 		.4byte	0x76
 4271 1157 00000000 		.4byte	.LFB28
 4272 115b 30000000 		.4byte	.LFE28-.LFB28
 4273 115f 01       		.uleb128 0x1
 4274 1160 9C       		.byte	0x9c
 4275 1161 A5110000 		.4byte	0x11a5
 4276 1165 15       		.uleb128 0x15
 4277 1166 2C020000 		.4byte	.LASF174
 4278 116a 01       		.byte	0x1
 4279 116b 840C     		.2byte	0xc84
 4280 116d 96070000 		.4byte	0x796
 4281 1171 4A0A0000 		.4byte	.LLST65
 4282 1175 15       		.uleb128 0x15
 4283 1176 160D0000 		.4byte	.LASF135
 4284 117a 01       		.byte	0x1
 4285 117b 840C     		.2byte	0xc84
 4286 117d 76000000 		.4byte	0x76
 4287 1181 9D0A0000 		.4byte	.LLST66
 4288 1185 16       		.uleb128 0x16
 4289 1186 930B0000 		.4byte	.LASF161
 4290 118a 01       		.byte	0x1
 4291 118b 860C     		.2byte	0xc86
 4292 118d 76000000 		.4byte	0x76
 4293 1191 BE0A0000 		.4byte	.LLST67
 4294 1195 1A       		.uleb128 0x1a
 4295 1196 26000000 		.4byte	.LVL236
 4296 119a 21150000 		.4byte	0x1521
 4297 119e 19       		.uleb128 0x19
 4298 119f 01       		.uleb128 0x1
 4299 11a0 50       		.byte	0x50
 4300 11a1 01       		.uleb128 0x1
 4301 11a2 30       		.byte	0x30
 4302 11a3 00       		.byte	0
 4303 11a4 00       		.byte	0
 4304 11a5 1E       		.uleb128 0x1e
 4305 11a6 52090000 		.4byte	.LASF175
 4306 11aa 01       		.byte	0x1
 4307 11ab D90C     		.2byte	0xcd9
 4308 11ad 00000000 		.4byte	.LFB29
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 139


 4309 11b1 1C000000 		.4byte	.LFE29-.LFB29
 4310 11b5 01       		.uleb128 0x1
 4311 11b6 9C       		.byte	0x9c
 4312 11b7 0E120000 		.4byte	0x120e
 4313 11bb 15       		.uleb128 0x15
 4314 11bc 44020000 		.4byte	.LASF176
 4315 11c0 01       		.byte	0x1
 4316 11c1 D90C     		.2byte	0xcd9
 4317 11c3 3E060000 		.4byte	0x63e
 4318 11c7 E90A0000 		.4byte	.LLST68
 4319 11cb 15       		.uleb128 0x15
 4320 11cc 30080000 		.4byte	.LASF83
 4321 11d0 01       		.byte	0x1
 4322 11d1 D90C     		.2byte	0xcd9
 4323 11d3 99000000 		.4byte	0x99
 4324 11d7 150B0000 		.4byte	.LLST69
 4325 11db 15       		.uleb128 0x15
 4326 11dc 4C040000 		.4byte	.LASF177
 4327 11e0 01       		.byte	0x1
 4328 11e1 D90C     		.2byte	0xcd9
 4329 11e3 99000000 		.4byte	0x99
 4330 11e7 410B0000 		.4byte	.LLST70
 4331 11eb 16       		.uleb128 0x16
 4332 11ec 58010000 		.4byte	.LASF138
 4333 11f0 01       		.byte	0x1
 4334 11f1 DB0C     		.2byte	0xcdb
 4335 11f3 81000000 		.4byte	0x81
 4336 11f7 6D0B0000 		.4byte	.LLST71
 4337 11fb 1D       		.uleb128 0x1d
 4338 11fc 0C000000 		.4byte	.LVL239
 4339 1200 C6140000 		.4byte	0x14c6
 4340 1204 1D       		.uleb128 0x1d
 4341 1205 1A000000 		.4byte	.LVL241
 4342 1209 D1140000 		.4byte	0x14d1
 4343 120d 00       		.byte	0
 4344 120e 17       		.uleb128 0x17
 4345 120f F10A0000 		.4byte	.LASF178
 4346 1213 01       		.byte	0x1
 4347 1214 B903     		.2byte	0x3b9
 4348 1216 00000000 		.4byte	.LFB9
 4349 121a 24000000 		.4byte	.LFE9-.LFB9
 4350 121e 01       		.uleb128 0x1
 4351 121f 9C       		.byte	0x9c
 4352 1220 60120000 		.4byte	0x1260
 4353 1224 16       		.uleb128 0x16
 4354 1225 EA0D0000 		.4byte	.LASF155
 4355 1229 01       		.byte	0x1
 4356 122a BE03     		.2byte	0x3be
 4357 122c 99000000 		.4byte	0x99
 4358 1230 800B0000 		.4byte	.LLST72
 4359 1234 18       		.uleb128 0x18
 4360 1235 16000000 		.4byte	.LVL246
 4361 1239 A5110000 		.4byte	0x11a5
 4362 123d 56120000 		.4byte	0x1256
 4363 1241 19       		.uleb128 0x19
 4364 1242 01       		.uleb128 0x1
 4365 1243 50       		.byte	0x50
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 140


 4366 1244 05       		.uleb128 0x5
 4367 1245 0C       		.byte	0xc
 4368 1246 00040240 		.4byte	0x40020400
 4369 124a 19       		.uleb128 0x19
 4370 124b 01       		.uleb128 0x1
 4371 124c 51       		.byte	0x51
 4372 124d 02       		.uleb128 0x2
 4373 124e 08       		.byte	0x8
 4374 124f F0       		.byte	0xf0
 4375 1250 19       		.uleb128 0x19
 4376 1251 01       		.uleb128 0x1
 4377 1252 52       		.byte	0x52
 4378 1253 01       		.uleb128 0x1
 4379 1254 30       		.byte	0x30
 4380 1255 00       		.byte	0
 4381 1256 1D       		.uleb128 0x1d
 4382 1257 1A000000 		.4byte	.LVL247
 4383 125b 2C150000 		.4byte	0x152c
 4384 125f 00       		.byte	0
 4385 1260 17       		.uleb128 0x17
 4386 1261 DF0B0000 		.4byte	.LASF179
 4387 1265 01       		.byte	0x1
 4388 1266 E903     		.2byte	0x3e9
 4389 1268 00000000 		.4byte	.LFB10
 4390 126c 28000000 		.4byte	.LFE10-.LFB10
 4391 1270 01       		.uleb128 0x1
 4392 1271 9C       		.byte	0x9c
 4393 1272 C0120000 		.4byte	0x12c0
 4394 1276 18       		.uleb128 0x18
 4395 1277 10000000 		.4byte	.LVL248
 4396 127b A5110000 		.4byte	0x11a5
 4397 127f 96120000 		.4byte	0x1296
 4398 1283 19       		.uleb128 0x19
 4399 1284 01       		.uleb128 0x1
 4400 1285 50       		.byte	0x50
 4401 1286 02       		.uleb128 0x2
 4402 1287 74       		.byte	0x74
 4403 1288 00       		.sleb128 0
 4404 1289 19       		.uleb128 0x19
 4405 128a 01       		.uleb128 0x1
 4406 128b 51       		.byte	0x51
 4407 128c 03       		.uleb128 0x3
 4408 128d 0A       		.byte	0xa
 4409 128e 000F     		.2byte	0xf00
 4410 1290 19       		.uleb128 0x19
 4411 1291 01       		.uleb128 0x1
 4412 1292 52       		.byte	0x52
 4413 1293 01       		.uleb128 0x1
 4414 1294 30       		.byte	0x30
 4415 1295 00       		.byte	0
 4416 1296 18       		.uleb128 0x18
 4417 1297 1C000000 		.4byte	.LVL249
 4418 129b A5110000 		.4byte	0x11a5
 4419 129f B6120000 		.4byte	0x12b6
 4420 12a3 19       		.uleb128 0x19
 4421 12a4 01       		.uleb128 0x1
 4422 12a5 50       		.byte	0x50
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 141


 4423 12a6 02       		.uleb128 0x2
 4424 12a7 74       		.byte	0x74
 4425 12a8 00       		.sleb128 0
 4426 12a9 19       		.uleb128 0x19
 4427 12aa 01       		.uleb128 0x1
 4428 12ab 51       		.byte	0x51
 4429 12ac 03       		.uleb128 0x3
 4430 12ad 0A       		.byte	0xa
 4431 12ae 00F0     		.2byte	0xf000
 4432 12b0 19       		.uleb128 0x19
 4433 12b1 01       		.uleb128 0x1
 4434 12b2 52       		.byte	0x52
 4435 12b3 01       		.uleb128 0x1
 4436 12b4 30       		.byte	0x30
 4437 12b5 00       		.byte	0
 4438 12b6 1D       		.uleb128 0x1d
 4439 12b7 20000000 		.4byte	.LVL250
 4440 12bb 38150000 		.4byte	0x1538
 4441 12bf 00       		.byte	0
 4442 12c0 1E       		.uleb128 0x1e
 4443 12c1 400A0000 		.4byte	.LASF180
 4444 12c5 01       		.byte	0x1
 4445 12c6 2B04     		.2byte	0x42b
 4446 12c8 00000000 		.4byte	.LFB11
 4447 12cc 54000000 		.4byte	.LFE11-.LFB11
 4448 12d0 01       		.uleb128 0x1
 4449 12d1 9C       		.byte	0x9c
 4450 12d2 0B130000 		.4byte	0x130b
 4451 12d6 15       		.uleb128 0x15
 4452 12d7 2C020000 		.4byte	.LASF174
 4453 12db 01       		.byte	0x1
 4454 12dc 2B04     		.2byte	0x42b
 4455 12de 32010000 		.4byte	0x132
 4456 12e2 930B0000 		.4byte	.LLST73
 4457 12e6 1D       		.uleb128 0x1d
 4458 12e7 14000000 		.4byte	.LVL252
 4459 12eb 0E120000 		.4byte	0x120e
 4460 12ef 1D       		.uleb128 0x1d
 4461 12f0 1E000000 		.4byte	.LVL254
 4462 12f4 60120000 		.4byte	0x1260
 4463 12f8 1D       		.uleb128 0x1d
 4464 12f9 26000000 		.4byte	.LVL255
 4465 12fd 43150000 		.4byte	0x1543
 4466 1301 1D       		.uleb128 0x1d
 4467 1302 36000000 		.4byte	.LVL256
 4468 1306 4F150000 		.4byte	0x154f
 4469 130a 00       		.byte	0
 4470 130b 1C       		.uleb128 0x1c
 4471 130c 34050000 		.4byte	.LASF181
 4472 1310 01       		.byte	0x1
 4473 1311 C302     		.2byte	0x2c3
 4474 1313 BA000000 		.4byte	0xba
 4475 1317 00000000 		.4byte	.LFB7
 4476 131b 24000000 		.4byte	.LFE7-.LFB7
 4477 131f 01       		.uleb128 0x1
 4478 1320 9C       		.byte	0x9c
 4479 1321 5E130000 		.4byte	0x135e
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 142


 4480 1325 1F       		.uleb128 0x1f
 4481 1326 46010000 		.4byte	.LASF182
 4482 132a 01       		.byte	0x1
 4483 132b C502     		.2byte	0x2c5
 4484 132d BA000000 		.4byte	0xba
 4485 1331 00       		.byte	0
 4486 1332 1D       		.uleb128 0x1d
 4487 1333 06000000 		.4byte	.LVL258
 4488 1337 F70F0000 		.4byte	0xff7
 4489 133b 18       		.uleb128 0x18
 4490 133c 0C000000 		.4byte	.LVL259
 4491 1340 EB0B0000 		.4byte	0xbeb
 4492 1344 4E130000 		.4byte	0x134e
 4493 1348 19       		.uleb128 0x19
 4494 1349 01       		.uleb128 0x1
 4495 134a 50       		.byte	0x50
 4496 134b 01       		.uleb128 0x1
 4497 134c 30       		.byte	0x30
 4498 134d 00       		.byte	0
 4499 134e 1A       		.uleb128 0x1a
 4500 134f 1A000000 		.4byte	.LVL260
 4501 1353 C0120000 		.4byte	0x12c0
 4502 1357 19       		.uleb128 0x19
 4503 1358 01       		.uleb128 0x1
 4504 1359 50       		.byte	0x50
 4505 135a 01       		.uleb128 0x1
 4506 135b 30       		.byte	0x30
 4507 135c 00       		.byte	0
 4508 135d 00       		.byte	0
 4509 135e 23       		.uleb128 0x23
 4510 135f 1C070000 		.4byte	.LASF183
 4511 1363 06       		.byte	0x6
 4512 1364 C604     		.2byte	0x4c6
 4513 1366 B3050000 		.4byte	0x5b3
 4514 136a 23       		.uleb128 0x23
 4515 136b 23040000 		.4byte	.LASF184
 4516 136f 06       		.byte	0x6
 4517 1370 C704     		.2byte	0x4c7
 4518 1372 76130000 		.4byte	0x1376
 4519 1376 20       		.uleb128 0x20
 4520 1377 58070000 		.4byte	0x758
 4521 137b 0D       		.uleb128 0xd
 4522 137c E60B0000 		.4byte	0xbe6
 4523 1380 8B130000 		.4byte	0x138b
 4524 1384 0E       		.uleb128 0xe
 4525 1385 DA010000 		.4byte	0x1da
 4526 1389 0A       		.byte	0xa
 4527 138a 00       		.byte	0
 4528 138b 23       		.uleb128 0x23
 4529 138c B3040000 		.4byte	.LASF185
 4530 1390 06       		.byte	0x6
 4531 1391 C804     		.2byte	0x4c8
 4532 1393 97130000 		.4byte	0x1397
 4533 1397 20       		.uleb128 0x20
 4534 1398 7B130000 		.4byte	0x137b
 4535 139c 24       		.uleb128 0x24
 4536 139d 9E040000 		.4byte	.LASF186
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 143


 4537 13a1 01       		.byte	0x1
 4538 13a2 BC       		.byte	0xbc
 4539 13a3 C6000000 		.4byte	0xc6
 4540 13a7 05       		.uleb128 0x5
 4541 13a8 03       		.byte	0x3
 4542 13a9 00000000 		.4byte	capsense_widgetIndex
 4543 13ad 24       		.uleb128 0x24
 4544 13ae 3F080000 		.4byte	.LASF187
 4545 13b2 01       		.byte	0x1
 4546 13b3 BD       		.byte	0xbd
 4547 13b4 C6000000 		.4byte	0xc6
 4548 13b8 05       		.uleb128 0x5
 4549 13b9 03       		.byte	0x3
 4550 13ba 00000000 		.4byte	capsense_sensorIndex
 4551 13be 24       		.uleb128 0x24
 4552 13bf CB070000 		.4byte	.LASF188
 4553 13c3 01       		.byte	0x1
 4554 13c4 BE       		.byte	0xbe
 4555 13c5 81000000 		.4byte	0x81
 4556 13c9 05       		.uleb128 0x5
 4557 13ca 03       		.byte	0x3
 4558 13cb 00000000 		.4byte	capsense_requestScanAllWidget
 4559 13cf 24       		.uleb128 0x24
 4560 13d0 29060000 		.4byte	.LASF189
 4561 13d4 01       		.byte	0x1
 4562 13d5 C1       		.byte	0xc1
 4563 13d6 19070000 		.4byte	0x719
 4564 13da 05       		.uleb128 0x5
 4565 13db 03       		.byte	0x3
 4566 13dc 00000000 		.4byte	capsense_curRamSnsPtr
 4567 13e0 24       		.uleb128 0x24
 4568 13e1 A5020000 		.4byte	.LASF190
 4569 13e5 01       		.byte	0x1
 4570 13e6 AF       		.byte	0xaf
 4571 13e7 32010000 		.4byte	0x132
 4572 13eb 05       		.uleb128 0x5
 4573 13ec 03       		.byte	0x3
 4574 13ed 00000000 		.4byte	capsense_currentSenseMethod
 4575 13f1 24       		.uleb128 0x24
 4576 13f2 CB0E0000 		.4byte	.LASF191
 4577 13f6 01       		.byte	0x1
 4578 13f7 B8       		.byte	0xb8
 4579 13f8 02140000 		.4byte	0x1402
 4580 13fc 05       		.uleb128 0x5
 4581 13fd 03       		.byte	0x3
 4582 13fe 00000000 		.4byte	capsense_scanFreqIndex
 4583 1402 20       		.uleb128 0x20
 4584 1403 81000000 		.4byte	0x81
 4585 1407 24       		.uleb128 0x24
 4586 1408 85040000 		.4byte	.LASF192
 4587 140c 01       		.byte	0x1
 4588 140d C7       		.byte	0xc7
 4589 140e 18140000 		.4byte	0x1418
 4590 1412 05       		.uleb128 0x5
 4591 1413 03       		.byte	0x3
 4592 1414 00000000 		.4byte	capsense_curFlashWdgtPtr
 4593 1418 07       		.uleb128 0x7
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 144


 4594 1419 04       		.byte	0x4
 4595 141a 1E140000 		.4byte	0x141e
 4596 141e 20       		.uleb128 0x20
 4597 141f 25070000 		.4byte	0x725
 4598 1423 24       		.uleb128 0x24
 4599 1424 BD0D0000 		.4byte	.LASF193
 4600 1428 01       		.byte	0x1
 4601 1429 D0       		.byte	0xd0
 4602 142a E00B0000 		.4byte	0xbe0
 4603 142e 05       		.uleb128 0x5
 4604 142f 03       		.byte	0x3
 4605 1430 00000000 		.4byte	capsense_curSnsIOPtr
 4606 1434 0D       		.uleb128 0xd
 4607 1435 44140000 		.4byte	0x1444
 4608 1439 44140000 		.4byte	0x1444
 4609 143d 0E       		.uleb128 0xe
 4610 143e DA010000 		.4byte	0x1da
 4611 1442 05       		.byte	0x5
 4612 1443 00       		.byte	0
 4613 1444 20       		.uleb128 0x20
 4614 1445 C2070000 		.4byte	0x7c2
 4615 1449 24       		.uleb128 0x24
 4616 144a 86090000 		.4byte	.LASF194
 4617 144e 01       		.byte	0x1
 4618 144f D2       		.byte	0xd2
 4619 1450 5A140000 		.4byte	0x145a
 4620 1454 05       		.uleb128 0x5
 4621 1455 03       		.byte	0x3
 4622 1456 00000000 		.4byte	capsense_idacGainTable
 4623 145a 20       		.uleb128 0x20
 4624 145b 34140000 		.4byte	0x1434
 4625 145f 25       		.uleb128 0x25
 4626 1460 B1030000 		.4byte	.LASF195
 4627 1464 B1030000 		.4byte	.LASF195
 4628 1468 08       		.byte	0x8
 4629 1469 56       		.byte	0x56
 4630 146a 25       		.uleb128 0x25
 4631 146b F60C0000 		.4byte	.LASF196
 4632 146f F60C0000 		.4byte	.LASF196
 4633 1473 08       		.byte	0x8
 4634 1474 3A       		.byte	0x3a
 4635 1475 26       		.uleb128 0x26
 4636 1476 DE0C0000 		.4byte	.LASF197
 4637 147a DE0C0000 		.4byte	.LASF197
 4638 147e 09       		.byte	0x9
 4639 147f 8801     		.2byte	0x188
 4640 1481 25       		.uleb128 0x25
 4641 1482 570B0000 		.4byte	.LASF198
 4642 1486 570B0000 		.4byte	.LASF198
 4643 148a 08       		.byte	0x8
 4644 148b 3C       		.byte	0x3c
 4645 148c 26       		.uleb128 0x26
 4646 148d 58050000 		.4byte	.LASF199
 4647 1491 58050000 		.4byte	.LASF199
 4648 1495 09       		.byte	0x9
 4649 1496 8A01     		.2byte	0x18a
 4650 1498 25       		.uleb128 0x25
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 145


 4651 1499 BF010000 		.4byte	.LASF200
 4652 149d BF010000 		.4byte	.LASF200
 4653 14a1 08       		.byte	0x8
 4654 14a2 3B       		.byte	0x3b
 4655 14a3 26       		.uleb128 0x26
 4656 14a4 82030000 		.4byte	.LASF201
 4657 14a8 82030000 		.4byte	.LASF201
 4658 14ac 09       		.byte	0x9
 4659 14ad 8901     		.2byte	0x189
 4660 14af 25       		.uleb128 0x25
 4661 14b0 9D030000 		.4byte	.LASF202
 4662 14b4 9D030000 		.4byte	.LASF202
 4663 14b8 08       		.byte	0x8
 4664 14b9 3D       		.byte	0x3d
 4665 14ba 26       		.uleb128 0x26
 4666 14bb F60D0000 		.4byte	.LASF203
 4667 14bf F60D0000 		.4byte	.LASF203
 4668 14c3 09       		.byte	0x9
 4669 14c4 8B01     		.2byte	0x18b
 4670 14c6 25       		.uleb128 0x25
 4671 14c7 740D0000 		.4byte	.LASF204
 4672 14cb 740D0000 		.4byte	.LASF204
 4673 14cf 0A       		.byte	0xa
 4674 14d0 F8       		.byte	0xf8
 4675 14d1 25       		.uleb128 0x25
 4676 14d2 F8050000 		.4byte	.LASF205
 4677 14d6 F8050000 		.4byte	.LASF205
 4678 14da 0A       		.byte	0xa
 4679 14db F9       		.byte	0xf9
 4680 14dc 26       		.uleb128 0x26
 4681 14dd 620E0000 		.4byte	.LASF206
 4682 14e1 620E0000 		.4byte	.LASF206
 4683 14e5 09       		.byte	0x9
 4684 14e6 9101     		.2byte	0x191
 4685 14e8 25       		.uleb128 0x25
 4686 14e9 0D020000 		.4byte	.LASF207
 4687 14ed 0D020000 		.4byte	.LASF207
 4688 14f1 0B       		.byte	0xb
 4689 14f2 18       		.byte	0x18
 4690 14f3 25       		.uleb128 0x25
 4691 14f4 2A000000 		.4byte	.LASF208
 4692 14f8 2A000000 		.4byte	.LASF208
 4693 14fc 08       		.byte	0x8
 4694 14fd 40       		.byte	0x40
 4695 14fe 26       		.uleb128 0x26
 4696 14ff 07040000 		.4byte	.LASF209
 4697 1503 07040000 		.4byte	.LASF209
 4698 1507 09       		.byte	0x9
 4699 1508 8E01     		.2byte	0x18e
 4700 150a 26       		.uleb128 0x26
 4701 150b BA0B0000 		.4byte	.LASF210
 4702 150f BA0B0000 		.4byte	.LASF210
 4703 1513 09       		.byte	0x9
 4704 1514 AE01     		.2byte	0x1ae
 4705 1516 25       		.uleb128 0x25
 4706 1517 35080000 		.4byte	.LASF211
 4707 151b 35080000 		.4byte	.LASF211
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 146


 4708 151f 0A       		.byte	0xa
 4709 1520 ED       		.byte	0xed
 4710 1521 25       		.uleb128 0x25
 4711 1522 51010000 		.4byte	.LASF212
 4712 1526 51010000 		.4byte	.LASF212
 4713 152a 0A       		.byte	0xa
 4714 152b FA       		.byte	0xfa
 4715 152c 26       		.uleb128 0x26
 4716 152d A80A0000 		.4byte	.LASF213
 4717 1531 A80A0000 		.4byte	.LASF213
 4718 1535 09       		.byte	0x9
 4719 1536 A501     		.2byte	0x1a5
 4720 1538 25       		.uleb128 0x25
 4721 1539 01070000 		.4byte	.LASF214
 4722 153d 01070000 		.4byte	.LASF214
 4723 1541 08       		.byte	0x8
 4724 1542 55       		.byte	0x55
 4725 1543 26       		.uleb128 0x26
 4726 1544 70080000 		.4byte	.LASF215
 4727 1548 70080000 		.4byte	.LASF215
 4728 154c 09       		.byte	0x9
 4729 154d A101     		.2byte	0x1a1
 4730 154f 25       		.uleb128 0x25
 4731 1550 DA010000 		.4byte	.LASF216
 4732 1554 DA010000 		.4byte	.LASF216
 4733 1558 08       		.byte	0x8
 4734 1559 54       		.byte	0x54
 4735 155a 00       		.byte	0
 4736              		.section	.debug_abbrev,"",%progbits
 4737              	.Ldebug_abbrev0:
 4738 0000 01       		.uleb128 0x1
 4739 0001 11       		.uleb128 0x11
 4740 0002 01       		.byte	0x1
 4741 0003 25       		.uleb128 0x25
 4742 0004 0E       		.uleb128 0xe
 4743 0005 13       		.uleb128 0x13
 4744 0006 0B       		.uleb128 0xb
 4745 0007 03       		.uleb128 0x3
 4746 0008 0E       		.uleb128 0xe
 4747 0009 1B       		.uleb128 0x1b
 4748 000a 0E       		.uleb128 0xe
 4749 000b 55       		.uleb128 0x55
 4750 000c 17       		.uleb128 0x17
 4751 000d 11       		.uleb128 0x11
 4752 000e 01       		.uleb128 0x1
 4753 000f 10       		.uleb128 0x10
 4754 0010 17       		.uleb128 0x17
 4755 0011 00       		.byte	0
 4756 0012 00       		.byte	0
 4757 0013 02       		.uleb128 0x2
 4758 0014 24       		.uleb128 0x24
 4759 0015 00       		.byte	0
 4760 0016 0B       		.uleb128 0xb
 4761 0017 0B       		.uleb128 0xb
 4762 0018 3E       		.uleb128 0x3e
 4763 0019 0B       		.uleb128 0xb
 4764 001a 03       		.uleb128 0x3
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 147


 4765 001b 0E       		.uleb128 0xe
 4766 001c 00       		.byte	0
 4767 001d 00       		.byte	0
 4768 001e 03       		.uleb128 0x3
 4769 001f 16       		.uleb128 0x16
 4770 0020 00       		.byte	0
 4771 0021 03       		.uleb128 0x3
 4772 0022 0E       		.uleb128 0xe
 4773 0023 3A       		.uleb128 0x3a
 4774 0024 0B       		.uleb128 0xb
 4775 0025 3B       		.uleb128 0x3b
 4776 0026 0B       		.uleb128 0xb
 4777 0027 49       		.uleb128 0x49
 4778 0028 13       		.uleb128 0x13
 4779 0029 00       		.byte	0
 4780 002a 00       		.byte	0
 4781 002b 04       		.uleb128 0x4
 4782 002c 24       		.uleb128 0x24
 4783 002d 00       		.byte	0
 4784 002e 0B       		.uleb128 0xb
 4785 002f 0B       		.uleb128 0xb
 4786 0030 3E       		.uleb128 0x3e
 4787 0031 0B       		.uleb128 0xb
 4788 0032 03       		.uleb128 0x3
 4789 0033 08       		.uleb128 0x8
 4790 0034 00       		.byte	0
 4791 0035 00       		.byte	0
 4792 0036 05       		.uleb128 0x5
 4793 0037 16       		.uleb128 0x16
 4794 0038 00       		.byte	0
 4795 0039 03       		.uleb128 0x3
 4796 003a 0E       		.uleb128 0xe
 4797 003b 3A       		.uleb128 0x3a
 4798 003c 0B       		.uleb128 0xb
 4799 003d 3B       		.uleb128 0x3b
 4800 003e 05       		.uleb128 0x5
 4801 003f 49       		.uleb128 0x49
 4802 0040 13       		.uleb128 0x13
 4803 0041 00       		.byte	0
 4804 0042 00       		.byte	0
 4805 0043 06       		.uleb128 0x6
 4806 0044 35       		.uleb128 0x35
 4807 0045 00       		.byte	0
 4808 0046 49       		.uleb128 0x49
 4809 0047 13       		.uleb128 0x13
 4810 0048 00       		.byte	0
 4811 0049 00       		.byte	0
 4812 004a 07       		.uleb128 0x7
 4813 004b 0F       		.uleb128 0xf
 4814 004c 00       		.byte	0
 4815 004d 0B       		.uleb128 0xb
 4816 004e 0B       		.uleb128 0xb
 4817 004f 49       		.uleb128 0x49
 4818 0050 13       		.uleb128 0x13
 4819 0051 00       		.byte	0
 4820 0052 00       		.byte	0
 4821 0053 08       		.uleb128 0x8
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 148


 4822 0054 15       		.uleb128 0x15
 4823 0055 00       		.byte	0
 4824 0056 27       		.uleb128 0x27
 4825 0057 19       		.uleb128 0x19
 4826 0058 00       		.byte	0
 4827 0059 00       		.byte	0
 4828 005a 09       		.uleb128 0x9
 4829 005b 04       		.uleb128 0x4
 4830 005c 01       		.byte	0x1
 4831 005d 0B       		.uleb128 0xb
 4832 005e 0B       		.uleb128 0xb
 4833 005f 49       		.uleb128 0x49
 4834 0060 13       		.uleb128 0x13
 4835 0061 3A       		.uleb128 0x3a
 4836 0062 0B       		.uleb128 0xb
 4837 0063 3B       		.uleb128 0x3b
 4838 0064 0B       		.uleb128 0xb
 4839 0065 01       		.uleb128 0x1
 4840 0066 13       		.uleb128 0x13
 4841 0067 00       		.byte	0
 4842 0068 00       		.byte	0
 4843 0069 0A       		.uleb128 0xa
 4844 006a 28       		.uleb128 0x28
 4845 006b 00       		.byte	0
 4846 006c 03       		.uleb128 0x3
 4847 006d 0E       		.uleb128 0xe
 4848 006e 1C       		.uleb128 0x1c
 4849 006f 0B       		.uleb128 0xb
 4850 0070 00       		.byte	0
 4851 0071 00       		.byte	0
 4852 0072 0B       		.uleb128 0xb
 4853 0073 13       		.uleb128 0x13
 4854 0074 01       		.byte	0x1
 4855 0075 0B       		.uleb128 0xb
 4856 0076 0B       		.uleb128 0xb
 4857 0077 3A       		.uleb128 0x3a
 4858 0078 0B       		.uleb128 0xb
 4859 0079 3B       		.uleb128 0x3b
 4860 007a 0B       		.uleb128 0xb
 4861 007b 01       		.uleb128 0x1
 4862 007c 13       		.uleb128 0x13
 4863 007d 00       		.byte	0
 4864 007e 00       		.byte	0
 4865 007f 0C       		.uleb128 0xc
 4866 0080 0D       		.uleb128 0xd
 4867 0081 00       		.byte	0
 4868 0082 03       		.uleb128 0x3
 4869 0083 0E       		.uleb128 0xe
 4870 0084 3A       		.uleb128 0x3a
 4871 0085 0B       		.uleb128 0xb
 4872 0086 3B       		.uleb128 0x3b
 4873 0087 0B       		.uleb128 0xb
 4874 0088 49       		.uleb128 0x49
 4875 0089 13       		.uleb128 0x13
 4876 008a 38       		.uleb128 0x38
 4877 008b 0B       		.uleb128 0xb
 4878 008c 00       		.byte	0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 149


 4879 008d 00       		.byte	0
 4880 008e 0D       		.uleb128 0xd
 4881 008f 01       		.uleb128 0x1
 4882 0090 01       		.byte	0x1
 4883 0091 49       		.uleb128 0x49
 4884 0092 13       		.uleb128 0x13
 4885 0093 01       		.uleb128 0x1
 4886 0094 13       		.uleb128 0x13
 4887 0095 00       		.byte	0
 4888 0096 00       		.byte	0
 4889 0097 0E       		.uleb128 0xe
 4890 0098 21       		.uleb128 0x21
 4891 0099 00       		.byte	0
 4892 009a 49       		.uleb128 0x49
 4893 009b 13       		.uleb128 0x13
 4894 009c 2F       		.uleb128 0x2f
 4895 009d 0B       		.uleb128 0xb
 4896 009e 00       		.byte	0
 4897 009f 00       		.byte	0
 4898 00a0 0F       		.uleb128 0xf
 4899 00a1 0D       		.uleb128 0xd
 4900 00a2 00       		.byte	0
 4901 00a3 03       		.uleb128 0x3
 4902 00a4 0E       		.uleb128 0xe
 4903 00a5 3A       		.uleb128 0x3a
 4904 00a6 0B       		.uleb128 0xb
 4905 00a7 3B       		.uleb128 0x3b
 4906 00a8 05       		.uleb128 0x5
 4907 00a9 49       		.uleb128 0x49
 4908 00aa 13       		.uleb128 0x13
 4909 00ab 38       		.uleb128 0x38
 4910 00ac 0B       		.uleb128 0xb
 4911 00ad 00       		.byte	0
 4912 00ae 00       		.byte	0
 4913 00af 10       		.uleb128 0x10
 4914 00b0 13       		.uleb128 0x13
 4915 00b1 01       		.byte	0x1
 4916 00b2 0B       		.uleb128 0xb
 4917 00b3 0B       		.uleb128 0xb
 4918 00b4 3A       		.uleb128 0x3a
 4919 00b5 0B       		.uleb128 0xb
 4920 00b6 3B       		.uleb128 0x3b
 4921 00b7 05       		.uleb128 0x5
 4922 00b8 01       		.uleb128 0x1
 4923 00b9 13       		.uleb128 0x13
 4924 00ba 00       		.byte	0
 4925 00bb 00       		.byte	0
 4926 00bc 11       		.uleb128 0x11
 4927 00bd 0D       		.uleb128 0xd
 4928 00be 00       		.byte	0
 4929 00bf 03       		.uleb128 0x3
 4930 00c0 08       		.uleb128 0x8
 4931 00c1 3A       		.uleb128 0x3a
 4932 00c2 0B       		.uleb128 0xb
 4933 00c3 3B       		.uleb128 0x3b
 4934 00c4 05       		.uleb128 0x5
 4935 00c5 49       		.uleb128 0x49
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 150


 4936 00c6 13       		.uleb128 0x13
 4937 00c7 38       		.uleb128 0x38
 4938 00c8 0B       		.uleb128 0xb
 4939 00c9 00       		.byte	0
 4940 00ca 00       		.byte	0
 4941 00cb 12       		.uleb128 0x12
 4942 00cc 26       		.uleb128 0x26
 4943 00cd 00       		.byte	0
 4944 00ce 00       		.byte	0
 4945 00cf 00       		.byte	0
 4946 00d0 13       		.uleb128 0x13
 4947 00d1 0F       		.uleb128 0xf
 4948 00d2 00       		.byte	0
 4949 00d3 0B       		.uleb128 0xb
 4950 00d4 0B       		.uleb128 0xb
 4951 00d5 00       		.byte	0
 4952 00d6 00       		.byte	0
 4953 00d7 14       		.uleb128 0x14
 4954 00d8 2E       		.uleb128 0x2e
 4955 00d9 01       		.byte	0x1
 4956 00da 03       		.uleb128 0x3
 4957 00db 0E       		.uleb128 0xe
 4958 00dc 3A       		.uleb128 0x3a
 4959 00dd 0B       		.uleb128 0xb
 4960 00de 3B       		.uleb128 0x3b
 4961 00df 05       		.uleb128 0x5
 4962 00e0 27       		.uleb128 0x27
 4963 00e1 19       		.uleb128 0x19
 4964 00e2 49       		.uleb128 0x49
 4965 00e3 13       		.uleb128 0x13
 4966 00e4 11       		.uleb128 0x11
 4967 00e5 01       		.uleb128 0x1
 4968 00e6 12       		.uleb128 0x12
 4969 00e7 06       		.uleb128 0x6
 4970 00e8 40       		.uleb128 0x40
 4971 00e9 18       		.uleb128 0x18
 4972 00ea 9642     		.uleb128 0x2116
 4973 00ec 19       		.uleb128 0x19
 4974 00ed 01       		.uleb128 0x1
 4975 00ee 13       		.uleb128 0x13
 4976 00ef 00       		.byte	0
 4977 00f0 00       		.byte	0
 4978 00f1 15       		.uleb128 0x15
 4979 00f2 05       		.uleb128 0x5
 4980 00f3 00       		.byte	0
 4981 00f4 03       		.uleb128 0x3
 4982 00f5 0E       		.uleb128 0xe
 4983 00f6 3A       		.uleb128 0x3a
 4984 00f7 0B       		.uleb128 0xb
 4985 00f8 3B       		.uleb128 0x3b
 4986 00f9 05       		.uleb128 0x5
 4987 00fa 49       		.uleb128 0x49
 4988 00fb 13       		.uleb128 0x13
 4989 00fc 02       		.uleb128 0x2
 4990 00fd 17       		.uleb128 0x17
 4991 00fe 00       		.byte	0
 4992 00ff 00       		.byte	0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 151


 4993 0100 16       		.uleb128 0x16
 4994 0101 34       		.uleb128 0x34
 4995 0102 00       		.byte	0
 4996 0103 03       		.uleb128 0x3
 4997 0104 0E       		.uleb128 0xe
 4998 0105 3A       		.uleb128 0x3a
 4999 0106 0B       		.uleb128 0xb
 5000 0107 3B       		.uleb128 0x3b
 5001 0108 05       		.uleb128 0x5
 5002 0109 49       		.uleb128 0x49
 5003 010a 13       		.uleb128 0x13
 5004 010b 02       		.uleb128 0x2
 5005 010c 17       		.uleb128 0x17
 5006 010d 00       		.byte	0
 5007 010e 00       		.byte	0
 5008 010f 17       		.uleb128 0x17
 5009 0110 2E       		.uleb128 0x2e
 5010 0111 01       		.byte	0x1
 5011 0112 03       		.uleb128 0x3
 5012 0113 0E       		.uleb128 0xe
 5013 0114 3A       		.uleb128 0x3a
 5014 0115 0B       		.uleb128 0xb
 5015 0116 3B       		.uleb128 0x3b
 5016 0117 05       		.uleb128 0x5
 5017 0118 27       		.uleb128 0x27
 5018 0119 19       		.uleb128 0x19
 5019 011a 11       		.uleb128 0x11
 5020 011b 01       		.uleb128 0x1
 5021 011c 12       		.uleb128 0x12
 5022 011d 06       		.uleb128 0x6
 5023 011e 40       		.uleb128 0x40
 5024 011f 18       		.uleb128 0x18
 5025 0120 9742     		.uleb128 0x2117
 5026 0122 19       		.uleb128 0x19
 5027 0123 01       		.uleb128 0x1
 5028 0124 13       		.uleb128 0x13
 5029 0125 00       		.byte	0
 5030 0126 00       		.byte	0
 5031 0127 18       		.uleb128 0x18
 5032 0128 898201   		.uleb128 0x4109
 5033 012b 01       		.byte	0x1
 5034 012c 11       		.uleb128 0x11
 5035 012d 01       		.uleb128 0x1
 5036 012e 31       		.uleb128 0x31
 5037 012f 13       		.uleb128 0x13
 5038 0130 01       		.uleb128 0x1
 5039 0131 13       		.uleb128 0x13
 5040 0132 00       		.byte	0
 5041 0133 00       		.byte	0
 5042 0134 19       		.uleb128 0x19
 5043 0135 8A8201   		.uleb128 0x410a
 5044 0138 00       		.byte	0
 5045 0139 02       		.uleb128 0x2
 5046 013a 18       		.uleb128 0x18
 5047 013b 9142     		.uleb128 0x2111
 5048 013d 18       		.uleb128 0x18
 5049 013e 00       		.byte	0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 152


 5050 013f 00       		.byte	0
 5051 0140 1A       		.uleb128 0x1a
 5052 0141 898201   		.uleb128 0x4109
 5053 0144 01       		.byte	0x1
 5054 0145 11       		.uleb128 0x11
 5055 0146 01       		.uleb128 0x1
 5056 0147 31       		.uleb128 0x31
 5057 0148 13       		.uleb128 0x13
 5058 0149 00       		.byte	0
 5059 014a 00       		.byte	0
 5060 014b 1B       		.uleb128 0x1b
 5061 014c 2E       		.uleb128 0x2e
 5062 014d 00       		.byte	0
 5063 014e 3F       		.uleb128 0x3f
 5064 014f 19       		.uleb128 0x19
 5065 0150 03       		.uleb128 0x3
 5066 0151 0E       		.uleb128 0xe
 5067 0152 3A       		.uleb128 0x3a
 5068 0153 0B       		.uleb128 0xb
 5069 0154 3B       		.uleb128 0x3b
 5070 0155 0B       		.uleb128 0xb
 5071 0156 27       		.uleb128 0x27
 5072 0157 19       		.uleb128 0x19
 5073 0158 49       		.uleb128 0x49
 5074 0159 13       		.uleb128 0x13
 5075 015a 11       		.uleb128 0x11
 5076 015b 01       		.uleb128 0x1
 5077 015c 12       		.uleb128 0x12
 5078 015d 06       		.uleb128 0x6
 5079 015e 40       		.uleb128 0x40
 5080 015f 18       		.uleb128 0x18
 5081 0160 9742     		.uleb128 0x2117
 5082 0162 19       		.uleb128 0x19
 5083 0163 00       		.byte	0
 5084 0164 00       		.byte	0
 5085 0165 1C       		.uleb128 0x1c
 5086 0166 2E       		.uleb128 0x2e
 5087 0167 01       		.byte	0x1
 5088 0168 3F       		.uleb128 0x3f
 5089 0169 19       		.uleb128 0x19
 5090 016a 03       		.uleb128 0x3
 5091 016b 0E       		.uleb128 0xe
 5092 016c 3A       		.uleb128 0x3a
 5093 016d 0B       		.uleb128 0xb
 5094 016e 3B       		.uleb128 0x3b
 5095 016f 05       		.uleb128 0x5
 5096 0170 27       		.uleb128 0x27
 5097 0171 19       		.uleb128 0x19
 5098 0172 49       		.uleb128 0x49
 5099 0173 13       		.uleb128 0x13
 5100 0174 11       		.uleb128 0x11
 5101 0175 01       		.uleb128 0x1
 5102 0176 12       		.uleb128 0x12
 5103 0177 06       		.uleb128 0x6
 5104 0178 40       		.uleb128 0x40
 5105 0179 18       		.uleb128 0x18
 5106 017a 9742     		.uleb128 0x2117
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 153


 5107 017c 19       		.uleb128 0x19
 5108 017d 01       		.uleb128 0x1
 5109 017e 13       		.uleb128 0x13
 5110 017f 00       		.byte	0
 5111 0180 00       		.byte	0
 5112 0181 1D       		.uleb128 0x1d
 5113 0182 898201   		.uleb128 0x4109
 5114 0185 00       		.byte	0
 5115 0186 11       		.uleb128 0x11
 5116 0187 01       		.uleb128 0x1
 5117 0188 31       		.uleb128 0x31
 5118 0189 13       		.uleb128 0x13
 5119 018a 00       		.byte	0
 5120 018b 00       		.byte	0
 5121 018c 1E       		.uleb128 0x1e
 5122 018d 2E       		.uleb128 0x2e
 5123 018e 01       		.byte	0x1
 5124 018f 3F       		.uleb128 0x3f
 5125 0190 19       		.uleb128 0x19
 5126 0191 03       		.uleb128 0x3
 5127 0192 0E       		.uleb128 0xe
 5128 0193 3A       		.uleb128 0x3a
 5129 0194 0B       		.uleb128 0xb
 5130 0195 3B       		.uleb128 0x3b
 5131 0196 05       		.uleb128 0x5
 5132 0197 27       		.uleb128 0x27
 5133 0198 19       		.uleb128 0x19
 5134 0199 11       		.uleb128 0x11
 5135 019a 01       		.uleb128 0x1
 5136 019b 12       		.uleb128 0x12
 5137 019c 06       		.uleb128 0x6
 5138 019d 40       		.uleb128 0x40
 5139 019e 18       		.uleb128 0x18
 5140 019f 9742     		.uleb128 0x2117
 5141 01a1 19       		.uleb128 0x19
 5142 01a2 01       		.uleb128 0x1
 5143 01a3 13       		.uleb128 0x13
 5144 01a4 00       		.byte	0
 5145 01a5 00       		.byte	0
 5146 01a6 1F       		.uleb128 0x1f
 5147 01a7 34       		.uleb128 0x34
 5148 01a8 00       		.byte	0
 5149 01a9 03       		.uleb128 0x3
 5150 01aa 0E       		.uleb128 0xe
 5151 01ab 3A       		.uleb128 0x3a
 5152 01ac 0B       		.uleb128 0xb
 5153 01ad 3B       		.uleb128 0x3b
 5154 01ae 05       		.uleb128 0x5
 5155 01af 49       		.uleb128 0x49
 5156 01b0 13       		.uleb128 0x13
 5157 01b1 1C       		.uleb128 0x1c
 5158 01b2 0B       		.uleb128 0xb
 5159 01b3 00       		.byte	0
 5160 01b4 00       		.byte	0
 5161 01b5 20       		.uleb128 0x20
 5162 01b6 26       		.uleb128 0x26
 5163 01b7 00       		.byte	0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 154


 5164 01b8 49       		.uleb128 0x49
 5165 01b9 13       		.uleb128 0x13
 5166 01ba 00       		.byte	0
 5167 01bb 00       		.byte	0
 5168 01bc 21       		.uleb128 0x21
 5169 01bd 34       		.uleb128 0x34
 5170 01be 00       		.byte	0
 5171 01bf 03       		.uleb128 0x3
 5172 01c0 0E       		.uleb128 0xe
 5173 01c1 3A       		.uleb128 0x3a
 5174 01c2 0B       		.uleb128 0xb
 5175 01c3 3B       		.uleb128 0x3b
 5176 01c4 05       		.uleb128 0x5
 5177 01c5 49       		.uleb128 0x49
 5178 01c6 13       		.uleb128 0x13
 5179 01c7 02       		.uleb128 0x2
 5180 01c8 18       		.uleb128 0x18
 5181 01c9 00       		.byte	0
 5182 01ca 00       		.byte	0
 5183 01cb 22       		.uleb128 0x22
 5184 01cc 05       		.uleb128 0x5
 5185 01cd 00       		.byte	0
 5186 01ce 03       		.uleb128 0x3
 5187 01cf 0E       		.uleb128 0xe
 5188 01d0 3A       		.uleb128 0x3a
 5189 01d1 0B       		.uleb128 0xb
 5190 01d2 3B       		.uleb128 0x3b
 5191 01d3 05       		.uleb128 0x5
 5192 01d4 49       		.uleb128 0x49
 5193 01d5 13       		.uleb128 0x13
 5194 01d6 02       		.uleb128 0x2
 5195 01d7 18       		.uleb128 0x18
 5196 01d8 00       		.byte	0
 5197 01d9 00       		.byte	0
 5198 01da 23       		.uleb128 0x23
 5199 01db 34       		.uleb128 0x34
 5200 01dc 00       		.byte	0
 5201 01dd 03       		.uleb128 0x3
 5202 01de 0E       		.uleb128 0xe
 5203 01df 3A       		.uleb128 0x3a
 5204 01e0 0B       		.uleb128 0xb
 5205 01e1 3B       		.uleb128 0x3b
 5206 01e2 05       		.uleb128 0x5
 5207 01e3 49       		.uleb128 0x49
 5208 01e4 13       		.uleb128 0x13
 5209 01e5 3F       		.uleb128 0x3f
 5210 01e6 19       		.uleb128 0x19
 5211 01e7 3C       		.uleb128 0x3c
 5212 01e8 19       		.uleb128 0x19
 5213 01e9 00       		.byte	0
 5214 01ea 00       		.byte	0
 5215 01eb 24       		.uleb128 0x24
 5216 01ec 34       		.uleb128 0x34
 5217 01ed 00       		.byte	0
 5218 01ee 03       		.uleb128 0x3
 5219 01ef 0E       		.uleb128 0xe
 5220 01f0 3A       		.uleb128 0x3a
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 155


 5221 01f1 0B       		.uleb128 0xb
 5222 01f2 3B       		.uleb128 0x3b
 5223 01f3 0B       		.uleb128 0xb
 5224 01f4 49       		.uleb128 0x49
 5225 01f5 13       		.uleb128 0x13
 5226 01f6 3F       		.uleb128 0x3f
 5227 01f7 19       		.uleb128 0x19
 5228 01f8 02       		.uleb128 0x2
 5229 01f9 18       		.uleb128 0x18
 5230 01fa 00       		.byte	0
 5231 01fb 00       		.byte	0
 5232 01fc 25       		.uleb128 0x25
 5233 01fd 2E       		.uleb128 0x2e
 5234 01fe 00       		.byte	0
 5235 01ff 3F       		.uleb128 0x3f
 5236 0200 19       		.uleb128 0x19
 5237 0201 3C       		.uleb128 0x3c
 5238 0202 19       		.uleb128 0x19
 5239 0203 6E       		.uleb128 0x6e
 5240 0204 0E       		.uleb128 0xe
 5241 0205 03       		.uleb128 0x3
 5242 0206 0E       		.uleb128 0xe
 5243 0207 3A       		.uleb128 0x3a
 5244 0208 0B       		.uleb128 0xb
 5245 0209 3B       		.uleb128 0x3b
 5246 020a 0B       		.uleb128 0xb
 5247 020b 00       		.byte	0
 5248 020c 00       		.byte	0
 5249 020d 26       		.uleb128 0x26
 5250 020e 2E       		.uleb128 0x2e
 5251 020f 00       		.byte	0
 5252 0210 3F       		.uleb128 0x3f
 5253 0211 19       		.uleb128 0x19
 5254 0212 3C       		.uleb128 0x3c
 5255 0213 19       		.uleb128 0x19
 5256 0214 6E       		.uleb128 0x6e
 5257 0215 0E       		.uleb128 0xe
 5258 0216 03       		.uleb128 0x3
 5259 0217 0E       		.uleb128 0xe
 5260 0218 3A       		.uleb128 0x3a
 5261 0219 0B       		.uleb128 0xb
 5262 021a 3B       		.uleb128 0x3b
 5263 021b 05       		.uleb128 0x5
 5264 021c 00       		.byte	0
 5265 021d 00       		.byte	0
 5266 021e 00       		.byte	0
 5267              		.section	.debug_loc,"",%progbits
 5268              	.Ldebug_loc0:
 5269              	.LLST0:
 5270 0000 00000000 		.4byte	.LVL0
 5271 0004 14000000 		.4byte	.LVL3
 5272 0008 0100     		.2byte	0x1
 5273 000a 50       		.byte	0x50
 5274 000b 14000000 		.4byte	.LVL3
 5275 000f 76000000 		.4byte	.LVL9
 5276 0013 0100     		.2byte	0x1
 5277 0015 54       		.byte	0x54
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 156


 5278 0016 76000000 		.4byte	.LVL9
 5279 001a 84000000 		.4byte	.LFE23
 5280 001e 0400     		.2byte	0x4
 5281 0020 F3       		.byte	0xf3
 5282 0021 01       		.uleb128 0x1
 5283 0022 50       		.byte	0x50
 5284 0023 9F       		.byte	0x9f
 5285 0024 00000000 		.4byte	0
 5286 0028 00000000 		.4byte	0
 5287              	.LLST1:
 5288 002c 00000000 		.4byte	.LVL0
 5289 0030 12000000 		.4byte	.LVL2
 5290 0034 0100     		.2byte	0x1
 5291 0036 51       		.byte	0x51
 5292 0037 12000000 		.4byte	.LVL2
 5293 003b 76000000 		.4byte	.LVL10
 5294 003f 0100     		.2byte	0x1
 5295 0041 55       		.byte	0x55
 5296 0042 76000000 		.4byte	.LVL10
 5297 0046 84000000 		.4byte	.LFE23
 5298 004a 0400     		.2byte	0x4
 5299 004c F3       		.byte	0xf3
 5300 004d 01       		.uleb128 0x1
 5301 004e 51       		.byte	0x51
 5302 004f 9F       		.byte	0x9f
 5303 0050 00000000 		.4byte	0
 5304 0054 00000000 		.4byte	0
 5305              	.LLST2:
 5306 0058 06000000 		.4byte	.LVL1
 5307 005c 76000000 		.4byte	.LVL8
 5308 0060 0200     		.2byte	0x2
 5309 0062 30       		.byte	0x30
 5310 0063 9F       		.byte	0x9f
 5311 0064 76000000 		.4byte	.LVL8
 5312 0068 84000000 		.4byte	.LFE23
 5313 006c 0100     		.2byte	0x1
 5314 006e 50       		.byte	0x50
 5315 006f 00000000 		.4byte	0
 5316 0073 00000000 		.4byte	0
 5317              	.LLST3:
 5318 0077 00000000 		.4byte	.LVL11
 5319 007b 20000000 		.4byte	.LVL15
 5320 007f 0100     		.2byte	0x1
 5321 0081 50       		.byte	0x50
 5322 0082 20000000 		.4byte	.LVL15
 5323 0086 23000000 		.4byte	.LVL16-1
 5324 008a 0100     		.2byte	0x1
 5325 008c 51       		.byte	0x51
 5326 008d 23000000 		.4byte	.LVL16-1
 5327 0091 38000000 		.4byte	.LVL21
 5328 0095 0400     		.2byte	0x4
 5329 0097 F3       		.byte	0xf3
 5330 0098 01       		.uleb128 0x1
 5331 0099 50       		.byte	0x50
 5332 009a 9F       		.byte	0x9f
 5333 009b 38000000 		.4byte	.LVL21
 5334 009f 3E000000 		.4byte	.LVL24
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 157


 5335 00a3 0100     		.2byte	0x1
 5336 00a5 50       		.byte	0x50
 5337 00a6 3E000000 		.4byte	.LVL24
 5338 00aa 42000000 		.4byte	.LFE24
 5339 00ae 0400     		.2byte	0x4
 5340 00b0 F3       		.byte	0xf3
 5341 00b1 01       		.uleb128 0x1
 5342 00b2 50       		.byte	0x50
 5343 00b3 9F       		.byte	0x9f
 5344 00b4 00000000 		.4byte	0
 5345 00b8 00000000 		.4byte	0
 5346              	.LLST4:
 5347 00bc 00000000 		.4byte	.LVL11
 5348 00c0 1E000000 		.4byte	.LVL14
 5349 00c4 0100     		.2byte	0x1
 5350 00c6 51       		.byte	0x51
 5351 00c7 1E000000 		.4byte	.LVL14
 5352 00cb 38000000 		.4byte	.LVL21
 5353 00cf 0400     		.2byte	0x4
 5354 00d1 F3       		.byte	0xf3
 5355 00d2 01       		.uleb128 0x1
 5356 00d3 51       		.byte	0x51
 5357 00d4 9F       		.byte	0x9f
 5358 00d5 38000000 		.4byte	.LVL21
 5359 00d9 3E000000 		.4byte	.LVL24
 5360 00dd 0100     		.2byte	0x1
 5361 00df 51       		.byte	0x51
 5362 00e0 3E000000 		.4byte	.LVL24
 5363 00e4 42000000 		.4byte	.LFE24
 5364 00e8 0400     		.2byte	0x4
 5365 00ea F3       		.byte	0xf3
 5366 00eb 01       		.uleb128 0x1
 5367 00ec 51       		.byte	0x51
 5368 00ed 9F       		.byte	0x9f
 5369 00ee 00000000 		.4byte	0
 5370 00f2 00000000 		.4byte	0
 5371              	.LLST5:
 5372 00f6 24000000 		.4byte	.LVL16
 5373 00fa 28000000 		.4byte	.LVL17
 5374 00fe 0200     		.2byte	0x2
 5375 0100 30       		.byte	0x30
 5376 0101 9F       		.byte	0x9f
 5377 0102 28000000 		.4byte	.LVL17
 5378 0106 38000000 		.4byte	.LVL21
 5379 010a 0100     		.2byte	0x1
 5380 010c 53       		.byte	0x53
 5381 010d 3E000000 		.4byte	.LVL24
 5382 0111 42000000 		.4byte	.LFE24
 5383 0115 0100     		.2byte	0x1
 5384 0117 53       		.byte	0x53
 5385 0118 00000000 		.4byte	0
 5386 011c 00000000 		.4byte	0
 5387              	.LLST6:
 5388 0120 10000000 		.4byte	.LVL12
 5389 0124 1C000000 		.4byte	.LVL13
 5390 0128 0100     		.2byte	0x1
 5391 012a 53       		.byte	0x53
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 158


 5392 012b 38000000 		.4byte	.LVL21
 5393 012f 3A000000 		.4byte	.LVL22
 5394 0133 0100     		.2byte	0x1
 5395 0135 53       		.byte	0x53
 5396 0136 3C000000 		.4byte	.LVL23
 5397 013a 3E000000 		.4byte	.LVL24
 5398 013e 0100     		.2byte	0x1
 5399 0140 53       		.byte	0x53
 5400 0141 00000000 		.4byte	0
 5401 0145 00000000 		.4byte	0
 5402              	.LLST7:
 5403 0149 24000000 		.4byte	.LVL16
 5404 014d 38000000 		.4byte	.LVL21
 5405 0151 0100     		.2byte	0x1
 5406 0153 50       		.byte	0x50
 5407 0154 00000000 		.4byte	0
 5408 0158 00000000 		.4byte	0
 5409              	.LLST8:
 5410 015c 00000000 		.4byte	.LVL25
 5411 0160 09000000 		.4byte	.LVL27-1
 5412 0164 0100     		.2byte	0x1
 5413 0166 50       		.byte	0x50
 5414 0167 09000000 		.4byte	.LVL27-1
 5415 016b 26000000 		.4byte	.LFE22
 5416 016f 0400     		.2byte	0x4
 5417 0171 F3       		.byte	0xf3
 5418 0172 01       		.uleb128 0x1
 5419 0173 50       		.byte	0x50
 5420 0174 9F       		.byte	0x9f
 5421 0175 00000000 		.4byte	0
 5422 0179 00000000 		.4byte	0
 5423              	.LLST9:
 5424 017d 00000000 		.4byte	.LVL25
 5425 0181 09000000 		.4byte	.LVL27-1
 5426 0185 0100     		.2byte	0x1
 5427 0187 51       		.byte	0x51
 5428 0188 09000000 		.4byte	.LVL27-1
 5429 018c 24000000 		.4byte	.LVL34
 5430 0190 0100     		.2byte	0x1
 5431 0192 55       		.byte	0x55
 5432 0193 24000000 		.4byte	.LVL34
 5433 0197 26000000 		.4byte	.LFE22
 5434 019b 0400     		.2byte	0x4
 5435 019d F3       		.byte	0xf3
 5436 019e 01       		.uleb128 0x1
 5437 019f 51       		.byte	0x51
 5438 01a0 9F       		.byte	0x9f
 5439 01a1 00000000 		.4byte	0
 5440 01a5 00000000 		.4byte	0
 5441              	.LLST10:
 5442 01a9 14000000 		.4byte	.LVL30
 5443 01ad 18000000 		.4byte	.LVL31
 5444 01b1 0100     		.2byte	0x1
 5445 01b3 50       		.byte	0x50
 5446 01b4 00000000 		.4byte	0
 5447 01b8 00000000 		.4byte	0
 5448              	.LLST11:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 159


 5449 01bc 1C000000 		.4byte	.LVL32
 5450 01c0 1E000000 		.4byte	.LVL33
 5451 01c4 0100     		.2byte	0x1
 5452 01c6 50       		.byte	0x50
 5453 01c7 00000000 		.4byte	0
 5454 01cb 00000000 		.4byte	0
 5455              	.LLST12:
 5456 01cf 06000000 		.4byte	.LVL26
 5457 01d3 14000000 		.4byte	.LVL30
 5458 01d7 0100     		.2byte	0x1
 5459 01d9 54       		.byte	0x54
 5460 01da 00000000 		.4byte	0
 5461 01de 00000000 		.4byte	0
 5462              	.LLST13:
 5463 01e2 0C000000 		.4byte	.LVL28
 5464 01e6 11000000 		.4byte	.LVL29-1
 5465 01ea 0100     		.2byte	0x1
 5466 01ec 50       		.byte	0x50
 5467 01ed 11000000 		.4byte	.LVL29-1
 5468 01f1 24000000 		.4byte	.LVL35
 5469 01f5 0100     		.2byte	0x1
 5470 01f7 56       		.byte	0x56
 5471 01f8 00000000 		.4byte	0
 5472 01fc 00000000 		.4byte	0
 5473              	.LLST14:
 5474 0200 00000000 		.4byte	.LVL36
 5475 0204 4B000000 		.4byte	.LVL38-1
 5476 0208 0100     		.2byte	0x1
 5477 020a 50       		.byte	0x50
 5478 020b 4B000000 		.4byte	.LVL38-1
 5479 020f 4E000000 		.4byte	.LVL39
 5480 0213 0400     		.2byte	0x4
 5481 0215 F3       		.byte	0xf3
 5482 0216 01       		.uleb128 0x1
 5483 0217 50       		.byte	0x50
 5484 0218 9F       		.byte	0x9f
 5485 0219 4E000000 		.4byte	.LVL39
 5486 021d 51000000 		.4byte	.LVL40-1
 5487 0221 0100     		.2byte	0x1
 5488 0223 50       		.byte	0x50
 5489 0224 51000000 		.4byte	.LVL40-1
 5490 0228 54000000 		.4byte	.LVL41
 5491 022c 0400     		.2byte	0x4
 5492 022e F3       		.byte	0xf3
 5493 022f 01       		.uleb128 0x1
 5494 0230 50       		.byte	0x50
 5495 0231 9F       		.byte	0x9f
 5496 0232 54000000 		.4byte	.LVL41
 5497 0236 58000000 		.4byte	.LVL43
 5498 023a 0100     		.2byte	0x1
 5499 023c 50       		.byte	0x50
 5500 023d 58000000 		.4byte	.LVL43
 5501 0241 64000000 		.4byte	.LFE2
 5502 0245 0400     		.2byte	0x4
 5503 0247 F3       		.byte	0xf3
 5504 0248 01       		.uleb128 0x1
 5505 0249 50       		.byte	0x50
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 160


 5506 024a 9F       		.byte	0x9f
 5507 024b 00000000 		.4byte	0
 5508 024f 00000000 		.4byte	0
 5509              	.LLST15:
 5510 0253 30000000 		.4byte	.LVL37
 5511 0257 56000000 		.4byte	.LVL42
 5512 025b 0100     		.2byte	0x1
 5513 025d 54       		.byte	0x54
 5514 025e 58000000 		.4byte	.LVL43
 5515 0262 5A000000 		.4byte	.LVL44
 5516 0266 0100     		.2byte	0x1
 5517 0268 54       		.byte	0x54
 5518 0269 5A000000 		.4byte	.LVL44
 5519 026d 64000000 		.4byte	.LFE2
 5520 0271 0100     		.2byte	0x1
 5521 0273 50       		.byte	0x50
 5522 0274 00000000 		.4byte	0
 5523 0278 00000000 		.4byte	0
 5524              	.LLST16:
 5525 027c 02000000 		.4byte	.LVL45
 5526 0280 2E000000 		.4byte	.LVL48
 5527 0284 0200     		.2byte	0x2
 5528 0286 30       		.byte	0x30
 5529 0287 9F       		.byte	0x9f
 5530 0288 2E000000 		.4byte	.LVL48
 5531 028c 38000000 		.4byte	.LFE3
 5532 0290 0100     		.2byte	0x1
 5533 0292 50       		.byte	0x50
 5534 0293 00000000 		.4byte	0
 5535 0297 00000000 		.4byte	0
 5536              	.LLST17:
 5537 029b 02000000 		.4byte	.LVL49
 5538 029f 12000000 		.4byte	.LVL50
 5539 02a3 0300     		.2byte	0x3
 5540 02a5 09       		.byte	0x9
 5541 02a6 FF       		.byte	0xff
 5542 02a7 9F       		.byte	0x9f
 5543 02a8 12000000 		.4byte	.LVL50
 5544 02ac 14000000 		.4byte	.LVL51
 5545 02b0 0100     		.2byte	0x1
 5546 02b2 50       		.byte	0x50
 5547 02b3 18000000 		.4byte	.LVL52
 5548 02b7 31000000 		.4byte	.LVL53-1
 5549 02bb 0100     		.2byte	0x1
 5550 02bd 50       		.byte	0x50
 5551 02be 32000000 		.4byte	.LVL53
 5552 02c2 3C000000 		.4byte	.LVL55
 5553 02c6 0100     		.2byte	0x1
 5554 02c8 50       		.byte	0x50
 5555 02c9 3C000000 		.4byte	.LVL55
 5556 02cd 3E000000 		.4byte	.LVL56
 5557 02d1 0300     		.2byte	0x3
 5558 02d3 09       		.byte	0x9
 5559 02d4 FF       		.byte	0xff
 5560 02d5 9F       		.byte	0x9f
 5561 02d6 3E000000 		.4byte	.LVL56
 5562 02da 48000000 		.4byte	.LFE4
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 161


 5563 02de 0100     		.2byte	0x1
 5564 02e0 50       		.byte	0x50
 5565 02e1 00000000 		.4byte	0
 5566 02e5 00000000 		.4byte	0
 5567              	.LLST18:
 5568 02e9 12000000 		.4byte	.LVL50
 5569 02ed 3C000000 		.4byte	.LVL55
 5570 02f1 0100     		.2byte	0x1
 5571 02f3 54       		.byte	0x54
 5572 02f4 00000000 		.4byte	0
 5573 02f8 00000000 		.4byte	0
 5574              	.LLST19:
 5575 02fc 00000000 		.4byte	.LVL57
 5576 0300 5F000000 		.4byte	.LVL59-1
 5577 0304 0100     		.2byte	0x1
 5578 0306 50       		.byte	0x50
 5579 0307 5F000000 		.4byte	.LVL59-1
 5580 030b 62000000 		.4byte	.LVL60
 5581 030f 0400     		.2byte	0x4
 5582 0311 F3       		.byte	0xf3
 5583 0312 01       		.uleb128 0x1
 5584 0313 50       		.byte	0x50
 5585 0314 9F       		.byte	0x9f
 5586 0315 62000000 		.4byte	.LVL60
 5587 0319 65000000 		.4byte	.LVL61-1
 5588 031d 0100     		.2byte	0x1
 5589 031f 50       		.byte	0x50
 5590 0320 65000000 		.4byte	.LVL61-1
 5591 0324 68000000 		.4byte	.LVL62
 5592 0328 0400     		.2byte	0x4
 5593 032a F3       		.byte	0xf3
 5594 032b 01       		.uleb128 0x1
 5595 032c 50       		.byte	0x50
 5596 032d 9F       		.byte	0x9f
 5597 032e 68000000 		.4byte	.LVL62
 5598 0332 6C000000 		.4byte	.LVL64
 5599 0336 0100     		.2byte	0x1
 5600 0338 50       		.byte	0x50
 5601 0339 6C000000 		.4byte	.LVL64
 5602 033d 78000000 		.4byte	.LFE5
 5603 0341 0400     		.2byte	0x4
 5604 0343 F3       		.byte	0xf3
 5605 0344 01       		.uleb128 0x1
 5606 0345 50       		.byte	0x50
 5607 0346 9F       		.byte	0x9f
 5608 0347 00000000 		.4byte	0
 5609 034b 00000000 		.4byte	0
 5610              	.LLST20:
 5611 034f 00000000 		.4byte	.LVL57
 5612 0353 5F000000 		.4byte	.LVL59-1
 5613 0357 0100     		.2byte	0x1
 5614 0359 51       		.byte	0x51
 5615 035a 5F000000 		.4byte	.LVL59-1
 5616 035e 62000000 		.4byte	.LVL60
 5617 0362 0400     		.2byte	0x4
 5618 0364 F3       		.byte	0xf3
 5619 0365 01       		.uleb128 0x1
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 162


 5620 0366 51       		.byte	0x51
 5621 0367 9F       		.byte	0x9f
 5622 0368 62000000 		.4byte	.LVL60
 5623 036c 65000000 		.4byte	.LVL61-1
 5624 0370 0100     		.2byte	0x1
 5625 0372 51       		.byte	0x51
 5626 0373 65000000 		.4byte	.LVL61-1
 5627 0377 68000000 		.4byte	.LVL62
 5628 037b 0400     		.2byte	0x4
 5629 037d F3       		.byte	0xf3
 5630 037e 01       		.uleb128 0x1
 5631 037f 51       		.byte	0x51
 5632 0380 9F       		.byte	0x9f
 5633 0381 68000000 		.4byte	.LVL62
 5634 0385 6C000000 		.4byte	.LVL64
 5635 0389 0100     		.2byte	0x1
 5636 038b 51       		.byte	0x51
 5637 038c 6C000000 		.4byte	.LVL64
 5638 0390 78000000 		.4byte	.LFE5
 5639 0394 0400     		.2byte	0x4
 5640 0396 F3       		.byte	0xf3
 5641 0397 01       		.uleb128 0x1
 5642 0398 51       		.byte	0x51
 5643 0399 9F       		.byte	0x9f
 5644 039a 00000000 		.4byte	0
 5645 039e 00000000 		.4byte	0
 5646              	.LLST21:
 5647 03a2 44000000 		.4byte	.LVL58
 5648 03a6 6A000000 		.4byte	.LVL63
 5649 03aa 0100     		.2byte	0x1
 5650 03ac 54       		.byte	0x54
 5651 03ad 6C000000 		.4byte	.LVL64
 5652 03b1 6E000000 		.4byte	.LVL65
 5653 03b5 0100     		.2byte	0x1
 5654 03b7 54       		.byte	0x54
 5655 03b8 6E000000 		.4byte	.LVL65
 5656 03bc 78000000 		.4byte	.LFE5
 5657 03c0 0100     		.2byte	0x1
 5658 03c2 50       		.byte	0x50
 5659 03c3 00000000 		.4byte	0
 5660 03c7 00000000 		.4byte	0
 5661              	.LLST22:
 5662 03cb 02000000 		.4byte	.LVL66
 5663 03cf 2E000000 		.4byte	.LVL69
 5664 03d3 0200     		.2byte	0x2
 5665 03d5 30       		.byte	0x30
 5666 03d6 9F       		.byte	0x9f
 5667 03d7 2E000000 		.4byte	.LVL69
 5668 03db 38000000 		.4byte	.LFE6
 5669 03df 0100     		.2byte	0x1
 5670 03e1 50       		.byte	0x50
 5671 03e2 00000000 		.4byte	0
 5672 03e6 00000000 		.4byte	0
 5673              	.LLST23:
 5674 03ea 00000000 		.4byte	.LVL70
 5675 03ee 08000000 		.4byte	.LVL71
 5676 03f2 0100     		.2byte	0x1
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 163


 5677 03f4 50       		.byte	0x50
 5678 03f5 08000000 		.4byte	.LVL71
 5679 03f9 EC000000 		.4byte	.LFE8
 5680 03fd 0400     		.2byte	0x4
 5681 03ff F3       		.byte	0xf3
 5682 0400 01       		.uleb128 0x1
 5683 0401 50       		.byte	0x50
 5684 0402 9F       		.byte	0x9f
 5685 0403 00000000 		.4byte	0
 5686 0407 00000000 		.4byte	0
 5687              	.LLST24:
 5688 040b 00000000 		.4byte	.LVL70
 5689 040f 12000000 		.4byte	.LVL73
 5690 0413 0100     		.2byte	0x1
 5691 0415 51       		.byte	0x51
 5692 0416 12000000 		.4byte	.LVL73
 5693 041a EC000000 		.4byte	.LFE8
 5694 041e 0400     		.2byte	0x4
 5695 0420 F3       		.byte	0xf3
 5696 0421 01       		.uleb128 0x1
 5697 0422 51       		.byte	0x51
 5698 0423 9F       		.byte	0x9f
 5699 0424 00000000 		.4byte	0
 5700 0428 00000000 		.4byte	0
 5701              	.LLST25:
 5702 042c 00000000 		.4byte	.LVL70
 5703 0430 0C000000 		.4byte	.LVL72
 5704 0434 0100     		.2byte	0x1
 5705 0436 52       		.byte	0x52
 5706 0437 0C000000 		.4byte	.LVL72
 5707 043b E2000000 		.4byte	.LVL91
 5708 043f 0100     		.2byte	0x1
 5709 0441 56       		.byte	0x56
 5710 0442 E2000000 		.4byte	.LVL91
 5711 0446 EC000000 		.4byte	.LFE8
 5712 044a 0400     		.2byte	0x4
 5713 044c F3       		.byte	0xf3
 5714 044d 01       		.uleb128 0x1
 5715 044e 52       		.byte	0x52
 5716 044f 9F       		.byte	0x9f
 5717 0450 00000000 		.4byte	0
 5718 0454 00000000 		.4byte	0
 5719              	.LLST26:
 5720 0458 16000000 		.4byte	.LVL74
 5721 045c 1A000000 		.4byte	.LVL75
 5722 0460 0200     		.2byte	0x2
 5723 0462 30       		.byte	0x30
 5724 0463 9F       		.byte	0x9f
 5725 0464 1A000000 		.4byte	.LVL75
 5726 0468 E2000000 		.4byte	.LVL90
 5727 046c 0100     		.2byte	0x1
 5728 046e 55       		.byte	0x55
 5729 046f 00000000 		.4byte	0
 5730 0473 00000000 		.4byte	0
 5731              	.LLST27:
 5732 0477 1E000000 		.4byte	.LVL76
 5733 047b 3D000000 		.4byte	.LVL77-1
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 164


 5734 047f 0100     		.2byte	0x1
 5735 0481 50       		.byte	0x50
 5736 0482 4E000000 		.4byte	.LVL78
 5737 0486 6D000000 		.4byte	.LVL79-1
 5738 048a 0100     		.2byte	0x1
 5739 048c 50       		.byte	0x50
 5740 048d 74000000 		.4byte	.LVL80
 5741 0491 85000000 		.4byte	.LVL81-1
 5742 0495 0100     		.2byte	0x1
 5743 0497 50       		.byte	0x50
 5744 0498 94000000 		.4byte	.LVL83
 5745 049c B3000000 		.4byte	.LVL84-1
 5746 04a0 0100     		.2byte	0x1
 5747 04a2 50       		.byte	0x50
 5748 04a3 BA000000 		.4byte	.LVL85
 5749 04a7 D9000000 		.4byte	.LVL86-1
 5750 04ab 0100     		.2byte	0x1
 5751 04ad 50       		.byte	0x50
 5752 04ae 00000000 		.4byte	0
 5753 04b2 00000000 		.4byte	0
 5754              	.LLST28:
 5755 04b6 16000000 		.4byte	.LVL74
 5756 04ba E2000000 		.4byte	.LVL89
 5757 04be 0100     		.2byte	0x1
 5758 04c0 54       		.byte	0x54
 5759 04c1 00000000 		.4byte	0
 5760 04c5 00000000 		.4byte	0
 5761              	.LLST29:
 5762 04c9 00000000 		.4byte	.LVL92
 5763 04cd 30000000 		.4byte	.LVL96
 5764 04d1 0100     		.2byte	0x1
 5765 04d3 50       		.byte	0x50
 5766 04d4 30000000 		.4byte	.LVL96
 5767 04d8 80000000 		.4byte	.LFE12
 5768 04dc 0400     		.2byte	0x4
 5769 04de F3       		.byte	0xf3
 5770 04df 01       		.uleb128 0x1
 5771 04e0 50       		.byte	0x50
 5772 04e1 9F       		.byte	0x9f
 5773 04e2 00000000 		.4byte	0
 5774 04e6 00000000 		.4byte	0
 5775              	.LLST30:
 5776 04ea 34000000 		.4byte	.LVL97
 5777 04ee 6B000000 		.4byte	.LVL108-1
 5778 04f2 0100     		.2byte	0x1
 5779 04f4 50       		.byte	0x50
 5780 04f5 00000000 		.4byte	0
 5781 04f9 00000000 		.4byte	0
 5782              	.LLST31:
 5783 04fd 2A000000 		.4byte	.LVL95
 5784 0501 30000000 		.4byte	.LVL96
 5785 0505 0200     		.2byte	0x2
 5786 0507 30       		.byte	0x30
 5787 0508 9F       		.byte	0x9f
 5788 0509 30000000 		.4byte	.LVL96
 5789 050d 74000000 		.4byte	.LVL112
 5790 0511 0100     		.2byte	0x1
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 165


 5791 0513 55       		.byte	0x55
 5792 0514 00000000 		.4byte	0
 5793 0518 00000000 		.4byte	0
 5794              	.LLST32:
 5795 051c 1A000000 		.4byte	.LVL93
 5796 0520 24000000 		.4byte	.LVL94
 5797 0524 0200     		.2byte	0x2
 5798 0526 30       		.byte	0x30
 5799 0527 9F       		.byte	0x9f
 5800 0528 2A000000 		.4byte	.LVL95
 5801 052c 74000000 		.4byte	.LVL113
 5802 0530 0100     		.2byte	0x1
 5803 0532 58       		.byte	0x58
 5804 0533 00000000 		.4byte	0
 5805 0537 00000000 		.4byte	0
 5806              	.LLST33:
 5807 053b 1A000000 		.4byte	.LVL93
 5808 053f 24000000 		.4byte	.LVL94
 5809 0543 0200     		.2byte	0x2
 5810 0545 35       		.byte	0x35
 5811 0546 9F       		.byte	0x9f
 5812 0547 2A000000 		.4byte	.LVL95
 5813 054b 74000000 		.4byte	.LVL114
 5814 054f 0100     		.2byte	0x1
 5815 0551 59       		.byte	0x59
 5816 0552 00000000 		.4byte	0
 5817 0556 00000000 		.4byte	0
 5818              	.LLST34:
 5819 055a 42000000 		.4byte	.LVL100
 5820 055e 54000000 		.4byte	.LVL103
 5821 0562 0100     		.2byte	0x1
 5822 0564 52       		.byte	0x52
 5823 0565 54000000 		.4byte	.LVL103
 5824 0569 5E000000 		.4byte	.LVL105
 5825 056d 0200     		.2byte	0x2
 5826 056f 76       		.byte	0x76
 5827 0570 00       		.sleb128 0
 5828 0571 62000000 		.4byte	.LVL106
 5829 0575 6B000000 		.4byte	.LVL108-1
 5830 0579 0100     		.2byte	0x1
 5831 057b 53       		.byte	0x53
 5832 057c 00000000 		.4byte	0
 5833 0580 00000000 		.4byte	0
 5834              	.LLST35:
 5835 0584 38000000 		.4byte	.LVL98
 5836 0588 62000000 		.4byte	.LVL106
 5837 058c 0100     		.2byte	0x1
 5838 058e 53       		.byte	0x53
 5839 058f 00000000 		.4byte	0
 5840 0593 00000000 		.4byte	0
 5841              	.LLST36:
 5842 0597 30000000 		.4byte	.LVL96
 5843 059b 74000000 		.4byte	.LVL111
 5844 059f 0100     		.2byte	0x1
 5845 05a1 54       		.byte	0x54
 5846 05a2 00000000 		.4byte	0
 5847 05a6 00000000 		.4byte	0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 166


 5848              	.LLST37:
 5849 05aa 16000000 		.4byte	.LVL116
 5850 05ae 29000000 		.4byte	.LVL117-1
 5851 05b2 0100     		.2byte	0x1
 5852 05b4 50       		.byte	0x50
 5853 05b5 29000000 		.4byte	.LVL117-1
 5854 05b9 2C000000 		.4byte	.LVL118
 5855 05bd 0100     		.2byte	0x1
 5856 05bf 54       		.byte	0x54
 5857 05c0 2C000000 		.4byte	.LVL118
 5858 05c4 54000000 		.4byte	.LVL119
 5859 05c8 0100     		.2byte	0x1
 5860 05ca 50       		.byte	0x50
 5861 05cb 54000000 		.4byte	.LVL119
 5862 05cf 58000000 		.4byte	.LVL120
 5863 05d3 0200     		.2byte	0x2
 5864 05d5 30       		.byte	0x30
 5865 05d6 9F       		.byte	0x9f
 5866 05d7 58000000 		.4byte	.LVL120
 5867 05db 6A000000 		.4byte	.LVL121
 5868 05df 0100     		.2byte	0x1
 5869 05e1 50       		.byte	0x50
 5870 05e2 6A000000 		.4byte	.LVL121
 5871 05e6 6E000000 		.4byte	.LVL122
 5872 05ea 0100     		.2byte	0x1
 5873 05ec 54       		.byte	0x54
 5874 05ed 00000000 		.4byte	0
 5875 05f1 00000000 		.4byte	0
 5876              	.LLST38:
 5877 05f5 00000000 		.4byte	.LVL123
 5878 05f9 05000000 		.4byte	.LVL124-1
 5879 05fd 0100     		.2byte	0x1
 5880 05ff 50       		.byte	0x50
 5881 0600 05000000 		.4byte	.LVL124-1
 5882 0604 08000000 		.4byte	.LFE14
 5883 0608 0400     		.2byte	0x4
 5884 060a F3       		.byte	0xf3
 5885 060b 01       		.uleb128 0x1
 5886 060c 50       		.byte	0x50
 5887 060d 9F       		.byte	0x9f
 5888 060e 00000000 		.4byte	0
 5889 0612 00000000 		.4byte	0
 5890              	.LLST39:
 5891 0616 00000000 		.4byte	.LVL125
 5892 061a 08000000 		.4byte	.LVL126
 5893 061e 0100     		.2byte	0x1
 5894 0620 50       		.byte	0x50
 5895 0621 08000000 		.4byte	.LVL126
 5896 0625 0A000000 		.4byte	.LVL127
 5897 0629 0300     		.2byte	0x3
 5898 062b 70       		.byte	0x70
 5899 062c 01       		.sleb128 1
 5900 062d 9F       		.byte	0x9f
 5901 062e 0A000000 		.4byte	.LVL127
 5902 0632 30000000 		.4byte	.LFE15
 5903 0636 0400     		.2byte	0x4
 5904 0638 F3       		.byte	0xf3
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 167


 5905 0639 01       		.uleb128 0x1
 5906 063a 50       		.byte	0x50
 5907 063b 9F       		.byte	0x9f
 5908 063c 00000000 		.4byte	0
 5909 0640 00000000 		.4byte	0
 5910              	.LLST40:
 5911 0644 00000000 		.4byte	.LVL128
 5912 0648 0A000000 		.4byte	.LVL132
 5913 064c 0100     		.2byte	0x1
 5914 064e 50       		.byte	0x50
 5915 064f 0A000000 		.4byte	.LVL132
 5916 0653 0C000000 		.4byte	.LVL133
 5917 0657 0300     		.2byte	0x3
 5918 0659 70       		.byte	0x70
 5919 065a 01       		.sleb128 1
 5920 065b 9F       		.byte	0x9f
 5921 065c 0C000000 		.4byte	.LVL133
 5922 0660 14000000 		.4byte	.LFE16
 5923 0664 0400     		.2byte	0x4
 5924 0666 F3       		.byte	0xf3
 5925 0667 01       		.uleb128 0x1
 5926 0668 50       		.byte	0x50
 5927 0669 9F       		.byte	0x9f
 5928 066a 00000000 		.4byte	0
 5929 066e 00000000 		.4byte	0
 5930              	.LLST41:
 5931 0672 04000000 		.4byte	.LVL129
 5932 0676 06000000 		.4byte	.LVL130
 5933 067a 0100     		.2byte	0x1
 5934 067c 53       		.byte	0x53
 5935 067d 08000000 		.4byte	.LVL131
 5936 0681 0C000000 		.4byte	.LVL133
 5937 0685 0100     		.2byte	0x1
 5938 0687 53       		.byte	0x53
 5939 0688 0C000000 		.4byte	.LVL133
 5940 068c 14000000 		.4byte	.LFE16
 5941 0690 0100     		.2byte	0x1
 5942 0692 50       		.byte	0x50
 5943 0693 00000000 		.4byte	0
 5944 0697 00000000 		.4byte	0
 5945              	.LLST42:
 5946 069b 00000000 		.4byte	.LVL134
 5947 069f 06000000 		.4byte	.LVL135
 5948 06a3 0100     		.2byte	0x1
 5949 06a5 50       		.byte	0x50
 5950 06a6 06000000 		.4byte	.LVL135
 5951 06aa 10000000 		.4byte	.LVL138
 5952 06ae 0100     		.2byte	0x1
 5953 06b0 54       		.byte	0x54
 5954 06b1 10000000 		.4byte	.LVL138
 5955 06b5 12000000 		.4byte	.LFE17
 5956 06b9 0400     		.2byte	0x4
 5957 06bb F3       		.byte	0xf3
 5958 06bc 01       		.uleb128 0x1
 5959 06bd 50       		.byte	0x50
 5960 06be 9F       		.byte	0x9f
 5961 06bf 00000000 		.4byte	0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 168


 5962 06c3 00000000 		.4byte	0
 5963              	.LLST43:
 5964 06c7 00000000 		.4byte	.LVL134
 5965 06cb 09000000 		.4byte	.LVL136-1
 5966 06cf 0100     		.2byte	0x1
 5967 06d1 51       		.byte	0x51
 5968 06d2 09000000 		.4byte	.LVL136-1
 5969 06d6 12000000 		.4byte	.LFE17
 5970 06da 0400     		.2byte	0x4
 5971 06dc F3       		.byte	0xf3
 5972 06dd 01       		.uleb128 0x1
 5973 06de 51       		.byte	0x51
 5974 06df 9F       		.byte	0x9f
 5975 06e0 00000000 		.4byte	0
 5976 06e4 00000000 		.4byte	0
 5977              	.LLST44:
 5978 06e8 00000000 		.4byte	.LVL139
 5979 06ec 0A000000 		.4byte	.LVL141
 5980 06f0 0100     		.2byte	0x1
 5981 06f2 50       		.byte	0x50
 5982 06f3 0A000000 		.4byte	.LVL141
 5983 06f7 0C000000 		.4byte	.LVL142
 5984 06fb 0100     		.2byte	0x1
 5985 06fd 54       		.byte	0x54
 5986 06fe 0C000000 		.4byte	.LVL142
 5987 0702 0E000000 		.4byte	.LVL143
 5988 0706 0100     		.2byte	0x1
 5989 0708 50       		.byte	0x50
 5990 0709 0E000000 		.4byte	.LVL143
 5991 070d 36000000 		.4byte	.LVL148
 5992 0711 0100     		.2byte	0x1
 5993 0713 54       		.byte	0x54
 5994 0714 36000000 		.4byte	.LVL148
 5995 0718 3C000000 		.4byte	.LFE18
 5996 071c 0400     		.2byte	0x4
 5997 071e F3       		.byte	0xf3
 5998 071f 01       		.uleb128 0x1
 5999 0720 50       		.byte	0x50
 6000 0721 9F       		.byte	0x9f
 6001 0722 00000000 		.4byte	0
 6002 0726 00000000 		.4byte	0
 6003              	.LLST45:
 6004 072a 04000000 		.4byte	.LVL140
 6005 072e 0E000000 		.4byte	.LVL143
 6006 0732 0200     		.2byte	0x2
 6007 0734 30       		.byte	0x30
 6008 0735 9F       		.byte	0x9f
 6009 0736 0E000000 		.4byte	.LVL143
 6010 073a 26000000 		.4byte	.LVL144
 6011 073e 0100     		.2byte	0x1
 6012 0740 50       		.byte	0x50
 6013 0741 2A000000 		.4byte	.LVL145
 6014 0745 32000000 		.4byte	.LVL146
 6015 0749 0100     		.2byte	0x1
 6016 074b 50       		.byte	0x50
 6017 074c 36000000 		.4byte	.LVL147
 6018 0750 3C000000 		.4byte	.LFE18
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 169


 6019 0754 0100     		.2byte	0x1
 6020 0756 50       		.byte	0x50
 6021 0757 00000000 		.4byte	0
 6022 075b 00000000 		.4byte	0
 6023              	.LLST46:
 6024 075f 02000000 		.4byte	.LVL149
 6025 0763 08000000 		.4byte	.LVL150
 6026 0767 0200     		.2byte	0x2
 6027 0769 30       		.byte	0x30
 6028 076a 9F       		.byte	0x9f
 6029 076b 08000000 		.4byte	.LVL150
 6030 076f 18000000 		.4byte	.LVL155
 6031 0773 0100     		.2byte	0x1
 6032 0775 55       		.byte	0x55
 6033 0776 18000000 		.4byte	.LVL155
 6034 077a 1A000000 		.4byte	.LFE19
 6035 077e 0100     		.2byte	0x1
 6036 0780 50       		.byte	0x50
 6037 0781 00000000 		.4byte	0
 6038 0785 00000000 		.4byte	0
 6039              	.LLST47:
 6040 0789 02000000 		.4byte	.LVL149
 6041 078d 08000000 		.4byte	.LVL150
 6042 0791 0200     		.2byte	0x2
 6043 0793 30       		.byte	0x30
 6044 0794 9F       		.byte	0x9f
 6045 0795 08000000 		.4byte	.LVL150
 6046 0799 18000000 		.4byte	.LVL154
 6047 079d 0100     		.2byte	0x1
 6048 079f 54       		.byte	0x54
 6049 07a0 00000000 		.4byte	0
 6050 07a4 00000000 		.4byte	0
 6051              	.LLST48:
 6052 07a8 00000000 		.4byte	.LVL156
 6053 07ac 04000000 		.4byte	.LVL157
 6054 07b0 0100     		.2byte	0x1
 6055 07b2 50       		.byte	0x50
 6056 07b3 04000000 		.4byte	.LVL157
 6057 07b7 14000000 		.4byte	.LFE25
 6058 07bb 0400     		.2byte	0x4
 6059 07bd F3       		.byte	0xf3
 6060 07be 01       		.uleb128 0x1
 6061 07bf 50       		.byte	0x50
 6062 07c0 9F       		.byte	0x9f
 6063 07c1 00000000 		.4byte	0
 6064 07c5 00000000 		.4byte	0
 6065              	.LLST49:
 6066 07c9 00000000 		.4byte	.LVL160
 6067 07cd 12000000 		.4byte	.LVL161
 6068 07d1 0100     		.2byte	0x1
 6069 07d3 50       		.byte	0x50
 6070 07d4 12000000 		.4byte	.LVL161
 6071 07d8 1A000000 		.4byte	.LVL162
 6072 07dc 0400     		.2byte	0x4
 6073 07de F3       		.byte	0xf3
 6074 07df 01       		.uleb128 0x1
 6075 07e0 50       		.byte	0x50
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 170


 6076 07e1 9F       		.byte	0x9f
 6077 07e2 1A000000 		.4byte	.LVL162
 6078 07e6 1C000000 		.4byte	.LVL163
 6079 07ea 0100     		.2byte	0x1
 6080 07ec 50       		.byte	0x50
 6081 07ed 1C000000 		.4byte	.LVL163
 6082 07f1 24000000 		.4byte	.LFE26
 6083 07f5 0400     		.2byte	0x4
 6084 07f7 F3       		.byte	0xf3
 6085 07f8 01       		.uleb128 0x1
 6086 07f9 50       		.byte	0x50
 6087 07fa 9F       		.byte	0x9f
 6088 07fb 00000000 		.4byte	0
 6089 07ff 00000000 		.4byte	0
 6090              	.LLST50:
 6091 0803 20000000 		.4byte	.LVL164
 6092 0807 22000000 		.4byte	.LVL165
 6093 080b 0100     		.2byte	0x1
 6094 080d 50       		.byte	0x50
 6095 080e 00000000 		.4byte	0
 6096 0812 00000000 		.4byte	0
 6097              	.LLST51:
 6098 0816 00000000 		.4byte	.LVL166
 6099 081a 07000000 		.4byte	.LVL167-1
 6100 081e 0100     		.2byte	0x1
 6101 0820 50       		.byte	0x50
 6102 0821 07000000 		.4byte	.LVL167-1
 6103 0825 3A000000 		.4byte	.LFE21
 6104 0829 0400     		.2byte	0x4
 6105 082b F3       		.byte	0xf3
 6106 082c 01       		.uleb128 0x1
 6107 082d 50       		.byte	0x50
 6108 082e 9F       		.byte	0x9f
 6109 082f 00000000 		.4byte	0
 6110 0833 00000000 		.4byte	0
 6111              	.LLST52:
 6112 0837 00000000 		.4byte	.LVL166
 6113 083b 07000000 		.4byte	.LVL167-1
 6114 083f 0100     		.2byte	0x1
 6115 0841 51       		.byte	0x51
 6116 0842 07000000 		.4byte	.LVL167-1
 6117 0846 38000000 		.4byte	.LVL181
 6118 084a 0100     		.2byte	0x1
 6119 084c 56       		.byte	0x56
 6120 084d 38000000 		.4byte	.LVL181
 6121 0851 3A000000 		.4byte	.LFE21
 6122 0855 0400     		.2byte	0x4
 6123 0857 F3       		.byte	0xf3
 6124 0858 01       		.uleb128 0x1
 6125 0859 51       		.byte	0x51
 6126 085a 9F       		.byte	0x9f
 6127 085b 00000000 		.4byte	0
 6128 085f 00000000 		.4byte	0
 6129              	.LLST53:
 6130 0863 1C000000 		.4byte	.LVL173
 6131 0867 20000000 		.4byte	.LVL174
 6132 086b 0100     		.2byte	0x1
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 171


 6133 086d 50       		.byte	0x50
 6134 086e 20000000 		.4byte	.LVL174
 6135 0872 38000000 		.4byte	.LVL179
 6136 0876 0100     		.2byte	0x1
 6137 0878 54       		.byte	0x54
 6138 0879 00000000 		.4byte	0
 6139 087d 00000000 		.4byte	0
 6140              	.LLST54:
 6141 0881 30000000 		.4byte	.LVL177
 6142 0885 32000000 		.4byte	.LVL178
 6143 0889 0100     		.2byte	0x1
 6144 088b 50       		.byte	0x50
 6145 088c 00000000 		.4byte	0
 6146 0890 00000000 		.4byte	0
 6147              	.LLST55:
 6148 0894 14000000 		.4byte	.LVL170
 6149 0898 16000000 		.4byte	.LVL171
 6150 089c 0100     		.2byte	0x1
 6151 089e 50       		.byte	0x50
 6152 089f 16000000 		.4byte	.LVL171
 6153 08a3 19000000 		.4byte	.LVL172-1
 6154 08a7 0100     		.2byte	0x1
 6155 08a9 51       		.byte	0x51
 6156 08aa 00000000 		.4byte	0
 6157 08ae 00000000 		.4byte	0
 6158              	.LLST56:
 6159 08b2 0A000000 		.4byte	.LVL168
 6160 08b6 11000000 		.4byte	.LVL169-1
 6161 08ba 0100     		.2byte	0x1
 6162 08bc 50       		.byte	0x50
 6163 08bd 11000000 		.4byte	.LVL169-1
 6164 08c1 38000000 		.4byte	.LVL180
 6165 08c5 0100     		.2byte	0x1
 6166 08c7 55       		.byte	0x55
 6167 08c8 00000000 		.4byte	0
 6168 08cc 00000000 		.4byte	0
 6169              	.LLST57:
 6170 08d0 02000000 		.4byte	.LVL182
 6171 08d4 06000000 		.4byte	.LVL183
 6172 08d8 0200     		.2byte	0x2
 6173 08da 30       		.byte	0x30
 6174 08db 9F       		.byte	0x9f
 6175 08dc 06000000 		.4byte	.LVL183
 6176 08e0 32000000 		.4byte	.LVL189
 6177 08e4 0100     		.2byte	0x1
 6178 08e6 54       		.byte	0x54
 6179 08e7 00000000 		.4byte	0
 6180 08eb 00000000 		.4byte	0
 6181              	.LLST58:
 6182 08ef 12000000 		.4byte	.LVL184
 6183 08f3 23000000 		.4byte	.LVL185-1
 6184 08f7 0100     		.2byte	0x1
 6185 08f9 51       		.byte	0x51
 6186 08fa 26000000 		.4byte	.LVL186
 6187 08fe 2B000000 		.4byte	.LVL187-1
 6188 0902 0100     		.2byte	0x1
 6189 0904 51       		.byte	0x51
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 172


 6190 0905 00000000 		.4byte	0
 6191 0909 00000000 		.4byte	0
 6192              	.LLST59:
 6193 090d 00000000 		.4byte	.LVL190
 6194 0911 33000000 		.4byte	.LVL195-1
 6195 0915 0100     		.2byte	0x1
 6196 0917 50       		.byte	0x50
 6197 0918 33000000 		.4byte	.LVL195-1
 6198 091c 3E000000 		.4byte	.LVL198
 6199 0920 0200     		.2byte	0x2
 6200 0922 91       		.byte	0x91
 6201 0923 54       		.sleb128 -44
 6202 0924 3E000000 		.4byte	.LVL198
 6203 0928 D8000000 		.4byte	.LFE27
 6204 092c 0400     		.2byte	0x4
 6205 092e F3       		.byte	0xf3
 6206 092f 01       		.uleb128 0x1
 6207 0930 50       		.byte	0x50
 6208 0931 9F       		.byte	0x9f
 6209 0932 00000000 		.4byte	0
 6210 0936 00000000 		.4byte	0
 6211              	.LLST60:
 6212 093a 1A000000 		.4byte	.LVL191
 6213 093e 28000000 		.4byte	.LVL193
 6214 0942 0100     		.2byte	0x1
 6215 0944 54       		.byte	0x54
 6216 0945 28000000 		.4byte	.LVL193
 6217 0949 3E000000 		.4byte	.LVL198
 6218 094d 0200     		.2byte	0x2
 6219 094f 7D       		.byte	0x7d
 6220 0950 00       		.sleb128 0
 6221 0951 00000000 		.4byte	0
 6222 0955 00000000 		.4byte	0
 6223              	.LLST61:
 6224 0959 26000000 		.4byte	.LVL192
 6225 095d 33000000 		.4byte	.LVL195-1
 6226 0961 0100     		.2byte	0x1
 6227 0963 52       		.byte	0x52
 6228 0964 33000000 		.4byte	.LVL195-1
 6229 0968 AE000000 		.4byte	.LVL227
 6230 096c 0100     		.2byte	0x1
 6231 096e 59       		.byte	0x59
 6232 096f 00000000 		.4byte	0
 6233 0973 00000000 		.4byte	0
 6234              	.LLST62:
 6235 0977 30000000 		.4byte	.LVL194
 6236 097b 5A000000 		.4byte	.LVL206
 6237 097f 0100     		.2byte	0x1
 6238 0981 55       		.byte	0x55
 6239 0982 5A000000 		.4byte	.LVL206
 6240 0986 AE000000 		.4byte	.LVL228
 6241 098a 0100     		.2byte	0x1
 6242 098c 5B       		.byte	0x5b
 6243 098d 00000000 		.4byte	0
 6244 0991 00000000 		.4byte	0
 6245              	.LLST63:
 6246 0995 36000000 		.4byte	.LVL196
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 173


 6247 0999 41000000 		.4byte	.LVL199-1
 6248 099d 0100     		.2byte	0x1
 6249 099f 53       		.byte	0x53
 6250 09a0 48000000 		.4byte	.LVL201
 6251 09a4 51000000 		.4byte	.LVL203-1
 6252 09a8 0100     		.2byte	0x1
 6253 09aa 53       		.byte	0x53
 6254 09ab 58000000 		.4byte	.LVL205
 6255 09af 67000000 		.4byte	.LVL209-1
 6256 09b3 0100     		.2byte	0x1
 6257 09b5 53       		.byte	0x53
 6258 09b6 76000000 		.4byte	.LVL212
 6259 09ba 78000000 		.4byte	.LVL213
 6260 09be 0100     		.2byte	0x1
 6261 09c0 53       		.byte	0x53
 6262 09c1 78000000 		.4byte	.LVL213
 6263 09c5 88000000 		.4byte	.LVL217
 6264 09c9 0100     		.2byte	0x1
 6265 09cb 55       		.byte	0x55
 6266 09cc 88000000 		.4byte	.LVL217
 6267 09d0 95000000 		.4byte	.LVL220-1
 6268 09d4 0100     		.2byte	0x1
 6269 09d6 53       		.byte	0x53
 6270 09d7 9C000000 		.4byte	.LVL222
 6271 09db A2000000 		.4byte	.LVL223
 6272 09df 0100     		.2byte	0x1
 6273 09e1 53       		.byte	0x53
 6274 09e2 A2000000 		.4byte	.LVL223
 6275 09e6 A6000000 		.4byte	.LVL224
 6276 09ea 0100     		.2byte	0x1
 6277 09ec 52       		.byte	0x52
 6278 09ed A6000000 		.4byte	.LVL224
 6279 09f1 AE000000 		.4byte	.LVL226
 6280 09f5 0100     		.2byte	0x1
 6281 09f7 54       		.byte	0x54
 6282 09f8 00000000 		.4byte	0
 6283 09fc 00000000 		.4byte	0
 6284              	.LLST64:
 6285 0a00 34000000 		.4byte	.LVL195
 6286 0a04 41000000 		.4byte	.LVL199-1
 6287 0a08 0100     		.2byte	0x1
 6288 0a0a 50       		.byte	0x50
 6289 0a0b 46000000 		.4byte	.LVL200
 6290 0a0f 51000000 		.4byte	.LVL203-1
 6291 0a13 0100     		.2byte	0x1
 6292 0a15 50       		.byte	0x50
 6293 0a16 56000000 		.4byte	.LVL204
 6294 0a1a 67000000 		.4byte	.LVL209-1
 6295 0a1e 0100     		.2byte	0x1
 6296 0a20 50       		.byte	0x50
 6297 0a21 74000000 		.4byte	.LVL211
 6298 0a25 81000000 		.4byte	.LVL215-1
 6299 0a29 0100     		.2byte	0x1
 6300 0a2b 50       		.byte	0x50
 6301 0a2c 86000000 		.4byte	.LVL216
 6302 0a30 95000000 		.4byte	.LVL220-1
 6303 0a34 0100     		.2byte	0x1
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 174


 6304 0a36 50       		.byte	0x50
 6305 0a37 9A000000 		.4byte	.LVL221
 6306 0a3b AB000000 		.4byte	.LVL225-1
 6307 0a3f 0100     		.2byte	0x1
 6308 0a41 50       		.byte	0x50
 6309 0a42 00000000 		.4byte	0
 6310 0a46 00000000 		.4byte	0
 6311              	.LLST65:
 6312 0a4a 00000000 		.4byte	.LVL229
 6313 0a4e 14000000 		.4byte	.LVL231
 6314 0a52 0100     		.2byte	0x1
 6315 0a54 50       		.byte	0x50
 6316 0a55 14000000 		.4byte	.LVL231
 6317 0a59 16000000 		.4byte	.LVL232
 6318 0a5d 0400     		.2byte	0x4
 6319 0a5f F3       		.byte	0xf3
 6320 0a60 01       		.uleb128 0x1
 6321 0a61 50       		.byte	0x50
 6322 0a62 9F       		.byte	0x9f
 6323 0a63 16000000 		.4byte	.LVL232
 6324 0a67 1E000000 		.4byte	.LVL233
 6325 0a6b 0100     		.2byte	0x1
 6326 0a6d 50       		.byte	0x50
 6327 0a6e 1E000000 		.4byte	.LVL233
 6328 0a72 20000000 		.4byte	.LVL234
 6329 0a76 0400     		.2byte	0x4
 6330 0a78 F3       		.byte	0xf3
 6331 0a79 01       		.uleb128 0x1
 6332 0a7a 50       		.byte	0x50
 6333 0a7b 9F       		.byte	0x9f
 6334 0a7c 20000000 		.4byte	.LVL234
 6335 0a80 22000000 		.4byte	.LVL235
 6336 0a84 0100     		.2byte	0x1
 6337 0a86 50       		.byte	0x50
 6338 0a87 22000000 		.4byte	.LVL235
 6339 0a8b 30000000 		.4byte	.LFE28
 6340 0a8f 0400     		.2byte	0x4
 6341 0a91 F3       		.byte	0xf3
 6342 0a92 01       		.uleb128 0x1
 6343 0a93 50       		.byte	0x50
 6344 0a94 9F       		.byte	0x9f
 6345 0a95 00000000 		.4byte	0
 6346 0a99 00000000 		.4byte	0
 6347              	.LLST66:
 6348 0a9d 00000000 		.4byte	.LVL229
 6349 0aa1 25000000 		.4byte	.LVL236-1
 6350 0aa5 0100     		.2byte	0x1
 6351 0aa7 51       		.byte	0x51
 6352 0aa8 25000000 		.4byte	.LVL236-1
 6353 0aac 30000000 		.4byte	.LFE28
 6354 0ab0 0400     		.2byte	0x4
 6355 0ab2 F3       		.byte	0xf3
 6356 0ab3 01       		.uleb128 0x1
 6357 0ab4 51       		.byte	0x51
 6358 0ab5 9F       		.byte	0x9f
 6359 0ab6 00000000 		.4byte	0
 6360 0aba 00000000 		.4byte	0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 175


 6361              	.LLST67:
 6362 0abe 02000000 		.4byte	.LVL230
 6363 0ac2 26000000 		.4byte	.LVL236
 6364 0ac6 0200     		.2byte	0x2
 6365 0ac8 30       		.byte	0x30
 6366 0ac9 9F       		.byte	0x9f
 6367 0aca 26000000 		.4byte	.LVL236
 6368 0ace 28000000 		.4byte	.LVL237
 6369 0ad2 0200     		.2byte	0x2
 6370 0ad4 31       		.byte	0x31
 6371 0ad5 9F       		.byte	0x9f
 6372 0ad6 28000000 		.4byte	.LVL237
 6373 0ada 30000000 		.4byte	.LFE28
 6374 0ade 0100     		.2byte	0x1
 6375 0ae0 50       		.byte	0x50
 6376 0ae1 00000000 		.4byte	0
 6377 0ae5 00000000 		.4byte	0
 6378              	.LLST68:
 6379 0ae9 00000000 		.4byte	.LVL238
 6380 0aed 0B000000 		.4byte	.LVL239-1
 6381 0af1 0100     		.2byte	0x1
 6382 0af3 50       		.byte	0x50
 6383 0af4 0B000000 		.4byte	.LVL239-1
 6384 0af8 1A000000 		.4byte	.LVL242
 6385 0afc 0100     		.2byte	0x1
 6386 0afe 55       		.byte	0x55
 6387 0aff 1A000000 		.4byte	.LVL242
 6388 0b03 1C000000 		.4byte	.LFE29
 6389 0b07 0400     		.2byte	0x4
 6390 0b09 F3       		.byte	0xf3
 6391 0b0a 01       		.uleb128 0x1
 6392 0b0b 50       		.byte	0x50
 6393 0b0c 9F       		.byte	0x9f
 6394 0b0d 00000000 		.4byte	0
 6395 0b11 00000000 		.4byte	0
 6396              	.LLST69:
 6397 0b15 00000000 		.4byte	.LVL238
 6398 0b19 0B000000 		.4byte	.LVL239-1
 6399 0b1d 0100     		.2byte	0x1
 6400 0b1f 51       		.byte	0x51
 6401 0b20 0B000000 		.4byte	.LVL239-1
 6402 0b24 1A000000 		.4byte	.LVL243
 6403 0b28 0100     		.2byte	0x1
 6404 0b2a 56       		.byte	0x56
 6405 0b2b 1A000000 		.4byte	.LVL243
 6406 0b2f 1C000000 		.4byte	.LFE29
 6407 0b33 0400     		.2byte	0x4
 6408 0b35 F3       		.byte	0xf3
 6409 0b36 01       		.uleb128 0x1
 6410 0b37 51       		.byte	0x51
 6411 0b38 9F       		.byte	0x9f
 6412 0b39 00000000 		.4byte	0
 6413 0b3d 00000000 		.4byte	0
 6414              	.LLST70:
 6415 0b41 00000000 		.4byte	.LVL238
 6416 0b45 0B000000 		.4byte	.LVL239-1
 6417 0b49 0100     		.2byte	0x1
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 176


 6418 0b4b 52       		.byte	0x52
 6419 0b4c 0B000000 		.4byte	.LVL239-1
 6420 0b50 10000000 		.4byte	.LVL240
 6421 0b54 0100     		.2byte	0x1
 6422 0b56 54       		.byte	0x54
 6423 0b57 10000000 		.4byte	.LVL240
 6424 0b5b 1C000000 		.4byte	.LFE29
 6425 0b5f 0400     		.2byte	0x4
 6426 0b61 F3       		.byte	0xf3
 6427 0b62 01       		.uleb128 0x1
 6428 0b63 52       		.byte	0x52
 6429 0b64 9F       		.byte	0x9f
 6430 0b65 00000000 		.4byte	0
 6431 0b69 00000000 		.4byte	0
 6432              	.LLST71:
 6433 0b6d 0C000000 		.4byte	.LVL239
 6434 0b71 19000000 		.4byte	.LVL241-1
 6435 0b75 0100     		.2byte	0x1
 6436 0b77 50       		.byte	0x50
 6437 0b78 00000000 		.4byte	0
 6438 0b7c 00000000 		.4byte	0
 6439              	.LLST72:
 6440 0b80 06000000 		.4byte	.LVL244
 6441 0b84 15000000 		.4byte	.LVL246-1
 6442 0b88 0100     		.2byte	0x1
 6443 0b8a 53       		.byte	0x53
 6444 0b8b 00000000 		.4byte	0
 6445 0b8f 00000000 		.4byte	0
 6446              	.LLST73:
 6447 0b93 00000000 		.4byte	.LVL251
 6448 0b97 13000000 		.4byte	.LVL252-1
 6449 0b9b 0100     		.2byte	0x1
 6450 0b9d 50       		.byte	0x50
 6451 0b9e 13000000 		.4byte	.LVL252-1
 6452 0ba2 16000000 		.4byte	.LVL253
 6453 0ba6 0400     		.2byte	0x4
 6454 0ba8 F3       		.byte	0xf3
 6455 0ba9 01       		.uleb128 0x1
 6456 0baa 50       		.byte	0x50
 6457 0bab 9F       		.byte	0x9f
 6458 0bac 16000000 		.4byte	.LVL253
 6459 0bb0 1D000000 		.4byte	.LVL254-1
 6460 0bb4 0100     		.2byte	0x1
 6461 0bb6 50       		.byte	0x50
 6462 0bb7 1D000000 		.4byte	.LVL254-1
 6463 0bbb 54000000 		.4byte	.LFE11
 6464 0bbf 0400     		.2byte	0x4
 6465 0bc1 F3       		.byte	0xf3
 6466 0bc2 01       		.uleb128 0x1
 6467 0bc3 50       		.byte	0x50
 6468 0bc4 9F       		.byte	0x9f
 6469 0bc5 00000000 		.4byte	0
 6470 0bc9 00000000 		.4byte	0
 6471              		.section	.debug_aranges,"",%progbits
 6472 0000 FC000000 		.4byte	0xfc
 6473 0004 0200     		.2byte	0x2
 6474 0006 00000000 		.4byte	.Ldebug_info0
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 177


 6475 000a 04       		.byte	0x4
 6476 000b 00       		.byte	0
 6477 000c 0000     		.2byte	0
 6478 000e 0000     		.2byte	0
 6479 0010 00000000 		.4byte	.LFB23
 6480 0014 84000000 		.4byte	.LFE23-.LFB23
 6481 0018 00000000 		.4byte	.LFB24
 6482 001c 42000000 		.4byte	.LFE24-.LFB24
 6483 0020 00000000 		.4byte	.LFB22
 6484 0024 26000000 		.4byte	.LFE22-.LFB22
 6485 0028 00000000 		.4byte	.LFB1
 6486 002c 10000000 		.4byte	.LFE1-.LFB1
 6487 0030 00000000 		.4byte	.LFB2
 6488 0034 64000000 		.4byte	.LFE2-.LFB2
 6489 0038 00000000 		.4byte	.LFB3
 6490 003c 38000000 		.4byte	.LFE3-.LFB3
 6491 0040 00000000 		.4byte	.LFB4
 6492 0044 48000000 		.4byte	.LFE4-.LFB4
 6493 0048 00000000 		.4byte	.LFB5
 6494 004c 78000000 		.4byte	.LFE5-.LFB5
 6495 0050 00000000 		.4byte	.LFB6
 6496 0054 38000000 		.4byte	.LFE6-.LFB6
 6497 0058 00000000 		.4byte	.LFB8
 6498 005c EC000000 		.4byte	.LFE8-.LFB8
 6499 0060 00000000 		.4byte	.LFB12
 6500 0064 80000000 		.4byte	.LFE12-.LFB12
 6501 0068 00000000 		.4byte	.LFB13
 6502 006c 78000000 		.4byte	.LFE13-.LFB13
 6503 0070 00000000 		.4byte	.LFB14
 6504 0074 08000000 		.4byte	.LFE14-.LFB14
 6505 0078 00000000 		.4byte	.LFB15
 6506 007c 30000000 		.4byte	.LFE15-.LFB15
 6507 0080 00000000 		.4byte	.LFB16
 6508 0084 14000000 		.4byte	.LFE16-.LFB16
 6509 0088 00000000 		.4byte	.LFB17
 6510 008c 12000000 		.4byte	.LFE17-.LFB17
 6511 0090 00000000 		.4byte	.LFB18
 6512 0094 3C000000 		.4byte	.LFE18-.LFB18
 6513 0098 00000000 		.4byte	.LFB19
 6514 009c 1A000000 		.4byte	.LFE19-.LFB19
 6515 00a0 00000000 		.4byte	.LFB25
 6516 00a4 14000000 		.4byte	.LFE25-.LFB25
 6517 00a8 00000000 		.4byte	.LFB26
 6518 00ac 24000000 		.4byte	.LFE26-.LFB26
 6519 00b0 00000000 		.4byte	.LFB21
 6520 00b4 3A000000 		.4byte	.LFE21-.LFB21
 6521 00b8 00000000 		.4byte	.LFB20
 6522 00bc 38000000 		.4byte	.LFE20-.LFB20
 6523 00c0 00000000 		.4byte	.LFB27
 6524 00c4 D8000000 		.4byte	.LFE27-.LFB27
 6525 00c8 00000000 		.4byte	.LFB28
 6526 00cc 30000000 		.4byte	.LFE28-.LFB28
 6527 00d0 00000000 		.4byte	.LFB29
 6528 00d4 1C000000 		.4byte	.LFE29-.LFB29
 6529 00d8 00000000 		.4byte	.LFB9
 6530 00dc 24000000 		.4byte	.LFE9-.LFB9
 6531 00e0 00000000 		.4byte	.LFB10
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 178


 6532 00e4 28000000 		.4byte	.LFE10-.LFB10
 6533 00e8 00000000 		.4byte	.LFB11
 6534 00ec 54000000 		.4byte	.LFE11-.LFB11
 6535 00f0 00000000 		.4byte	.LFB7
 6536 00f4 24000000 		.4byte	.LFE7-.LFB7
 6537 00f8 00000000 		.4byte	0
 6538 00fc 00000000 		.4byte	0
 6539              		.section	.debug_ranges,"",%progbits
 6540              	.Ldebug_ranges0:
 6541 0000 00000000 		.4byte	.LFB23
 6542 0004 84000000 		.4byte	.LFE23
 6543 0008 00000000 		.4byte	.LFB24
 6544 000c 42000000 		.4byte	.LFE24
 6545 0010 00000000 		.4byte	.LFB22
 6546 0014 26000000 		.4byte	.LFE22
 6547 0018 00000000 		.4byte	.LFB1
 6548 001c 10000000 		.4byte	.LFE1
 6549 0020 00000000 		.4byte	.LFB2
 6550 0024 64000000 		.4byte	.LFE2
 6551 0028 00000000 		.4byte	.LFB3
 6552 002c 38000000 		.4byte	.LFE3
 6553 0030 00000000 		.4byte	.LFB4
 6554 0034 48000000 		.4byte	.LFE4
 6555 0038 00000000 		.4byte	.LFB5
 6556 003c 78000000 		.4byte	.LFE5
 6557 0040 00000000 		.4byte	.LFB6
 6558 0044 38000000 		.4byte	.LFE6
 6559 0048 00000000 		.4byte	.LFB8
 6560 004c EC000000 		.4byte	.LFE8
 6561 0050 00000000 		.4byte	.LFB12
 6562 0054 80000000 		.4byte	.LFE12
 6563 0058 00000000 		.4byte	.LFB13
 6564 005c 78000000 		.4byte	.LFE13
 6565 0060 00000000 		.4byte	.LFB14
 6566 0064 08000000 		.4byte	.LFE14
 6567 0068 00000000 		.4byte	.LFB15
 6568 006c 30000000 		.4byte	.LFE15
 6569 0070 00000000 		.4byte	.LFB16
 6570 0074 14000000 		.4byte	.LFE16
 6571 0078 00000000 		.4byte	.LFB17
 6572 007c 12000000 		.4byte	.LFE17
 6573 0080 00000000 		.4byte	.LFB18
 6574 0084 3C000000 		.4byte	.LFE18
 6575 0088 00000000 		.4byte	.LFB19
 6576 008c 1A000000 		.4byte	.LFE19
 6577 0090 00000000 		.4byte	.LFB25
 6578 0094 14000000 		.4byte	.LFE25
 6579 0098 00000000 		.4byte	.LFB26
 6580 009c 24000000 		.4byte	.LFE26
 6581 00a0 00000000 		.4byte	.LFB21
 6582 00a4 3A000000 		.4byte	.LFE21
 6583 00a8 00000000 		.4byte	.LFB20
 6584 00ac 38000000 		.4byte	.LFE20
 6585 00b0 00000000 		.4byte	.LFB27
 6586 00b4 D8000000 		.4byte	.LFE27
 6587 00b8 00000000 		.4byte	.LFB28
 6588 00bc 30000000 		.4byte	.LFE28
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 179


 6589 00c0 00000000 		.4byte	.LFB29
 6590 00c4 1C000000 		.4byte	.LFE29
 6591 00c8 00000000 		.4byte	.LFB9
 6592 00cc 24000000 		.4byte	.LFE9
 6593 00d0 00000000 		.4byte	.LFB10
 6594 00d4 28000000 		.4byte	.LFE10
 6595 00d8 00000000 		.4byte	.LFB11
 6596 00dc 54000000 		.4byte	.LFE11
 6597 00e0 00000000 		.4byte	.LFB7
 6598 00e4 24000000 		.4byte	.LFE7
 6599 00e8 00000000 		.4byte	0
 6600 00ec 00000000 		.4byte	0
 6601              		.section	.debug_line,"",%progbits
 6602              	.Ldebug_line0:
 6603 0000 3C060000 		.section	.debug_str,"MS",%progbits,1
 6603      0200E901 
 6603      00000201 
 6603      FB0E0D00 
 6603      01010101 
 6604              	.LASF156:
 6605 0000 63617073 		.ascii	"capsense_SsSetClockDividers\000"
 6605      656E7365 
 6605      5F537353 
 6605      6574436C 
 6605      6F636B44 
 6606              	.LASF134:
 6607 001c 73656E73 		.ascii	"sensorElement\000"
 6607      6F72456C 
 6607      656D656E 
 6607      7400
 6608              	.LASF208:
 6609 002a 63617073 		.ascii	"capsense_CSXCalibrateWidget\000"
 6609      656E7365 
 6609      5F435358 
 6609      43616C69 
 6609      62726174 
 6610              	.LASF55:
 6611 0046 63617073 		.ascii	"capsense_RAM_SNS_LIST_STRUCT\000"
 6611      656E7365 
 6611      5F52414D 
 6611      5F534E53 
 6611      5F4C4953 
 6612              	.LASF154:
 6613 0063 63617073 		.ascii	"capsense_SsSetSnsClockDivider\000"
 6613      656E7365 
 6613      5F537353 
 6613      6574536E 
 6613      73436C6F 
 6614              	.LASF129:
 6615 0081 7363616E 		.ascii	"scanStatus\000"
 6615      53746174 
 6615      757300
 6616              	.LASF152:
 6617 008c 63617073 		.ascii	"capsense_SsSetModClkClockDivider\000"
 6617      656E7365 
 6617      5F537353 
 6617      65744D6F 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 180


 6617      64436C6B 
 6618              	.LASF26:
 6619 00ad 63617073 		.ascii	"capsense_SENSE_METHOD_ISX_E\000"
 6619      656E7365 
 6619      5F53454E 
 6619      53455F4D 
 6619      4554484F 
 6620              	.LASF110:
 6621 00c9 63617073 		.ascii	"capsense_BIST_CSD_SH_CAP_E\000"
 6621      656E7365 
 6621      5F424953 
 6621      545F4353 
 6621      445F5348 
 6622              	.LASF70:
 6623 00e4 736E7254 		.ascii	"snrTestWidgetId\000"
 6623      65737457 
 6623      69646765 
 6623      74496400 
 6624              	.LASF127:
 6625 00f4 63617073 		.ascii	"capsense_SetupWidget\000"
 6625      656E7365 
 6625      5F536574 
 6625      75705769 
 6625      64676574 
 6626              	.LASF133:
 6627 0109 63617073 		.ascii	"capsense_ScanExt\000"
 6627      656E7365 
 6627      5F536361 
 6627      6E457874 
 6627      00
 6628              	.LASF8:
 6629 011a 756E7369 		.ascii	"unsigned int\000"
 6629      676E6564 
 6629      20696E74 
 6629      00
 6630              	.LASF60:
 6631 0127 7363616E 		.ascii	"scanCounter\000"
 6631      436F756E 
 6631      74657200 
 6632              	.LASF58:
 6633 0133 6877436C 		.ascii	"hwClock\000"
 6633      6F636B00 
 6634              	.LASF74:
 6635 013b 7363616E 		.ascii	"scanCsdISC\000"
 6635      43736449 
 6635      534300
 6636              	.LASF182:
 6637 0146 696E6974 		.ascii	"initStatus\000"
 6637      53746174 
 6637      757300
 6638              	.LASF212:
 6639 0151 43794861 		.ascii	"CyHalt\000"
 6639      6C7400
 6640              	.LASF138:
 6641 0158 696E7465 		.ascii	"interruptState\000"
 6641      72727570 
 6641      74537461 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 181


 6641      746500
 6642              	.LASF168:
 6643 0167 63617073 		.ascii	"capsense_DischargeExtCapacitors\000"
 6643      656E7365 
 6643      5F446973 
 6643      63686172 
 6643      67654578 
 6644              	.LASF162:
 6645 0187 63617073 		.ascii	"capsense_SsCSDCalcPrsSize\000"
 6645      656E7365 
 6645      5F537343 
 6645      53444361 
 6645      6C635072 
 6646              	.LASF117:
 6647 01a1 63617073 		.ascii	"capsense_SsCalcLfsrSize\000"
 6647      656E7365 
 6647      5F537343 
 6647      616C634C 
 6647      66737253 
 6648              	.LASF171:
 6649 01b9 64725265 		.ascii	"drReg\000"
 6649      6700
 6650              	.LASF200:
 6651 01bf 63617073 		.ascii	"capsense_CSXSetupWidgetExt\000"
 6651      656E7365 
 6651      5F435358 
 6651      53657475 
 6651      70576964 
 6652              	.LASF216:
 6653 01da 63617073 		.ascii	"capsense_CSXInitialize\000"
 6653      656E7365 
 6653      5F435358 
 6653      496E6974 
 6653      69616C69 
 6654              	.LASF24:
 6655 01f1 63617073 		.ascii	"capsense_SENSE_METHOD_CSX_E\000"
 6655      656E7365 
 6655      5F53454E 
 6655      53455F4D 
 6655      4554484F 
 6656              	.LASF207:
 6657 020d 63617073 		.ascii	"capsense_ISR_StartEx\000"
 6657      656E7365 
 6657      5F495352 
 6657      5F537461 
 6657      72744578 
 6658              	.LASF121:
 6659 0222 6C667372 		.ascii	"lfsrRange\000"
 6659      52616E67 
 6659      6500
 6660              	.LASF174:
 6661 022c 6D6F6465 		.ascii	"mode\000"
 6661      00
 6662              	.LASF120:
 6663 0231 6C667372 		.ascii	"lfsrScale\000"
 6663      5363616C 
 6663      6500
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 182


 6664              	.LASF170:
 6665 023b 6873696F 		.ascii	"hsiomReg\000"
 6665      6D526567 
 6665      00
 6666              	.LASF176:
 6667 0244 72656750 		.ascii	"regPtr\000"
 6667      747200
 6668              	.LASF101:
 6669 024b 69697246 		.ascii	"iirFilterCoeff\000"
 6669      696C7465 
 6669      72436F65 
 6669      666600
 6670              	.LASF132:
 6671 025a 73656E73 		.ascii	"sensorId\000"
 6671      6F724964 
 6671      00
 6672              	.LASF124:
 6673 0263 70747257 		.ascii	"ptrWdgt\000"
 6673      64677400 
 6674              	.LASF10:
 6675 026b 75696E74 		.ascii	"uint32_t\000"
 6675      33325F74 
 6675      00
 6676              	.LASF140:
 6677 0274 63617073 		.ascii	"capsense_SetPinState\000"
 6677      656E7365 
 6677      5F536574 
 6677      50696E53 
 6677      74617465 
 6678              	.LASF23:
 6679 0289 63617073 		.ascii	"capsense_SENSE_METHOD_CSD_E\000"
 6679      656E7365 
 6679      5F53454E 
 6679      53455F4D 
 6679      4554484F 
 6680              	.LASF190:
 6681 02a5 63617073 		.ascii	"capsense_currentSenseMethod\000"
 6681      656E7365 
 6681      5F637572 
 6681      72656E74 
 6681      53656E73 
 6682              	.LASF142:
 6683 02c1 6C6F6F70 		.ascii	"loopIndex\000"
 6683      496E6465 
 6683      7800
 6684              	.LASF14:
 6685 02cb 666C6F61 		.ascii	"float\000"
 6685      7400
 6686              	.LASF86:
 6687 02d1 73686966 		.ascii	"shift\000"
 6687      7400
 6688              	.LASF217:
 6689 02d7 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 6689      43313120 
 6689      352E342E 
 6689      31203230 
 6689      31363036 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 183


 6690 030a 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 6690      20726576 
 6690      6973696F 
 6690      6E203233 
 6690      37373135 
 6691 033d 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 6691      67202D66 
 6691      66756E63 
 6691      74696F6E 
 6691      2D736563 
 6692              	.LASF102:
 6693 0369 63617073 		.ascii	"capsense_FLASH_WD_STRUCT\000"
 6693      656E7365 
 6693      5F464C41 
 6693      53485F57 
 6693      445F5354 
 6694              	.LASF201:
 6695 0382 63617073 		.ascii	"capsense_CSDSetupWidgetExt\000"
 6695      656E7365 
 6695      5F435344 
 6695      53657475 
 6695      70576964 
 6696              	.LASF202:
 6697 039d 63617073 		.ascii	"capsense_CSXScanExt\000"
 6697      656E7365 
 6697      5F435358 
 6697      5363616E 
 6697      45787400 
 6698              	.LASF195:
 6699 03b1 63617073 		.ascii	"capsense_SsCSXGetTxClkDivider\000"
 6699      656E7365 
 6699      5F537343 
 6699      53584765 
 6699      74547843 
 6700              	.LASF147:
 6701 03cf 736E7349 		.ascii	"snsIoPtr\000"
 6701      6F507472 
 6701      00
 6702              	.LASF69:
 6703 03d8 736E734C 		.ascii	"snsList\000"
 6703      69737400 
 6704              	.LASF7:
 6705 03e0 6C6F6E67 		.ascii	"long long unsigned int\000"
 6705      206C6F6E 
 6705      6720756E 
 6705      7369676E 
 6705      65642069 
 6706              	.LASF71:
 6707 03f7 736E7254 		.ascii	"snrTestSensorId\000"
 6707      65737453 
 6707      656E736F 
 6707      72496400 
 6708              	.LASF209:
 6709 0407 63617073 		.ascii	"capsense_CSDCalibrateWidget\000"
 6709      656E7365 
 6709      5F435344 
 6709      43616C69 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 184


 6709      62726174 
 6710              	.LASF184:
 6711 0423 63617073 		.ascii	"capsense_dsFlash\000"
 6711      656E7365 
 6711      5F647346 
 6711      6C617368 
 6711      00
 6712              	.LASF95:
 6713 0434 77646774 		.ascii	"wdgtType\000"
 6713      54797065 
 6713      00
 6714              	.LASF119:
 6715 043d 6C667372 		.ascii	"lfsrSize\000"
 6715      53697A65 
 6715      00
 6716              	.LASF172:
 6717 0446 70635265 		.ascii	"pcReg\000"
 6717      6700
 6718              	.LASF177:
 6719 044c 76616C75 		.ascii	"value\000"
 6719      6500
 6720              	.LASF144:
 6721 0452 6E657750 		.ascii	"newPinHsiomVal\000"
 6721      696E4873 
 6721      696F6D56 
 6721      616C00
 6722              	.LASF167:
 6723 0461 63617073 		.ascii	"capsense_SsInitializeSourceSenseClk\000"
 6723      656E7365 
 6723      5F537349 
 6723      6E697469 
 6723      616C697A 
 6724              	.LASF192:
 6725 0485 63617073 		.ascii	"capsense_curFlashWdgtPtr\000"
 6725      656E7365 
 6725      5F637572 
 6725      466C6173 
 6725      68576467 
 6726              	.LASF186:
 6727 049e 63617073 		.ascii	"capsense_widgetIndex\000"
 6727      656E7365 
 6727      5F776964 
 6727      67657449 
 6727      6E646578 
 6728              	.LASF185:
 6729 04b3 63617073 		.ascii	"capsense_ioList\000"
 6729      656E7365 
 6729      5F696F4C 
 6729      69737400 
 6730              	.LASF66:
 6731 04c3 6D6F6443 		.ascii	"modCsdClk\000"
 6731      7364436C 
 6731      6B00
 6732              	.LASF80:
 6733 04cd 64725074 		.ascii	"drPtr\000"
 6733      7200
 6734              	.LASF153:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 185


 6735 04d3 6D6F6443 		.ascii	"modClk\000"
 6735      6C6B00
 6736              	.LASF143:
 6737 04da 6E657750 		.ascii	"newPinPcVal\000"
 6737      696E5063 
 6737      56616C00 
 6738              	.LASF160:
 6739 04e6 63617073 		.ascii	"capsense_SsCSDGetColSnsClkDivider\000"
 6739      656E7365 
 6739      5F537343 
 6739      53444765 
 6739      74436F6C 
 6740              	.LASF32:
 6741 0508 68797374 		.ascii	"hysteresis\000"
 6741      65726573 
 6741      697300
 6742              	.LASF169:
 6743 0513 64697363 		.ascii	"dischargeTime\000"
 6743      68617267 
 6743      6554696D 
 6743      6500
 6744              	.LASF136:
 6745 0521 656C7464 		.ascii	"eltdNum\000"
 6745      4E756D00 
 6746              	.LASF34:
 6747 0529 6C6F7742 		.ascii	"lowBslnRst\000"
 6747      736C6E52 
 6747      737400
 6748              	.LASF181:
 6749 0534 63617073 		.ascii	"capsense_SsInitialize\000"
 6749      656E7365 
 6749      5F537349 
 6749      6E697469 
 6749      616C697A 
 6750              	.LASF36:
 6751 054a 69646163 		.ascii	"idacGainIndex\000"
 6751      4761696E 
 6751      496E6465 
 6751      7800
 6752              	.LASF199:
 6753 0558 63617073 		.ascii	"capsense_CSDScan\000"
 6753      656E7365 
 6753      5F435344 
 6753      5363616E 
 6753      00
 6754              	.LASF44:
 6755 0569 62746E30 		.ascii	"btn0\000"
 6755      00
 6756              	.LASF45:
 6757 056e 62746E31 		.ascii	"btn1\000"
 6757      00
 6758              	.LASF46:
 6759 0573 62746E32 		.ascii	"btn2\000"
 6759      00
 6760              	.LASF94:
 6761 0578 746F7461 		.ascii	"totalNumSns\000"
 6761      6C4E756D 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 186


 6761      536E7300 
 6762              	.LASF109:
 6763 0584 63617073 		.ascii	"capsense_BIST_CSX_SNS_CAP_E\000"
 6763      656E7365 
 6763      5F424953 
 6763      545F4353 
 6763      585F534E 
 6764              	.LASF22:
 6765 05a0 63617073 		.ascii	"capsense_UNDEFINED_E\000"
 6765      656E7365 
 6765      5F554E44 
 6765      4546494E 
 6765      45445F45 
 6766              	.LASF21:
 6767 05b5 63617073 		.ascii	"capsense_LOW_BSLN_RST_TYPE\000"
 6767      656E7365 
 6767      5F4C4F57 
 6767      5F42534C 
 6767      4E5F5253 
 6768              	.LASF27:
 6769 05d0 63617073 		.ascii	"capsense_SENSE_METHOD_ENUM\000"
 6769      656E7365 
 6769      5F53454E 
 6769      53455F4D 
 6769      4554484F 
 6770              	.LASF30:
 6771 05eb 6E6F6973 		.ascii	"noiseTh\000"
 6771      65546800 
 6772              	.LASF16:
 6773 05f3 63686172 		.ascii	"char\000"
 6773      00
 6774              	.LASF205:
 6775 05f8 43794578 		.ascii	"CyExitCriticalSection\000"
 6775      69744372 
 6775      69746963 
 6775      616C5365 
 6775      6374696F 
 6776              	.LASF145:
 6777 060e 746D7050 		.ascii	"tmpPcDrRegValue\000"
 6777      63447252 
 6777      65675661 
 6777      6C756500 
 6778              	.LASF84:
 6779 061e 6873696F 		.ascii	"hsiomShift\000"
 6779      6D536869 
 6779      667400
 6780              	.LASF189:
 6781 0629 63617073 		.ascii	"capsense_curRamSnsPtr\000"
 6781      656E7365 
 6781      5F637572 
 6781      52616D53 
 6781      6E735074 
 6782              	.LASF12:
 6783 063f 75696E74 		.ascii	"uint16\000"
 6783      313600
 6784              	.LASF116:
 6785 0646 636F6E76 		.ascii	"conversionsNum\000"
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 187


 6785      65727369 
 6785      6F6E734E 
 6785      756D00
 6786              	.LASF28:
 6787 0655 7265736F 		.ascii	"resolution\000"
 6787      6C757469 
 6787      6F6E00
 6788              	.LASF61:
 6789 0660 73746174 		.ascii	"status\000"
 6789      757300
 6790              	.LASF165:
 6791 0667 63617073 		.ascii	"capsense_SsSetWidgetTxClkSrc\000"
 6791      656E7365 
 6791      5F537353 
 6791      65745769 
 6791      64676574 
 6792              	.LASF53:
 6793 0684 69646163 		.ascii	"idacComp\000"
 6793      436F6D70 
 6793      00
 6794              	.LASF79:
 6795 068d 70635074 		.ascii	"pcPtr\000"
 6795      7200
 6796              	.LASF6:
 6797 0693 6C6F6E67 		.ascii	"long long int\000"
 6797      206C6F6E 
 6797      6720696E 
 6797      7400
 6798              	.LASF41:
 6799 06a1 63617073 		.ascii	"capsense_RAM_WD_BUTTON_STRUCT\000"
 6799      656E7365 
 6799      5F52414D 
 6799      5F57445F 
 6799      42555454 
 6800              	.LASF148:
 6801 06bf 63617073 		.ascii	"capsense_SsPostAllWidgetsScan\000"
 6801      656E7365 
 6801      5F537350 
 6801      6F737441 
 6801      6C6C5769 
 6802              	.LASF33:
 6803 06dd 6F6E4465 		.ascii	"onDebounce\000"
 6803      626F756E 
 6803      636500
 6804              	.LASF118:
 6805 06e8 63617073 		.ascii	"capsense_SsCalcLfsrScale\000"
 6805      656E7365 
 6805      5F537343 
 6805      616C634C 
 6805      66737253 
 6806              	.LASF214:
 6807 0701 63617073 		.ascii	"capsense_CSXElectrodeCheck\000"
 6807      656E7365 
 6807      5F435358 
 6807      456C6563 
 6807      74726F64 
 6808              	.LASF183:
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 188


 6809 071c 63617073 		.ascii	"capsense_dsRam\000"
 6809      656E7365 
 6809      5F647352 
 6809      616D00
 6810              	.LASF130:
 6811 072b 63617073 		.ascii	"capsense_ScanAllWidgets\000"
 6811      656E7365 
 6811      5F536361 
 6811      6E416C6C 
 6811      57696467 
 6812              	.LASF158:
 6813 0743 63616C69 		.ascii	"calibrateStatus\000"
 6813      62726174 
 6813      65537461 
 6813      74757300 
 6814              	.LASF68:
 6815 0753 77646774 		.ascii	"wdgtList\000"
 6815      4C697374 
 6815      00
 6816              	.LASF220:
 6817 075c 63617073 		.ascii	"capsense_IsBusy\000"
 6817      656E7365 
 6817      5F497342 
 6817      75737900 
 6818              	.LASF141:
 6819 076c 63617073 		.ascii	"capsense_SsSetAllIOsState\000"
 6819      656E7365 
 6819      5F537353 
 6819      6574416C 
 6819      6C494F73 
 6820              	.LASF107:
 6821 0786 63617073 		.ascii	"capsense_SCAN_CSX_E\000"
 6821      656E7365 
 6821      5F534341 
 6821      4E5F4353 
 6821      585F4500 
 6822              	.LASF73:
 6823 079a 736E7254 		.ascii	"snrTestRawCount\000"
 6823      65737452 
 6823      6177436F 
 6823      756E7400 
 6824              	.LASF31:
 6825 07aa 6E4E6F69 		.ascii	"nNoiseTh\000"
 6825      73655468 
 6825      00
 6826              	.LASF65:
 6827 07b3 63736430 		.ascii	"csd0Config\000"
 6827      436F6E66 
 6827      696700
 6828              	.LASF19:
 6829 07be 63796973 		.ascii	"cyisraddress\000"
 6829      72616464 
 6829      72657373 
 6829      00
 6830              	.LASF188:
 6831 07cb 63617073 		.ascii	"capsense_requestScanAllWidget\000"
 6831      656E7365 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 189


 6831      5F726571 
 6831      75657374 
 6831      5363616E 
 6832              	.LASF159:
 6833 07e9 63617073 		.ascii	"capsense_CalibrateAllWidgets\000"
 6833      656E7365 
 6833      5F43616C 
 6833      69627261 
 6833      7465416C 
 6834              	.LASF78:
 6835 0806 6873696F 		.ascii	"hsiomPtr\000"
 6835      6D507472 
 6835      00
 6836              	.LASF13:
 6837 080f 75696E74 		.ascii	"uint32\000"
 6837      333200
 6838              	.LASF91:
 6839 0816 70747232 		.ascii	"ptr2FltrHistory\000"
 6839      466C7472 
 6839      48697374 
 6839      6F727900 
 6840              	.LASF113:
 6841 0826 6761696E 		.ascii	"gainValue\000"
 6841      56616C75 
 6841      6500
 6842              	.LASF83:
 6843 0830 6D61736B 		.ascii	"mask\000"
 6843      00
 6844              	.LASF211:
 6845 0835 43794465 		.ascii	"CyDelayUs\000"
 6845      6C617955 
 6845      7300
 6846              	.LASF187:
 6847 083f 63617073 		.ascii	"capsense_sensorIndex\000"
 6847      656E7365 
 6847      5F73656E 
 6847      736F7249 
 6847      6E646578 
 6848              	.LASF48:
 6849 0854 63617073 		.ascii	"capsense_RAM_WD_LIST_STRUCT\000"
 6849      656E7365 
 6849      5F52414D 
 6849      5F57445F 
 6849      4C495354 
 6850              	.LASF215:
 6851 0870 63617073 		.ascii	"capsense_SsCSDInitialize\000"
 6851      656E7365 
 6851      5F537343 
 6851      5344496E 
 6851      69746961 
 6852              	.LASF219:
 6853 0889 433A5C61 		.ascii	"C:\\aixt\\aixt\\ports\\Cypress\\CY8CKIT-145-40XX\\e"
 6853      6978745C 
 6853      61697874 
 6853      5C706F72 
 6853      74735C43 
 6854 08b6 78616D70 		.ascii	"xamples\\CY8CKIT-145-40XX-blinking.cydsn\000"
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 190


 6854      6C65735C 
 6854      43593843 
 6854      4B49542D 
 6854      3134352D 
 6855              	.LASF20:
 6856 08de 63617073 		.ascii	"capsense_THRESHOLD_TYPE\000"
 6856      656E7365 
 6856      5F544852 
 6856      4553484F 
 6856      4C445F54 
 6857              	.LASF106:
 6858 08f6 63617073 		.ascii	"capsense_SCAN_CSD_E\000"
 6858      656E7365 
 6858      5F534341 
 6858      4E5F4353 
 6858      445F4500 
 6859              	.LASF114:
 6860 090a 63617073 		.ascii	"capsense_IDAC_GAIN_TABLE_STRUCT\000"
 6860      656E7365 
 6860      5F494441 
 6860      435F4741 
 6860      494E5F54 
 6861              	.LASF123:
 6862 092a 77646774 		.ascii	"wdgtIndex\000"
 6862      496E6465 
 6862      7800
 6863              	.LASF43:
 6864 0934 63617073 		.ascii	"capsense_RAM_WD_SLIDER_STRUCT\000"
 6864      656E7365 
 6864      5F52414D 
 6864      5F57445F 
 6864      534C4944 
 6865              	.LASF175:
 6866 0952 63617073 		.ascii	"capsense_WriteBitsSafe\000"
 6866      656E7365 
 6866      5F577269 
 6866      74654269 
 6866      74735361 
 6867              	.LASF111:
 6868 0969 63617073 		.ascii	"capsense_OPERATION_MODE_ENUM\000"
 6868      656E7365 
 6868      5F4F5045 
 6868      52415449 
 6868      4F4E5F4D 
 6869              	.LASF194:
 6870 0986 63617073 		.ascii	"capsense_idacGainTable\000"
 6870      656E7365 
 6870      5F696461 
 6870      63476169 
 6870      6E546162 
 6871              	.LASF105:
 6872 099d 6C6F6E67 		.ascii	"long double\000"
 6872      20646F75 
 6872      626C6500 
 6873              	.LASF75:
 6874 09a9 7363616E 		.ascii	"scanCsxISC\000"
 6874      43737849 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 191


 6874      534300
 6875              	.LASF173:
 6876 09b4 63617073 		.ascii	"capsense_SetInactiveElectrodeState\000"
 6876      656E7365 
 6876      5F536574 
 6876      496E6163 
 6876      74697665 
 6877              	.LASF18:
 6878 09d7 72656733 		.ascii	"reg32\000"
 6878      3200
 6879              	.LASF72:
 6880 09dd 736E7254 		.ascii	"snrTestScanCounter\000"
 6880      65737453 
 6880      63616E43 
 6880      6F756E74 
 6880      657200
 6881              	.LASF56:
 6882 09f0 636F6E66 		.ascii	"configId\000"
 6882      69674964 
 6882      00
 6883              	.LASF90:
 6884 09f9 70747232 		.ascii	"ptr2SnsRam\000"
 6884      536E7352 
 6884      616D00
 6885              	.LASF64:
 6886 0a04 736E7353 		.ascii	"snsStatus\000"
 6886      74617475 
 6886      7300
 6887              	.LASF149:
 6888 0a0e 706F7374 		.ascii	"postScanStatus\000"
 6888      5363616E 
 6888      53746174 
 6888      757300
 6889              	.LASF38:
 6890 0a1d 736E7343 		.ascii	"snsClkSource\000"
 6890      6C6B536F 
 6890      75726365 
 6890      00
 6891              	.LASF99:
 6892 0a2a 78526573 		.ascii	"xResolution\000"
 6892      6F6C7574 
 6892      696F6E00 
 6893              	.LASF2:
 6894 0a36 73686F72 		.ascii	"short int\000"
 6894      7420696E 
 6894      7400
 6895              	.LASF180:
 6896 0a40 63617073 		.ascii	"capsense_SsSwitchSensingMode\000"
 6896      656E7365 
 6896      5F537353 
 6896      77697463 
 6896      6853656E 
 6897              	.LASF218:
 6898 0a5d 47656E65 		.ascii	"Generated_Source\\PSoC4\\capsense_Sensing.c\000"
 6898      72617465 
 6898      645F536F 
 6898      75726365 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 192


 6898      5C50536F 
 6899              	.LASF131:
 6900 0a87 63617073 		.ascii	"capsense_SetupWidgetExt\000"
 6900      656E7365 
 6900      5F536574 
 6900      75705769 
 6900      64676574 
 6901              	.LASF4:
 6902 0a9f 6C6F6E67 		.ascii	"long int\000"
 6902      20696E74 
 6902      00
 6903              	.LASF213:
 6904 0aa8 63617073 		.ascii	"capsense_SsCSDElectrodeCheck\000"
 6904      656E7365 
 6904      5F537343 
 6904      5344456C 
 6904      65637472 
 6905              	.LASF62:
 6906 0ac5 77646774 		.ascii	"wdgtEnable\000"
 6906      456E6162 
 6906      6C6500
 6907              	.LASF47:
 6908 0ad0 6C696E65 		.ascii	"linearslider\000"
 6908      6172736C 
 6908      69646572 
 6908      00
 6909              	.LASF51:
 6910 0add 64696666 		.ascii	"diff\000"
 6910      00
 6911              	.LASF59:
 6912 0ae2 74756E65 		.ascii	"tunerCmd\000"
 6912      72436D64 
 6912      00
 6913              	.LASF81:
 6914 0aeb 70735074 		.ascii	"psPtr\000"
 6914      7200
 6915              	.LASF178:
 6916 0af1 63617073 		.ascii	"capsense_SsCSDDisableMode\000"
 6916      656E7365 
 6916      5F537343 
 6916      53444469 
 6916      7361626C 
 6917              	.LASF54:
 6918 0b0b 63617073 		.ascii	"capsense_RAM_SNS_STRUCT\000"
 6918      656E7365 
 6918      5F52414D 
 6918      5F534E53 
 6918      5F535452 
 6919              	.LASF112:
 6920 0b23 6761696E 		.ascii	"gainReg\000"
 6920      52656700 
 6921              	.LASF97:
 6922 0b2b 6E756D43 		.ascii	"numCols\000"
 6922      6F6C7300 
 6923              	.LASF157:
 6924 0b33 63617073 		.ascii	"capsense_CalibrateWidget\000"
 6924      656E7365 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 193


 6924      5F43616C 
 6924      69627261 
 6924      74655769 
 6925              	.LASF63:
 6926 0b4c 77646774 		.ascii	"wdgtStatus\000"
 6926      53746174 
 6926      757300
 6927              	.LASF198:
 6928 0b57 63617073 		.ascii	"capsense_CSXScan\000"
 6928      656E7365 
 6928      5F435358 
 6928      5363616E 
 6928      00
 6929              	.LASF163:
 6930 0b68 70727353 		.ascii	"prsSize\000"
 6930      697A6500 
 6931              	.LASF39:
 6932 0b70 73697A65 		.ascii	"sizetype\000"
 6932      74797065 
 6932      00
 6933              	.LASF85:
 6934 0b79 64725368 		.ascii	"drShift\000"
 6934      69667400 
 6935              	.LASF5:
 6936 0b81 6C6F6E67 		.ascii	"long unsigned int\000"
 6936      20756E73 
 6936      69676E65 
 6936      6420696E 
 6936      7400
 6937              	.LASF161:
 6938 0b93 72657456 		.ascii	"retVal\000"
 6938      616C00
 6939              	.LASF151:
 6940 0b9a 61646472 		.ascii	"address\000"
 6940      65737300 
 6941              	.LASF35:
 6942 0ba2 69646163 		.ascii	"idacMod\000"
 6942      4D6F6400 
 6943              	.LASF92:
 6944 0baa 70747232 		.ascii	"ptr2DebounceArr\000"
 6944      4465626F 
 6944      756E6365 
 6944      41727200 
 6945              	.LASF210:
 6946 0bba 63617073 		.ascii	"capsense_SsCSDGetNumberOfConversions\000"
 6946      656E7365 
 6946      5F537343 
 6946      53444765 
 6946      744E756D 
 6947              	.LASF179:
 6948 0bdf 63617073 		.ascii	"capsense_SsDisableCSXMode\000"
 6948      656E7365 
 6948      5F537344 
 6948      69736162 
 6948      6C654353 
 6949              	.LASF100:
 6950 0bf9 7843656E 		.ascii	"xCentroidMultiplier\000"
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 194


 6950      74726F69 
 6950      644D756C 
 6950      7469706C 
 6950      69657200 
 6951              	.LASF29:
 6952 0c0d 66696E67 		.ascii	"fingerTh\000"
 6952      65725468 
 6952      00
 6953              	.LASF50:
 6954 0c16 62736C6E 		.ascii	"bslnExt\000"
 6954      45787400 
 6955              	.LASF17:
 6956 0c1e 63797374 		.ascii	"cystatus\000"
 6956      61747573 
 6956      00
 6957              	.LASF1:
 6958 0c27 756E7369 		.ascii	"unsigned char\000"
 6958      676E6564 
 6958      20636861 
 6958      7200
 6959              	.LASF9:
 6960 0c35 5F5F7569 		.ascii	"__uint32_t\000"
 6960      6E743332 
 6960      5F7400
 6961              	.LASF146:
 6962 0c40 746D7048 		.ascii	"tmpHsiomRegValue\000"
 6962      73696F6D 
 6962      52656756 
 6962      616C7565 
 6962      00
 6963              	.LASF87:
 6964 0c51 63617073 		.ascii	"capsense_FLASH_IO_STRUCT\000"
 6964      656E7365 
 6964      5F464C41 
 6964      53485F49 
 6964      4F5F5354 
 6965              	.LASF93:
 6966 0c6a 73746174 		.ascii	"staticConfig\000"
 6966      6963436F 
 6966      6E666967 
 6966      00
 6967              	.LASF96:
 6968 0c77 73656E73 		.ascii	"senseMethod\000"
 6968      654D6574 
 6968      686F6400 
 6969              	.LASF67:
 6970 0c83 6D6F6443 		.ascii	"modCsxClk\000"
 6970      7378436C 
 6970      6B00
 6971              	.LASF139:
 6972 0c8d 696F5074 		.ascii	"ioPtr\000"
 6972      7200
 6973              	.LASF76:
 6974 0c93 7363616E 		.ascii	"scanCurrentISC\000"
 6974      43757272 
 6974      656E7449 
 6974      534300
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 195


 6975              	.LASF108:
 6976 0ca2 63617073 		.ascii	"capsense_BIST_CSD_SNS_CAP_E\000"
 6976      656E7365 
 6976      5F424953 
 6976      545F4353 
 6976      445F534E 
 6977              	.LASF89:
 6978 0cbe 70747232 		.ascii	"ptr2WdgtRam\000"
 6978      57646774 
 6978      52616D00 
 6979              	.LASF77:
 6980 0cca 63617073 		.ascii	"capsense_RAM_STRUCT\000"
 6980      656E7365 
 6980      5F52414D 
 6980      5F535452 
 6980      55435400 
 6981              	.LASF197:
 6982 0cde 63617073 		.ascii	"capsense_CSDSetupWidget\000"
 6982      656E7365 
 6982      5F435344 
 6982      53657475 
 6982      70576964 
 6983              	.LASF196:
 6984 0cf6 63617073 		.ascii	"capsense_CSXSetupWidget\000"
 6984      656E7365 
 6984      5F435358 
 6984      53657475 
 6984      70576964 
 6985              	.LASF98:
 6986 0d0e 6E756D52 		.ascii	"numRows\000"
 6986      6F777300 
 6987              	.LASF135:
 6988 0d16 73746174 		.ascii	"state\000"
 6988      6500
 6989              	.LASF137:
 6990 0d1c 656C7464 		.ascii	"eltdIndex\000"
 6990      496E6465 
 6990      7800
 6991              	.LASF166:
 6992 0d26 63617073 		.ascii	"capsense_SsSetWidgetSenseClkSrc\000"
 6992      656E7365 
 6992      5F537353 
 6992      65745769 
 6992      64676574 
 6993              	.LASF82:
 6994 0d46 6873696F 		.ascii	"hsiomMask\000"
 6994      6D4D6173 
 6994      6B00
 6995              	.LASF37:
 6996 0d50 736E7343 		.ascii	"snsClk\000"
 6996      6C6B00
 6997              	.LASF25:
 6998 0d57 63617073 		.ascii	"capsense_SENSE_METHOD_BIST_E\000"
 6998      656E7365 
 6998      5F53454E 
 6998      53455F4D 
 6998      4554484F 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 196


 6999              	.LASF204:
 7000 0d74 4379456E 		.ascii	"CyEnterCriticalSection\000"
 7000      74657243 
 7000      72697469 
 7000      63616C53 
 7000      65637469 
 7001              	.LASF0:
 7002 0d8b 7369676E 		.ascii	"signed char\000"
 7002      65642063 
 7002      68617200 
 7003              	.LASF128:
 7004 0d97 63617073 		.ascii	"capsense_Scan\000"
 7004      656E7365 
 7004      5F536361 
 7004      6E00
 7005              	.LASF49:
 7006 0da5 62736C6E 		.ascii	"bsln\000"
 7006      00
 7007              	.LASF3:
 7008 0daa 73686F72 		.ascii	"short unsigned int\000"
 7008      7420756E 
 7008      7369676E 
 7008      65642069 
 7008      6E7400
 7009              	.LASF193:
 7010 0dbd 63617073 		.ascii	"capsense_curSnsIOPtr\000"
 7010      656E7365 
 7010      5F637572 
 7010      536E7349 
 7010      4F507472 
 7011              	.LASF88:
 7012 0dd2 70747232 		.ascii	"ptr2SnsFlash\000"
 7012      536E7346 
 7012      6C617368 
 7012      00
 7013              	.LASF122:
 7014 0ddf 6C667372 		.ascii	"lfsrDither\000"
 7014      44697468 
 7014      657200
 7015              	.LASF155:
 7016 0dea 6E657752 		.ascii	"newRegValue\000"
 7016      65675661 
 7016      6C756500 
 7017              	.LASF203:
 7018 0df6 63617073 		.ascii	"capsense_CSDScanExt\000"
 7018      656E7365 
 7018      5F435344 
 7018      5363616E 
 7018      45787400 
 7019              	.LASF11:
 7020 0e0a 75696E74 		.ascii	"uint8\000"
 7020      3800
 7021              	.LASF15:
 7022 0e10 646F7562 		.ascii	"double\000"
 7022      6C6500
 7023              	.LASF52:
 7024 0e17 6E656742 		.ascii	"negBslnRstCnt\000"
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 197


 7024      736C6E52 
 7024      7374436E 
 7024      7400
 7025              	.LASF104:
 7026 0e25 63617073 		.ascii	"capsense_FLASH_STRUCT\000"
 7026      656E7365 
 7026      5F464C41 
 7026      53485F53 
 7026      54525543 
 7027              	.LASF150:
 7028 0e3b 63617073 		.ascii	"capsense_SsIsrInitialize\000"
 7028      656E7365 
 7028      5F537349 
 7028      7372496E 
 7028      69746961 
 7029              	.LASF115:
 7030 0e54 736E7343 		.ascii	"snsClkDivider\000"
 7030      6C6B4469 
 7030      76696465 
 7030      7200
 7031              	.LASF206:
 7032 0e62 63617073 		.ascii	"capsense_CSDConnectSns\000"
 7032      656E7365 
 7032      5F435344 
 7032      436F6E6E 
 7032      65637453 
 7033              	.LASF164:
 7034 0e79 6D6F6443 		.ascii	"modClkDivider\000"
 7034      6C6B4469 
 7034      76696465 
 7034      7200
 7035              	.LASF57:
 7036 0e87 64657669 		.ascii	"deviceId\000"
 7036      63654964 
 7036      00
 7037              	.LASF126:
 7038 0e90 77696467 		.ascii	"widgetStatus\000"
 7038      65745374 
 7038      61747573 
 7038      00
 7039              	.LASF125:
 7040 0e9d 77696467 		.ascii	"widgetId\000"
 7040      65744964 
 7040      00
 7041              	.LASF40:
 7042 0ea6 63617073 		.ascii	"capsense_RAM_WD_BASE_STRUCT\000"
 7042      656E7365 
 7042      5F52414D 
 7042      5F57445F 
 7042      42415345 
 7043              	.LASF42:
 7044 0ec2 706F7369 		.ascii	"position\000"
 7044      74696F6E 
 7044      00
 7045              	.LASF191:
 7046 0ecb 63617073 		.ascii	"capsense_scanFreqIndex\000"
 7046      656E7365 
ARM GAS  C:\Users\ASUS\AppData\Local\Temp\ccx19JRb.s 			page 198


 7046      5F736361 
 7046      6E467265 
 7046      71496E64 
 7047              	.LASF103:
 7048 0ee2 77646774 		.ascii	"wdgtArray\000"
 7048      41727261 
 7048      7900
 7049              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
