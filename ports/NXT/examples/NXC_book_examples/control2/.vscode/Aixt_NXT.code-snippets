{
	// time module
	"snippet.aixt.time.sleep": {
		"prefix": "tim",
		"body": "time.${1|sleep,sleep_ms|}(${2:10})",
		"description": "Time functions"
	},
	// motor module
	"snippet.aixt.motor.write": {
		"prefix": "wr",
		"body": "motor.write(motor.${1|a,b,c,ab,ac,bc,abc|}, ${2:75})",
		"description": "Motor move forward"
	},
	"snippet.aixt.motor.write_time": {
		"prefix": "wrt",
		"body": [ 
			"motor.write(motor.${1|a,b,c,ab,ac,bc,abc|}, ${2:75})",
			"time.sleep_ms(${3:500})",
		],
		"description": "Motor move forward for a specific time (milliseconds)"
	},
	"snippet.aixt.motor.off": {
		"prefix": "off",
		"body": "motor.off(motor.${1|a,b,c,ab,ac,bc,abc|})",
		"description": "Stop motor"
	},
	"snippet.aixt.motor.off_time": {
		"prefix": "oft",
		"body": [ 
			"motor.off(motor.${1|a,b,c,ab,ac,bc,abc|})",
			"sleep_ms(${3:500})",
		],
		"description": "Stop motors for a specific time (milliseconds)"
	},
	// sensor module
	"snippet.aixt.sensor.set": {
		"prefix": "st",
		"body": "sensor.setup(sensor.${1|s1,s2,s3,s4|}, sensor.${2|touch,light,sound,lowspeed,ultrasonic,e_meter,temperature,color_full,color_red,color_green,color_blue,color_none|})",
		"description": "Set sensor type"
	},
	"snippet.aixt.sensor.as_type": {
		"prefix": "ast",
		"body": "sensor.as_${1|touch,light,sound,lowspeed,ultrasonic,e_meter,temperature,color_full,color_red,color_green,color_blue,color_none|}(sensor.${2|s1,s2,s3,s4|})",
		"description": "Set sensor type functions"
	},
	"snippet.aixt.sensor.read": {
		"prefix": "rd",
		"body": "sensor.read(sensor.${1|s1,s2,s3,s4|})",
		"description": "Read sensor"
	},	
	// button module
	"snippet.aixt.button.read": {
		"prefix": "rdb",
		"body": "button.read(button.${1|exit,right,left,center|})",
		"description": "Read button"
	},
	"snippet.aixt.button.read_state": {
		"prefix": "rdbs",
		"body": "button.read_state(button.${1|exit,right,left,center|})",
		"description": "Read button state"
	},
	// LCD module
	"snippet.aixt.lcd.print": {
		"prefix": "prs",
		"body": "lcd.print($1)",
		"description": "LCD printing string function"
	},
	"snippet.aixt.lcd.println": {
		"prefix": "prls",
		"body": "lcd.println($1)",
		"description": "LCD printing string + line new function"
	},
	"snippet.aixt.lcd.clear": {
		"prefix": "clr",
		"body": "lcd.clear()",
		"description": "LCD clear screen"
	},
	"snippet.aixt.lcd.clear_line": {
		"prefix": "clrl",
		"body": "lcd.clear_line(lcd.line_${1|1,2,3,4,5,6,7,8|})",
		"description": "LCD clear line"
	},
	"snippet.aixt.lcd.move_to": {
		"prefix": "mvt",
		"body": "lcd.move_to(${1:0}, ${2:56})",
		"description": "LCD move cursor"
	},
	// task module
	"snippet.aixt.nxc.task": {
		"prefix": "tsk",
		"body": [ 
			"@[task]",
			"fn $1() {",
			"\t$0",
			"}",
		],
		"description": "Add a new task function"
	},
	"snippet.aixt.nxc.mutex": {
		"prefix": "mtx",
		"body": [ 
			"__global ${1:_mutex} = Mutex(0)",
		],
		"description": "Add a new mutex var (shared resources semaphore)"
	},
	"snippet.aixt.nxc.lock_mutex_block": {
		"prefix": "lck",
		"body": [
			"task.mutex_lock(${1:_mutex})",
			"",
			"$0",
			"",
			"task.mutex_unlock(${1:_mutex})",
		],
		"description": "Acquire/Release mutex"
	},
	"snippet.aixt.nxc.priority": {
		"prefix": "prty",
		"body": "task.priority(${1:task_1}, ${2:task_2})",
		"description": "Precedes task order"
	},
	"snippet.aixt.nxc.inv_priority": {
		"prefix": "iprty",
		"body": "task.inv_priority(${1:task_1}, ${2:task_2})",
		"description": "Follows task order"
	},
}